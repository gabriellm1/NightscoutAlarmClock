
WIFI-simpleGet-EXT1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000df94  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0040df94  0040df94  0001df94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009f8  20400000  0040df9c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000eb00  204009f8  0040e994  000209f8  2**2
                  ALLOC
  4 .stack        00002000  2040f4f8  0041d494  000209f8  2**0
                  ALLOC
  5 .heap         00000200  204114f8  0041f494  000209f8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209f8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a26  2**0
                  CONTENTS, READONLY
  8 .debug_info   000350cf  00000000  00000000  00020a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00006ca4  00000000  00000000  00055b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00012d18  00000000  00000000  0005c7f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001518  00000000  00000000  0006f50a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001968  00000000  00000000  00070a22  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000fcb6  00000000  00000000  0007238a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0001bc73  00000000  00000000  00082040  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009a7b0  00000000  00000000  0009dcb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00004c54  00000000  00000000  00138464  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 14 41 20 91 5b 40 00 8f 5b 40 00 8f 5b 40 00     ..A .[@..[@..[@.
  400010:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 00 00 00 00     .[@..[@..[@.....
	...
  40002c:	6d 0a 40 00 8f 5b 40 00 00 00 00 00 0d 0b 40 00     m.@..[@.......@.
  40003c:	75 0b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     u.@..[@..[@..[@.
  40004c:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  40005c:	8f 5b 40 00 8f 5b 40 00 00 00 00 00 a9 56 40 00     .[@..[@......V@.
  40006c:	bd 56 40 00 d1 56 40 00 8f 5b 40 00 8f 5b 40 00     .V@..V@..[@..[@.
  40007c:	8f 5b 40 00 e5 56 40 00 f9 56 40 00 8f 5b 40 00     .[@..V@..V@..[@.
  40008c:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  40009c:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  4000ac:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  4000bc:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  4000cc:	8f 5b 40 00 00 00 00 00 8f 5b 40 00 00 00 00 00     .[@......[@.....
  4000dc:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  4000ec:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  4000fc:	8f 5b 40 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .[@..[@..[@..[@.
  40010c:	8f 5b 40 00 8f 5b 40 00 00 00 00 00 00 00 00 00     .[@..[@.........
  40011c:	00 00 00 00 8f 5b 40 00 8f 5b 40 00 8f 5b 40 00     .....[@..[@..[@.
  40012c:	8f 5b 40 00 8f 5b 40 00 00 00 00 00 8f 5b 40 00     .[@..[@......[@.
  40013c:	8f 5b 40 00                                         .[@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009f8 	.word	0x204009f8
  40015c:	00000000 	.word	0x00000000
  400160:	0040df9c 	.word	0x0040df9c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040df9c 	.word	0x0040df9c
  4001a0:	204009fc 	.word	0x204009fc
  4001a4:	0040df9c 	.word	0x0040df9c
  4001a8:	00000000 	.word	0x00000000

004001ac <jsoneq>:
#include <stdlib.h>
#include <string.h>
#include "simple.h"


static int jsoneq(const char *json, jsmntok_t *tok, const char *s) {
  4001ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (tok->type == JSMN_STRING && (int)strlen(s) == tok->end - tok->start &&
  4001ae:	780b      	ldrb	r3, [r1, #0]
  4001b0:	2b03      	cmp	r3, #3
  4001b2:	d114      	bne.n	4001de <jsoneq+0x32>
  4001b4:	4615      	mov	r5, r2
  4001b6:	460c      	mov	r4, r1
  4001b8:	4606      	mov	r6, r0
  4001ba:	4610      	mov	r0, r2
  4001bc:	4b0b      	ldr	r3, [pc, #44]	; (4001ec <jsoneq+0x40>)
  4001be:	4798      	blx	r3
  4001c0:	6867      	ldr	r7, [r4, #4]
  4001c2:	68a3      	ldr	r3, [r4, #8]
  4001c4:	1bdb      	subs	r3, r3, r7
  4001c6:	4298      	cmp	r0, r3
  4001c8:	d10c      	bne.n	4001e4 <jsoneq+0x38>
      strncmp(json + tok->start, s, tok->end - tok->start) == 0) {
  4001ca:	4602      	mov	r2, r0
  4001cc:	4629      	mov	r1, r5
  4001ce:	19f0      	adds	r0, r6, r7
  4001d0:	4b07      	ldr	r3, [pc, #28]	; (4001f0 <jsoneq+0x44>)
  4001d2:	4798      	blx	r3
  if (tok->type == JSMN_STRING && (int)strlen(s) == tok->end - tok->start &&
  4001d4:	3000      	adds	r0, #0
  4001d6:	bf18      	it	ne
  4001d8:	2001      	movne	r0, #1
  4001da:	4240      	negs	r0, r0
  4001dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return 0;
  }
  return -1;
  4001de:	f04f 30ff 	mov.w	r0, #4294967295
  4001e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4001e4:	f04f 30ff 	mov.w	r0, #4294967295
}
  4001e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4001ea:	bf00      	nop
  4001ec:	00406bc1 	.word	0x00406bc1
  4001f0:	00406c9d 	.word	0x00406c9d

004001f4 <jsmn_parse>:

/**
 * Parse JSON string and fill tokens.
 */
JSMN_API int jsmn_parse(jsmn_parser *parser, const char *js, const size_t len,
                        jsmntok_t *tokens, const unsigned int num_tokens) {
  4001f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int r;
  int i;
  jsmntok_t *token;
  int count = parser->toknext;
  4001f8:	6847      	ldr	r7, [r0, #4]

  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
  4001fa:	f8d0 8000 	ldr.w	r8, [r0]
  4001fe:	4542      	cmp	r2, r8
  400200:	f240 8271 	bls.w	4006e6 <jsmn_parse+0x4f2>
  400204:	f811 5008 	ldrb.w	r5, [r1, r8]
  400208:	2d00      	cmp	r5, #0
  40020a:	f000 826c 	beq.w	4006e6 <jsmn_parse+0x4f2>
  tok->start = tok->end = -1;
  40020e:	f04f 3cff 	mov.w	ip, #4294967295
  tok->size = 0;
  400212:	f04f 0e00 	mov.w	lr, #0
  400216:	eb01 0b02 	add.w	fp, r1, r2
  40021a:	4646      	mov	r6, r8
  40021c:	e086      	b.n	40032c <jsmn_parse+0x138>
    char c;
    jsmntype_t type;

    c = js[parser->pos];
    switch (c) {
  40021e:	2d0d      	cmp	r5, #13
  400220:	d07a      	beq.n	400318 <jsmn_parse+0x124>
  400222:	d93d      	bls.n	4002a0 <jsmn_parse+0xac>
  400224:	2d20      	cmp	r5, #32
  400226:	d077      	beq.n	400318 <jsmn_parse+0x124>
  400228:	2d22      	cmp	r5, #34	; 0x22
  40022a:	d13c      	bne.n	4002a6 <jsmn_parse+0xb2>
  parser->pos++;
  40022c:	1c74      	adds	r4, r6, #1
  40022e:	6004      	str	r4, [r0, #0]
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
  400230:	42a2      	cmp	r2, r4
  400232:	f240 81cb 	bls.w	4005cc <jsmn_parse+0x3d8>
  400236:	5d0d      	ldrb	r5, [r1, r4]
  400238:	2d00      	cmp	r5, #0
  40023a:	f000 81c9 	beq.w	4005d0 <jsmn_parse+0x3dc>
    if (c == '\"') {
  40023e:	2d22      	cmp	r5, #34	; 0x22
  400240:	f040 8107 	bne.w	400452 <jsmn_parse+0x25e>
      if (tokens == NULL) {
  400244:	2b00      	cmp	r3, #0
  400246:	f000 827c 	beq.w	400742 <jsmn_parse+0x54e>
  if (parser->toknext >= num_tokens) {
  40024a:	6844      	ldr	r4, [r0, #4]
  40024c:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40024e:	42a5      	cmp	r5, r4
  400250:	f240 80c0 	bls.w	4003d4 <jsmn_parse+0x1e0>
  tok = &tokens[parser->toknext++];
  400254:	1c65      	adds	r5, r4, #1
  400256:	6045      	str	r5, [r0, #4]
  400258:	ea4f 1804 	mov.w	r8, r4, lsl #4
  40025c:	eb03 0408 	add.w	r4, r3, r8
  tok->start = tok->end = -1;
  400260:	f8c4 c008 	str.w	ip, [r4, #8]
  400264:	f8c4 c004 	str.w	ip, [r4, #4]
  tok->size = 0;
  400268:	f8c4 e00c 	str.w	lr, [r4, #12]
      if (token == NULL) {
  40026c:	2c00      	cmp	r4, #0
  40026e:	f000 80b1 	beq.w	4003d4 <jsmn_parse+0x1e0>
      jsmn_fill_token(token, JSMN_STRING, start + 1, parser->pos);
  400272:	6805      	ldr	r5, [r0, #0]
  token->type = type;
  400274:	f04f 0903 	mov.w	r9, #3
  400278:	f803 9008 	strb.w	r9, [r3, r8]
      jsmn_fill_token(token, JSMN_STRING, start + 1, parser->pos);
  40027c:	3601      	adds	r6, #1
  token->start = start;
  40027e:	6066      	str	r6, [r4, #4]
  token->end = end;
  400280:	60a5      	str	r5, [r4, #8]
  token->size = 0;
  400282:	f8c4 e00c 	str.w	lr, [r4, #12]
    case '\"':
      r = jsmn_parse_string(parser, js, len, tokens, num_tokens);
      if (r < 0) {
        return r;
      }
      count++;
  400286:	3701      	adds	r7, #1
      if (parser->toksuper != -1 && tokens != NULL) {
  400288:	6884      	ldr	r4, [r0, #8]
  40028a:	2b00      	cmp	r3, #0
  40028c:	d044      	beq.n	400318 <jsmn_parse+0x124>
  40028e:	f1b4 3fff 	cmp.w	r4, #4294967295
  400292:	d041      	beq.n	400318 <jsmn_parse+0x124>
        tokens[parser->toksuper].size++;
  400294:	eb03 1404 	add.w	r4, r3, r4, lsl #4
  400298:	68e5      	ldr	r5, [r4, #12]
  40029a:	3501      	adds	r5, #1
  40029c:	60e5      	str	r5, [r4, #12]
  40029e:	e03b      	b.n	400318 <jsmn_parse+0x124>
    switch (c) {
  4002a0:	3d09      	subs	r5, #9
  4002a2:	2d01      	cmp	r5, #1
  4002a4:	d938      	bls.n	400318 <jsmn_parse+0x124>
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
  4002a6:	6805      	ldr	r5, [r0, #0]
  4002a8:	42aa      	cmp	r2, r5
  4002aa:	f240 81e3 	bls.w	400674 <jsmn_parse+0x480>
  4002ae:	eb01 0805 	add.w	r8, r1, r5
  4002b2:	5d4c      	ldrb	r4, [r1, r5]
  4002b4:	2c00      	cmp	r4, #0
  4002b6:	f040 81d0 	bne.w	40065a <jsmn_parse+0x466>
  4002ba:	e1db      	b.n	400674 <jsmn_parse+0x480>
    switch (c) {
  4002bc:	2d5b      	cmp	r5, #91	; 0x5b
  4002be:	d1f2      	bne.n	4002a6 <jsmn_parse+0xb2>
      count++;
  4002c0:	3701      	adds	r7, #1
      if (tokens == NULL) {
  4002c2:	b34b      	cbz	r3, 400318 <jsmn_parse+0x124>
  if (parser->toknext >= num_tokens) {
  4002c4:	6844      	ldr	r4, [r0, #4]
  4002c6:	9e09      	ldr	r6, [sp, #36]	; 0x24
  4002c8:	42a6      	cmp	r6, r4
  4002ca:	f240 8227 	bls.w	40071c <jsmn_parse+0x528>
  tok = &tokens[parser->toknext++];
  4002ce:	1c66      	adds	r6, r4, #1
  4002d0:	6046      	str	r6, [r0, #4]
  4002d2:	0126      	lsls	r6, r4, #4
  4002d4:	eb03 0806 	add.w	r8, r3, r6
  tok->start = tok->end = -1;
  4002d8:	f8c8 c008 	str.w	ip, [r8, #8]
  4002dc:	f8c8 c004 	str.w	ip, [r8, #4]
  tok->size = 0;
  4002e0:	f8c8 e00c 	str.w	lr, [r8, #12]
      if (token == NULL) {
  4002e4:	f1b8 0f00 	cmp.w	r8, #0
  4002e8:	f000 821b 	beq.w	400722 <jsmn_parse+0x52e>
      if (parser->toksuper != -1) {
  4002ec:	6884      	ldr	r4, [r0, #8]
  4002ee:	f1b4 3fff 	cmp.w	r4, #4294967295
  4002f2:	d006      	beq.n	400302 <jsmn_parse+0x10e>
        jsmntok_t *t = &tokens[parser->toksuper];
  4002f4:	eb03 1904 	add.w	r9, r3, r4, lsl #4
        t->size++;
  4002f8:	f8d9 400c 	ldr.w	r4, [r9, #12]
  4002fc:	3401      	adds	r4, #1
  4002fe:	f8c9 400c 	str.w	r4, [r9, #12]
      token->type = (c == '{' ? JSMN_OBJECT : JSMN_ARRAY);
  400302:	2d7b      	cmp	r5, #123	; 0x7b
  400304:	bf0c      	ite	eq
  400306:	2401      	moveq	r4, #1
  400308:	2402      	movne	r4, #2
  40030a:	559c      	strb	r4, [r3, r6]
      token->start = parser->pos;
  40030c:	6804      	ldr	r4, [r0, #0]
  40030e:	f8c8 4004 	str.w	r4, [r8, #4]
      parser->toksuper = parser->toknext - 1;
  400312:	6844      	ldr	r4, [r0, #4]
  400314:	3c01      	subs	r4, #1
  400316:	6084      	str	r4, [r0, #8]
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
  400318:	6806      	ldr	r6, [r0, #0]
  40031a:	3601      	adds	r6, #1
  40031c:	6006      	str	r6, [r0, #0]
  40031e:	42b2      	cmp	r2, r6
  400320:	f240 81e1 	bls.w	4006e6 <jsmn_parse+0x4f2>
  400324:	5d8d      	ldrb	r5, [r1, r6]
  400326:	2d00      	cmp	r5, #0
  400328:	f000 81dd 	beq.w	4006e6 <jsmn_parse+0x4f2>
    switch (c) {
  40032c:	2d2c      	cmp	r5, #44	; 0x2c
  40032e:	f000 8157 	beq.w	4005e0 <jsmn_parse+0x3ec>
  400332:	f67f af74 	bls.w	40021e <jsmn_parse+0x2a>
  400336:	2d5d      	cmp	r5, #93	; 0x5d
  400338:	d00a      	beq.n	400350 <jsmn_parse+0x15c>
  40033a:	d805      	bhi.n	400348 <jsmn_parse+0x154>
  40033c:	2d3a      	cmp	r5, #58	; 0x3a
  40033e:	d1bd      	bne.n	4002bc <jsmn_parse+0xc8>
    case '\r':
    case '\n':
    case ' ':
      break;
    case ':':
      parser->toksuper = parser->toknext - 1;
  400340:	6844      	ldr	r4, [r0, #4]
  400342:	3c01      	subs	r4, #1
  400344:	6084      	str	r4, [r0, #8]
      break;
  400346:	e7e7      	b.n	400318 <jsmn_parse+0x124>
    switch (c) {
  400348:	2d7b      	cmp	r5, #123	; 0x7b
  40034a:	d0b9      	beq.n	4002c0 <jsmn_parse+0xcc>
  40034c:	2d7d      	cmp	r5, #125	; 0x7d
  40034e:	d1aa      	bne.n	4002a6 <jsmn_parse+0xb2>
      if (tokens == NULL) {
  400350:	2b00      	cmp	r3, #0
  400352:	d0e1      	beq.n	400318 <jsmn_parse+0x124>
      type = (c == '}' ? JSMN_OBJECT : JSMN_ARRAY);
  400354:	2d7d      	cmp	r5, #125	; 0x7d
  400356:	bf0c      	ite	eq
  400358:	f04f 0901 	moveq.w	r9, #1
  40035c:	f04f 0902 	movne.w	r9, #2
      for (i = parser->toknext - 1; i >= 0; i--) {
  400360:	6845      	ldr	r5, [r0, #4]
  400362:	1e6c      	subs	r4, r5, #1
  400364:	f100 81e6 	bmi.w	400734 <jsmn_parse+0x540>
  400368:	f105 5580 	add.w	r5, r5, #268435456	; 0x10000000
  40036c:	3d01      	subs	r5, #1
  40036e:	eb03 1505 	add.w	r5, r3, r5, lsl #4
  400372:	46b2      	mov	sl, r6
  400374:	e003      	b.n	40037e <jsmn_parse+0x18a>
  400376:	3d10      	subs	r5, #16
  400378:	3c01      	subs	r4, #1
  40037a:	f100 81db 	bmi.w	400734 <jsmn_parse+0x540>
        token = &tokens[i];
  40037e:	46a8      	mov	r8, r5
        if (token->start != -1 && token->end == -1) {
  400380:	686e      	ldr	r6, [r5, #4]
  400382:	f1b6 3fff 	cmp.w	r6, #4294967295
  400386:	d0f6      	beq.n	400376 <jsmn_parse+0x182>
  400388:	68ae      	ldr	r6, [r5, #8]
  40038a:	f1b6 3fff 	cmp.w	r6, #4294967295
  40038e:	d1f2      	bne.n	400376 <jsmn_parse+0x182>
  400390:	4656      	mov	r6, sl
          if (token->type != type) {
  400392:	782d      	ldrb	r5, [r5, #0]
  400394:	454d      	cmp	r5, r9
  400396:	f040 81c7 	bne.w	400728 <jsmn_parse+0x534>
          parser->toksuper = -1;
  40039a:	f8c0 c008 	str.w	ip, [r0, #8]
          token->end = parser->pos + 1;
  40039e:	3601      	adds	r6, #1
  4003a0:	f8c8 6008 	str.w	r6, [r8, #8]
      if (i == -1) {
  4003a4:	f1b4 3fff 	cmp.w	r4, #4294967295
  4003a8:	f000 81c1 	beq.w	40072e <jsmn_parse+0x53a>
      for (; i >= 0; i--) {
  4003ac:	2c00      	cmp	r4, #0
  4003ae:	dbb3      	blt.n	400318 <jsmn_parse+0x124>
  4003b0:	eb03 1604 	add.w	r6, r3, r4, lsl #4
  4003b4:	e004      	b.n	4003c0 <jsmn_parse+0x1cc>
  4003b6:	3c01      	subs	r4, #1
  4003b8:	3e10      	subs	r6, #16
  4003ba:	f1b4 3fff 	cmp.w	r4, #4294967295
  4003be:	d0ab      	beq.n	400318 <jsmn_parse+0x124>
        if (token->start != -1 && token->end == -1) {
  4003c0:	6875      	ldr	r5, [r6, #4]
  4003c2:	f1b5 3fff 	cmp.w	r5, #4294967295
  4003c6:	d0f6      	beq.n	4003b6 <jsmn_parse+0x1c2>
  4003c8:	68b5      	ldr	r5, [r6, #8]
  4003ca:	f1b5 3fff 	cmp.w	r5, #4294967295
  4003ce:	d1f2      	bne.n	4003b6 <jsmn_parse+0x1c2>
          parser->toksuper = i;
  4003d0:	6084      	str	r4, [r0, #8]
          break;
  4003d2:	e7a1      	b.n	400318 <jsmn_parse+0x124>
        parser->pos = start;
  4003d4:	6006      	str	r6, [r0, #0]
        return JSMN_ERROR_NOMEM;
  4003d6:	f04f 37ff 	mov.w	r7, #4294967295
  4003da:	e027      	b.n	40042c <jsmn_parse+0x238>
        parser->pos++;
  4003dc:	1ca5      	adds	r5, r4, #2
  4003de:	6005      	str	r5, [r0, #0]
        for (i = 0; i < 4 && parser->pos < len && js[parser->pos] != '\0';
  4003e0:	42aa      	cmp	r2, r5
  4003e2:	d926      	bls.n	400432 <jsmn_parse+0x23e>
  4003e4:	5d4d      	ldrb	r5, [r1, r5]
  4003e6:	b325      	cbz	r5, 400432 <jsmn_parse+0x23e>
  4003e8:	f104 0803 	add.w	r8, r4, #3
  4003ec:	eb01 0908 	add.w	r9, r1, r8
  4003f0:	3406      	adds	r4, #6
  4003f2:	46a2      	mov	sl, r4
  4003f4:	4644      	mov	r4, r8
  4003f6:	46d0      	mov	r8, sl
  4003f8:	e008      	b.n	40040c <jsmn_parse+0x218>
          parser->pos++;
  4003fa:	6004      	str	r4, [r0, #0]
        for (i = 0; i < 4 && parser->pos < len && js[parser->pos] != '\0';
  4003fc:	4544      	cmp	r4, r8
  4003fe:	d018      	beq.n	400432 <jsmn_parse+0x23e>
  400400:	45d9      	cmp	r9, fp
  400402:	d016      	beq.n	400432 <jsmn_parse+0x23e>
  400404:	f819 5b01 	ldrb.w	r5, [r9], #1
  400408:	3401      	adds	r4, #1
  40040a:	b195      	cbz	r5, 400432 <jsmn_parse+0x23e>
          if (!((js[parser->pos] >= 48 && js[parser->pos] <= 57) ||   /* 0-9 */
  40040c:	f025 0a20 	bic.w	sl, r5, #32
  400410:	f1aa 0a41 	sub.w	sl, sl, #65	; 0x41
  400414:	fa5f fa8a 	uxtb.w	sl, sl
  400418:	f1ba 0f05 	cmp.w	sl, #5
  40041c:	d9ed      	bls.n	4003fa <jsmn_parse+0x206>
  40041e:	3d30      	subs	r5, #48	; 0x30
  400420:	b2ed      	uxtb	r5, r5
  400422:	2d09      	cmp	r5, #9
  400424:	d9e9      	bls.n	4003fa <jsmn_parse+0x206>
            parser->pos = start;
  400426:	6006      	str	r6, [r0, #0]
            return JSMN_ERROR_INVAL;
  400428:	f06f 0701 	mvn.w	r7, #1
      }
    }
  }

  return count;
}
  40042c:	4638      	mov	r0, r7
  40042e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        parser->pos--;
  400432:	6804      	ldr	r4, [r0, #0]
  400434:	3c01      	subs	r4, #1
  400436:	6004      	str	r4, [r0, #0]
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
  400438:	6804      	ldr	r4, [r0, #0]
  40043a:	3401      	adds	r4, #1
  40043c:	6004      	str	r4, [r0, #0]
  40043e:	42a2      	cmp	r2, r4
  400440:	f240 80c8 	bls.w	4005d4 <jsmn_parse+0x3e0>
  400444:	5d0d      	ldrb	r5, [r1, r4]
  400446:	2d00      	cmp	r5, #0
  400448:	f000 80be 	beq.w	4005c8 <jsmn_parse+0x3d4>
    if (c == '\"') {
  40044c:	2d22      	cmp	r5, #34	; 0x22
  40044e:	f43f aef9 	beq.w	400244 <jsmn_parse+0x50>
    if (c == '\\' && parser->pos + 1 < len) {
  400452:	2d5c      	cmp	r5, #92	; 0x5c
  400454:	d1f0      	bne.n	400438 <jsmn_parse+0x244>
  400456:	1c65      	adds	r5, r4, #1
  400458:	42aa      	cmp	r2, r5
  40045a:	d9ed      	bls.n	400438 <jsmn_parse+0x244>
      parser->pos++;
  40045c:	6005      	str	r5, [r0, #0]
      switch (js[parser->pos]) {
  40045e:	5d4d      	ldrb	r5, [r1, r5]
  400460:	3d22      	subs	r5, #34	; 0x22
  400462:	2d53      	cmp	r5, #83	; 0x53
  400464:	f200 80ac 	bhi.w	4005c0 <jsmn_parse+0x3cc>
  400468:	f20f 0804 	addw	r8, pc, #4
  40046c:	f858 f025 	ldr.w	pc, [r8, r5, lsl #2]
  400470:	00400439 	.word	0x00400439
  400474:	004005c1 	.word	0x004005c1
  400478:	004005c1 	.word	0x004005c1
  40047c:	004005c1 	.word	0x004005c1
  400480:	004005c1 	.word	0x004005c1
  400484:	004005c1 	.word	0x004005c1
  400488:	004005c1 	.word	0x004005c1
  40048c:	004005c1 	.word	0x004005c1
  400490:	004005c1 	.word	0x004005c1
  400494:	004005c1 	.word	0x004005c1
  400498:	004005c1 	.word	0x004005c1
  40049c:	004005c1 	.word	0x004005c1
  4004a0:	004005c1 	.word	0x004005c1
  4004a4:	00400439 	.word	0x00400439
  4004a8:	004005c1 	.word	0x004005c1
  4004ac:	004005c1 	.word	0x004005c1
  4004b0:	004005c1 	.word	0x004005c1
  4004b4:	004005c1 	.word	0x004005c1
  4004b8:	004005c1 	.word	0x004005c1
  4004bc:	004005c1 	.word	0x004005c1
  4004c0:	004005c1 	.word	0x004005c1
  4004c4:	004005c1 	.word	0x004005c1
  4004c8:	004005c1 	.word	0x004005c1
  4004cc:	004005c1 	.word	0x004005c1
  4004d0:	004005c1 	.word	0x004005c1
  4004d4:	004005c1 	.word	0x004005c1
  4004d8:	004005c1 	.word	0x004005c1
  4004dc:	004005c1 	.word	0x004005c1
  4004e0:	004005c1 	.word	0x004005c1
  4004e4:	004005c1 	.word	0x004005c1
  4004e8:	004005c1 	.word	0x004005c1
  4004ec:	004005c1 	.word	0x004005c1
  4004f0:	004005c1 	.word	0x004005c1
  4004f4:	004005c1 	.word	0x004005c1
  4004f8:	004005c1 	.word	0x004005c1
  4004fc:	004005c1 	.word	0x004005c1
  400500:	004005c1 	.word	0x004005c1
  400504:	004005c1 	.word	0x004005c1
  400508:	004005c1 	.word	0x004005c1
  40050c:	004005c1 	.word	0x004005c1
  400510:	004005c1 	.word	0x004005c1
  400514:	004005c1 	.word	0x004005c1
  400518:	004005c1 	.word	0x004005c1
  40051c:	004005c1 	.word	0x004005c1
  400520:	004005c1 	.word	0x004005c1
  400524:	004005c1 	.word	0x004005c1
  400528:	004005c1 	.word	0x004005c1
  40052c:	004005c1 	.word	0x004005c1
  400530:	004005c1 	.word	0x004005c1
  400534:	004005c1 	.word	0x004005c1
  400538:	004005c1 	.word	0x004005c1
  40053c:	004005c1 	.word	0x004005c1
  400540:	004005c1 	.word	0x004005c1
  400544:	004005c1 	.word	0x004005c1
  400548:	004005c1 	.word	0x004005c1
  40054c:	004005c1 	.word	0x004005c1
  400550:	004005c1 	.word	0x004005c1
  400554:	004005c1 	.word	0x004005c1
  400558:	00400439 	.word	0x00400439
  40055c:	004005c1 	.word	0x004005c1
  400560:	004005c1 	.word	0x004005c1
  400564:	004005c1 	.word	0x004005c1
  400568:	004005c1 	.word	0x004005c1
  40056c:	004005c1 	.word	0x004005c1
  400570:	00400439 	.word	0x00400439
  400574:	004005c1 	.word	0x004005c1
  400578:	004005c1 	.word	0x004005c1
  40057c:	004005c1 	.word	0x004005c1
  400580:	00400439 	.word	0x00400439
  400584:	004005c1 	.word	0x004005c1
  400588:	004005c1 	.word	0x004005c1
  40058c:	004005c1 	.word	0x004005c1
  400590:	004005c1 	.word	0x004005c1
  400594:	004005c1 	.word	0x004005c1
  400598:	004005c1 	.word	0x004005c1
  40059c:	004005c1 	.word	0x004005c1
  4005a0:	00400439 	.word	0x00400439
  4005a4:	004005c1 	.word	0x004005c1
  4005a8:	004005c1 	.word	0x004005c1
  4005ac:	004005c1 	.word	0x004005c1
  4005b0:	00400439 	.word	0x00400439
  4005b4:	004005c1 	.word	0x004005c1
  4005b8:	00400439 	.word	0x00400439
  4005bc:	004003dd 	.word	0x004003dd
        parser->pos = start;
  4005c0:	6006      	str	r6, [r0, #0]
        return JSMN_ERROR_INVAL;
  4005c2:	f06f 0701 	mvn.w	r7, #1
  4005c6:	e731      	b.n	40042c <jsmn_parse+0x238>
  4005c8:	46b0      	mov	r8, r6
  4005ca:	e004      	b.n	4005d6 <jsmn_parse+0x3e2>
  4005cc:	46b0      	mov	r8, r6
  4005ce:	e002      	b.n	4005d6 <jsmn_parse+0x3e2>
  4005d0:	46b0      	mov	r8, r6
  4005d2:	e000      	b.n	4005d6 <jsmn_parse+0x3e2>
  4005d4:	46b0      	mov	r8, r6
  parser->pos = start;
  4005d6:	f8c0 8000 	str.w	r8, [r0]
  return JSMN_ERROR_PART;
  4005da:	f06f 0702 	mvn.w	r7, #2
  4005de:	e725      	b.n	40042c <jsmn_parse+0x238>
      if (tokens != NULL && parser->toksuper != -1 &&
  4005e0:	2b00      	cmp	r3, #0
  4005e2:	f43f ae99 	beq.w	400318 <jsmn_parse+0x124>
  4005e6:	6884      	ldr	r4, [r0, #8]
  4005e8:	f1b4 3fff 	cmp.w	r4, #4294967295
  4005ec:	f43f ae94 	beq.w	400318 <jsmn_parse+0x124>
          tokens[parser->toksuper].type != JSMN_ARRAY &&
  4005f0:	0124      	lsls	r4, r4, #4
  4005f2:	5d1c      	ldrb	r4, [r3, r4]
  4005f4:	3c01      	subs	r4, #1
  4005f6:	b2e4      	uxtb	r4, r4
  4005f8:	2c01      	cmp	r4, #1
  4005fa:	f67f ae8d 	bls.w	400318 <jsmn_parse+0x124>
        for (i = parser->toknext - 1; i >= 0; i--) {
  4005fe:	6845      	ldr	r5, [r0, #4]
  400600:	1e6e      	subs	r6, r5, #1
  400602:	f53f ae89 	bmi.w	400318 <jsmn_parse+0x124>
  400606:	eb03 1505 	add.w	r5, r3, r5, lsl #4
  40060a:	e003      	b.n	400614 <jsmn_parse+0x420>
  40060c:	3d10      	subs	r5, #16
  40060e:	3e01      	subs	r6, #1
  400610:	f53f ae82 	bmi.w	400318 <jsmn_parse+0x124>
          if (tokens[i].type == JSMN_ARRAY || tokens[i].type == JSMN_OBJECT) {
  400614:	f815 4c10 	ldrb.w	r4, [r5, #-16]
  400618:	3c01      	subs	r4, #1
  40061a:	b2e4      	uxtb	r4, r4
  40061c:	2c01      	cmp	r4, #1
  40061e:	d8f5      	bhi.n	40060c <jsmn_parse+0x418>
            if (tokens[i].start != -1 && tokens[i].end == -1) {
  400620:	f855 4c0c 	ldr.w	r4, [r5, #-12]
  400624:	f1b4 3fff 	cmp.w	r4, #4294967295
  400628:	d0f0      	beq.n	40060c <jsmn_parse+0x418>
  40062a:	f855 4c08 	ldr.w	r4, [r5, #-8]
  40062e:	f1b4 3fff 	cmp.w	r4, #4294967295
  400632:	d1eb      	bne.n	40060c <jsmn_parse+0x418>
              parser->toksuper = i;
  400634:	6086      	str	r6, [r0, #8]
              break;
  400636:	e66f      	b.n	400318 <jsmn_parse+0x124>
    switch (js[parser->pos]) {
  400638:	2c09      	cmp	r4, #9
  40063a:	d303      	bcc.n	400644 <jsmn_parse+0x450>
  40063c:	2c0a      	cmp	r4, #10
  40063e:	d919      	bls.n	400674 <jsmn_parse+0x480>
  400640:	2c0d      	cmp	r4, #13
  400642:	d017      	beq.n	400674 <jsmn_parse+0x480>
    if (js[parser->pos] < 32 || js[parser->pos] >= 127) {
  400644:	3c20      	subs	r4, #32
  400646:	b2e4      	uxtb	r4, r4
  400648:	2c5e      	cmp	r4, #94	; 0x5e
  40064a:	d840      	bhi.n	4006ce <jsmn_parse+0x4da>
  for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
  40064c:	3501      	adds	r5, #1
  40064e:	6005      	str	r5, [r0, #0]
  400650:	42aa      	cmp	r2, r5
  400652:	d00f      	beq.n	400674 <jsmn_parse+0x480>
  400654:	f818 4f01 	ldrb.w	r4, [r8, #1]!
  400658:	b164      	cbz	r4, 400674 <jsmn_parse+0x480>
    switch (js[parser->pos]) {
  40065a:	2c20      	cmp	r4, #32
  40065c:	d00a      	beq.n	400674 <jsmn_parse+0x480>
  40065e:	d9eb      	bls.n	400638 <jsmn_parse+0x444>
  400660:	2c3a      	cmp	r4, #58	; 0x3a
  400662:	d007      	beq.n	400674 <jsmn_parse+0x480>
  400664:	d904      	bls.n	400670 <jsmn_parse+0x47c>
  400666:	2c5d      	cmp	r4, #93	; 0x5d
  400668:	d004      	beq.n	400674 <jsmn_parse+0x480>
  40066a:	2c7d      	cmp	r4, #125	; 0x7d
  40066c:	d1ea      	bne.n	400644 <jsmn_parse+0x450>
  40066e:	e001      	b.n	400674 <jsmn_parse+0x480>
  400670:	2c2c      	cmp	r4, #44	; 0x2c
  400672:	d1e7      	bne.n	400644 <jsmn_parse+0x450>
  if (tokens == NULL) {
  400674:	b37b      	cbz	r3, 4006d6 <jsmn_parse+0x4e2>
  if (parser->toknext >= num_tokens) {
  400676:	6844      	ldr	r4, [r0, #4]
  400678:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40067a:	42a5      	cmp	r5, r4
  40067c:	d92f      	bls.n	4006de <jsmn_parse+0x4ea>
  tok = &tokens[parser->toknext++];
  40067e:	1c65      	adds	r5, r4, #1
  400680:	6045      	str	r5, [r0, #4]
  400682:	0125      	lsls	r5, r4, #4
  400684:	195c      	adds	r4, r3, r5
  tok->start = tok->end = -1;
  400686:	f8c4 c008 	str.w	ip, [r4, #8]
  40068a:	f8c4 c004 	str.w	ip, [r4, #4]
  tok->size = 0;
  40068e:	f8c4 e00c 	str.w	lr, [r4, #12]
  if (token == NULL) {
  400692:	b324      	cbz	r4, 4006de <jsmn_parse+0x4ea>
  jsmn_fill_token(token, JSMN_PRIMITIVE, start, parser->pos);
  400694:	f8d0 8000 	ldr.w	r8, [r0]
  token->type = type;
  400698:	f04f 0904 	mov.w	r9, #4
  40069c:	f803 9005 	strb.w	r9, [r3, r5]
  token->start = start;
  4006a0:	6066      	str	r6, [r4, #4]
  token->end = end;
  4006a2:	f8c4 8008 	str.w	r8, [r4, #8]
  token->size = 0;
  4006a6:	f8c4 e00c 	str.w	lr, [r4, #12]
  parser->pos--;
  4006aa:	6804      	ldr	r4, [r0, #0]
  4006ac:	3c01      	subs	r4, #1
  4006ae:	6004      	str	r4, [r0, #0]
      count++;
  4006b0:	3701      	adds	r7, #1
      if (parser->toksuper != -1 && tokens != NULL) {
  4006b2:	6884      	ldr	r4, [r0, #8]
  4006b4:	2b00      	cmp	r3, #0
  4006b6:	f43f ae2f 	beq.w	400318 <jsmn_parse+0x124>
  4006ba:	f1b4 3fff 	cmp.w	r4, #4294967295
  4006be:	f43f ae2b 	beq.w	400318 <jsmn_parse+0x124>
        tokens[parser->toksuper].size++;
  4006c2:	eb03 1404 	add.w	r4, r3, r4, lsl #4
  4006c6:	68e5      	ldr	r5, [r4, #12]
  4006c8:	3501      	adds	r5, #1
  4006ca:	60e5      	str	r5, [r4, #12]
  4006cc:	e624      	b.n	400318 <jsmn_parse+0x124>
      parser->pos = start;
  4006ce:	6006      	str	r6, [r0, #0]
      return JSMN_ERROR_INVAL;
  4006d0:	f06f 0701 	mvn.w	r7, #1
  4006d4:	e6aa      	b.n	40042c <jsmn_parse+0x238>
    parser->pos--;
  4006d6:	3d01      	subs	r5, #1
  4006d8:	6005      	str	r5, [r0, #0]
      count++;
  4006da:	3701      	adds	r7, #1
  4006dc:	e61c      	b.n	400318 <jsmn_parse+0x124>
    parser->pos = start;
  4006de:	6006      	str	r6, [r0, #0]
    return JSMN_ERROR_NOMEM;
  4006e0:	f04f 37ff 	mov.w	r7, #4294967295
  4006e4:	e6a2      	b.n	40042c <jsmn_parse+0x238>
  if (tokens != NULL) {
  4006e6:	2b00      	cmp	r3, #0
  4006e8:	f43f aea0 	beq.w	40042c <jsmn_parse+0x238>
    for (i = parser->toknext - 1; i >= 0; i--) {
  4006ec:	6841      	ldr	r1, [r0, #4]
  4006ee:	1e4a      	subs	r2, r1, #1
  4006f0:	f53f ae9c 	bmi.w	40042c <jsmn_parse+0x238>
  4006f4:	eb03 1301 	add.w	r3, r3, r1, lsl #4
  4006f8:	e003      	b.n	400702 <jsmn_parse+0x50e>
  4006fa:	3b10      	subs	r3, #16
  4006fc:	3a01      	subs	r2, #1
  4006fe:	f53f ae95 	bmi.w	40042c <jsmn_parse+0x238>
      if (tokens[i].start != -1 && tokens[i].end == -1) {
  400702:	f853 1c0c 	ldr.w	r1, [r3, #-12]
  400706:	f1b1 3fff 	cmp.w	r1, #4294967295
  40070a:	d0f6      	beq.n	4006fa <jsmn_parse+0x506>
  40070c:	f853 1c08 	ldr.w	r1, [r3, #-8]
  400710:	f1b1 3fff 	cmp.w	r1, #4294967295
  400714:	d1f1      	bne.n	4006fa <jsmn_parse+0x506>
        return JSMN_ERROR_PART;////
  400716:	f06f 0702 	mvn.w	r7, #2
  40071a:	e687      	b.n	40042c <jsmn_parse+0x238>
        return JSMN_ERROR_NOMEM;
  40071c:	f04f 37ff 	mov.w	r7, #4294967295
  400720:	e684      	b.n	40042c <jsmn_parse+0x238>
  400722:	f04f 37ff 	mov.w	r7, #4294967295
  400726:	e681      	b.n	40042c <jsmn_parse+0x238>
            return JSMN_ERROR_INVAL;
  400728:	f06f 0701 	mvn.w	r7, #1
  40072c:	e67e      	b.n	40042c <jsmn_parse+0x238>
        return JSMN_ERROR_INVAL;
  40072e:	f06f 0701 	mvn.w	r7, #1
  400732:	e67b      	b.n	40042c <jsmn_parse+0x238>
      if (i == -1) {
  400734:	f1b4 3fff 	cmp.w	r4, #4294967295
  400738:	f47f adee 	bne.w	400318 <jsmn_parse+0x124>
        return JSMN_ERROR_INVAL;
  40073c:	f06f 0701 	mvn.w	r7, #1
  400740:	e674      	b.n	40042c <jsmn_parse+0x238>
      count++;
  400742:	3701      	adds	r7, #1
  400744:	e5e8      	b.n	400318 <jsmn_parse+0x124>
  400746:	bf00      	nop

00400748 <parseiro>:

void parseiro(char BUFFER[], data_g *get_atual) {
  400748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40074c:	b0ff      	sub	sp, #508	; 0x1fc
  40074e:	4606      	mov	r6, r0
  400750:	4688      	mov	r8, r1
  char *JSON_STRING ;
  char *pto ;
  int start = 0 ;
  int end = 0;

  for (int da =0;da<strlen(BUFFER);da++){
  400752:	4b66      	ldr	r3, [pc, #408]	; (4008ec <parseiro+0x1a4>)
  400754:	4798      	blx	r3
  400756:	1e74      	subs	r4, r6, #1
  400758:	2300      	movs	r3, #0
  int end = 0;
  40075a:	4619      	mov	r1, r3
  int start = 0 ;
  40075c:	461f      	mov	r7, r3
  for (int da =0;da<strlen(BUFFER);da++){
  40075e:	e001      	b.n	400764 <parseiro+0x1c>
    if(BUFFER[da]=='{'){
      //printf("\nDATA START at %d\n", da);
      start = da;
  400760:	461f      	mov	r7, r3
  for (int da =0;da<strlen(BUFFER);da++){
  400762:	3301      	adds	r3, #1
  400764:	4283      	cmp	r3, r0
  400766:	d007      	beq.n	400778 <parseiro+0x30>
    if(BUFFER[da]=='{'){
  400768:	f814 2f01 	ldrb.w	r2, [r4, #1]!
  40076c:	2a7b      	cmp	r2, #123	; 0x7b
  40076e:	d0f7      	beq.n	400760 <parseiro+0x18>
    }
    if(BUFFER[da]=='}'){
      //printf("\nDATA FINISHED at %d\n", da);
      end = da;
  400770:	2a7d      	cmp	r2, #125	; 0x7d
  400772:	bf08      	it	eq
  400774:	4619      	moveq	r1, r3
  400776:	e7f4      	b.n	400762 <parseiro+0x1a>
    }
  }
  
  
  pto= strndup( BUFFER+start, end-start+1);
  400778:	1bc9      	subs	r1, r1, r7
  40077a:	3101      	adds	r1, #1
  40077c:	19f0      	adds	r0, r6, r7
  40077e:	4b5c      	ldr	r3, [pc, #368]	; (4008f0 <parseiro+0x1a8>)
  400780:	4798      	blx	r3
  400782:	4607      	mov	r7, r0
/**
 * Creates a new parser based over a given buffer with an array of tokens
 * available.
 */
JSMN_API void jsmn_init(jsmn_parser *parser) {
  parser->pos = 0;
  400784:	2300      	movs	r3, #0
  400786:	937b      	str	r3, [sp, #492]	; 0x1ec
  parser->toknext = 0;
  400788:	937c      	str	r3, [sp, #496]	; 0x1f0
  parser->toksuper = -1;
  40078a:	f04f 33ff 	mov.w	r3, #4294967295
  40078e:	937d      	str	r3, [sp, #500]	; 0x1f4
 jsmntok_t t[30]; /* We expect no more than 30 tokens */

 jsmn_init(&p);
 char buff[80];

 r = jsmn_parse(&p, JSON_STRING, strlen(JSON_STRING), t,
  400790:	4b56      	ldr	r3, [pc, #344]	; (4008ec <parseiro+0x1a4>)
  400792:	4798      	blx	r3
  400794:	231e      	movs	r3, #30
  400796:	9300      	str	r3, [sp, #0]
  400798:	ab03      	add	r3, sp, #12
  40079a:	4602      	mov	r2, r0
  40079c:	4639      	mov	r1, r7
  40079e:	a87b      	add	r0, sp, #492	; 0x1ec
  4007a0:	4c54      	ldr	r4, [pc, #336]	; (4008f4 <parseiro+0x1ac>)
  4007a2:	47a0      	blx	r4
                sizeof(t) / sizeof(t[0]));
 if (r < 0) {
  4007a4:	f1b0 0900 	subs.w	r9, r0, #0
  4007a8:	db0c      	blt.n	4007c4 <parseiro+0x7c>
   // AQUI status 
   return 1;
 }

 /* Assume the top-level element is an object */
 if (r < 1 || t[0].type != JSMN_OBJECT) {
  4007aa:	f1b9 0f00 	cmp.w	r9, #0
  4007ae:	dd03      	ble.n	4007b8 <parseiro+0x70>
  4007b0:	f89d 300c 	ldrb.w	r3, [sp, #12]
  4007b4:	2b01      	cmp	r3, #1
  4007b6:	d00a      	beq.n	4007ce <parseiro+0x86>
   printf("Object expected\n");
  4007b8:	484f      	ldr	r0, [pc, #316]	; (4008f8 <parseiro+0x1b0>)
  4007ba:	4b50      	ldr	r3, [pc, #320]	; (4008fc <parseiro+0x1b4>)
  4007bc:	4798      	blx	r3
     //printf("Unexpected key: %.*s\n", t[i].end - t[i].start,
     //       JSON_STRING + t[i].start);
   }
 }
 
}
  4007be:	b07f      	add	sp, #508	; 0x1fc
  4007c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   printf("Failed to parse JSON: %d\n", r);
  4007c4:	4649      	mov	r1, r9
  4007c6:	484e      	ldr	r0, [pc, #312]	; (400900 <parseiro+0x1b8>)
  4007c8:	4b4c      	ldr	r3, [pc, #304]	; (4008fc <parseiro+0x1b4>)
  4007ca:	4798      	blx	r3
   return 1;
  4007cc:	e7f7      	b.n	4007be <parseiro+0x76>
 for (i = 1; i < r; i++) {
  4007ce:	f1b9 0f01 	cmp.w	r9, #1
  4007d2:	ddf4      	ble.n	4007be <parseiro+0x76>
  4007d4:	2401      	movs	r4, #1
   if (jsoneq(JSON_STRING, &t[i], "_id") == 0) {
  4007d6:	f8df a164 	ldr.w	sl, [pc, #356]	; 40093c <parseiro+0x1f4>
  4007da:	4d4a      	ldr	r5, [pc, #296]	; (400904 <parseiro+0x1bc>)
   } else if (jsoneq(JSON_STRING, &t[i], "device") == 0) {
  4007dc:	f8df b160 	ldr.w	fp, [pc, #352]	; 400940 <parseiro+0x1f8>
  4007e0:	e00e      	b.n	400800 <parseiro+0xb8>
     sprintf(get_atual->id,"%.*s", t[i + 1].end - t[i + 1].start,
  4007e2:	3401      	adds	r4, #1
  4007e4:	ab03      	add	r3, sp, #12
  4007e6:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  4007ea:	685a      	ldr	r2, [r3, #4]
  4007ec:	6899      	ldr	r1, [r3, #8]
  4007ee:	18bb      	adds	r3, r7, r2
  4007f0:	1a8a      	subs	r2, r1, r2
  4007f2:	4945      	ldr	r1, [pc, #276]	; (400908 <parseiro+0x1c0>)
  4007f4:	4640      	mov	r0, r8
  4007f6:	4e45      	ldr	r6, [pc, #276]	; (40090c <parseiro+0x1c4>)
  4007f8:	47b0      	blx	r6
 for (i = 1; i < r; i++) {
  4007fa:	3401      	adds	r4, #1
  4007fc:	45a1      	cmp	r9, r4
  4007fe:	ddde      	ble.n	4007be <parseiro+0x76>
   if (jsoneq(JSON_STRING, &t[i], "_id") == 0) {
  400800:	ab03      	add	r3, sp, #12
  400802:	eb03 1604 	add.w	r6, r3, r4, lsl #4
  400806:	4652      	mov	r2, sl
  400808:	4631      	mov	r1, r6
  40080a:	4638      	mov	r0, r7
  40080c:	47a8      	blx	r5
  40080e:	2800      	cmp	r0, #0
  400810:	d0e7      	beq.n	4007e2 <parseiro+0x9a>
   } else if (jsoneq(JSON_STRING, &t[i], "device") == 0) {
  400812:	465a      	mov	r2, fp
  400814:	4631      	mov	r1, r6
  400816:	4638      	mov	r0, r7
  400818:	47a8      	blx	r5
  40081a:	b908      	cbnz	r0, 400820 <parseiro+0xd8>
     i++;
  40081c:	3401      	adds	r4, #1
  40081e:	e7ec      	b.n	4007fa <parseiro+0xb2>
   } else if (jsoneq(JSON_STRING, &t[i], "date") == 0) {
  400820:	4a3b      	ldr	r2, [pc, #236]	; (400910 <parseiro+0x1c8>)
  400822:	4631      	mov	r1, r6
  400824:	4638      	mov	r0, r7
  400826:	47a8      	blx	r5
  400828:	b908      	cbnz	r0, 40082e <parseiro+0xe6>
     i++;
  40082a:	3401      	adds	r4, #1
  40082c:	e7e5      	b.n	4007fa <parseiro+0xb2>
   } else if (jsoneq(JSON_STRING, &t[i], "dateString") == 0) {
  40082e:	4a39      	ldr	r2, [pc, #228]	; (400914 <parseiro+0x1cc>)
  400830:	4631      	mov	r1, r6
  400832:	4638      	mov	r0, r7
  400834:	47a8      	blx	r5
  400836:	b908      	cbnz	r0, 40083c <parseiro+0xf4>
     i++;
  400838:	3401      	adds	r4, #1
  40083a:	e7de      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "sgv") == 0) {
  40083c:	4a36      	ldr	r2, [pc, #216]	; (400918 <parseiro+0x1d0>)
  40083e:	4631      	mov	r1, r6
  400840:	4638      	mov	r0, r7
  400842:	47a8      	blx	r5
  400844:	b130      	cbz	r0, 400854 <parseiro+0x10c>
   }else if (jsoneq(JSON_STRING, &t[i], "delta") == 0) {
  400846:	4a35      	ldr	r2, [pc, #212]	; (40091c <parseiro+0x1d4>)
  400848:	4631      	mov	r1, r6
  40084a:	4638      	mov	r0, r7
  40084c:	47a8      	blx	r5
  40084e:	b978      	cbnz	r0, 400870 <parseiro+0x128>
     i++;
  400850:	3401      	adds	r4, #1
  400852:	e7d2      	b.n	4007fa <parseiro+0xb2>
     sprintf(get_atual->glicose,"%.*s", t[i + 1].end - t[i + 1].start,
  400854:	3401      	adds	r4, #1
  400856:	ab03      	add	r3, sp, #12
  400858:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  40085c:	685a      	ldr	r2, [r3, #4]
  40085e:	6899      	ldr	r1, [r3, #8]
  400860:	18bb      	adds	r3, r7, r2
  400862:	1a8a      	subs	r2, r1, r2
  400864:	4928      	ldr	r1, [pc, #160]	; (400908 <parseiro+0x1c0>)
  400866:	f108 0050 	add.w	r0, r8, #80	; 0x50
  40086a:	4e28      	ldr	r6, [pc, #160]	; (40090c <parseiro+0x1c4>)
  40086c:	47b0      	blx	r6
  40086e:	e7c4      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "direction") == 0) {
  400870:	4a2b      	ldr	r2, [pc, #172]	; (400920 <parseiro+0x1d8>)
  400872:	4631      	mov	r1, r6
  400874:	4638      	mov	r0, r7
  400876:	47a8      	blx	r5
  400878:	b130      	cbz	r0, 400888 <parseiro+0x140>
   }else if (jsoneq(JSON_STRING, &t[i], "type") == 0) {
  40087a:	4a2a      	ldr	r2, [pc, #168]	; (400924 <parseiro+0x1dc>)
  40087c:	4631      	mov	r1, r6
  40087e:	4638      	mov	r0, r7
  400880:	47a8      	blx	r5
  400882:	b978      	cbnz	r0, 4008a4 <parseiro+0x15c>
     i++;
  400884:	3401      	adds	r4, #1
  400886:	e7b8      	b.n	4007fa <parseiro+0xb2>
      sprintf(get_atual->direction,"%.*s", t[i + 1].end - t[i + 1].start,
  400888:	3401      	adds	r4, #1
  40088a:	ab03      	add	r3, sp, #12
  40088c:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  400890:	685a      	ldr	r2, [r3, #4]
  400892:	6899      	ldr	r1, [r3, #8]
  400894:	18bb      	adds	r3, r7, r2
  400896:	1a8a      	subs	r2, r1, r2
  400898:	491b      	ldr	r1, [pc, #108]	; (400908 <parseiro+0x1c0>)
  40089a:	f108 0053 	add.w	r0, r8, #83	; 0x53
  40089e:	4e1b      	ldr	r6, [pc, #108]	; (40090c <parseiro+0x1c4>)
  4008a0:	47b0      	blx	r6
  4008a2:	e7aa      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "filtered") == 0) {
  4008a4:	4a20      	ldr	r2, [pc, #128]	; (400928 <parseiro+0x1e0>)
  4008a6:	4631      	mov	r1, r6
  4008a8:	4638      	mov	r0, r7
  4008aa:	47a8      	blx	r5
  4008ac:	b908      	cbnz	r0, 4008b2 <parseiro+0x16a>
     i++;
  4008ae:	3401      	adds	r4, #1
  4008b0:	e7a3      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "unfiltered") == 0) {
  4008b2:	4a1e      	ldr	r2, [pc, #120]	; (40092c <parseiro+0x1e4>)
  4008b4:	4631      	mov	r1, r6
  4008b6:	4638      	mov	r0, r7
  4008b8:	47a8      	blx	r5
  4008ba:	b908      	cbnz	r0, 4008c0 <parseiro+0x178>
     i++;
  4008bc:	3401      	adds	r4, #1
  4008be:	e79c      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "rssi") == 0) {
  4008c0:	4a1b      	ldr	r2, [pc, #108]	; (400930 <parseiro+0x1e8>)
  4008c2:	4631      	mov	r1, r6
  4008c4:	4638      	mov	r0, r7
  4008c6:	47a8      	blx	r5
  4008c8:	b908      	cbnz	r0, 4008ce <parseiro+0x186>
     i++;
  4008ca:	3401      	adds	r4, #1
  4008cc:	e795      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "noise") == 0) {
  4008ce:	4a19      	ldr	r2, [pc, #100]	; (400934 <parseiro+0x1ec>)
  4008d0:	4631      	mov	r1, r6
  4008d2:	4638      	mov	r0, r7
  4008d4:	47a8      	blx	r5
  4008d6:	b908      	cbnz	r0, 4008dc <parseiro+0x194>
     i++;
  4008d8:	3401      	adds	r4, #1
  4008da:	e78e      	b.n	4007fa <parseiro+0xb2>
   }else if (jsoneq(JSON_STRING, &t[i], "sysTime") == 0) {
  4008dc:	4a16      	ldr	r2, [pc, #88]	; (400938 <parseiro+0x1f0>)
  4008de:	4631      	mov	r1, r6
  4008e0:	4638      	mov	r0, r7
  4008e2:	47a8      	blx	r5
  4008e4:	2800      	cmp	r0, #0
  4008e6:	d188      	bne.n	4007fa <parseiro+0xb2>
     i++;
  4008e8:	3401      	adds	r4, #1
  4008ea:	e786      	b.n	4007fa <parseiro+0xb2>
  4008ec:	00406bc1 	.word	0x00406bc1
  4008f0:	00406d41 	.word	0x00406d41
  4008f4:	004001f5 	.word	0x004001f5
  4008f8:	0040ccc0 	.word	0x0040ccc0
  4008fc:	004066e9 	.word	0x004066e9
  400900:	0040cca4 	.word	0x0040cca4
  400904:	004001ad 	.word	0x004001ad
  400908:	0040ccd8 	.word	0x0040ccd8
  40090c:	00406a81 	.word	0x00406a81
  400910:	0040cce8 	.word	0x0040cce8
  400914:	0040ccf0 	.word	0x0040ccf0
  400918:	0040ccfc 	.word	0x0040ccfc
  40091c:	0040cd00 	.word	0x0040cd00
  400920:	0040cd08 	.word	0x0040cd08
  400924:	0040cd14 	.word	0x0040cd14
  400928:	0040cd1c 	.word	0x0040cd1c
  40092c:	0040cd28 	.word	0x0040cd28
  400930:	0040cd34 	.word	0x0040cd34
  400934:	0040cd3c 	.word	0x0040cd3c
  400938:	0040cd44 	.word	0x0040cd44
  40093c:	0040ccd4 	.word	0x0040ccd4
  400940:	0040cce0 	.word	0x0040cce0

00400944 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  400944:	f100 0308 	add.w	r3, r0, #8
  400948:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
  40094a:	f04f 32ff 	mov.w	r2, #4294967295
  40094e:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  400950:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  400952:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  400954:	2300      	movs	r3, #0
  400956:	6003      	str	r3, [r0, #0]
  400958:	4770      	bx	lr

0040095a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
  40095a:	2300      	movs	r3, #0
  40095c:	6103      	str	r3, [r0, #16]
  40095e:	4770      	bx	lr

00400960 <vListInsertEnd>:
}
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
  400960:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
  400962:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
  400964:	689a      	ldr	r2, [r3, #8]
  400966:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
  400968:	689a      	ldr	r2, [r3, #8]
  40096a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
  40096c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  40096e:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  400970:	6803      	ldr	r3, [r0, #0]
  400972:	3301      	adds	r3, #1
  400974:	6003      	str	r3, [r0, #0]
  400976:	4770      	bx	lr

00400978 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
  400978:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
  40097a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
  40097c:	f1b5 3fff 	cmp.w	r5, #4294967295
  400980:	d002      	beq.n	400988 <vListInsert+0x10>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  400982:	f100 0208 	add.w	r2, r0, #8
  400986:	e002      	b.n	40098e <vListInsert+0x16>
		pxIterator = pxList->xListEnd.pxPrevious;
  400988:	6902      	ldr	r2, [r0, #16]
  40098a:	e004      	b.n	400996 <vListInsert+0x1e>
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
  40098c:	461a      	mov	r2, r3
  40098e:	6853      	ldr	r3, [r2, #4]
  400990:	681c      	ldr	r4, [r3, #0]
  400992:	42a5      	cmp	r5, r4
  400994:	d2fa      	bcs.n	40098c <vListInsert+0x14>
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
  400996:	6853      	ldr	r3, [r2, #4]
  400998:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
  40099a:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
  40099c:	608a      	str	r2, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
  40099e:	6051      	str	r1, [r2, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
  4009a0:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
  4009a2:	6803      	ldr	r3, [r0, #0]
  4009a4:	3301      	adds	r3, #1
  4009a6:	6003      	str	r3, [r0, #0]
}
  4009a8:	bc30      	pop	{r4, r5}
  4009aa:	4770      	bx	lr

004009ac <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
  4009ac:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
  4009ae:	6842      	ldr	r2, [r0, #4]
  4009b0:	6881      	ldr	r1, [r0, #8]
  4009b2:	6091      	str	r1, [r2, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
  4009b4:	6882      	ldr	r2, [r0, #8]
  4009b6:	6841      	ldr	r1, [r0, #4]
  4009b8:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
  4009ba:	685a      	ldr	r2, [r3, #4]
  4009bc:	4290      	cmp	r0, r2
  4009be:	d005      	beq.n	4009cc <uxListRemove+0x20>
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
  4009c0:	2200      	movs	r2, #0
  4009c2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
  4009c4:	6818      	ldr	r0, [r3, #0]
  4009c6:	3801      	subs	r0, #1
  4009c8:	6018      	str	r0, [r3, #0]

	return pxList->uxNumberOfItems;
}
  4009ca:	4770      	bx	lr
		pxList->pxIndex = pxItemToRemove->pxPrevious;
  4009cc:	6882      	ldr	r2, [r0, #8]
  4009ce:	605a      	str	r2, [r3, #4]
  4009d0:	e7f6      	b.n	4009c0 <uxListRemove+0x14>
	...

004009d4 <prvTaskExitError>:
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
  4009d4:	4b0d      	ldr	r3, [pc, #52]	; (400a0c <prvTaskExitError+0x38>)
  4009d6:	681b      	ldr	r3, [r3, #0]
  4009d8:	f1b3 3fff 	cmp.w	r3, #4294967295
  4009dc:	d00a      	beq.n	4009f4 <prvTaskExitError+0x20>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
  4009de:	f04f 0380 	mov.w	r3, #128	; 0x80
  4009e2:	b672      	cpsid	i
  4009e4:	f383 8811 	msr	BASEPRI, r3
  4009e8:	f3bf 8f6f 	isb	sy
  4009ec:	f3bf 8f4f 	dsb	sy
  4009f0:	b662      	cpsie	i
  4009f2:	e7fe      	b.n	4009f2 <prvTaskExitError+0x1e>
  4009f4:	f04f 0380 	mov.w	r3, #128	; 0x80
  4009f8:	b672      	cpsid	i
  4009fa:	f383 8811 	msr	BASEPRI, r3
  4009fe:	f3bf 8f6f 	isb	sy
  400a02:	f3bf 8f4f 	dsb	sy
  400a06:	b662      	cpsie	i
  400a08:	e7fe      	b.n	400a08 <prvTaskExitError+0x34>
  400a0a:	bf00      	nop
  400a0c:	2040000c 	.word	0x2040000c

00400a10 <prvPortStartFirstTask>:
}
/*-----------------------------------------------------------*/

static void prvPortStartFirstTask( void )
{
	__asm volatile(
  400a10:	4806      	ldr	r0, [pc, #24]	; (400a2c <prvPortStartFirstTask+0x1c>)
  400a12:	6800      	ldr	r0, [r0, #0]
  400a14:	6800      	ldr	r0, [r0, #0]
  400a16:	f380 8808 	msr	MSP, r0
  400a1a:	b662      	cpsie	i
  400a1c:	b661      	cpsie	f
  400a1e:	f3bf 8f4f 	dsb	sy
  400a22:	f3bf 8f6f 	isb	sy
  400a26:	df00      	svc	0
  400a28:	bf00      	nop
  400a2a:	0000      	.short	0x0000
  400a2c:	e000ed08 	.word	0xe000ed08

00400a30 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
  400a30:	f8df 000c 	ldr.w	r0, [pc, #12]	; 400a40 <vPortEnableVFP+0x10>
  400a34:	6801      	ldr	r1, [r0, #0]
  400a36:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  400a3a:	6001      	str	r1, [r0, #0]
  400a3c:	4770      	bx	lr
  400a3e:	0000      	.short	0x0000
  400a40:	e000ed88 	.word	0xe000ed88

00400a44 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
  400a44:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  400a48:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) pxCode;	/* PC */
  400a4c:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
  400a50:	4b05      	ldr	r3, [pc, #20]	; (400a68 <pxPortInitialiseStack+0x24>)
  400a52:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
  400a56:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXEC_RETURN;
  400a5a:	f06f 0302 	mvn.w	r3, #2
  400a5e:	f840 3c24 	str.w	r3, [r0, #-36]
}
  400a62:	3844      	subs	r0, #68	; 0x44
  400a64:	4770      	bx	lr
  400a66:	bf00      	nop
  400a68:	004009d5 	.word	0x004009d5

00400a6c <SVC_Handler>:
	__asm volatile (
  400a6c:	4b06      	ldr	r3, [pc, #24]	; (400a88 <pxCurrentTCBConst2>)
  400a6e:	6819      	ldr	r1, [r3, #0]
  400a70:	6808      	ldr	r0, [r1, #0]
  400a72:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400a76:	f380 8809 	msr	PSP, r0
  400a7a:	f3bf 8f6f 	isb	sy
  400a7e:	f04f 0000 	mov.w	r0, #0
  400a82:	f380 8811 	msr	BASEPRI, r0
  400a86:	4770      	bx	lr

00400a88 <pxCurrentTCBConst2>:
  400a88:	2040da24 	.word	0x2040da24
  400a8c:	4770      	bx	lr
  400a8e:	bf00      	nop

00400a90 <vPortEnterCritical>:
  400a90:	f04f 0380 	mov.w	r3, #128	; 0x80
  400a94:	b672      	cpsid	i
  400a96:	f383 8811 	msr	BASEPRI, r3
  400a9a:	f3bf 8f6f 	isb	sy
  400a9e:	f3bf 8f4f 	dsb	sy
  400aa2:	b662      	cpsie	i
	uxCriticalNesting++;
  400aa4:	4a0b      	ldr	r2, [pc, #44]	; (400ad4 <vPortEnterCritical+0x44>)
  400aa6:	6813      	ldr	r3, [r2, #0]
  400aa8:	3301      	adds	r3, #1
  400aaa:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
  400aac:	2b01      	cmp	r3, #1
  400aae:	d10f      	bne.n	400ad0 <vPortEnterCritical+0x40>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
  400ab0:	4b09      	ldr	r3, [pc, #36]	; (400ad8 <vPortEnterCritical+0x48>)
  400ab2:	681b      	ldr	r3, [r3, #0]
  400ab4:	f013 0fff 	tst.w	r3, #255	; 0xff
  400ab8:	d00a      	beq.n	400ad0 <vPortEnterCritical+0x40>
  400aba:	f04f 0380 	mov.w	r3, #128	; 0x80
  400abe:	b672      	cpsid	i
  400ac0:	f383 8811 	msr	BASEPRI, r3
  400ac4:	f3bf 8f6f 	isb	sy
  400ac8:	f3bf 8f4f 	dsb	sy
  400acc:	b662      	cpsie	i
  400ace:	e7fe      	b.n	400ace <vPortEnterCritical+0x3e>
  400ad0:	4770      	bx	lr
  400ad2:	bf00      	nop
  400ad4:	2040000c 	.word	0x2040000c
  400ad8:	e000ed04 	.word	0xe000ed04

00400adc <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
  400adc:	4b0a      	ldr	r3, [pc, #40]	; (400b08 <vPortExitCritical+0x2c>)
  400ade:	681b      	ldr	r3, [r3, #0]
  400ae0:	b953      	cbnz	r3, 400af8 <vPortExitCritical+0x1c>
  400ae2:	f04f 0380 	mov.w	r3, #128	; 0x80
  400ae6:	b672      	cpsid	i
  400ae8:	f383 8811 	msr	BASEPRI, r3
  400aec:	f3bf 8f6f 	isb	sy
  400af0:	f3bf 8f4f 	dsb	sy
  400af4:	b662      	cpsie	i
  400af6:	e7fe      	b.n	400af6 <vPortExitCritical+0x1a>
	uxCriticalNesting--;
  400af8:	3b01      	subs	r3, #1
  400afa:	4a03      	ldr	r2, [pc, #12]	; (400b08 <vPortExitCritical+0x2c>)
  400afc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
  400afe:	b90b      	cbnz	r3, 400b04 <vPortExitCritical+0x28>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
  400b00:	f383 8811 	msr	BASEPRI, r3
  400b04:	4770      	bx	lr
  400b06:	bf00      	nop
  400b08:	2040000c 	.word	0x2040000c

00400b0c <PendSV_Handler>:
	__asm volatile
  400b0c:	f3ef 8009 	mrs	r0, PSP
  400b10:	f3bf 8f6f 	isb	sy
  400b14:	4b15      	ldr	r3, [pc, #84]	; (400b6c <pxCurrentTCBConst>)
  400b16:	681a      	ldr	r2, [r3, #0]
  400b18:	f01e 0f10 	tst.w	lr, #16
  400b1c:	bf08      	it	eq
  400b1e:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
  400b22:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400b26:	6010      	str	r0, [r2, #0]
  400b28:	f84d 3d04 	str.w	r3, [sp, #-4]!
  400b2c:	f04f 0080 	mov.w	r0, #128	; 0x80
  400b30:	b672      	cpsid	i
  400b32:	f380 8811 	msr	BASEPRI, r0
  400b36:	f3bf 8f4f 	dsb	sy
  400b3a:	f3bf 8f6f 	isb	sy
  400b3e:	b662      	cpsie	i
  400b40:	f001 f8aa 	bl	401c98 <vTaskSwitchContext>
  400b44:	f04f 0000 	mov.w	r0, #0
  400b48:	f380 8811 	msr	BASEPRI, r0
  400b4c:	bc08      	pop	{r3}
  400b4e:	6819      	ldr	r1, [r3, #0]
  400b50:	6808      	ldr	r0, [r1, #0]
  400b52:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400b56:	f01e 0f10 	tst.w	lr, #16
  400b5a:	bf08      	it	eq
  400b5c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
  400b60:	f380 8809 	msr	PSP, r0
  400b64:	f3bf 8f6f 	isb	sy
  400b68:	4770      	bx	lr
  400b6a:	bf00      	nop

00400b6c <pxCurrentTCBConst>:
  400b6c:	2040da24 	.word	0x2040da24
  400b70:	4770      	bx	lr
  400b72:	bf00      	nop

00400b74 <SysTick_Handler>:
{
  400b74:	b508      	push	{r3, lr}
	__asm volatile
  400b76:	f3ef 8311 	mrs	r3, BASEPRI
  400b7a:	f04f 0280 	mov.w	r2, #128	; 0x80
  400b7e:	b672      	cpsid	i
  400b80:	f382 8811 	msr	BASEPRI, r2
  400b84:	f3bf 8f6f 	isb	sy
  400b88:	f3bf 8f4f 	dsb	sy
  400b8c:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
  400b8e:	4b05      	ldr	r3, [pc, #20]	; (400ba4 <SysTick_Handler+0x30>)
  400b90:	4798      	blx	r3
  400b92:	b118      	cbz	r0, 400b9c <SysTick_Handler+0x28>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
  400b94:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400b98:	4b03      	ldr	r3, [pc, #12]	; (400ba8 <SysTick_Handler+0x34>)
  400b9a:	601a      	str	r2, [r3, #0]
	__asm volatile
  400b9c:	2300      	movs	r3, #0
  400b9e:	f383 8811 	msr	BASEPRI, r3
  400ba2:	bd08      	pop	{r3, pc}
  400ba4:	00401905 	.word	0x00401905
  400ba8:	e000ed04 	.word	0xe000ed04

00400bac <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
  400bac:	4a03      	ldr	r2, [pc, #12]	; (400bbc <vPortSetupTimerInterrupt+0x10>)
  400bae:	4b04      	ldr	r3, [pc, #16]	; (400bc0 <vPortSetupTimerInterrupt+0x14>)
  400bb0:	601a      	str	r2, [r3, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
  400bb2:	2207      	movs	r2, #7
  400bb4:	3b04      	subs	r3, #4
  400bb6:	601a      	str	r2, [r3, #0]
  400bb8:	4770      	bx	lr
  400bba:	bf00      	nop
  400bbc:	000927bf 	.word	0x000927bf
  400bc0:	e000e014 	.word	0xe000e014

00400bc4 <xPortStartScheduler>:
{
  400bc4:	b500      	push	{lr}
  400bc6:	b083      	sub	sp, #12
		ulOriginalPriority = *pucFirstUserPriorityRegister;
  400bc8:	4b25      	ldr	r3, [pc, #148]	; (400c60 <xPortStartScheduler+0x9c>)
  400bca:	781a      	ldrb	r2, [r3, #0]
  400bcc:	b2d2      	uxtb	r2, r2
  400bce:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
  400bd0:	22ff      	movs	r2, #255	; 0xff
  400bd2:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
  400bd4:	781b      	ldrb	r3, [r3, #0]
  400bd6:	b2db      	uxtb	r3, r3
  400bd8:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
  400bdc:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400be0:	f003 0380 	and.w	r3, r3, #128	; 0x80
  400be4:	4a1f      	ldr	r2, [pc, #124]	; (400c64 <xPortStartScheduler+0xa0>)
  400be6:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
  400be8:	2207      	movs	r2, #7
  400bea:	4b1f      	ldr	r3, [pc, #124]	; (400c68 <xPortStartScheduler+0xa4>)
  400bec:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
  400bee:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400bf2:	f013 0f80 	tst.w	r3, #128	; 0x80
  400bf6:	d010      	beq.n	400c1a <xPortStartScheduler+0x56>
  400bf8:	2206      	movs	r2, #6
  400bfa:	e000      	b.n	400bfe <xPortStartScheduler+0x3a>
  400bfc:	460a      	mov	r2, r1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
  400bfe:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400c02:	005b      	lsls	r3, r3, #1
  400c04:	b2db      	uxtb	r3, r3
  400c06:	f88d 3003 	strb.w	r3, [sp, #3]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
  400c0a:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400c0e:	1e51      	subs	r1, r2, #1
  400c10:	f013 0f80 	tst.w	r3, #128	; 0x80
  400c14:	d1f2      	bne.n	400bfc <xPortStartScheduler+0x38>
  400c16:	4b14      	ldr	r3, [pc, #80]	; (400c68 <xPortStartScheduler+0xa4>)
  400c18:	601a      	str	r2, [r3, #0]
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
  400c1a:	4a13      	ldr	r2, [pc, #76]	; (400c68 <xPortStartScheduler+0xa4>)
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
  400c1c:	6813      	ldr	r3, [r2, #0]
  400c1e:	021b      	lsls	r3, r3, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
  400c20:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  400c24:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
  400c26:	9b01      	ldr	r3, [sp, #4]
  400c28:	b2db      	uxtb	r3, r3
  400c2a:	4a0d      	ldr	r2, [pc, #52]	; (400c60 <xPortStartScheduler+0x9c>)
  400c2c:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
  400c2e:	4b0f      	ldr	r3, [pc, #60]	; (400c6c <xPortStartScheduler+0xa8>)
  400c30:	681a      	ldr	r2, [r3, #0]
  400c32:	f442 0260 	orr.w	r2, r2, #14680064	; 0xe00000
  400c36:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
  400c38:	681a      	ldr	r2, [r3, #0]
  400c3a:	f042 4260 	orr.w	r2, r2, #3758096384	; 0xe0000000
  400c3e:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
  400c40:	4b0b      	ldr	r3, [pc, #44]	; (400c70 <xPortStartScheduler+0xac>)
  400c42:	4798      	blx	r3
	uxCriticalNesting = 0;
  400c44:	2200      	movs	r2, #0
  400c46:	4b0b      	ldr	r3, [pc, #44]	; (400c74 <xPortStartScheduler+0xb0>)
  400c48:	601a      	str	r2, [r3, #0]
	vPortEnableVFP();
  400c4a:	4b0b      	ldr	r3, [pc, #44]	; (400c78 <xPortStartScheduler+0xb4>)
  400c4c:	4798      	blx	r3
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
  400c4e:	4a0b      	ldr	r2, [pc, #44]	; (400c7c <xPortStartScheduler+0xb8>)
  400c50:	6813      	ldr	r3, [r2, #0]
  400c52:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
  400c56:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
  400c58:	4b09      	ldr	r3, [pc, #36]	; (400c80 <xPortStartScheduler+0xbc>)
  400c5a:	4798      	blx	r3
	prvTaskExitError();
  400c5c:	4b09      	ldr	r3, [pc, #36]	; (400c84 <xPortStartScheduler+0xc0>)
  400c5e:	4798      	blx	r3
  400c60:	e000e400 	.word	0xe000e400
  400c64:	20400a14 	.word	0x20400a14
  400c68:	20400a18 	.word	0x20400a18
  400c6c:	e000ed20 	.word	0xe000ed20
  400c70:	00400bad 	.word	0x00400bad
  400c74:	2040000c 	.word	0x2040000c
  400c78:	00400a31 	.word	0x00400a31
  400c7c:	e000ef34 	.word	0xe000ef34
  400c80:	00400a11 	.word	0x00400a11
  400c84:	004009d5 	.word	0x004009d5

00400c88 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
  400c88:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
  400c8c:	2b0f      	cmp	r3, #15
  400c8e:	d911      	bls.n	400cb4 <vPortValidateInterruptPriority+0x2c>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
  400c90:	4a12      	ldr	r2, [pc, #72]	; (400cdc <vPortValidateInterruptPriority+0x54>)
  400c92:	5c9b      	ldrb	r3, [r3, r2]
  400c94:	b2db      	uxtb	r3, r3
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
  400c96:	4a12      	ldr	r2, [pc, #72]	; (400ce0 <vPortValidateInterruptPriority+0x58>)
  400c98:	7812      	ldrb	r2, [r2, #0]
  400c9a:	429a      	cmp	r2, r3
  400c9c:	d90a      	bls.n	400cb4 <vPortValidateInterruptPriority+0x2c>
	__asm volatile
  400c9e:	f04f 0380 	mov.w	r3, #128	; 0x80
  400ca2:	b672      	cpsid	i
  400ca4:	f383 8811 	msr	BASEPRI, r3
  400ca8:	f3bf 8f6f 	isb	sy
  400cac:	f3bf 8f4f 	dsb	sy
  400cb0:	b662      	cpsie	i
  400cb2:	e7fe      	b.n	400cb2 <vPortValidateInterruptPriority+0x2a>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredicable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
  400cb4:	4b0b      	ldr	r3, [pc, #44]	; (400ce4 <vPortValidateInterruptPriority+0x5c>)
  400cb6:	681b      	ldr	r3, [r3, #0]
  400cb8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  400cbc:	4a0a      	ldr	r2, [pc, #40]	; (400ce8 <vPortValidateInterruptPriority+0x60>)
  400cbe:	6812      	ldr	r2, [r2, #0]
  400cc0:	4293      	cmp	r3, r2
  400cc2:	d90a      	bls.n	400cda <vPortValidateInterruptPriority+0x52>
  400cc4:	f04f 0380 	mov.w	r3, #128	; 0x80
  400cc8:	b672      	cpsid	i
  400cca:	f383 8811 	msr	BASEPRI, r3
  400cce:	f3bf 8f6f 	isb	sy
  400cd2:	f3bf 8f4f 	dsb	sy
  400cd6:	b662      	cpsie	i
  400cd8:	e7fe      	b.n	400cd8 <vPortValidateInterruptPriority+0x50>
  400cda:	4770      	bx	lr
  400cdc:	e000e3f0 	.word	0xe000e3f0
  400ce0:	20400a14 	.word	0x20400a14
  400ce4:	e000ed0c 	.word	0xe000ed0c
  400ce8:	20400a18 	.word	0x20400a18

00400cec <pvPortMalloc>:
static size_t xNextFreeByte = ( size_t ) 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
  400cec:	b538      	push	{r3, r4, r5, lr}
  400cee:	4604      	mov	r4, r0
void *pvReturn = NULL;
static uint8_t *pucAlignedHeap = NULL;

	/* Ensure that blocks are always aligned to the required number of bytes. */
	#if portBYTE_ALIGNMENT != 1
		if( xWantedSize & portBYTE_ALIGNMENT_MASK )
  400cf0:	f010 0f07 	tst.w	r0, #7
  400cf4:	d002      	beq.n	400cfc <pvPortMalloc+0x10>
		{
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
  400cf6:	f020 0407 	bic.w	r4, r0, #7
  400cfa:	3408      	adds	r4, #8
		}
	#endif

	vTaskSuspendAll();
  400cfc:	4b11      	ldr	r3, [pc, #68]	; (400d44 <pvPortMalloc+0x58>)
  400cfe:	4798      	blx	r3
	{
		if( pucAlignedHeap == NULL )
  400d00:	4b11      	ldr	r3, [pc, #68]	; (400d48 <pvPortMalloc+0x5c>)
  400d02:	681b      	ldr	r3, [r3, #0]
  400d04:	b193      	cbz	r3, 400d2c <pvPortMalloc+0x40>
			/* Ensure the heap starts on a correctly aligned boundary. */
			pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
		}

		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
  400d06:	4b11      	ldr	r3, [pc, #68]	; (400d4c <pvPortMalloc+0x60>)
  400d08:	681b      	ldr	r3, [r3, #0]
  400d0a:	441c      	add	r4, r3
  400d0c:	42a3      	cmp	r3, r4
  400d0e:	d213      	bcs.n	400d38 <pvPortMalloc+0x4c>
  400d10:	f64c 72f7 	movw	r2, #53239	; 0xcff7
  400d14:	4294      	cmp	r4, r2
  400d16:	d80f      	bhi.n	400d38 <pvPortMalloc+0x4c>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
  400d18:	4a0b      	ldr	r2, [pc, #44]	; (400d48 <pvPortMalloc+0x5c>)
  400d1a:	6815      	ldr	r5, [r2, #0]
  400d1c:	441d      	add	r5, r3
			xNextFreeByte += xWantedSize;
  400d1e:	4b0b      	ldr	r3, [pc, #44]	; (400d4c <pvPortMalloc+0x60>)
  400d20:	601c      	str	r4, [r3, #0]
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
  400d22:	4b0b      	ldr	r3, [pc, #44]	; (400d50 <pvPortMalloc+0x64>)
  400d24:	4798      	blx	r3

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
  400d26:	b14d      	cbz	r5, 400d3c <pvPortMalloc+0x50>
		}
	}
	#endif

	return pvReturn;
}
  400d28:	4628      	mov	r0, r5
  400d2a:	bd38      	pop	{r3, r4, r5, pc}
			pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
  400d2c:	4b09      	ldr	r3, [pc, #36]	; (400d54 <pvPortMalloc+0x68>)
  400d2e:	f023 0307 	bic.w	r3, r3, #7
  400d32:	4a05      	ldr	r2, [pc, #20]	; (400d48 <pvPortMalloc+0x5c>)
  400d34:	6013      	str	r3, [r2, #0]
  400d36:	e7e6      	b.n	400d06 <pvPortMalloc+0x1a>
	( void ) xTaskResumeAll();
  400d38:	4b05      	ldr	r3, [pc, #20]	; (400d50 <pvPortMalloc+0x64>)
  400d3a:	4798      	blx	r3
			vApplicationMallocFailedHook();
  400d3c:	4b06      	ldr	r3, [pc, #24]	; (400d58 <pvPortMalloc+0x6c>)
  400d3e:	4798      	blx	r3
  400d40:	2500      	movs	r5, #0
	return pvReturn;
  400d42:	e7f1      	b.n	400d28 <pvPortMalloc+0x3c>
  400d44:	004018e9 	.word	0x004018e9
  400d48:	20400a1c 	.word	0x20400a1c
  400d4c:	2040da20 	.word	0x2040da20
  400d50:	00401a51 	.word	0x00401a51
  400d54:	20400a28 	.word	0x20400a28
  400d58:	00406497 	.word	0x00406497

00400d5c <vPortFree>:
	heap_4.c for alternative implementations, and the memory management pages of
	http://www.FreeRTOS.org for more information. */
	( void ) pv;

	/* Force an assert as it is invalid to call this function. */
	configASSERT( pv == NULL );
  400d5c:	b150      	cbz	r0, 400d74 <vPortFree+0x18>
  400d5e:	f04f 0380 	mov.w	r3, #128	; 0x80
  400d62:	b672      	cpsid	i
  400d64:	f383 8811 	msr	BASEPRI, r3
  400d68:	f3bf 8f6f 	isb	sy
  400d6c:	f3bf 8f4f 	dsb	sy
  400d70:	b662      	cpsie	i
  400d72:	e7fe      	b.n	400d72 <vPortFree+0x16>
  400d74:	4770      	bx	lr
	...

00400d78 <prvCopyDataToQueue>:

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
  400d78:	b538      	push	{r3, r4, r5, lr}
  400d7a:	4604      	mov	r4, r0
  400d7c:	4615      	mov	r5, r2
BaseType_t xReturn = pdFALSE;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
  400d7e:	6c02      	ldr	r2, [r0, #64]	; 0x40
  400d80:	b95a      	cbnz	r2, 400d9a <prvCopyDataToQueue+0x22>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  400d82:	6803      	ldr	r3, [r0, #0]
  400d84:	2b00      	cmp	r3, #0
  400d86:	d12e      	bne.n	400de6 <prvCopyDataToQueue+0x6e>
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
  400d88:	6840      	ldr	r0, [r0, #4]
  400d8a:	4b1b      	ldr	r3, [pc, #108]	; (400df8 <prvCopyDataToQueue+0x80>)
  400d8c:	4798      	blx	r3
				pxQueue->pxMutexHolder = NULL;
  400d8e:	2300      	movs	r3, #0
  400d90:	6063      	str	r3, [r4, #4]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	++( pxQueue->uxMessagesWaiting );
  400d92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400d94:	3301      	adds	r3, #1
  400d96:	63a3      	str	r3, [r4, #56]	; 0x38

	return xReturn;
}
  400d98:	bd38      	pop	{r3, r4, r5, pc}
	else if( xPosition == queueSEND_TO_BACK )
  400d9a:	b96d      	cbnz	r5, 400db8 <prvCopyDataToQueue+0x40>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
  400d9c:	6880      	ldr	r0, [r0, #8]
  400d9e:	4b17      	ldr	r3, [pc, #92]	; (400dfc <prvCopyDataToQueue+0x84>)
  400da0:	4798      	blx	r3
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
  400da2:	68a3      	ldr	r3, [r4, #8]
  400da4:	6c22      	ldr	r2, [r4, #64]	; 0x40
  400da6:	4413      	add	r3, r2
  400da8:	60a3      	str	r3, [r4, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  400daa:	6862      	ldr	r2, [r4, #4]
  400dac:	4293      	cmp	r3, r2
  400dae:	d31c      	bcc.n	400dea <prvCopyDataToQueue+0x72>
			pxQueue->pcWriteTo = pxQueue->pcHead;
  400db0:	6823      	ldr	r3, [r4, #0]
  400db2:	60a3      	str	r3, [r4, #8]
BaseType_t xReturn = pdFALSE;
  400db4:	2000      	movs	r0, #0
  400db6:	e7ec      	b.n	400d92 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  400db8:	68c0      	ldr	r0, [r0, #12]
  400dba:	4b10      	ldr	r3, [pc, #64]	; (400dfc <prvCopyDataToQueue+0x84>)
  400dbc:	4798      	blx	r3
		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
  400dbe:	6c23      	ldr	r3, [r4, #64]	; 0x40
  400dc0:	425b      	negs	r3, r3
  400dc2:	68e2      	ldr	r2, [r4, #12]
  400dc4:	441a      	add	r2, r3
  400dc6:	60e2      	str	r2, [r4, #12]
		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
  400dc8:	6821      	ldr	r1, [r4, #0]
  400dca:	428a      	cmp	r2, r1
  400dcc:	d202      	bcs.n	400dd4 <prvCopyDataToQueue+0x5c>
			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
  400dce:	6862      	ldr	r2, [r4, #4]
  400dd0:	4413      	add	r3, r2
  400dd2:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
  400dd4:	2d02      	cmp	r5, #2
  400dd6:	d10a      	bne.n	400dee <prvCopyDataToQueue+0x76>
			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
  400dd8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400dda:	b153      	cbz	r3, 400df2 <prvCopyDataToQueue+0x7a>
				--( pxQueue->uxMessagesWaiting );
  400ddc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  400dde:	3b01      	subs	r3, #1
  400de0:	63a3      	str	r3, [r4, #56]	; 0x38
BaseType_t xReturn = pdFALSE;
  400de2:	2000      	movs	r0, #0
  400de4:	e7d5      	b.n	400d92 <prvCopyDataToQueue+0x1a>
  400de6:	2000      	movs	r0, #0
  400de8:	e7d3      	b.n	400d92 <prvCopyDataToQueue+0x1a>
  400dea:	2000      	movs	r0, #0
  400dec:	e7d1      	b.n	400d92 <prvCopyDataToQueue+0x1a>
  400dee:	2000      	movs	r0, #0
  400df0:	e7cf      	b.n	400d92 <prvCopyDataToQueue+0x1a>
  400df2:	2000      	movs	r0, #0
  400df4:	e7cd      	b.n	400d92 <prvCopyDataToQueue+0x1a>
  400df6:	bf00      	nop
  400df8:	00402099 	.word	0x00402099
  400dfc:	00406711 	.word	0x00406711

00400e00 <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
  400e00:	b530      	push	{r4, r5, lr}
  400e02:	b083      	sub	sp, #12
  400e04:	9001      	str	r0, [sp, #4]
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
  400e06:	6d44      	ldr	r4, [r0, #84]	; 0x54
	BaseType_t xReturn = pdFALSE;

		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
  400e08:	b174      	cbz	r4, 400e28 <prvNotifyQueueSetContainer+0x28>
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );
  400e0a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400e0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  400e0e:	429a      	cmp	r2, r3
  400e10:	d315      	bcc.n	400e3e <prvNotifyQueueSetContainer+0x3e>
  400e12:	f04f 0380 	mov.w	r3, #128	; 0x80
  400e16:	b672      	cpsid	i
  400e18:	f383 8811 	msr	BASEPRI, r3
  400e1c:	f3bf 8f6f 	isb	sy
  400e20:	f3bf 8f4f 	dsb	sy
  400e24:	b662      	cpsie	i
  400e26:	e7fe      	b.n	400e26 <prvNotifyQueueSetContainer+0x26>
  400e28:	f04f 0380 	mov.w	r3, #128	; 0x80
  400e2c:	b672      	cpsid	i
  400e2e:	f383 8811 	msr	BASEPRI, r3
  400e32:	f3bf 8f6f 	isb	sy
  400e36:	f3bf 8f4f 	dsb	sy
  400e3a:	b662      	cpsie	i
  400e3c:	e7fe      	b.n	400e3c <prvNotifyQueueSetContainer+0x3c>

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
  400e3e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  400e40:	4293      	cmp	r3, r2
  400e42:	d803      	bhi.n	400e4c <prvNotifyQueueSetContainer+0x4c>
	BaseType_t xReturn = pdFALSE;
  400e44:	2500      	movs	r5, #0
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
  400e46:	4628      	mov	r0, r5
  400e48:	b003      	add	sp, #12
  400e4a:	bd30      	pop	{r4, r5, pc}
  400e4c:	460a      	mov	r2, r1
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
  400e4e:	a901      	add	r1, sp, #4
  400e50:	4620      	mov	r0, r4
  400e52:	4b0b      	ldr	r3, [pc, #44]	; (400e80 <prvNotifyQueueSetContainer+0x80>)
  400e54:	4798      	blx	r3
  400e56:	4605      	mov	r5, r0
			if( pxQueueSetContainer->xTxLock == queueUNLOCKED )
  400e58:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400e5a:	f1b3 3fff 	cmp.w	r3, #4294967295
  400e5e:	d10a      	bne.n	400e76 <prvNotifyQueueSetContainer+0x76>
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
  400e60:	6a63      	ldr	r3, [r4, #36]	; 0x24
  400e62:	2b00      	cmp	r3, #0
  400e64:	d0ef      	beq.n	400e46 <prvNotifyQueueSetContainer+0x46>
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
  400e66:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400e6a:	4b06      	ldr	r3, [pc, #24]	; (400e84 <prvNotifyQueueSetContainer+0x84>)
  400e6c:	4798      	blx	r3
  400e6e:	2800      	cmp	r0, #0
						xReturn = pdTRUE;
  400e70:	bf18      	it	ne
  400e72:	2501      	movne	r5, #1
  400e74:	e7e7      	b.n	400e46 <prvNotifyQueueSetContainer+0x46>
				( pxQueueSetContainer->xTxLock )++;
  400e76:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400e78:	3301      	adds	r3, #1
  400e7a:	64a3      	str	r3, [r4, #72]	; 0x48
  400e7c:	e7e3      	b.n	400e46 <prvNotifyQueueSetContainer+0x46>
  400e7e:	bf00      	nop
  400e80:	00400d79 	.word	0x00400d79
  400e84:	00401e6d 	.word	0x00401e6d

00400e88 <prvCopyDataFromQueue>:
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
  400e88:	6c02      	ldr	r2, [r0, #64]	; 0x40
  400e8a:	b172      	cbz	r2, 400eaa <prvCopyDataFromQueue+0x22>
{
  400e8c:	b510      	push	{r4, lr}
  400e8e:	4603      	mov	r3, r0
		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
  400e90:	68c4      	ldr	r4, [r0, #12]
  400e92:	4414      	add	r4, r2
  400e94:	60c4      	str	r4, [r0, #12]
		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
  400e96:	6840      	ldr	r0, [r0, #4]
  400e98:	4284      	cmp	r4, r0
  400e9a:	d301      	bcc.n	400ea0 <prvCopyDataFromQueue+0x18>
			pxQueue->u.pcReadFrom = pxQueue->pcHead;
  400e9c:	6818      	ldr	r0, [r3, #0]
  400e9e:	60d8      	str	r0, [r3, #12]
  400ea0:	4608      	mov	r0, r1
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
  400ea2:	68d9      	ldr	r1, [r3, #12]
  400ea4:	4b01      	ldr	r3, [pc, #4]	; (400eac <prvCopyDataFromQueue+0x24>)
  400ea6:	4798      	blx	r3
  400ea8:	bd10      	pop	{r4, pc}
  400eaa:	4770      	bx	lr
  400eac:	00406711 	.word	0x00406711

00400eb0 <prvUnlockQueue>:
{
  400eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400eb2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
  400eb4:	4b22      	ldr	r3, [pc, #136]	; (400f40 <prvUnlockQueue+0x90>)
  400eb6:	4798      	blx	r3
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
  400eb8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400eba:	2b00      	cmp	r3, #0
  400ebc:	dd1b      	ble.n	400ef6 <prvUnlockQueue+0x46>
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
  400ebe:	4d21      	ldr	r5, [pc, #132]	; (400f44 <prvUnlockQueue+0x94>)
						vTaskMissedYield();
  400ec0:	4f21      	ldr	r7, [pc, #132]	; (400f48 <prvUnlockQueue+0x98>)
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  400ec2:	4e22      	ldr	r6, [pc, #136]	; (400f4c <prvUnlockQueue+0x9c>)
  400ec4:	e00b      	b.n	400ede <prvUnlockQueue+0x2e>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  400ec6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  400ec8:	b1ab      	cbz	r3, 400ef6 <prvUnlockQueue+0x46>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  400eca:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400ece:	47b0      	blx	r6
  400ed0:	b978      	cbnz	r0, 400ef2 <prvUnlockQueue+0x42>
			--( pxQueue->xTxLock );
  400ed2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400ed4:	3b01      	subs	r3, #1
  400ed6:	64a3      	str	r3, [r4, #72]	; 0x48
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
  400ed8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  400eda:	2b00      	cmp	r3, #0
  400edc:	dd0b      	ble.n	400ef6 <prvUnlockQueue+0x46>
				if( pxQueue->pxQueueSetContainer != NULL )
  400ede:	6d63      	ldr	r3, [r4, #84]	; 0x54
  400ee0:	2b00      	cmp	r3, #0
  400ee2:	d0f0      	beq.n	400ec6 <prvUnlockQueue+0x16>
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
  400ee4:	2100      	movs	r1, #0
  400ee6:	4620      	mov	r0, r4
  400ee8:	47a8      	blx	r5
  400eea:	2801      	cmp	r0, #1
  400eec:	d1f1      	bne.n	400ed2 <prvUnlockQueue+0x22>
						vTaskMissedYield();
  400eee:	47b8      	blx	r7
  400ef0:	e7ef      	b.n	400ed2 <prvUnlockQueue+0x22>
							vTaskMissedYield();
  400ef2:	47b8      	blx	r7
  400ef4:	e7ed      	b.n	400ed2 <prvUnlockQueue+0x22>
		pxQueue->xTxLock = queueUNLOCKED;
  400ef6:	f04f 33ff 	mov.w	r3, #4294967295
  400efa:	64a3      	str	r3, [r4, #72]	; 0x48
	taskEXIT_CRITICAL();
  400efc:	4b14      	ldr	r3, [pc, #80]	; (400f50 <prvUnlockQueue+0xa0>)
  400efe:	4798      	blx	r3
	taskENTER_CRITICAL();
  400f00:	4b0f      	ldr	r3, [pc, #60]	; (400f40 <prvUnlockQueue+0x90>)
  400f02:	4798      	blx	r3
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
  400f04:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400f06:	2b00      	cmp	r3, #0
  400f08:	dd14      	ble.n	400f34 <prvUnlockQueue+0x84>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  400f0a:	6923      	ldr	r3, [r4, #16]
  400f0c:	b193      	cbz	r3, 400f34 <prvUnlockQueue+0x84>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
  400f0e:	f104 0610 	add.w	r6, r4, #16
  400f12:	4d0e      	ldr	r5, [pc, #56]	; (400f4c <prvUnlockQueue+0x9c>)
					vTaskMissedYield();
  400f14:	4f0c      	ldr	r7, [pc, #48]	; (400f48 <prvUnlockQueue+0x98>)
  400f16:	e007      	b.n	400f28 <prvUnlockQueue+0x78>
				--( pxQueue->xRxLock );
  400f18:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400f1a:	3b01      	subs	r3, #1
  400f1c:	6463      	str	r3, [r4, #68]	; 0x44
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
  400f1e:	6c63      	ldr	r3, [r4, #68]	; 0x44
  400f20:	2b00      	cmp	r3, #0
  400f22:	dd07      	ble.n	400f34 <prvUnlockQueue+0x84>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  400f24:	6923      	ldr	r3, [r4, #16]
  400f26:	b12b      	cbz	r3, 400f34 <prvUnlockQueue+0x84>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
  400f28:	4630      	mov	r0, r6
  400f2a:	47a8      	blx	r5
  400f2c:	2800      	cmp	r0, #0
  400f2e:	d0f3      	beq.n	400f18 <prvUnlockQueue+0x68>
					vTaskMissedYield();
  400f30:	47b8      	blx	r7
  400f32:	e7f1      	b.n	400f18 <prvUnlockQueue+0x68>
		pxQueue->xRxLock = queueUNLOCKED;
  400f34:	f04f 33ff 	mov.w	r3, #4294967295
  400f38:	6463      	str	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
  400f3a:	4b05      	ldr	r3, [pc, #20]	; (400f50 <prvUnlockQueue+0xa0>)
  400f3c:	4798      	blx	r3
  400f3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f40:	00400a91 	.word	0x00400a91
  400f44:	00400e01 	.word	0x00400e01
  400f48:	00401fc9 	.word	0x00401fc9
  400f4c:	00401e6d 	.word	0x00401e6d
  400f50:	00400add 	.word	0x00400add

00400f54 <xQueueGenericReset>:
{
  400f54:	b538      	push	{r3, r4, r5, lr}
	configASSERT( pxQueue );
  400f56:	b308      	cbz	r0, 400f9c <xQueueGenericReset+0x48>
  400f58:	4604      	mov	r4, r0
  400f5a:	460d      	mov	r5, r1
	taskENTER_CRITICAL();
  400f5c:	4b1d      	ldr	r3, [pc, #116]	; (400fd4 <xQueueGenericReset+0x80>)
  400f5e:	4798      	blx	r3
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  400f60:	6822      	ldr	r2, [r4, #0]
  400f62:	6c21      	ldr	r1, [r4, #64]	; 0x40
  400f64:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  400f66:	fb03 f301 	mul.w	r3, r3, r1
  400f6a:	18d0      	adds	r0, r2, r3
  400f6c:	6060      	str	r0, [r4, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  400f6e:	2000      	movs	r0, #0
  400f70:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
  400f72:	60a2      	str	r2, [r4, #8]
		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue->uxItemSize );
  400f74:	1a5b      	subs	r3, r3, r1
  400f76:	4413      	add	r3, r2
  400f78:	60e3      	str	r3, [r4, #12]
		pxQueue->xRxLock = queueUNLOCKED;
  400f7a:	f04f 33ff 	mov.w	r3, #4294967295
  400f7e:	6463      	str	r3, [r4, #68]	; 0x44
		pxQueue->xTxLock = queueUNLOCKED;
  400f80:	64a3      	str	r3, [r4, #72]	; 0x48
		if( xNewQueue == pdFALSE )
  400f82:	b9fd      	cbnz	r5, 400fc4 <xQueueGenericReset+0x70>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  400f84:	6923      	ldr	r3, [r4, #16]
  400f86:	b12b      	cbz	r3, 400f94 <xQueueGenericReset+0x40>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
  400f88:	f104 0010 	add.w	r0, r4, #16
  400f8c:	4b12      	ldr	r3, [pc, #72]	; (400fd8 <xQueueGenericReset+0x84>)
  400f8e:	4798      	blx	r3
  400f90:	2801      	cmp	r0, #1
  400f92:	d00e      	beq.n	400fb2 <xQueueGenericReset+0x5e>
	taskEXIT_CRITICAL();
  400f94:	4b11      	ldr	r3, [pc, #68]	; (400fdc <xQueueGenericReset+0x88>)
  400f96:	4798      	blx	r3
}
  400f98:	2001      	movs	r0, #1
  400f9a:	bd38      	pop	{r3, r4, r5, pc}
  400f9c:	f04f 0380 	mov.w	r3, #128	; 0x80
  400fa0:	b672      	cpsid	i
  400fa2:	f383 8811 	msr	BASEPRI, r3
  400fa6:	f3bf 8f6f 	isb	sy
  400faa:	f3bf 8f4f 	dsb	sy
  400fae:	b662      	cpsie	i
  400fb0:	e7fe      	b.n	400fb0 <xQueueGenericReset+0x5c>
					queueYIELD_IF_USING_PREEMPTION();
  400fb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400fb6:	4b0a      	ldr	r3, [pc, #40]	; (400fe0 <xQueueGenericReset+0x8c>)
  400fb8:	601a      	str	r2, [r3, #0]
  400fba:	f3bf 8f4f 	dsb	sy
  400fbe:	f3bf 8f6f 	isb	sy
  400fc2:	e7e7      	b.n	400f94 <xQueueGenericReset+0x40>
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
  400fc4:	f104 0010 	add.w	r0, r4, #16
  400fc8:	4d06      	ldr	r5, [pc, #24]	; (400fe4 <xQueueGenericReset+0x90>)
  400fca:	47a8      	blx	r5
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
  400fcc:	f104 0024 	add.w	r0, r4, #36	; 0x24
  400fd0:	47a8      	blx	r5
  400fd2:	e7df      	b.n	400f94 <xQueueGenericReset+0x40>
  400fd4:	00400a91 	.word	0x00400a91
  400fd8:	00401e6d 	.word	0x00401e6d
  400fdc:	00400add 	.word	0x00400add
  400fe0:	e000ed04 	.word	0xe000ed04
  400fe4:	00400945 	.word	0x00400945

00400fe8 <xQueueGenericCreate>:
{
  400fe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
  400fea:	b950      	cbnz	r0, 401002 <xQueueGenericCreate+0x1a>
  400fec:	f04f 0380 	mov.w	r3, #128	; 0x80
  400ff0:	b672      	cpsid	i
  400ff2:	f383 8811 	msr	BASEPRI, r3
  400ff6:	f3bf 8f6f 	isb	sy
  400ffa:	f3bf 8f4f 	dsb	sy
  400ffe:	b662      	cpsie	i
  401000:	e7fe      	b.n	401000 <xQueueGenericCreate+0x18>
  401002:	4606      	mov	r6, r0
  401004:	4617      	mov	r7, r2
  401006:	460d      	mov	r5, r1
	if( uxItemSize == ( UBaseType_t ) 0 )
  401008:	b189      	cbz	r1, 40102e <xQueueGenericCreate+0x46>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  40100a:	fb01 f000 	mul.w	r0, r1, r0
	pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
  40100e:	3059      	adds	r0, #89	; 0x59
  401010:	4b12      	ldr	r3, [pc, #72]	; (40105c <xQueueGenericCreate+0x74>)
  401012:	4798      	blx	r3
	if( pxNewQueue != NULL )
  401014:	4604      	mov	r4, r0
  401016:	b9e8      	cbnz	r0, 401054 <xQueueGenericCreate+0x6c>
  401018:	f04f 0380 	mov.w	r3, #128	; 0x80
  40101c:	b672      	cpsid	i
  40101e:	f383 8811 	msr	BASEPRI, r3
  401022:	f3bf 8f6f 	isb	sy
  401026:	f3bf 8f4f 	dsb	sy
  40102a:	b662      	cpsie	i
  40102c:	e7fe      	b.n	40102c <xQueueGenericCreate+0x44>
	pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
  40102e:	2058      	movs	r0, #88	; 0x58
  401030:	4b0a      	ldr	r3, [pc, #40]	; (40105c <xQueueGenericCreate+0x74>)
  401032:	4798      	blx	r3
	if( pxNewQueue != NULL )
  401034:	4604      	mov	r4, r0
  401036:	2800      	cmp	r0, #0
  401038:	d0ee      	beq.n	401018 <xQueueGenericCreate+0x30>
			pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
  40103a:	6020      	str	r0, [r4, #0]
		pxNewQueue->uxLength = uxQueueLength;
  40103c:	63e6      	str	r6, [r4, #60]	; 0x3c
		pxNewQueue->uxItemSize = uxItemSize;
  40103e:	6425      	str	r5, [r4, #64]	; 0x40
		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
  401040:	2101      	movs	r1, #1
  401042:	4620      	mov	r0, r4
  401044:	4b06      	ldr	r3, [pc, #24]	; (401060 <xQueueGenericCreate+0x78>)
  401046:	4798      	blx	r3
			pxNewQueue->ucQueueType = ucQueueType;
  401048:	f884 7050 	strb.w	r7, [r4, #80]	; 0x50
			pxNewQueue->pxQueueSetContainer = NULL;
  40104c:	2300      	movs	r3, #0
  40104e:	6563      	str	r3, [r4, #84]	; 0x54
}
  401050:	4620      	mov	r0, r4
  401052:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pxNewQueue->pcHead = ( ( int8_t * ) pxNewQueue ) + sizeof( Queue_t );
  401054:	f100 0358 	add.w	r3, r0, #88	; 0x58
  401058:	6003      	str	r3, [r0, #0]
  40105a:	e7ef      	b.n	40103c <xQueueGenericCreate+0x54>
  40105c:	00400ced 	.word	0x00400ced
  401060:	00400f55 	.word	0x00400f55

00401064 <xQueueGenericSend>:
{
  401064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401068:	b085      	sub	sp, #20
  40106a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
  40106c:	b1b8      	cbz	r0, 40109e <xQueueGenericSend+0x3a>
  40106e:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  401070:	b301      	cbz	r1, 4010b4 <xQueueGenericSend+0x50>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  401072:	2b02      	cmp	r3, #2
  401074:	d02c      	beq.n	4010d0 <xQueueGenericSend+0x6c>
  401076:	461d      	mov	r5, r3
  401078:	4688      	mov	r8, r1
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
  40107a:	4b66      	ldr	r3, [pc, #408]	; (401214 <xQueueGenericSend+0x1b0>)
  40107c:	4798      	blx	r3
  40107e:	2800      	cmp	r0, #0
  401080:	d134      	bne.n	4010ec <xQueueGenericSend+0x88>
  401082:	9b01      	ldr	r3, [sp, #4]
  401084:	2b00      	cmp	r3, #0
  401086:	d038      	beq.n	4010fa <xQueueGenericSend+0x96>
  401088:	f04f 0380 	mov.w	r3, #128	; 0x80
  40108c:	b672      	cpsid	i
  40108e:	f383 8811 	msr	BASEPRI, r3
  401092:	f3bf 8f6f 	isb	sy
  401096:	f3bf 8f4f 	dsb	sy
  40109a:	b662      	cpsie	i
  40109c:	e7fe      	b.n	40109c <xQueueGenericSend+0x38>
  40109e:	f04f 0380 	mov.w	r3, #128	; 0x80
  4010a2:	b672      	cpsid	i
  4010a4:	f383 8811 	msr	BASEPRI, r3
  4010a8:	f3bf 8f6f 	isb	sy
  4010ac:	f3bf 8f4f 	dsb	sy
  4010b0:	b662      	cpsie	i
  4010b2:	e7fe      	b.n	4010b2 <xQueueGenericSend+0x4e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  4010b4:	6c02      	ldr	r2, [r0, #64]	; 0x40
  4010b6:	2a00      	cmp	r2, #0
  4010b8:	d0db      	beq.n	401072 <xQueueGenericSend+0xe>
  4010ba:	f04f 0380 	mov.w	r3, #128	; 0x80
  4010be:	b672      	cpsid	i
  4010c0:	f383 8811 	msr	BASEPRI, r3
  4010c4:	f3bf 8f6f 	isb	sy
  4010c8:	f3bf 8f4f 	dsb	sy
  4010cc:	b662      	cpsie	i
  4010ce:	e7fe      	b.n	4010ce <xQueueGenericSend+0x6a>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  4010d0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
  4010d2:	2a01      	cmp	r2, #1
  4010d4:	d0cf      	beq.n	401076 <xQueueGenericSend+0x12>
  4010d6:	f04f 0380 	mov.w	r3, #128	; 0x80
  4010da:	b672      	cpsid	i
  4010dc:	f383 8811 	msr	BASEPRI, r3
  4010e0:	f3bf 8f6f 	isb	sy
  4010e4:	f3bf 8f4f 	dsb	sy
  4010e8:	b662      	cpsie	i
  4010ea:	e7fe      	b.n	4010ea <xQueueGenericSend+0x86>
  4010ec:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
  4010ee:	4e4a      	ldr	r6, [pc, #296]	; (401218 <xQueueGenericSend+0x1b4>)
					vTaskSetTimeOutState( &xTimeOut );
  4010f0:	f8df a150 	ldr.w	sl, [pc, #336]	; 401244 <xQueueGenericSend+0x1e0>
					portYIELD_WITHIN_API();
  4010f4:	f8df 912c 	ldr.w	r9, [pc, #300]	; 401224 <xQueueGenericSend+0x1c0>
  4010f8:	e042      	b.n	401180 <xQueueGenericSend+0x11c>
  4010fa:	2700      	movs	r7, #0
  4010fc:	e7f7      	b.n	4010ee <xQueueGenericSend+0x8a>
				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
  4010fe:	462a      	mov	r2, r5
  401100:	4641      	mov	r1, r8
  401102:	4620      	mov	r0, r4
  401104:	4b45      	ldr	r3, [pc, #276]	; (40121c <xQueueGenericSend+0x1b8>)
  401106:	4798      	blx	r3
					if( pxQueue->pxQueueSetContainer != NULL )
  401108:	6d63      	ldr	r3, [r4, #84]	; 0x54
  40110a:	b19b      	cbz	r3, 401134 <xQueueGenericSend+0xd0>
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
  40110c:	4629      	mov	r1, r5
  40110e:	4620      	mov	r0, r4
  401110:	4b43      	ldr	r3, [pc, #268]	; (401220 <xQueueGenericSend+0x1bc>)
  401112:	4798      	blx	r3
  401114:	2801      	cmp	r0, #1
  401116:	d107      	bne.n	401128 <xQueueGenericSend+0xc4>
							queueYIELD_IF_USING_PREEMPTION();
  401118:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40111c:	4b41      	ldr	r3, [pc, #260]	; (401224 <xQueueGenericSend+0x1c0>)
  40111e:	601a      	str	r2, [r3, #0]
  401120:	f3bf 8f4f 	dsb	sy
  401124:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
  401128:	4b3f      	ldr	r3, [pc, #252]	; (401228 <xQueueGenericSend+0x1c4>)
  40112a:	4798      	blx	r3
				return pdPASS;
  40112c:	2001      	movs	r0, #1
}
  40112e:	b005      	add	sp, #20
  401130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  401134:	6a63      	ldr	r3, [r4, #36]	; 0x24
  401136:	b173      	cbz	r3, 401156 <xQueueGenericSend+0xf2>
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
  401138:	f104 0024 	add.w	r0, r4, #36	; 0x24
  40113c:	4b3b      	ldr	r3, [pc, #236]	; (40122c <xQueueGenericSend+0x1c8>)
  40113e:	4798      	blx	r3
  401140:	2801      	cmp	r0, #1
  401142:	d1f1      	bne.n	401128 <xQueueGenericSend+0xc4>
								queueYIELD_IF_USING_PREEMPTION();
  401144:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401148:	4b36      	ldr	r3, [pc, #216]	; (401224 <xQueueGenericSend+0x1c0>)
  40114a:	601a      	str	r2, [r3, #0]
  40114c:	f3bf 8f4f 	dsb	sy
  401150:	f3bf 8f6f 	isb	sy
  401154:	e7e8      	b.n	401128 <xQueueGenericSend+0xc4>
						else if( xYieldRequired != pdFALSE )
  401156:	2800      	cmp	r0, #0
  401158:	d0e6      	beq.n	401128 <xQueueGenericSend+0xc4>
							queueYIELD_IF_USING_PREEMPTION();
  40115a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40115e:	4b31      	ldr	r3, [pc, #196]	; (401224 <xQueueGenericSend+0x1c0>)
  401160:	601a      	str	r2, [r3, #0]
  401162:	f3bf 8f4f 	dsb	sy
  401166:	f3bf 8f6f 	isb	sy
  40116a:	e7dd      	b.n	401128 <xQueueGenericSend+0xc4>
					taskEXIT_CRITICAL();
  40116c:	4b2e      	ldr	r3, [pc, #184]	; (401228 <xQueueGenericSend+0x1c4>)
  40116e:	4798      	blx	r3
					return errQUEUE_FULL;
  401170:	2000      	movs	r0, #0
  401172:	e7dc      	b.n	40112e <xQueueGenericSend+0xca>
				prvUnlockQueue( pxQueue );
  401174:	4620      	mov	r0, r4
  401176:	4b2e      	ldr	r3, [pc, #184]	; (401230 <xQueueGenericSend+0x1cc>)
  401178:	4798      	blx	r3
				( void ) xTaskResumeAll();
  40117a:	4b2e      	ldr	r3, [pc, #184]	; (401234 <xQueueGenericSend+0x1d0>)
  40117c:	4798      	blx	r3
  40117e:	2701      	movs	r7, #1
		taskENTER_CRITICAL();
  401180:	47b0      	blx	r6
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
  401182:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  401184:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  401186:	429a      	cmp	r2, r3
  401188:	d3b9      	bcc.n	4010fe <xQueueGenericSend+0x9a>
  40118a:	2d02      	cmp	r5, #2
  40118c:	d0b7      	beq.n	4010fe <xQueueGenericSend+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
  40118e:	9b01      	ldr	r3, [sp, #4]
  401190:	2b00      	cmp	r3, #0
  401192:	d0eb      	beq.n	40116c <xQueueGenericSend+0x108>
				else if( xEntryTimeSet == pdFALSE )
  401194:	b90f      	cbnz	r7, 40119a <xQueueGenericSend+0x136>
					vTaskSetTimeOutState( &xTimeOut );
  401196:	a802      	add	r0, sp, #8
  401198:	47d0      	blx	sl
		taskEXIT_CRITICAL();
  40119a:	4b23      	ldr	r3, [pc, #140]	; (401228 <xQueueGenericSend+0x1c4>)
  40119c:	4798      	blx	r3
		vTaskSuspendAll();
  40119e:	4b26      	ldr	r3, [pc, #152]	; (401238 <xQueueGenericSend+0x1d4>)
  4011a0:	4798      	blx	r3
		prvLockQueue( pxQueue );
  4011a2:	47b0      	blx	r6
  4011a4:	6c63      	ldr	r3, [r4, #68]	; 0x44
  4011a6:	f1b3 3fff 	cmp.w	r3, #4294967295
  4011aa:	d101      	bne.n	4011b0 <xQueueGenericSend+0x14c>
  4011ac:	2300      	movs	r3, #0
  4011ae:	6463      	str	r3, [r4, #68]	; 0x44
  4011b0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  4011b2:	f1b3 3fff 	cmp.w	r3, #4294967295
  4011b6:	d101      	bne.n	4011bc <xQueueGenericSend+0x158>
  4011b8:	2300      	movs	r3, #0
  4011ba:	64a3      	str	r3, [r4, #72]	; 0x48
  4011bc:	4b1a      	ldr	r3, [pc, #104]	; (401228 <xQueueGenericSend+0x1c4>)
  4011be:	4798      	blx	r3
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  4011c0:	a901      	add	r1, sp, #4
  4011c2:	a802      	add	r0, sp, #8
  4011c4:	4b1d      	ldr	r3, [pc, #116]	; (40123c <xQueueGenericSend+0x1d8>)
  4011c6:	4798      	blx	r3
  4011c8:	b9e0      	cbnz	r0, 401204 <xQueueGenericSend+0x1a0>
	taskENTER_CRITICAL();
  4011ca:	47b0      	blx	r6
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  4011cc:	f8d4 b038 	ldr.w	fp, [r4, #56]	; 0x38
  4011d0:	6be7      	ldr	r7, [r4, #60]	; 0x3c
	taskEXIT_CRITICAL();
  4011d2:	4b15      	ldr	r3, [pc, #84]	; (401228 <xQueueGenericSend+0x1c4>)
  4011d4:	4798      	blx	r3
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
  4011d6:	45bb      	cmp	fp, r7
  4011d8:	d1cc      	bne.n	401174 <xQueueGenericSend+0x110>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
  4011da:	9901      	ldr	r1, [sp, #4]
  4011dc:	f104 0010 	add.w	r0, r4, #16
  4011e0:	4b17      	ldr	r3, [pc, #92]	; (401240 <xQueueGenericSend+0x1dc>)
  4011e2:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
  4011e4:	4620      	mov	r0, r4
  4011e6:	4b12      	ldr	r3, [pc, #72]	; (401230 <xQueueGenericSend+0x1cc>)
  4011e8:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
  4011ea:	4b12      	ldr	r3, [pc, #72]	; (401234 <xQueueGenericSend+0x1d0>)
  4011ec:	4798      	blx	r3
  4011ee:	2800      	cmp	r0, #0
  4011f0:	d1c5      	bne.n	40117e <xQueueGenericSend+0x11a>
					portYIELD_WITHIN_API();
  4011f2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  4011f6:	f8c9 3000 	str.w	r3, [r9]
  4011fa:	f3bf 8f4f 	dsb	sy
  4011fe:	f3bf 8f6f 	isb	sy
  401202:	e7bc      	b.n	40117e <xQueueGenericSend+0x11a>
			prvUnlockQueue( pxQueue );
  401204:	4620      	mov	r0, r4
  401206:	4b0a      	ldr	r3, [pc, #40]	; (401230 <xQueueGenericSend+0x1cc>)
  401208:	4798      	blx	r3
			( void ) xTaskResumeAll();
  40120a:	4b0a      	ldr	r3, [pc, #40]	; (401234 <xQueueGenericSend+0x1d0>)
  40120c:	4798      	blx	r3
			return errQUEUE_FULL;
  40120e:	2000      	movs	r0, #0
  401210:	e78d      	b.n	40112e <xQueueGenericSend+0xca>
  401212:	bf00      	nop
  401214:	00401fd5 	.word	0x00401fd5
  401218:	00400a91 	.word	0x00400a91
  40121c:	00400d79 	.word	0x00400d79
  401220:	00400e01 	.word	0x00400e01
  401224:	e000ed04 	.word	0xe000ed04
  401228:	00400add 	.word	0x00400add
  40122c:	00401e6d 	.word	0x00401e6d
  401230:	00400eb1 	.word	0x00400eb1
  401234:	00401a51 	.word	0x00401a51
  401238:	004018e9 	.word	0x004018e9
  40123c:	00401f35 	.word	0x00401f35
  401240:	00401d69 	.word	0x00401d69
  401244:	00401f05 	.word	0x00401f05

00401248 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
  401248:	2800      	cmp	r0, #0
  40124a:	d036      	beq.n	4012ba <xQueueGenericSendFromISR+0x72>
{
  40124c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401250:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  401252:	2900      	cmp	r1, #0
  401254:	d03c      	beq.n	4012d0 <xQueueGenericSendFromISR+0x88>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  401256:	2b02      	cmp	r3, #2
  401258:	d048      	beq.n	4012ec <xQueueGenericSendFromISR+0xa4>
  40125a:	461e      	mov	r6, r3
  40125c:	4615      	mov	r5, r2
  40125e:	4688      	mov	r8, r1
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
  401260:	4b35      	ldr	r3, [pc, #212]	; (401338 <xQueueGenericSendFromISR+0xf0>)
  401262:	4798      	blx	r3
	__asm volatile
  401264:	f3ef 8711 	mrs	r7, BASEPRI
  401268:	f04f 0380 	mov.w	r3, #128	; 0x80
  40126c:	b672      	cpsid	i
  40126e:	f383 8811 	msr	BASEPRI, r3
  401272:	f3bf 8f6f 	isb	sy
  401276:	f3bf 8f4f 	dsb	sy
  40127a:	b662      	cpsie	i
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
  40127c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  40127e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  401280:	429a      	cmp	r2, r3
  401282:	d301      	bcc.n	401288 <xQueueGenericSendFromISR+0x40>
  401284:	2e02      	cmp	r6, #2
  401286:	d14f      	bne.n	401328 <xQueueGenericSendFromISR+0xe0>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
  401288:	4632      	mov	r2, r6
  40128a:	4641      	mov	r1, r8
  40128c:	4620      	mov	r0, r4
  40128e:	4b2b      	ldr	r3, [pc, #172]	; (40133c <xQueueGenericSendFromISR+0xf4>)
  401290:	4798      	blx	r3
			if( pxQueue->xTxLock == queueUNLOCKED )
  401292:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  401294:	f1b3 3fff 	cmp.w	r3, #4294967295
  401298:	d141      	bne.n	40131e <xQueueGenericSendFromISR+0xd6>
					if( pxQueue->pxQueueSetContainer != NULL )
  40129a:	6d63      	ldr	r3, [r4, #84]	; 0x54
  40129c:	2b00      	cmp	r3, #0
  40129e:	d033      	beq.n	401308 <xQueueGenericSendFromISR+0xc0>
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
  4012a0:	4631      	mov	r1, r6
  4012a2:	4620      	mov	r0, r4
  4012a4:	4b26      	ldr	r3, [pc, #152]	; (401340 <xQueueGenericSendFromISR+0xf8>)
  4012a6:	4798      	blx	r3
							if( pxHigherPriorityTaskWoken != NULL )
  4012a8:	2d00      	cmp	r5, #0
  4012aa:	d03f      	beq.n	40132c <xQueueGenericSendFromISR+0xe4>
  4012ac:	2801      	cmp	r0, #1
  4012ae:	d13d      	bne.n	40132c <xQueueGenericSendFromISR+0xe4>
								*pxHigherPriorityTaskWoken = pdTRUE;
  4012b0:	6028      	str	r0, [r5, #0]
	__asm volatile
  4012b2:	f387 8811 	msr	BASEPRI, r7
}
  4012b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
  4012ba:	f04f 0380 	mov.w	r3, #128	; 0x80
  4012be:	b672      	cpsid	i
  4012c0:	f383 8811 	msr	BASEPRI, r3
  4012c4:	f3bf 8f6f 	isb	sy
  4012c8:	f3bf 8f4f 	dsb	sy
  4012cc:	b662      	cpsie	i
  4012ce:	e7fe      	b.n	4012ce <xQueueGenericSendFromISR+0x86>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  4012d0:	6c00      	ldr	r0, [r0, #64]	; 0x40
  4012d2:	2800      	cmp	r0, #0
  4012d4:	d0bf      	beq.n	401256 <xQueueGenericSendFromISR+0xe>
  4012d6:	f04f 0380 	mov.w	r3, #128	; 0x80
  4012da:	b672      	cpsid	i
  4012dc:	f383 8811 	msr	BASEPRI, r3
  4012e0:	f3bf 8f6f 	isb	sy
  4012e4:	f3bf 8f4f 	dsb	sy
  4012e8:	b662      	cpsie	i
  4012ea:	e7fe      	b.n	4012ea <xQueueGenericSendFromISR+0xa2>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
  4012ec:	6be0      	ldr	r0, [r4, #60]	; 0x3c
  4012ee:	2801      	cmp	r0, #1
  4012f0:	d0b3      	beq.n	40125a <xQueueGenericSendFromISR+0x12>
  4012f2:	f04f 0380 	mov.w	r3, #128	; 0x80
  4012f6:	b672      	cpsid	i
  4012f8:	f383 8811 	msr	BASEPRI, r3
  4012fc:	f3bf 8f6f 	isb	sy
  401300:	f3bf 8f4f 	dsb	sy
  401304:	b662      	cpsie	i
  401306:	e7fe      	b.n	401306 <xQueueGenericSendFromISR+0xbe>
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  401308:	6a63      	ldr	r3, [r4, #36]	; 0x24
  40130a:	b18b      	cbz	r3, 401330 <xQueueGenericSendFromISR+0xe8>
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  40130c:	f104 0024 	add.w	r0, r4, #36	; 0x24
  401310:	4b0c      	ldr	r3, [pc, #48]	; (401344 <xQueueGenericSendFromISR+0xfc>)
  401312:	4798      	blx	r3
								if( pxHigherPriorityTaskWoken != NULL )
  401314:	b175      	cbz	r5, 401334 <xQueueGenericSendFromISR+0xec>
  401316:	b168      	cbz	r0, 401334 <xQueueGenericSendFromISR+0xec>
									*pxHigherPriorityTaskWoken = pdTRUE;
  401318:	2001      	movs	r0, #1
  40131a:	6028      	str	r0, [r5, #0]
  40131c:	e7c9      	b.n	4012b2 <xQueueGenericSendFromISR+0x6a>
				++( pxQueue->xTxLock );
  40131e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  401320:	3301      	adds	r3, #1
  401322:	64a3      	str	r3, [r4, #72]	; 0x48
			xReturn = pdPASS;
  401324:	2001      	movs	r0, #1
  401326:	e7c4      	b.n	4012b2 <xQueueGenericSendFromISR+0x6a>
			xReturn = errQUEUE_FULL;
  401328:	2000      	movs	r0, #0
  40132a:	e7c2      	b.n	4012b2 <xQueueGenericSendFromISR+0x6a>
			xReturn = pdPASS;
  40132c:	2001      	movs	r0, #1
  40132e:	e7c0      	b.n	4012b2 <xQueueGenericSendFromISR+0x6a>
  401330:	2001      	movs	r0, #1
  401332:	e7be      	b.n	4012b2 <xQueueGenericSendFromISR+0x6a>
  401334:	2001      	movs	r0, #1
  401336:	e7bc      	b.n	4012b2 <xQueueGenericSendFromISR+0x6a>
  401338:	00400c89 	.word	0x00400c89
  40133c:	00400d79 	.word	0x00400d79
  401340:	00400e01 	.word	0x00400e01
  401344:	00401e6d 	.word	0x00401e6d

00401348 <xQueueGenericReceive>:
{
  401348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40134c:	b084      	sub	sp, #16
  40134e:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
  401350:	b198      	cbz	r0, 40137a <xQueueGenericReceive+0x32>
  401352:	4604      	mov	r4, r0
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  401354:	b1e1      	cbz	r1, 401390 <xQueueGenericReceive+0x48>
  401356:	4698      	mov	r8, r3
  401358:	460f      	mov	r7, r1
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
  40135a:	4b61      	ldr	r3, [pc, #388]	; (4014e0 <xQueueGenericReceive+0x198>)
  40135c:	4798      	blx	r3
  40135e:	bb28      	cbnz	r0, 4013ac <xQueueGenericReceive+0x64>
  401360:	9b01      	ldr	r3, [sp, #4]
  401362:	b353      	cbz	r3, 4013ba <xQueueGenericReceive+0x72>
  401364:	f04f 0380 	mov.w	r3, #128	; 0x80
  401368:	b672      	cpsid	i
  40136a:	f383 8811 	msr	BASEPRI, r3
  40136e:	f3bf 8f6f 	isb	sy
  401372:	f3bf 8f4f 	dsb	sy
  401376:	b662      	cpsie	i
  401378:	e7fe      	b.n	401378 <xQueueGenericReceive+0x30>
  40137a:	f04f 0380 	mov.w	r3, #128	; 0x80
  40137e:	b672      	cpsid	i
  401380:	f383 8811 	msr	BASEPRI, r3
  401384:	f3bf 8f6f 	isb	sy
  401388:	f3bf 8f4f 	dsb	sy
  40138c:	b662      	cpsie	i
  40138e:	e7fe      	b.n	40138e <xQueueGenericReceive+0x46>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
  401390:	6c02      	ldr	r2, [r0, #64]	; 0x40
  401392:	2a00      	cmp	r2, #0
  401394:	d0df      	beq.n	401356 <xQueueGenericReceive+0xe>
  401396:	f04f 0380 	mov.w	r3, #128	; 0x80
  40139a:	b672      	cpsid	i
  40139c:	f383 8811 	msr	BASEPRI, r3
  4013a0:	f3bf 8f6f 	isb	sy
  4013a4:	f3bf 8f4f 	dsb	sy
  4013a8:	b662      	cpsie	i
  4013aa:	e7fe      	b.n	4013aa <xQueueGenericReceive+0x62>
  4013ac:	2600      	movs	r6, #0
		taskENTER_CRITICAL();
  4013ae:	4d4d      	ldr	r5, [pc, #308]	; (4014e4 <xQueueGenericReceive+0x19c>)
					vTaskSetTimeOutState( &xTimeOut );
  4013b0:	f8df a160 	ldr.w	sl, [pc, #352]	; 401514 <xQueueGenericReceive+0x1cc>
					portYIELD_WITHIN_API();
  4013b4:	f8df 913c 	ldr.w	r9, [pc, #316]	; 4014f4 <xQueueGenericReceive+0x1ac>
  4013b8:	e04b      	b.n	401452 <xQueueGenericReceive+0x10a>
  4013ba:	2600      	movs	r6, #0
  4013bc:	e7f7      	b.n	4013ae <xQueueGenericReceive+0x66>
				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
  4013be:	68e5      	ldr	r5, [r4, #12]
				prvCopyDataFromQueue( pxQueue, pvBuffer );
  4013c0:	4639      	mov	r1, r7
  4013c2:	4620      	mov	r0, r4
  4013c4:	4b48      	ldr	r3, [pc, #288]	; (4014e8 <xQueueGenericReceive+0x1a0>)
  4013c6:	4798      	blx	r3
				if( xJustPeeking == pdFALSE )
  4013c8:	f1b8 0f00 	cmp.w	r8, #0
  4013cc:	d11d      	bne.n	40140a <xQueueGenericReceive+0xc2>
					--( pxQueue->uxMessagesWaiting );
  4013ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  4013d0:	3b01      	subs	r3, #1
  4013d2:	63a3      	str	r3, [r4, #56]	; 0x38
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  4013d4:	6823      	ldr	r3, [r4, #0]
  4013d6:	b913      	cbnz	r3, 4013de <xQueueGenericReceive+0x96>
							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is not redundant as TaskHandle_t is a typedef. */
  4013d8:	4b44      	ldr	r3, [pc, #272]	; (4014ec <xQueueGenericReceive+0x1a4>)
  4013da:	4798      	blx	r3
  4013dc:	6060      	str	r0, [r4, #4]
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  4013de:	6923      	ldr	r3, [r4, #16]
  4013e0:	b16b      	cbz	r3, 4013fe <xQueueGenericReceive+0xb6>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
  4013e2:	f104 0010 	add.w	r0, r4, #16
  4013e6:	4b42      	ldr	r3, [pc, #264]	; (4014f0 <xQueueGenericReceive+0x1a8>)
  4013e8:	4798      	blx	r3
  4013ea:	2801      	cmp	r0, #1
  4013ec:	d107      	bne.n	4013fe <xQueueGenericReceive+0xb6>
							queueYIELD_IF_USING_PREEMPTION();
  4013ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4013f2:	4b40      	ldr	r3, [pc, #256]	; (4014f4 <xQueueGenericReceive+0x1ac>)
  4013f4:	601a      	str	r2, [r3, #0]
  4013f6:	f3bf 8f4f 	dsb	sy
  4013fa:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
  4013fe:	4b3e      	ldr	r3, [pc, #248]	; (4014f8 <xQueueGenericReceive+0x1b0>)
  401400:	4798      	blx	r3
				return pdPASS;
  401402:	2001      	movs	r0, #1
}
  401404:	b004      	add	sp, #16
  401406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
  40140a:	60e5      	str	r5, [r4, #12]
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
  40140c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  40140e:	2b00      	cmp	r3, #0
  401410:	d0f5      	beq.n	4013fe <xQueueGenericReceive+0xb6>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
  401412:	f104 0024 	add.w	r0, r4, #36	; 0x24
  401416:	4b36      	ldr	r3, [pc, #216]	; (4014f0 <xQueueGenericReceive+0x1a8>)
  401418:	4798      	blx	r3
  40141a:	2800      	cmp	r0, #0
  40141c:	d0ef      	beq.n	4013fe <xQueueGenericReceive+0xb6>
							queueYIELD_IF_USING_PREEMPTION();
  40141e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401422:	4b34      	ldr	r3, [pc, #208]	; (4014f4 <xQueueGenericReceive+0x1ac>)
  401424:	601a      	str	r2, [r3, #0]
  401426:	f3bf 8f4f 	dsb	sy
  40142a:	f3bf 8f6f 	isb	sy
  40142e:	e7e6      	b.n	4013fe <xQueueGenericReceive+0xb6>
					taskEXIT_CRITICAL();
  401430:	4b31      	ldr	r3, [pc, #196]	; (4014f8 <xQueueGenericReceive+0x1b0>)
  401432:	4798      	blx	r3
					return errQUEUE_EMPTY;
  401434:	2000      	movs	r0, #0
  401436:	e7e5      	b.n	401404 <xQueueGenericReceive+0xbc>
						taskENTER_CRITICAL();
  401438:	47a8      	blx	r5
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
  40143a:	6860      	ldr	r0, [r4, #4]
  40143c:	4b2f      	ldr	r3, [pc, #188]	; (4014fc <xQueueGenericReceive+0x1b4>)
  40143e:	4798      	blx	r3
						taskEXIT_CRITICAL();
  401440:	4b2d      	ldr	r3, [pc, #180]	; (4014f8 <xQueueGenericReceive+0x1b0>)
  401442:	4798      	blx	r3
  401444:	e030      	b.n	4014a8 <xQueueGenericReceive+0x160>
				prvUnlockQueue( pxQueue );
  401446:	4620      	mov	r0, r4
  401448:	4b2d      	ldr	r3, [pc, #180]	; (401500 <xQueueGenericReceive+0x1b8>)
  40144a:	4798      	blx	r3
				( void ) xTaskResumeAll();
  40144c:	4b2d      	ldr	r3, [pc, #180]	; (401504 <xQueueGenericReceive+0x1bc>)
  40144e:	4798      	blx	r3
  401450:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
  401452:	47a8      	blx	r5
			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
  401454:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  401456:	2b00      	cmp	r3, #0
  401458:	d1b1      	bne.n	4013be <xQueueGenericReceive+0x76>
				if( xTicksToWait == ( TickType_t ) 0 )
  40145a:	9b01      	ldr	r3, [sp, #4]
  40145c:	2b00      	cmp	r3, #0
  40145e:	d0e7      	beq.n	401430 <xQueueGenericReceive+0xe8>
				else if( xEntryTimeSet == pdFALSE )
  401460:	b90e      	cbnz	r6, 401466 <xQueueGenericReceive+0x11e>
					vTaskSetTimeOutState( &xTimeOut );
  401462:	a802      	add	r0, sp, #8
  401464:	47d0      	blx	sl
		taskEXIT_CRITICAL();
  401466:	4b24      	ldr	r3, [pc, #144]	; (4014f8 <xQueueGenericReceive+0x1b0>)
  401468:	4798      	blx	r3
		vTaskSuspendAll();
  40146a:	4b27      	ldr	r3, [pc, #156]	; (401508 <xQueueGenericReceive+0x1c0>)
  40146c:	4798      	blx	r3
		prvLockQueue( pxQueue );
  40146e:	47a8      	blx	r5
  401470:	6c63      	ldr	r3, [r4, #68]	; 0x44
  401472:	f1b3 3fff 	cmp.w	r3, #4294967295
  401476:	d101      	bne.n	40147c <xQueueGenericReceive+0x134>
  401478:	2300      	movs	r3, #0
  40147a:	6463      	str	r3, [r4, #68]	; 0x44
  40147c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  40147e:	f1b3 3fff 	cmp.w	r3, #4294967295
  401482:	d101      	bne.n	401488 <xQueueGenericReceive+0x140>
  401484:	2300      	movs	r3, #0
  401486:	64a3      	str	r3, [r4, #72]	; 0x48
  401488:	4b1b      	ldr	r3, [pc, #108]	; (4014f8 <xQueueGenericReceive+0x1b0>)
  40148a:	4798      	blx	r3
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
  40148c:	a901      	add	r1, sp, #4
  40148e:	a802      	add	r0, sp, #8
  401490:	4b1e      	ldr	r3, [pc, #120]	; (40150c <xQueueGenericReceive+0x1c4>)
  401492:	4798      	blx	r3
  401494:	b9e8      	cbnz	r0, 4014d2 <xQueueGenericReceive+0x18a>
	taskENTER_CRITICAL();
  401496:	47a8      	blx	r5
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
  401498:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	taskEXIT_CRITICAL();
  40149a:	4b17      	ldr	r3, [pc, #92]	; (4014f8 <xQueueGenericReceive+0x1b0>)
  40149c:	4798      	blx	r3
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
  40149e:	2e00      	cmp	r6, #0
  4014a0:	d1d1      	bne.n	401446 <xQueueGenericReceive+0xfe>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
  4014a2:	6823      	ldr	r3, [r4, #0]
  4014a4:	2b00      	cmp	r3, #0
  4014a6:	d0c7      	beq.n	401438 <xQueueGenericReceive+0xf0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
  4014a8:	9901      	ldr	r1, [sp, #4]
  4014aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
  4014ae:	4b18      	ldr	r3, [pc, #96]	; (401510 <xQueueGenericReceive+0x1c8>)
  4014b0:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
  4014b2:	4620      	mov	r0, r4
  4014b4:	4b12      	ldr	r3, [pc, #72]	; (401500 <xQueueGenericReceive+0x1b8>)
  4014b6:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
  4014b8:	4b12      	ldr	r3, [pc, #72]	; (401504 <xQueueGenericReceive+0x1bc>)
  4014ba:	4798      	blx	r3
  4014bc:	2800      	cmp	r0, #0
  4014be:	d1c7      	bne.n	401450 <xQueueGenericReceive+0x108>
					portYIELD_WITHIN_API();
  4014c0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  4014c4:	f8c9 3000 	str.w	r3, [r9]
  4014c8:	f3bf 8f4f 	dsb	sy
  4014cc:	f3bf 8f6f 	isb	sy
  4014d0:	e7be      	b.n	401450 <xQueueGenericReceive+0x108>
			prvUnlockQueue( pxQueue );
  4014d2:	4620      	mov	r0, r4
  4014d4:	4b0a      	ldr	r3, [pc, #40]	; (401500 <xQueueGenericReceive+0x1b8>)
  4014d6:	4798      	blx	r3
			( void ) xTaskResumeAll();
  4014d8:	4b0a      	ldr	r3, [pc, #40]	; (401504 <xQueueGenericReceive+0x1bc>)
  4014da:	4798      	blx	r3
			return errQUEUE_EMPTY;
  4014dc:	2000      	movs	r0, #0
  4014de:	e791      	b.n	401404 <xQueueGenericReceive+0xbc>
  4014e0:	00401fd5 	.word	0x00401fd5
  4014e4:	00400a91 	.word	0x00400a91
  4014e8:	00400e89 	.word	0x00400e89
  4014ec:	00402155 	.word	0x00402155
  4014f0:	00401e6d 	.word	0x00401e6d
  4014f4:	e000ed04 	.word	0xe000ed04
  4014f8:	00400add 	.word	0x00400add
  4014fc:	00401ff5 	.word	0x00401ff5
  401500:	00400eb1 	.word	0x00400eb1
  401504:	00401a51 	.word	0x00401a51
  401508:	004018e9 	.word	0x004018e9
  40150c:	00401f35 	.word	0x00401f35
  401510:	00401d69 	.word	0x00401d69
  401514:	00401f05 	.word	0x00401f05

00401518 <vQueueAddToRegistry>:
	{
  401518:	b410      	push	{r4}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
  40151a:	4b0b      	ldr	r3, [pc, #44]	; (401548 <vQueueAddToRegistry+0x30>)
  40151c:	681b      	ldr	r3, [r3, #0]
  40151e:	b153      	cbz	r3, 401536 <vQueueAddToRegistry+0x1e>
  401520:	2301      	movs	r3, #1
  401522:	4c09      	ldr	r4, [pc, #36]	; (401548 <vQueueAddToRegistry+0x30>)
  401524:	f854 2033 	ldr.w	r2, [r4, r3, lsl #3]
  401528:	b132      	cbz	r2, 401538 <vQueueAddToRegistry+0x20>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
  40152a:	3301      	adds	r3, #1
  40152c:	2b08      	cmp	r3, #8
  40152e:	d1f9      	bne.n	401524 <vQueueAddToRegistry+0xc>
	}
  401530:	f85d 4b04 	ldr.w	r4, [sp], #4
  401534:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
  401536:	2300      	movs	r3, #0
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
  401538:	4a03      	ldr	r2, [pc, #12]	; (401548 <vQueueAddToRegistry+0x30>)
  40153a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
  40153e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  401542:	6058      	str	r0, [r3, #4]
				break;
  401544:	e7f4      	b.n	401530 <vQueueAddToRegistry+0x18>
  401546:	bf00      	nop
  401548:	2040f3b8 	.word	0x2040f3b8

0040154c <vQueueWaitForMessageRestricted>:
	{
  40154c:	b570      	push	{r4, r5, r6, lr}
  40154e:	4604      	mov	r4, r0
  401550:	460d      	mov	r5, r1
  401552:	4616      	mov	r6, r2
		prvLockQueue( pxQueue );
  401554:	4b0f      	ldr	r3, [pc, #60]	; (401594 <vQueueWaitForMessageRestricted+0x48>)
  401556:	4798      	blx	r3
  401558:	6c63      	ldr	r3, [r4, #68]	; 0x44
  40155a:	f1b3 3fff 	cmp.w	r3, #4294967295
  40155e:	d00b      	beq.n	401578 <vQueueWaitForMessageRestricted+0x2c>
  401560:	6ca3      	ldr	r3, [r4, #72]	; 0x48
  401562:	f1b3 3fff 	cmp.w	r3, #4294967295
  401566:	d00a      	beq.n	40157e <vQueueWaitForMessageRestricted+0x32>
  401568:	4b0b      	ldr	r3, [pc, #44]	; (401598 <vQueueWaitForMessageRestricted+0x4c>)
  40156a:	4798      	blx	r3
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
  40156c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  40156e:	b14b      	cbz	r3, 401584 <vQueueWaitForMessageRestricted+0x38>
		prvUnlockQueue( pxQueue );
  401570:	4620      	mov	r0, r4
  401572:	4b0a      	ldr	r3, [pc, #40]	; (40159c <vQueueWaitForMessageRestricted+0x50>)
  401574:	4798      	blx	r3
  401576:	bd70      	pop	{r4, r5, r6, pc}
		prvLockQueue( pxQueue );
  401578:	2300      	movs	r3, #0
  40157a:	6463      	str	r3, [r4, #68]	; 0x44
  40157c:	e7f0      	b.n	401560 <vQueueWaitForMessageRestricted+0x14>
  40157e:	2300      	movs	r3, #0
  401580:	64a3      	str	r3, [r4, #72]	; 0x48
  401582:	e7f1      	b.n	401568 <vQueueWaitForMessageRestricted+0x1c>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
  401584:	4632      	mov	r2, r6
  401586:	4629      	mov	r1, r5
  401588:	f104 0024 	add.w	r0, r4, #36	; 0x24
  40158c:	4b04      	ldr	r3, [pc, #16]	; (4015a0 <vQueueWaitForMessageRestricted+0x54>)
  40158e:	4798      	blx	r3
  401590:	e7ee      	b.n	401570 <vQueueWaitForMessageRestricted+0x24>
  401592:	bf00      	nop
  401594:	00400a91 	.word	0x00400a91
  401598:	00400add 	.word	0x00400add
  40159c:	00400eb1 	.word	0x00400eb1
  4015a0:	00401ded 	.word	0x00401ded

004015a4 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  4015a4:	4b08      	ldr	r3, [pc, #32]	; (4015c8 <prvResetNextTaskUnblockTime+0x24>)
  4015a6:	681b      	ldr	r3, [r3, #0]
  4015a8:	681b      	ldr	r3, [r3, #0]
  4015aa:	b13b      	cbz	r3, 4015bc <prvResetNextTaskUnblockTime+0x18>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  4015ac:	4b06      	ldr	r3, [pc, #24]	; (4015c8 <prvResetNextTaskUnblockTime+0x24>)
  4015ae:	681b      	ldr	r3, [r3, #0]
  4015b0:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xGenericListItem ) );
  4015b2:	68db      	ldr	r3, [r3, #12]
  4015b4:	685a      	ldr	r2, [r3, #4]
  4015b6:	4b05      	ldr	r3, [pc, #20]	; (4015cc <prvResetNextTaskUnblockTime+0x28>)
  4015b8:	601a      	str	r2, [r3, #0]
  4015ba:	4770      	bx	lr
		xNextTaskUnblockTime = portMAX_DELAY;
  4015bc:	f04f 32ff 	mov.w	r2, #4294967295
  4015c0:	4b02      	ldr	r3, [pc, #8]	; (4015cc <prvResetNextTaskUnblockTime+0x28>)
  4015c2:	601a      	str	r2, [r3, #0]
  4015c4:	4770      	bx	lr
  4015c6:	bf00      	nop
  4015c8:	2040da28 	.word	0x2040da28
  4015cc:	2040dad4 	.word	0x2040dad4

004015d0 <prvAddCurrentTaskToDelayedList>:
{
  4015d0:	b510      	push	{r4, lr}
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
  4015d2:	4b0f      	ldr	r3, [pc, #60]	; (401610 <prvAddCurrentTaskToDelayedList+0x40>)
  4015d4:	681b      	ldr	r3, [r3, #0]
  4015d6:	6058      	str	r0, [r3, #4]
	if( xTimeToWake < xTickCount )
  4015d8:	4b0e      	ldr	r3, [pc, #56]	; (401614 <prvAddCurrentTaskToDelayedList+0x44>)
  4015da:	681b      	ldr	r3, [r3, #0]
  4015dc:	4298      	cmp	r0, r3
  4015de:	d30e      	bcc.n	4015fe <prvAddCurrentTaskToDelayedList+0x2e>
  4015e0:	4604      	mov	r4, r0
		vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
  4015e2:	4b0d      	ldr	r3, [pc, #52]	; (401618 <prvAddCurrentTaskToDelayedList+0x48>)
  4015e4:	6818      	ldr	r0, [r3, #0]
  4015e6:	4b0a      	ldr	r3, [pc, #40]	; (401610 <prvAddCurrentTaskToDelayedList+0x40>)
  4015e8:	6819      	ldr	r1, [r3, #0]
  4015ea:	3104      	adds	r1, #4
  4015ec:	4b0b      	ldr	r3, [pc, #44]	; (40161c <prvAddCurrentTaskToDelayedList+0x4c>)
  4015ee:	4798      	blx	r3
		if( xTimeToWake < xNextTaskUnblockTime )
  4015f0:	4b0b      	ldr	r3, [pc, #44]	; (401620 <prvAddCurrentTaskToDelayedList+0x50>)
  4015f2:	681b      	ldr	r3, [r3, #0]
  4015f4:	429c      	cmp	r4, r3
  4015f6:	d201      	bcs.n	4015fc <prvAddCurrentTaskToDelayedList+0x2c>
			xNextTaskUnblockTime = xTimeToWake;
  4015f8:	4b09      	ldr	r3, [pc, #36]	; (401620 <prvAddCurrentTaskToDelayedList+0x50>)
  4015fa:	601c      	str	r4, [r3, #0]
  4015fc:	bd10      	pop	{r4, pc}
		vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
  4015fe:	4b09      	ldr	r3, [pc, #36]	; (401624 <prvAddCurrentTaskToDelayedList+0x54>)
  401600:	6818      	ldr	r0, [r3, #0]
  401602:	4b03      	ldr	r3, [pc, #12]	; (401610 <prvAddCurrentTaskToDelayedList+0x40>)
  401604:	6819      	ldr	r1, [r3, #0]
  401606:	3104      	adds	r1, #4
  401608:	4b04      	ldr	r3, [pc, #16]	; (40161c <prvAddCurrentTaskToDelayedList+0x4c>)
  40160a:	4798      	blx	r3
  40160c:	bd10      	pop	{r4, pc}
  40160e:	bf00      	nop
  401610:	2040da24 	.word	0x2040da24
  401614:	2040db1c 	.word	0x2040db1c
  401618:	2040da28 	.word	0x2040da28
  40161c:	00400979 	.word	0x00400979
  401620:	2040dad4 	.word	0x2040dad4
  401624:	2040da2c 	.word	0x2040da2c

00401628 <xTaskGenericCreate>:
{
  401628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40162c:	b083      	sub	sp, #12
  40162e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  401630:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
  401634:	9e0e      	ldr	r6, [sp, #56]	; 0x38
	configASSERT( pxTaskCode );
  401636:	b160      	cbz	r0, 401652 <xTaskGenericCreate+0x2a>
	configASSERT( ( ( uxPriority & ( UBaseType_t ) ( ~portPRIVILEGE_BIT ) ) < ( UBaseType_t ) configMAX_PRIORITIES ) );
  401638:	2d04      	cmp	r5, #4
  40163a:	d915      	bls.n	401668 <xTaskGenericCreate+0x40>
  40163c:	f04f 0380 	mov.w	r3, #128	; 0x80
  401640:	b672      	cpsid	i
  401642:	f383 8811 	msr	BASEPRI, r3
  401646:	f3bf 8f6f 	isb	sy
  40164a:	f3bf 8f4f 	dsb	sy
  40164e:	b662      	cpsie	i
  401650:	e7fe      	b.n	401650 <xTaskGenericCreate+0x28>
  401652:	f04f 0380 	mov.w	r3, #128	; 0x80
  401656:	b672      	cpsid	i
  401658:	f383 8811 	msr	BASEPRI, r3
  40165c:	f3bf 8f6f 	isb	sy
  401660:	f3bf 8f4f 	dsb	sy
  401664:	b662      	cpsie	i
  401666:	e7fe      	b.n	401666 <xTaskGenericCreate+0x3e>
  401668:	9001      	str	r0, [sp, #4]
  40166a:	4698      	mov	r8, r3
  40166c:	4691      	mov	r9, r2
  40166e:	460f      	mov	r7, r1
		pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ), puxStackBuffer ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  401670:	b936      	cbnz	r6, 401680 <xTaskGenericCreate+0x58>
  401672:	0090      	lsls	r0, r2, #2
  401674:	4b62      	ldr	r3, [pc, #392]	; (401800 <xTaskGenericCreate+0x1d8>)
  401676:	4798      	blx	r3
		if( pxStack != NULL )
  401678:	4606      	mov	r6, r0
  40167a:	2800      	cmp	r0, #0
  40167c:	f000 809e 	beq.w	4017bc <xTaskGenericCreate+0x194>
			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
  401680:	2058      	movs	r0, #88	; 0x58
  401682:	4b5f      	ldr	r3, [pc, #380]	; (401800 <xTaskGenericCreate+0x1d8>)
  401684:	4798      	blx	r3
			if( pxNewTCB != NULL )
  401686:	4604      	mov	r4, r0
  401688:	2800      	cmp	r0, #0
  40168a:	f000 8094 	beq.w	4017b6 <xTaskGenericCreate+0x18e>
				pxNewTCB->pxStack = pxStack;
  40168e:	6306      	str	r6, [r0, #48]	; 0x30
			( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( StackType_t ) );
  401690:	ea4f 0289 	mov.w	r2, r9, lsl #2
  401694:	21a5      	movs	r1, #165	; 0xa5
  401696:	4630      	mov	r0, r6
  401698:	4b5a      	ldr	r3, [pc, #360]	; (401804 <xTaskGenericCreate+0x1dc>)
  40169a:	4798      	blx	r3
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( uint16_t ) 1 );
  40169c:	f06f 4640 	mvn.w	r6, #3221225472	; 0xc0000000
  4016a0:	444e      	add	r6, r9
  4016a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4016a4:	eb03 0386 	add.w	r3, r3, r6, lsl #2
			pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
  4016a8:	f023 0607 	bic.w	r6, r3, #7
		pxTCB->pcTaskName[ x ] = pcName[ x ];
  4016ac:	783b      	ldrb	r3, [r7, #0]
  4016ae:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
		if( pcName[ x ] == 0x00 )
  4016b2:	783b      	ldrb	r3, [r7, #0]
  4016b4:	2b00      	cmp	r3, #0
  4016b6:	f040 8084 	bne.w	4017c2 <xTaskGenericCreate+0x19a>
	pxTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
  4016ba:	2700      	movs	r7, #0
  4016bc:	f884 703d 	strb.w	r7, [r4, #61]	; 0x3d
	pxTCB->uxPriority = uxPriority;
  4016c0:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxTCB->uxBasePriority = uxPriority;
  4016c2:	64a5      	str	r5, [r4, #72]	; 0x48
		pxTCB->uxMutexesHeld = 0;
  4016c4:	64e7      	str	r7, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
  4016c6:	f104 0904 	add.w	r9, r4, #4
  4016ca:	4648      	mov	r0, r9
  4016cc:	f8df b184 	ldr.w	fp, [pc, #388]	; 401854 <xTaskGenericCreate+0x22c>
  4016d0:	47d8      	blx	fp
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
  4016d2:	f104 0018 	add.w	r0, r4, #24
  4016d6:	47d8      	blx	fp
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
  4016d8:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  4016da:	f1c5 0305 	rsb	r3, r5, #5
  4016de:	61a3      	str	r3, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
  4016e0:	6264      	str	r4, [r4, #36]	; 0x24
		pxTCB->ulNotifiedValue = 0;
  4016e2:	6527      	str	r7, [r4, #80]	; 0x50
		pxTCB->eNotifyState = eNotWaitingNotification;
  4016e4:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
  4016e8:	4642      	mov	r2, r8
  4016ea:	9901      	ldr	r1, [sp, #4]
  4016ec:	4630      	mov	r0, r6
  4016ee:	4b46      	ldr	r3, [pc, #280]	; (401808 <xTaskGenericCreate+0x1e0>)
  4016f0:	4798      	blx	r3
  4016f2:	6020      	str	r0, [r4, #0]
		if( ( void * ) pxCreatedTask != NULL )
  4016f4:	f1ba 0f00 	cmp.w	sl, #0
  4016f8:	d001      	beq.n	4016fe <xTaskGenericCreate+0xd6>
			*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
  4016fa:	f8ca 4000 	str.w	r4, [sl]
		taskENTER_CRITICAL();
  4016fe:	4b43      	ldr	r3, [pc, #268]	; (40180c <xTaskGenericCreate+0x1e4>)
  401700:	4798      	blx	r3
			uxCurrentNumberOfTasks++;
  401702:	4a43      	ldr	r2, [pc, #268]	; (401810 <xTaskGenericCreate+0x1e8>)
  401704:	6813      	ldr	r3, [r2, #0]
  401706:	3301      	adds	r3, #1
  401708:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
  40170a:	4b42      	ldr	r3, [pc, #264]	; (401814 <xTaskGenericCreate+0x1ec>)
  40170c:	681b      	ldr	r3, [r3, #0]
  40170e:	2b00      	cmp	r3, #0
  401710:	d166      	bne.n	4017e0 <xTaskGenericCreate+0x1b8>
				pxCurrentTCB =  pxNewTCB;
  401712:	4b40      	ldr	r3, [pc, #256]	; (401814 <xTaskGenericCreate+0x1ec>)
  401714:	601c      	str	r4, [r3, #0]
				if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
  401716:	6813      	ldr	r3, [r2, #0]
  401718:	2b01      	cmp	r3, #1
  40171a:	d121      	bne.n	401760 <xTaskGenericCreate+0x138>
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
  40171c:	4f3e      	ldr	r7, [pc, #248]	; (401818 <xTaskGenericCreate+0x1f0>)
  40171e:	4638      	mov	r0, r7
  401720:	4e3e      	ldr	r6, [pc, #248]	; (40181c <xTaskGenericCreate+0x1f4>)
  401722:	47b0      	blx	r6
  401724:	f107 0014 	add.w	r0, r7, #20
  401728:	47b0      	blx	r6
  40172a:	f107 0028 	add.w	r0, r7, #40	; 0x28
  40172e:	47b0      	blx	r6
  401730:	f107 003c 	add.w	r0, r7, #60	; 0x3c
  401734:	47b0      	blx	r6
  401736:	f107 0050 	add.w	r0, r7, #80	; 0x50
  40173a:	47b0      	blx	r6
	vListInitialise( &xDelayedTaskList1 );
  40173c:	f8df 8118 	ldr.w	r8, [pc, #280]	; 401858 <xTaskGenericCreate+0x230>
  401740:	4640      	mov	r0, r8
  401742:	47b0      	blx	r6
	vListInitialise( &xDelayedTaskList2 );
  401744:	4f36      	ldr	r7, [pc, #216]	; (401820 <xTaskGenericCreate+0x1f8>)
  401746:	4638      	mov	r0, r7
  401748:	47b0      	blx	r6
	vListInitialise( &xPendingReadyList );
  40174a:	4836      	ldr	r0, [pc, #216]	; (401824 <xTaskGenericCreate+0x1fc>)
  40174c:	47b0      	blx	r6
		vListInitialise( &xTasksWaitingTermination );
  40174e:	4836      	ldr	r0, [pc, #216]	; (401828 <xTaskGenericCreate+0x200>)
  401750:	47b0      	blx	r6
		vListInitialise( &xSuspendedTaskList );
  401752:	4836      	ldr	r0, [pc, #216]	; (40182c <xTaskGenericCreate+0x204>)
  401754:	47b0      	blx	r6
	pxDelayedTaskList = &xDelayedTaskList1;
  401756:	4b36      	ldr	r3, [pc, #216]	; (401830 <xTaskGenericCreate+0x208>)
  401758:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
  40175c:	4b35      	ldr	r3, [pc, #212]	; (401834 <xTaskGenericCreate+0x20c>)
  40175e:	601f      	str	r7, [r3, #0]
			uxTaskNumber++;
  401760:	4a35      	ldr	r2, [pc, #212]	; (401838 <xTaskGenericCreate+0x210>)
  401762:	6813      	ldr	r3, [r2, #0]
  401764:	3301      	adds	r3, #1
  401766:	6013      	str	r3, [r2, #0]
				pxNewTCB->uxTCBNumber = uxTaskNumber;
  401768:	6423      	str	r3, [r4, #64]	; 0x40
			prvAddTaskToReadyList( pxNewTCB );
  40176a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  40176c:	4a33      	ldr	r2, [pc, #204]	; (40183c <xTaskGenericCreate+0x214>)
  40176e:	6811      	ldr	r1, [r2, #0]
  401770:	2301      	movs	r3, #1
  401772:	4083      	lsls	r3, r0
  401774:	430b      	orrs	r3, r1
  401776:	6013      	str	r3, [r2, #0]
  401778:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  40177c:	4649      	mov	r1, r9
  40177e:	4b26      	ldr	r3, [pc, #152]	; (401818 <xTaskGenericCreate+0x1f0>)
  401780:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401784:	4b2e      	ldr	r3, [pc, #184]	; (401840 <xTaskGenericCreate+0x218>)
  401786:	4798      	blx	r3
		taskEXIT_CRITICAL();
  401788:	4b2e      	ldr	r3, [pc, #184]	; (401844 <xTaskGenericCreate+0x21c>)
  40178a:	4798      	blx	r3
		if( xSchedulerRunning != pdFALSE )
  40178c:	4b2e      	ldr	r3, [pc, #184]	; (401848 <xTaskGenericCreate+0x220>)
  40178e:	681b      	ldr	r3, [r3, #0]
  401790:	2b00      	cmp	r3, #0
  401792:	d031      	beq.n	4017f8 <xTaskGenericCreate+0x1d0>
			if( pxCurrentTCB->uxPriority < uxPriority )
  401794:	4b1f      	ldr	r3, [pc, #124]	; (401814 <xTaskGenericCreate+0x1ec>)
  401796:	681b      	ldr	r3, [r3, #0]
  401798:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  40179a:	429d      	cmp	r5, r3
  40179c:	d92e      	bls.n	4017fc <xTaskGenericCreate+0x1d4>
				taskYIELD_IF_USING_PREEMPTION();
  40179e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4017a2:	4b2a      	ldr	r3, [pc, #168]	; (40184c <xTaskGenericCreate+0x224>)
  4017a4:	601a      	str	r2, [r3, #0]
  4017a6:	f3bf 8f4f 	dsb	sy
  4017aa:	f3bf 8f6f 	isb	sy
			xReturn = pdPASS;
  4017ae:	2001      	movs	r0, #1
}
  4017b0:	b003      	add	sp, #12
  4017b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				vPortFree( pxStack );
  4017b6:	4630      	mov	r0, r6
  4017b8:	4b25      	ldr	r3, [pc, #148]	; (401850 <xTaskGenericCreate+0x228>)
  4017ba:	4798      	blx	r3
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
  4017bc:	f04f 30ff 	mov.w	r0, #4294967295
  4017c0:	e7f6      	b.n	4017b0 <xTaskGenericCreate+0x188>
  4017c2:	463b      	mov	r3, r7
  4017c4:	f104 0234 	add.w	r2, r4, #52	; 0x34
  4017c8:	3709      	adds	r7, #9
		pxTCB->pcTaskName[ x ] = pcName[ x ];
  4017ca:	7859      	ldrb	r1, [r3, #1]
  4017cc:	f802 1f01 	strb.w	r1, [r2, #1]!
		if( pcName[ x ] == 0x00 )
  4017d0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
  4017d4:	2900      	cmp	r1, #0
  4017d6:	f43f af70 	beq.w	4016ba <xTaskGenericCreate+0x92>
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
  4017da:	42bb      	cmp	r3, r7
  4017dc:	d1f5      	bne.n	4017ca <xTaskGenericCreate+0x1a2>
  4017de:	e76c      	b.n	4016ba <xTaskGenericCreate+0x92>
				if( xSchedulerRunning == pdFALSE )
  4017e0:	4b19      	ldr	r3, [pc, #100]	; (401848 <xTaskGenericCreate+0x220>)
  4017e2:	681b      	ldr	r3, [r3, #0]
  4017e4:	2b00      	cmp	r3, #0
  4017e6:	d1bb      	bne.n	401760 <xTaskGenericCreate+0x138>
					if( pxCurrentTCB->uxPriority <= uxPriority )
  4017e8:	4b0a      	ldr	r3, [pc, #40]	; (401814 <xTaskGenericCreate+0x1ec>)
  4017ea:	681b      	ldr	r3, [r3, #0]
  4017ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  4017ee:	429d      	cmp	r5, r3
  4017f0:	d3b6      	bcc.n	401760 <xTaskGenericCreate+0x138>
						pxCurrentTCB = pxNewTCB;
  4017f2:	4b08      	ldr	r3, [pc, #32]	; (401814 <xTaskGenericCreate+0x1ec>)
  4017f4:	601c      	str	r4, [r3, #0]
  4017f6:	e7b3      	b.n	401760 <xTaskGenericCreate+0x138>
			xReturn = pdPASS;
  4017f8:	2001      	movs	r0, #1
  4017fa:	e7d9      	b.n	4017b0 <xTaskGenericCreate+0x188>
  4017fc:	2001      	movs	r0, #1
	return xReturn;
  4017fe:	e7d7      	b.n	4017b0 <xTaskGenericCreate+0x188>
  401800:	00400ced 	.word	0x00400ced
  401804:	00406845 	.word	0x00406845
  401808:	00400a45 	.word	0x00400a45
  40180c:	00400a91 	.word	0x00400a91
  401810:	2040da94 	.word	0x2040da94
  401814:	2040da24 	.word	0x2040da24
  401818:	2040da30 	.word	0x2040da30
  40181c:	00400945 	.word	0x00400945
  401820:	2040dac0 	.word	0x2040dac0
  401824:	2040dadc 	.word	0x2040dadc
  401828:	2040db08 	.word	0x2040db08
  40182c:	2040daf4 	.word	0x2040daf4
  401830:	2040da28 	.word	0x2040da28
  401834:	2040da2c 	.word	0x2040da2c
  401838:	2040daa0 	.word	0x2040daa0
  40183c:	2040daa8 	.word	0x2040daa8
  401840:	00400961 	.word	0x00400961
  401844:	00400add 	.word	0x00400add
  401848:	2040daf0 	.word	0x2040daf0
  40184c:	e000ed04 	.word	0xe000ed04
  401850:	00400d5d 	.word	0x00400d5d
  401854:	0040095b 	.word	0x0040095b
  401858:	2040daac 	.word	0x2040daac

0040185c <vTaskStartScheduler>:
{
  40185c:	b510      	push	{r4, lr}
  40185e:	b084      	sub	sp, #16
		xReturn = xTaskCreate( prvIdleTask, "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );  /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */
  401860:	2300      	movs	r3, #0
  401862:	9303      	str	r3, [sp, #12]
  401864:	9302      	str	r3, [sp, #8]
  401866:	9301      	str	r3, [sp, #4]
  401868:	9300      	str	r3, [sp, #0]
  40186a:	2282      	movs	r2, #130	; 0x82
  40186c:	4916      	ldr	r1, [pc, #88]	; (4018c8 <vTaskStartScheduler+0x6c>)
  40186e:	4817      	ldr	r0, [pc, #92]	; (4018cc <vTaskStartScheduler+0x70>)
  401870:	4c17      	ldr	r4, [pc, #92]	; (4018d0 <vTaskStartScheduler+0x74>)
  401872:	47a0      	blx	r4
		if( xReturn == pdPASS )
  401874:	2801      	cmp	r0, #1
  401876:	d00b      	beq.n	401890 <vTaskStartScheduler+0x34>
		configASSERT( xReturn );
  401878:	bb20      	cbnz	r0, 4018c4 <vTaskStartScheduler+0x68>
  40187a:	f04f 0380 	mov.w	r3, #128	; 0x80
  40187e:	b672      	cpsid	i
  401880:	f383 8811 	msr	BASEPRI, r3
  401884:	f3bf 8f6f 	isb	sy
  401888:	f3bf 8f4f 	dsb	sy
  40188c:	b662      	cpsie	i
  40188e:	e7fe      	b.n	40188e <vTaskStartScheduler+0x32>
			xReturn = xTimerCreateTimerTask();
  401890:	4b10      	ldr	r3, [pc, #64]	; (4018d4 <vTaskStartScheduler+0x78>)
  401892:	4798      	blx	r3
	if( xReturn == pdPASS )
  401894:	2801      	cmp	r0, #1
  401896:	d1ef      	bne.n	401878 <vTaskStartScheduler+0x1c>
  401898:	f04f 0380 	mov.w	r3, #128	; 0x80
  40189c:	b672      	cpsid	i
  40189e:	f383 8811 	msr	BASEPRI, r3
  4018a2:	f3bf 8f6f 	isb	sy
  4018a6:	f3bf 8f4f 	dsb	sy
  4018aa:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
  4018ac:	f04f 32ff 	mov.w	r2, #4294967295
  4018b0:	4b09      	ldr	r3, [pc, #36]	; (4018d8 <vTaskStartScheduler+0x7c>)
  4018b2:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
  4018b4:	2201      	movs	r2, #1
  4018b6:	4b09      	ldr	r3, [pc, #36]	; (4018dc <vTaskStartScheduler+0x80>)
  4018b8:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) 0U;
  4018ba:	2200      	movs	r2, #0
  4018bc:	4b08      	ldr	r3, [pc, #32]	; (4018e0 <vTaskStartScheduler+0x84>)
  4018be:	601a      	str	r2, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
  4018c0:	4b08      	ldr	r3, [pc, #32]	; (4018e4 <vTaskStartScheduler+0x88>)
  4018c2:	4798      	blx	r3
}
  4018c4:	b004      	add	sp, #16
  4018c6:	bd10      	pop	{r4, pc}
  4018c8:	0040cd4c 	.word	0x0040cd4c
  4018cc:	00401c01 	.word	0x00401c01
  4018d0:	00401629 	.word	0x00401629
  4018d4:	00402241 	.word	0x00402241
  4018d8:	2040dad4 	.word	0x2040dad4
  4018dc:	2040daf0 	.word	0x2040daf0
  4018e0:	2040db1c 	.word	0x2040db1c
  4018e4:	00400bc5 	.word	0x00400bc5

004018e8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
  4018e8:	4a02      	ldr	r2, [pc, #8]	; (4018f4 <vTaskSuspendAll+0xc>)
  4018ea:	6813      	ldr	r3, [r2, #0]
  4018ec:	3301      	adds	r3, #1
  4018ee:	6013      	str	r3, [r2, #0]
  4018f0:	4770      	bx	lr
  4018f2:	bf00      	nop
  4018f4:	2040da9c 	.word	0x2040da9c

004018f8 <xTaskGetTickCount>:
		xTicks = xTickCount;
  4018f8:	4b01      	ldr	r3, [pc, #4]	; (401900 <xTaskGetTickCount+0x8>)
  4018fa:	6818      	ldr	r0, [r3, #0]
}
  4018fc:	4770      	bx	lr
  4018fe:	bf00      	nop
  401900:	2040db1c 	.word	0x2040db1c

00401904 <xTaskIncrementTick>:
{
  401904:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  401908:	4b42      	ldr	r3, [pc, #264]	; (401a14 <xTaskIncrementTick+0x110>)
  40190a:	681b      	ldr	r3, [r3, #0]
  40190c:	2b00      	cmp	r3, #0
  40190e:	d178      	bne.n	401a02 <xTaskIncrementTick+0xfe>
		++xTickCount;
  401910:	4b41      	ldr	r3, [pc, #260]	; (401a18 <xTaskIncrementTick+0x114>)
  401912:	681a      	ldr	r2, [r3, #0]
  401914:	3201      	adds	r2, #1
  401916:	601a      	str	r2, [r3, #0]
			const TickType_t xConstTickCount = xTickCount;
  401918:	681e      	ldr	r6, [r3, #0]
			if( xConstTickCount == ( TickType_t ) 0U )
  40191a:	b9d6      	cbnz	r6, 401952 <xTaskIncrementTick+0x4e>
				taskSWITCH_DELAYED_LISTS();
  40191c:	4b3f      	ldr	r3, [pc, #252]	; (401a1c <xTaskIncrementTick+0x118>)
  40191e:	681b      	ldr	r3, [r3, #0]
  401920:	681b      	ldr	r3, [r3, #0]
  401922:	b153      	cbz	r3, 40193a <xTaskIncrementTick+0x36>
  401924:	f04f 0380 	mov.w	r3, #128	; 0x80
  401928:	b672      	cpsid	i
  40192a:	f383 8811 	msr	BASEPRI, r3
  40192e:	f3bf 8f6f 	isb	sy
  401932:	f3bf 8f4f 	dsb	sy
  401936:	b662      	cpsie	i
  401938:	e7fe      	b.n	401938 <xTaskIncrementTick+0x34>
  40193a:	4a38      	ldr	r2, [pc, #224]	; (401a1c <xTaskIncrementTick+0x118>)
  40193c:	6811      	ldr	r1, [r2, #0]
  40193e:	4b38      	ldr	r3, [pc, #224]	; (401a20 <xTaskIncrementTick+0x11c>)
  401940:	6818      	ldr	r0, [r3, #0]
  401942:	6010      	str	r0, [r2, #0]
  401944:	6019      	str	r1, [r3, #0]
  401946:	4a37      	ldr	r2, [pc, #220]	; (401a24 <xTaskIncrementTick+0x120>)
  401948:	6813      	ldr	r3, [r2, #0]
  40194a:	3301      	adds	r3, #1
  40194c:	6013      	str	r3, [r2, #0]
  40194e:	4b36      	ldr	r3, [pc, #216]	; (401a28 <xTaskIncrementTick+0x124>)
  401950:	4798      	blx	r3
			if( xConstTickCount >= xNextTaskUnblockTime )
  401952:	4b36      	ldr	r3, [pc, #216]	; (401a2c <xTaskIncrementTick+0x128>)
  401954:	681b      	ldr	r3, [r3, #0]
  401956:	429e      	cmp	r6, r3
  401958:	d218      	bcs.n	40198c <xTaskIncrementTick+0x88>
BaseType_t xSwitchRequired = pdFALSE;
  40195a:	2400      	movs	r4, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
  40195c:	4b34      	ldr	r3, [pc, #208]	; (401a30 <xTaskIncrementTick+0x12c>)
  40195e:	681b      	ldr	r3, [r3, #0]
  401960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401962:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401966:	4a33      	ldr	r2, [pc, #204]	; (401a34 <xTaskIncrementTick+0x130>)
  401968:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
				xSwitchRequired = pdTRUE;
  40196c:	2b02      	cmp	r3, #2
  40196e:	bf28      	it	cs
  401970:	2401      	movcs	r4, #1
			if( uxPendedTicks == ( UBaseType_t ) 0U )
  401972:	4b31      	ldr	r3, [pc, #196]	; (401a38 <xTaskIncrementTick+0x134>)
  401974:	681b      	ldr	r3, [r3, #0]
  401976:	b90b      	cbnz	r3, 40197c <xTaskIncrementTick+0x78>
				vApplicationTickHook();
  401978:	4b30      	ldr	r3, [pc, #192]	; (401a3c <xTaskIncrementTick+0x138>)
  40197a:	4798      	blx	r3
		if( xYieldPending != pdFALSE )
  40197c:	4b30      	ldr	r3, [pc, #192]	; (401a40 <xTaskIncrementTick+0x13c>)
  40197e:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
  401980:	2b00      	cmp	r3, #0
}
  401982:	bf0c      	ite	eq
  401984:	4620      	moveq	r0, r4
  401986:	2001      	movne	r0, #1
  401988:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40198c:	2400      	movs	r4, #0
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  40198e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 401a1c <xTaskIncrementTick+0x118>
						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
  401992:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 401a4c <xTaskIncrementTick+0x148>
						prvAddTaskToReadyList( pxTCB );
  401996:	4f2b      	ldr	r7, [pc, #172]	; (401a44 <xTaskIncrementTick+0x140>)
  401998:	e01f      	b.n	4019da <xTaskIncrementTick+0xd6>
						xNextTaskUnblockTime = portMAX_DELAY;
  40199a:	f04f 32ff 	mov.w	r2, #4294967295
  40199e:	4b23      	ldr	r3, [pc, #140]	; (401a2c <xTaskIncrementTick+0x128>)
  4019a0:	601a      	str	r2, [r3, #0]
						break;
  4019a2:	e7db      	b.n	40195c <xTaskIncrementTick+0x58>
							xNextTaskUnblockTime = xItemValue;
  4019a4:	4a21      	ldr	r2, [pc, #132]	; (401a2c <xTaskIncrementTick+0x128>)
  4019a6:	6013      	str	r3, [r2, #0]
							break;
  4019a8:	e7d8      	b.n	40195c <xTaskIncrementTick+0x58>
							( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  4019aa:	f105 0018 	add.w	r0, r5, #24
  4019ae:	47c0      	blx	r8
						prvAddTaskToReadyList( pxTCB );
  4019b0:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
  4019b2:	683a      	ldr	r2, [r7, #0]
  4019b4:	2301      	movs	r3, #1
  4019b6:	4083      	lsls	r3, r0
  4019b8:	4313      	orrs	r3, r2
  4019ba:	603b      	str	r3, [r7, #0]
  4019bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4019c0:	4651      	mov	r1, sl
  4019c2:	4b1c      	ldr	r3, [pc, #112]	; (401a34 <xTaskIncrementTick+0x130>)
  4019c4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  4019c8:	4b1f      	ldr	r3, [pc, #124]	; (401a48 <xTaskIncrementTick+0x144>)
  4019ca:	4798      	blx	r3
							if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  4019cc:	4b18      	ldr	r3, [pc, #96]	; (401a30 <xTaskIncrementTick+0x12c>)
  4019ce:	681b      	ldr	r3, [r3, #0]
  4019d0:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  4019d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
								xSwitchRequired = pdTRUE;
  4019d4:	429a      	cmp	r2, r3
  4019d6:	bf28      	it	cs
  4019d8:	2401      	movcs	r4, #1
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  4019da:	f8d9 3000 	ldr.w	r3, [r9]
  4019de:	681b      	ldr	r3, [r3, #0]
  4019e0:	2b00      	cmp	r3, #0
  4019e2:	d0da      	beq.n	40199a <xTaskIncrementTick+0x96>
						pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
  4019e4:	f8d9 3000 	ldr.w	r3, [r9]
  4019e8:	68db      	ldr	r3, [r3, #12]
  4019ea:	68dd      	ldr	r5, [r3, #12]
						xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
  4019ec:	686b      	ldr	r3, [r5, #4]
						if( xConstTickCount < xItemValue )
  4019ee:	429e      	cmp	r6, r3
  4019f0:	d3d8      	bcc.n	4019a4 <xTaskIncrementTick+0xa0>
						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
  4019f2:	f105 0a04 	add.w	sl, r5, #4
  4019f6:	4650      	mov	r0, sl
  4019f8:	47c0      	blx	r8
						if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
  4019fa:	6aab      	ldr	r3, [r5, #40]	; 0x28
  4019fc:	2b00      	cmp	r3, #0
  4019fe:	d1d4      	bne.n	4019aa <xTaskIncrementTick+0xa6>
  401a00:	e7d6      	b.n	4019b0 <xTaskIncrementTick+0xac>
		++uxPendedTicks;
  401a02:	4a0d      	ldr	r2, [pc, #52]	; (401a38 <xTaskIncrementTick+0x134>)
  401a04:	6813      	ldr	r3, [r2, #0]
  401a06:	3301      	adds	r3, #1
  401a08:	6013      	str	r3, [r2, #0]
			vApplicationTickHook();
  401a0a:	4b0c      	ldr	r3, [pc, #48]	; (401a3c <xTaskIncrementTick+0x138>)
  401a0c:	4798      	blx	r3
BaseType_t xSwitchRequired = pdFALSE;
  401a0e:	2400      	movs	r4, #0
  401a10:	e7b4      	b.n	40197c <xTaskIncrementTick+0x78>
  401a12:	bf00      	nop
  401a14:	2040da9c 	.word	0x2040da9c
  401a18:	2040db1c 	.word	0x2040db1c
  401a1c:	2040da28 	.word	0x2040da28
  401a20:	2040da2c 	.word	0x2040da2c
  401a24:	2040dad8 	.word	0x2040dad8
  401a28:	004015a5 	.word	0x004015a5
  401a2c:	2040dad4 	.word	0x2040dad4
  401a30:	2040da24 	.word	0x2040da24
  401a34:	2040da30 	.word	0x2040da30
  401a38:	2040da98 	.word	0x2040da98
  401a3c:	00406495 	.word	0x00406495
  401a40:	2040db20 	.word	0x2040db20
  401a44:	2040daa8 	.word	0x2040daa8
  401a48:	00400961 	.word	0x00400961
  401a4c:	004009ad 	.word	0x004009ad

00401a50 <xTaskResumeAll>:
{
  401a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( uxSchedulerSuspended );
  401a54:	4b38      	ldr	r3, [pc, #224]	; (401b38 <xTaskResumeAll+0xe8>)
  401a56:	681b      	ldr	r3, [r3, #0]
  401a58:	b953      	cbnz	r3, 401a70 <xTaskResumeAll+0x20>
  401a5a:	f04f 0380 	mov.w	r3, #128	; 0x80
  401a5e:	b672      	cpsid	i
  401a60:	f383 8811 	msr	BASEPRI, r3
  401a64:	f3bf 8f6f 	isb	sy
  401a68:	f3bf 8f4f 	dsb	sy
  401a6c:	b662      	cpsie	i
  401a6e:	e7fe      	b.n	401a6e <xTaskResumeAll+0x1e>
	taskENTER_CRITICAL();
  401a70:	4b32      	ldr	r3, [pc, #200]	; (401b3c <xTaskResumeAll+0xec>)
  401a72:	4798      	blx	r3
		--uxSchedulerSuspended;
  401a74:	4b30      	ldr	r3, [pc, #192]	; (401b38 <xTaskResumeAll+0xe8>)
  401a76:	681a      	ldr	r2, [r3, #0]
  401a78:	3a01      	subs	r2, #1
  401a7a:	601a      	str	r2, [r3, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  401a7c:	681b      	ldr	r3, [r3, #0]
  401a7e:	2b00      	cmp	r3, #0
  401a80:	d155      	bne.n	401b2e <xTaskResumeAll+0xde>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
  401a82:	4b2f      	ldr	r3, [pc, #188]	; (401b40 <xTaskResumeAll+0xf0>)
  401a84:	681b      	ldr	r3, [r3, #0]
  401a86:	2b00      	cmp	r3, #0
  401a88:	d132      	bne.n	401af0 <xTaskResumeAll+0xa0>
BaseType_t xAlreadyYielded = pdFALSE;
  401a8a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
  401a8c:	4b2d      	ldr	r3, [pc, #180]	; (401b44 <xTaskResumeAll+0xf4>)
  401a8e:	4798      	blx	r3
}
  401a90:	4620      	mov	r0, r4
  401a92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
  401a96:	68fb      	ldr	r3, [r7, #12]
  401a98:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  401a9a:	f104 0018 	add.w	r0, r4, #24
  401a9e:	47b0      	blx	r6
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
  401aa0:	f104 0804 	add.w	r8, r4, #4
  401aa4:	4640      	mov	r0, r8
  401aa6:	47b0      	blx	r6
					prvAddTaskToReadyList( pxTCB );
  401aa8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401aaa:	682a      	ldr	r2, [r5, #0]
  401aac:	2301      	movs	r3, #1
  401aae:	4083      	lsls	r3, r0
  401ab0:	4313      	orrs	r3, r2
  401ab2:	602b      	str	r3, [r5, #0]
  401ab4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401ab8:	4641      	mov	r1, r8
  401aba:	eb09 0080 	add.w	r0, r9, r0, lsl #2
  401abe:	4b22      	ldr	r3, [pc, #136]	; (401b48 <xTaskResumeAll+0xf8>)
  401ac0:	4798      	blx	r3
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
  401ac2:	4b22      	ldr	r3, [pc, #136]	; (401b4c <xTaskResumeAll+0xfc>)
  401ac4:	681b      	ldr	r3, [r3, #0]
  401ac6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  401ac8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401aca:	429a      	cmp	r2, r3
  401acc:	d20c      	bcs.n	401ae8 <xTaskResumeAll+0x98>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
  401ace:	683b      	ldr	r3, [r7, #0]
  401ad0:	2b00      	cmp	r3, #0
  401ad2:	d1e0      	bne.n	401a96 <xTaskResumeAll+0x46>
				if( uxPendedTicks > ( UBaseType_t ) 0U )
  401ad4:	4b1e      	ldr	r3, [pc, #120]	; (401b50 <xTaskResumeAll+0x100>)
  401ad6:	681b      	ldr	r3, [r3, #0]
  401ad8:	b1db      	cbz	r3, 401b12 <xTaskResumeAll+0xc2>
					while( uxPendedTicks > ( UBaseType_t ) 0U )
  401ada:	4b1d      	ldr	r3, [pc, #116]	; (401b50 <xTaskResumeAll+0x100>)
  401adc:	681b      	ldr	r3, [r3, #0]
  401ade:	b1c3      	cbz	r3, 401b12 <xTaskResumeAll+0xc2>
						if( xTaskIncrementTick() != pdFALSE )
  401ae0:	4e1c      	ldr	r6, [pc, #112]	; (401b54 <xTaskResumeAll+0x104>)
							xYieldPending = pdTRUE;
  401ae2:	4d1d      	ldr	r5, [pc, #116]	; (401b58 <xTaskResumeAll+0x108>)
						--uxPendedTicks;
  401ae4:	4c1a      	ldr	r4, [pc, #104]	; (401b50 <xTaskResumeAll+0x100>)
  401ae6:	e00e      	b.n	401b06 <xTaskResumeAll+0xb6>
						xYieldPending = pdTRUE;
  401ae8:	2201      	movs	r2, #1
  401aea:	4b1b      	ldr	r3, [pc, #108]	; (401b58 <xTaskResumeAll+0x108>)
  401aec:	601a      	str	r2, [r3, #0]
  401aee:	e7ee      	b.n	401ace <xTaskResumeAll+0x7e>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
  401af0:	4f1a      	ldr	r7, [pc, #104]	; (401b5c <xTaskResumeAll+0x10c>)
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
  401af2:	4e1b      	ldr	r6, [pc, #108]	; (401b60 <xTaskResumeAll+0x110>)
					prvAddTaskToReadyList( pxTCB );
  401af4:	4d1b      	ldr	r5, [pc, #108]	; (401b64 <xTaskResumeAll+0x114>)
  401af6:	f8df 9074 	ldr.w	r9, [pc, #116]	; 401b6c <xTaskResumeAll+0x11c>
  401afa:	e7e8      	b.n	401ace <xTaskResumeAll+0x7e>
						--uxPendedTicks;
  401afc:	6823      	ldr	r3, [r4, #0]
  401afe:	3b01      	subs	r3, #1
  401b00:	6023      	str	r3, [r4, #0]
					while( uxPendedTicks > ( UBaseType_t ) 0U )
  401b02:	6823      	ldr	r3, [r4, #0]
  401b04:	b12b      	cbz	r3, 401b12 <xTaskResumeAll+0xc2>
						if( xTaskIncrementTick() != pdFALSE )
  401b06:	47b0      	blx	r6
  401b08:	2800      	cmp	r0, #0
  401b0a:	d0f7      	beq.n	401afc <xTaskResumeAll+0xac>
							xYieldPending = pdTRUE;
  401b0c:	2301      	movs	r3, #1
  401b0e:	602b      	str	r3, [r5, #0]
  401b10:	e7f4      	b.n	401afc <xTaskResumeAll+0xac>
				if( xYieldPending == pdTRUE )
  401b12:	4b11      	ldr	r3, [pc, #68]	; (401b58 <xTaskResumeAll+0x108>)
  401b14:	681b      	ldr	r3, [r3, #0]
  401b16:	2b01      	cmp	r3, #1
  401b18:	d10b      	bne.n	401b32 <xTaskResumeAll+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
  401b1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401b1e:	4b12      	ldr	r3, [pc, #72]	; (401b68 <xTaskResumeAll+0x118>)
  401b20:	601a      	str	r2, [r3, #0]
  401b22:	f3bf 8f4f 	dsb	sy
  401b26:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
  401b2a:	2401      	movs	r4, #1
  401b2c:	e7ae      	b.n	401a8c <xTaskResumeAll+0x3c>
BaseType_t xAlreadyYielded = pdFALSE;
  401b2e:	2400      	movs	r4, #0
  401b30:	e7ac      	b.n	401a8c <xTaskResumeAll+0x3c>
  401b32:	2400      	movs	r4, #0
  401b34:	e7aa      	b.n	401a8c <xTaskResumeAll+0x3c>
  401b36:	bf00      	nop
  401b38:	2040da9c 	.word	0x2040da9c
  401b3c:	00400a91 	.word	0x00400a91
  401b40:	2040da94 	.word	0x2040da94
  401b44:	00400add 	.word	0x00400add
  401b48:	00400961 	.word	0x00400961
  401b4c:	2040da24 	.word	0x2040da24
  401b50:	2040da98 	.word	0x2040da98
  401b54:	00401905 	.word	0x00401905
  401b58:	2040db20 	.word	0x2040db20
  401b5c:	2040dadc 	.word	0x2040dadc
  401b60:	004009ad 	.word	0x004009ad
  401b64:	2040daa8 	.word	0x2040daa8
  401b68:	e000ed04 	.word	0xe000ed04
  401b6c:	2040da30 	.word	0x2040da30

00401b70 <vTaskDelay>:
	{
  401b70:	b510      	push	{r4, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
  401b72:	2800      	cmp	r0, #0
  401b74:	d029      	beq.n	401bca <vTaskDelay+0x5a>
  401b76:	4604      	mov	r4, r0
			configASSERT( uxSchedulerSuspended == 0 );
  401b78:	4b18      	ldr	r3, [pc, #96]	; (401bdc <vTaskDelay+0x6c>)
  401b7a:	681b      	ldr	r3, [r3, #0]
  401b7c:	b153      	cbz	r3, 401b94 <vTaskDelay+0x24>
  401b7e:	f04f 0380 	mov.w	r3, #128	; 0x80
  401b82:	b672      	cpsid	i
  401b84:	f383 8811 	msr	BASEPRI, r3
  401b88:	f3bf 8f6f 	isb	sy
  401b8c:	f3bf 8f4f 	dsb	sy
  401b90:	b662      	cpsie	i
  401b92:	e7fe      	b.n	401b92 <vTaskDelay+0x22>
			vTaskSuspendAll();
  401b94:	4b12      	ldr	r3, [pc, #72]	; (401be0 <vTaskDelay+0x70>)
  401b96:	4798      	blx	r3
				xTimeToWake = xTickCount + xTicksToDelay;
  401b98:	4b12      	ldr	r3, [pc, #72]	; (401be4 <vTaskDelay+0x74>)
  401b9a:	681b      	ldr	r3, [r3, #0]
  401b9c:	441c      	add	r4, r3
				if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
  401b9e:	4b12      	ldr	r3, [pc, #72]	; (401be8 <vTaskDelay+0x78>)
  401ba0:	6818      	ldr	r0, [r3, #0]
  401ba2:	3004      	adds	r0, #4
  401ba4:	4b11      	ldr	r3, [pc, #68]	; (401bec <vTaskDelay+0x7c>)
  401ba6:	4798      	blx	r3
  401ba8:	b948      	cbnz	r0, 401bbe <vTaskDelay+0x4e>
					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
  401baa:	4b0f      	ldr	r3, [pc, #60]	; (401be8 <vTaskDelay+0x78>)
  401bac:	681a      	ldr	r2, [r3, #0]
  401bae:	4910      	ldr	r1, [pc, #64]	; (401bf0 <vTaskDelay+0x80>)
  401bb0:	680b      	ldr	r3, [r1, #0]
  401bb2:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
  401bb4:	2201      	movs	r2, #1
  401bb6:	4082      	lsls	r2, r0
  401bb8:	ea23 0302 	bic.w	r3, r3, r2
  401bbc:	600b      	str	r3, [r1, #0]
				prvAddCurrentTaskToDelayedList( xTimeToWake );
  401bbe:	4620      	mov	r0, r4
  401bc0:	4b0c      	ldr	r3, [pc, #48]	; (401bf4 <vTaskDelay+0x84>)
  401bc2:	4798      	blx	r3
			xAlreadyYielded = xTaskResumeAll();
  401bc4:	4b0c      	ldr	r3, [pc, #48]	; (401bf8 <vTaskDelay+0x88>)
  401bc6:	4798      	blx	r3
		if( xAlreadyYielded == pdFALSE )
  401bc8:	b938      	cbnz	r0, 401bda <vTaskDelay+0x6a>
			portYIELD_WITHIN_API();
  401bca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401bce:	4b0b      	ldr	r3, [pc, #44]	; (401bfc <vTaskDelay+0x8c>)
  401bd0:	601a      	str	r2, [r3, #0]
  401bd2:	f3bf 8f4f 	dsb	sy
  401bd6:	f3bf 8f6f 	isb	sy
  401bda:	bd10      	pop	{r4, pc}
  401bdc:	2040da9c 	.word	0x2040da9c
  401be0:	004018e9 	.word	0x004018e9
  401be4:	2040db1c 	.word	0x2040db1c
  401be8:	2040da24 	.word	0x2040da24
  401bec:	004009ad 	.word	0x004009ad
  401bf0:	2040daa8 	.word	0x2040daa8
  401bf4:	004015d1 	.word	0x004015d1
  401bf8:	00401a51 	.word	0x00401a51
  401bfc:	e000ed04 	.word	0xe000ed04

00401c00 <prvIdleTask>:
{
  401c00:	b580      	push	{r7, lr}
			vTaskSuspendAll();
  401c02:	f8df 8088 	ldr.w	r8, [pc, #136]	; 401c8c <prvIdleTask+0x8c>
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
  401c06:	4e19      	ldr	r6, [pc, #100]	; (401c6c <prvIdleTask+0x6c>)
				taskYIELD();
  401c08:	f8df 9084 	ldr.w	r9, [pc, #132]	; 401c90 <prvIdleTask+0x90>
  401c0c:	e02a      	b.n	401c64 <prvIdleTask+0x64>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
  401c0e:	4b18      	ldr	r3, [pc, #96]	; (401c70 <prvIdleTask+0x70>)
  401c10:	681b      	ldr	r3, [r3, #0]
  401c12:	2b01      	cmp	r3, #1
  401c14:	d81e      	bhi.n	401c54 <prvIdleTask+0x54>
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
  401c16:	682b      	ldr	r3, [r5, #0]
  401c18:	2b00      	cmp	r3, #0
  401c1a:	d0f8      	beq.n	401c0e <prvIdleTask+0xe>
			vTaskSuspendAll();
  401c1c:	47c0      	blx	r8
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
  401c1e:	6834      	ldr	r4, [r6, #0]
			( void ) xTaskResumeAll();
  401c20:	47b8      	blx	r7
			if( xListIsEmpty == pdFALSE )
  401c22:	2c00      	cmp	r4, #0
  401c24:	d0f7      	beq.n	401c16 <prvIdleTask+0x16>
				taskENTER_CRITICAL();
  401c26:	4b13      	ldr	r3, [pc, #76]	; (401c74 <prvIdleTask+0x74>)
  401c28:	4798      	blx	r3
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
  401c2a:	68f3      	ldr	r3, [r6, #12]
  401c2c:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
  401c2e:	1d20      	adds	r0, r4, #4
  401c30:	4b11      	ldr	r3, [pc, #68]	; (401c78 <prvIdleTask+0x78>)
  401c32:	4798      	blx	r3
					--uxCurrentNumberOfTasks;
  401c34:	4a11      	ldr	r2, [pc, #68]	; (401c7c <prvIdleTask+0x7c>)
  401c36:	6813      	ldr	r3, [r2, #0]
  401c38:	3b01      	subs	r3, #1
  401c3a:	6013      	str	r3, [r2, #0]
					--uxTasksDeleted;
  401c3c:	682b      	ldr	r3, [r5, #0]
  401c3e:	3b01      	subs	r3, #1
  401c40:	602b      	str	r3, [r5, #0]
				taskEXIT_CRITICAL();
  401c42:	4b0f      	ldr	r3, [pc, #60]	; (401c80 <prvIdleTask+0x80>)
  401c44:	4798      	blx	r3
			vPortFreeAligned( pxTCB->pxStack );
  401c46:	6b20      	ldr	r0, [r4, #48]	; 0x30
  401c48:	f8df a048 	ldr.w	sl, [pc, #72]	; 401c94 <prvIdleTask+0x94>
  401c4c:	47d0      	blx	sl
		vPortFree( pxTCB );
  401c4e:	4620      	mov	r0, r4
  401c50:	47d0      	blx	sl
  401c52:	e7e0      	b.n	401c16 <prvIdleTask+0x16>
				taskYIELD();
  401c54:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  401c58:	f8c9 3000 	str.w	r3, [r9]
  401c5c:	f3bf 8f4f 	dsb	sy
  401c60:	f3bf 8f6f 	isb	sy
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
  401c64:	4d07      	ldr	r5, [pc, #28]	; (401c84 <prvIdleTask+0x84>)
			( void ) xTaskResumeAll();
  401c66:	4f08      	ldr	r7, [pc, #32]	; (401c88 <prvIdleTask+0x88>)
  401c68:	e7d5      	b.n	401c16 <prvIdleTask+0x16>
  401c6a:	bf00      	nop
  401c6c:	2040db08 	.word	0x2040db08
  401c70:	2040da30 	.word	0x2040da30
  401c74:	00400a91 	.word	0x00400a91
  401c78:	004009ad 	.word	0x004009ad
  401c7c:	2040da94 	.word	0x2040da94
  401c80:	00400add 	.word	0x00400add
  401c84:	2040daa4 	.word	0x2040daa4
  401c88:	00401a51 	.word	0x00401a51
  401c8c:	004018e9 	.word	0x004018e9
  401c90:	e000ed04 	.word	0xe000ed04
  401c94:	00400d5d 	.word	0x00400d5d

00401c98 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
  401c98:	4b2d      	ldr	r3, [pc, #180]	; (401d50 <vTaskSwitchContext+0xb8>)
  401c9a:	681b      	ldr	r3, [r3, #0]
  401c9c:	2b00      	cmp	r3, #0
  401c9e:	d12c      	bne.n	401cfa <vTaskSwitchContext+0x62>
{
  401ca0:	b510      	push	{r4, lr}
		xYieldPending = pdFALSE;
  401ca2:	2200      	movs	r2, #0
  401ca4:	4b2b      	ldr	r3, [pc, #172]	; (401d54 <vTaskSwitchContext+0xbc>)
  401ca6:	601a      	str	r2, [r3, #0]
		taskCHECK_FOR_STACK_OVERFLOW();
  401ca8:	4b2b      	ldr	r3, [pc, #172]	; (401d58 <vTaskSwitchContext+0xc0>)
  401caa:	681b      	ldr	r3, [r3, #0]
  401cac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401cae:	681a      	ldr	r2, [r3, #0]
  401cb0:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  401cb4:	d103      	bne.n	401cbe <vTaskSwitchContext+0x26>
  401cb6:	685a      	ldr	r2, [r3, #4]
  401cb8:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  401cbc:	d021      	beq.n	401d02 <vTaskSwitchContext+0x6a>
  401cbe:	4b26      	ldr	r3, [pc, #152]	; (401d58 <vTaskSwitchContext+0xc0>)
  401cc0:	6818      	ldr	r0, [r3, #0]
  401cc2:	6819      	ldr	r1, [r3, #0]
  401cc4:	3134      	adds	r1, #52	; 0x34
  401cc6:	4b25      	ldr	r3, [pc, #148]	; (401d5c <vTaskSwitchContext+0xc4>)
  401cc8:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK();
  401cca:	4b25      	ldr	r3, [pc, #148]	; (401d60 <vTaskSwitchContext+0xc8>)
  401ccc:	681b      	ldr	r3, [r3, #0]
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
  401cce:	fab3 f383 	clz	r3, r3
  401cd2:	b2db      	uxtb	r3, r3
  401cd4:	f1c3 031f 	rsb	r3, r3, #31
  401cd8:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  401cdc:	4a21      	ldr	r2, [pc, #132]	; (401d64 <vTaskSwitchContext+0xcc>)
  401cde:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  401ce2:	b9ba      	cbnz	r2, 401d14 <vTaskSwitchContext+0x7c>
	__asm volatile
  401ce4:	f04f 0380 	mov.w	r3, #128	; 0x80
  401ce8:	b672      	cpsid	i
  401cea:	f383 8811 	msr	BASEPRI, r3
  401cee:	f3bf 8f6f 	isb	sy
  401cf2:	f3bf 8f4f 	dsb	sy
  401cf6:	b662      	cpsie	i
  401cf8:	e7fe      	b.n	401cf8 <vTaskSwitchContext+0x60>
		xYieldPending = pdTRUE;
  401cfa:	2201      	movs	r2, #1
  401cfc:	4b15      	ldr	r3, [pc, #84]	; (401d54 <vTaskSwitchContext+0xbc>)
  401cfe:	601a      	str	r2, [r3, #0]
  401d00:	4770      	bx	lr
		taskCHECK_FOR_STACK_OVERFLOW();
  401d02:	689a      	ldr	r2, [r3, #8]
  401d04:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
  401d08:	d1d9      	bne.n	401cbe <vTaskSwitchContext+0x26>
  401d0a:	68db      	ldr	r3, [r3, #12]
  401d0c:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
  401d10:	d1d5      	bne.n	401cbe <vTaskSwitchContext+0x26>
  401d12:	e7da      	b.n	401cca <vTaskSwitchContext+0x32>
		taskSELECT_HIGHEST_PRIORITY_TASK();
  401d14:	4a13      	ldr	r2, [pc, #76]	; (401d64 <vTaskSwitchContext+0xcc>)
  401d16:	0099      	lsls	r1, r3, #2
  401d18:	18c8      	adds	r0, r1, r3
  401d1a:	eb02 0080 	add.w	r0, r2, r0, lsl #2
  401d1e:	6844      	ldr	r4, [r0, #4]
  401d20:	6864      	ldr	r4, [r4, #4]
  401d22:	6044      	str	r4, [r0, #4]
  401d24:	4419      	add	r1, r3
  401d26:	4602      	mov	r2, r0
  401d28:	3208      	adds	r2, #8
  401d2a:	4294      	cmp	r4, r2
  401d2c:	d009      	beq.n	401d42 <vTaskSwitchContext+0xaa>
  401d2e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401d32:	4a0c      	ldr	r2, [pc, #48]	; (401d64 <vTaskSwitchContext+0xcc>)
  401d34:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  401d38:	685b      	ldr	r3, [r3, #4]
  401d3a:	68da      	ldr	r2, [r3, #12]
  401d3c:	4b06      	ldr	r3, [pc, #24]	; (401d58 <vTaskSwitchContext+0xc0>)
  401d3e:	601a      	str	r2, [r3, #0]
  401d40:	bd10      	pop	{r4, pc}
  401d42:	6860      	ldr	r0, [r4, #4]
  401d44:	4a07      	ldr	r2, [pc, #28]	; (401d64 <vTaskSwitchContext+0xcc>)
  401d46:	eb02 0281 	add.w	r2, r2, r1, lsl #2
  401d4a:	6050      	str	r0, [r2, #4]
  401d4c:	e7ef      	b.n	401d2e <vTaskSwitchContext+0x96>
  401d4e:	bf00      	nop
  401d50:	2040da9c 	.word	0x2040da9c
  401d54:	2040db20 	.word	0x2040db20
  401d58:	2040da24 	.word	0x2040da24
  401d5c:	0040647d 	.word	0x0040647d
  401d60:	2040daa8 	.word	0x2040daa8
  401d64:	2040da30 	.word	0x2040da30

00401d68 <vTaskPlaceOnEventList>:
{
  401d68:	b538      	push	{r3, r4, r5, lr}
	configASSERT( pxEventList );
  401d6a:	b1e0      	cbz	r0, 401da6 <vTaskPlaceOnEventList+0x3e>
  401d6c:	460c      	mov	r4, r1
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
  401d6e:	4d17      	ldr	r5, [pc, #92]	; (401dcc <vTaskPlaceOnEventList+0x64>)
  401d70:	6829      	ldr	r1, [r5, #0]
  401d72:	3118      	adds	r1, #24
  401d74:	4b16      	ldr	r3, [pc, #88]	; (401dd0 <vTaskPlaceOnEventList+0x68>)
  401d76:	4798      	blx	r3
	if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
  401d78:	6828      	ldr	r0, [r5, #0]
  401d7a:	3004      	adds	r0, #4
  401d7c:	4b15      	ldr	r3, [pc, #84]	; (401dd4 <vTaskPlaceOnEventList+0x6c>)
  401d7e:	4798      	blx	r3
  401d80:	b940      	cbnz	r0, 401d94 <vTaskPlaceOnEventList+0x2c>
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
  401d82:	682a      	ldr	r2, [r5, #0]
  401d84:	4914      	ldr	r1, [pc, #80]	; (401dd8 <vTaskPlaceOnEventList+0x70>)
  401d86:	680b      	ldr	r3, [r1, #0]
  401d88:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
  401d8a:	2201      	movs	r2, #1
  401d8c:	4082      	lsls	r2, r0
  401d8e:	ea23 0302 	bic.w	r3, r3, r2
  401d92:	600b      	str	r3, [r1, #0]
		if( xTicksToWait == portMAX_DELAY )
  401d94:	f1b4 3fff 	cmp.w	r4, #4294967295
  401d98:	d010      	beq.n	401dbc <vTaskPlaceOnEventList+0x54>
			xTimeToWake = xTickCount + xTicksToWait;
  401d9a:	4b10      	ldr	r3, [pc, #64]	; (401ddc <vTaskPlaceOnEventList+0x74>)
  401d9c:	6818      	ldr	r0, [r3, #0]
			prvAddCurrentTaskToDelayedList( xTimeToWake );
  401d9e:	4420      	add	r0, r4
  401da0:	4b0f      	ldr	r3, [pc, #60]	; (401de0 <vTaskPlaceOnEventList+0x78>)
  401da2:	4798      	blx	r3
  401da4:	bd38      	pop	{r3, r4, r5, pc}
  401da6:	f04f 0380 	mov.w	r3, #128	; 0x80
  401daa:	b672      	cpsid	i
  401dac:	f383 8811 	msr	BASEPRI, r3
  401db0:	f3bf 8f6f 	isb	sy
  401db4:	f3bf 8f4f 	dsb	sy
  401db8:	b662      	cpsie	i
  401dba:	e7fe      	b.n	401dba <vTaskPlaceOnEventList+0x52>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
  401dbc:	4b03      	ldr	r3, [pc, #12]	; (401dcc <vTaskPlaceOnEventList+0x64>)
  401dbe:	6819      	ldr	r1, [r3, #0]
  401dc0:	3104      	adds	r1, #4
  401dc2:	4808      	ldr	r0, [pc, #32]	; (401de4 <vTaskPlaceOnEventList+0x7c>)
  401dc4:	4b08      	ldr	r3, [pc, #32]	; (401de8 <vTaskPlaceOnEventList+0x80>)
  401dc6:	4798      	blx	r3
  401dc8:	bd38      	pop	{r3, r4, r5, pc}
  401dca:	bf00      	nop
  401dcc:	2040da24 	.word	0x2040da24
  401dd0:	00400979 	.word	0x00400979
  401dd4:	004009ad 	.word	0x004009ad
  401dd8:	2040daa8 	.word	0x2040daa8
  401ddc:	2040db1c 	.word	0x2040db1c
  401de0:	004015d1 	.word	0x004015d1
  401de4:	2040daf4 	.word	0x2040daf4
  401de8:	00400961 	.word	0x00400961

00401dec <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
  401dec:	b1e8      	cbz	r0, 401e2a <vTaskPlaceOnEventListRestricted+0x3e>
	{
  401dee:	b570      	push	{r4, r5, r6, lr}
  401df0:	4615      	mov	r5, r2
  401df2:	460c      	mov	r4, r1
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
  401df4:	4e16      	ldr	r6, [pc, #88]	; (401e50 <vTaskPlaceOnEventListRestricted+0x64>)
  401df6:	6831      	ldr	r1, [r6, #0]
  401df8:	3118      	adds	r1, #24
  401dfa:	4b16      	ldr	r3, [pc, #88]	; (401e54 <vTaskPlaceOnEventListRestricted+0x68>)
  401dfc:	4798      	blx	r3
		if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
  401dfe:	6830      	ldr	r0, [r6, #0]
  401e00:	3004      	adds	r0, #4
  401e02:	4b15      	ldr	r3, [pc, #84]	; (401e58 <vTaskPlaceOnEventListRestricted+0x6c>)
  401e04:	4798      	blx	r3
  401e06:	b940      	cbnz	r0, 401e1a <vTaskPlaceOnEventListRestricted+0x2e>
			portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
  401e08:	6832      	ldr	r2, [r6, #0]
  401e0a:	4914      	ldr	r1, [pc, #80]	; (401e5c <vTaskPlaceOnEventListRestricted+0x70>)
  401e0c:	680b      	ldr	r3, [r1, #0]
  401e0e:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
  401e10:	2201      	movs	r2, #1
  401e12:	4082      	lsls	r2, r0
  401e14:	ea23 0302 	bic.w	r3, r3, r2
  401e18:	600b      	str	r3, [r1, #0]
			if( xWaitIndefinitely == pdTRUE )
  401e1a:	2d01      	cmp	r5, #1
  401e1c:	d010      	beq.n	401e40 <vTaskPlaceOnEventListRestricted+0x54>
				xTimeToWake = xTickCount + xTicksToWait;
  401e1e:	4b10      	ldr	r3, [pc, #64]	; (401e60 <vTaskPlaceOnEventListRestricted+0x74>)
  401e20:	6818      	ldr	r0, [r3, #0]
				prvAddCurrentTaskToDelayedList( xTimeToWake );
  401e22:	4420      	add	r0, r4
  401e24:	4b0f      	ldr	r3, [pc, #60]	; (401e64 <vTaskPlaceOnEventListRestricted+0x78>)
  401e26:	4798      	blx	r3
  401e28:	bd70      	pop	{r4, r5, r6, pc}
  401e2a:	f04f 0380 	mov.w	r3, #128	; 0x80
  401e2e:	b672      	cpsid	i
  401e30:	f383 8811 	msr	BASEPRI, r3
  401e34:	f3bf 8f6f 	isb	sy
  401e38:	f3bf 8f4f 	dsb	sy
  401e3c:	b662      	cpsie	i
  401e3e:	e7fe      	b.n	401e3e <vTaskPlaceOnEventListRestricted+0x52>
				vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
  401e40:	4b03      	ldr	r3, [pc, #12]	; (401e50 <vTaskPlaceOnEventListRestricted+0x64>)
  401e42:	6819      	ldr	r1, [r3, #0]
  401e44:	3104      	adds	r1, #4
  401e46:	4808      	ldr	r0, [pc, #32]	; (401e68 <vTaskPlaceOnEventListRestricted+0x7c>)
  401e48:	4b02      	ldr	r3, [pc, #8]	; (401e54 <vTaskPlaceOnEventListRestricted+0x68>)
  401e4a:	4798      	blx	r3
  401e4c:	bd70      	pop	{r4, r5, r6, pc}
  401e4e:	bf00      	nop
  401e50:	2040da24 	.word	0x2040da24
  401e54:	00400961 	.word	0x00400961
  401e58:	004009ad 	.word	0x004009ad
  401e5c:	2040daa8 	.word	0x2040daa8
  401e60:	2040db1c 	.word	0x2040db1c
  401e64:	004015d1 	.word	0x004015d1
  401e68:	2040daf4 	.word	0x2040daf4

00401e6c <xTaskRemoveFromEventList>:
{
  401e6c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
  401e6e:	68c3      	ldr	r3, [r0, #12]
  401e70:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
  401e72:	b324      	cbz	r4, 401ebe <xTaskRemoveFromEventList+0x52>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
  401e74:	f104 0518 	add.w	r5, r4, #24
  401e78:	4628      	mov	r0, r5
  401e7a:	4b1a      	ldr	r3, [pc, #104]	; (401ee4 <xTaskRemoveFromEventList+0x78>)
  401e7c:	4798      	blx	r3
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  401e7e:	4b1a      	ldr	r3, [pc, #104]	; (401ee8 <xTaskRemoveFromEventList+0x7c>)
  401e80:	681b      	ldr	r3, [r3, #0]
  401e82:	bb3b      	cbnz	r3, 401ed4 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
  401e84:	1d25      	adds	r5, r4, #4
  401e86:	4628      	mov	r0, r5
  401e88:	4b16      	ldr	r3, [pc, #88]	; (401ee4 <xTaskRemoveFromEventList+0x78>)
  401e8a:	4798      	blx	r3
		prvAddTaskToReadyList( pxUnblockedTCB );
  401e8c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  401e8e:	4a17      	ldr	r2, [pc, #92]	; (401eec <xTaskRemoveFromEventList+0x80>)
  401e90:	6811      	ldr	r1, [r2, #0]
  401e92:	2301      	movs	r3, #1
  401e94:	4083      	lsls	r3, r0
  401e96:	430b      	orrs	r3, r1
  401e98:	6013      	str	r3, [r2, #0]
  401e9a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401e9e:	4629      	mov	r1, r5
  401ea0:	4b13      	ldr	r3, [pc, #76]	; (401ef0 <xTaskRemoveFromEventList+0x84>)
  401ea2:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  401ea6:	4b13      	ldr	r3, [pc, #76]	; (401ef4 <xTaskRemoveFromEventList+0x88>)
  401ea8:	4798      	blx	r3
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
  401eaa:	4b13      	ldr	r3, [pc, #76]	; (401ef8 <xTaskRemoveFromEventList+0x8c>)
  401eac:	681b      	ldr	r3, [r3, #0]
  401eae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  401eb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  401eb2:	429a      	cmp	r2, r3
  401eb4:	d913      	bls.n	401ede <xTaskRemoveFromEventList+0x72>
		xYieldPending = pdTRUE;
  401eb6:	2001      	movs	r0, #1
  401eb8:	4b10      	ldr	r3, [pc, #64]	; (401efc <xTaskRemoveFromEventList+0x90>)
  401eba:	6018      	str	r0, [r3, #0]
  401ebc:	bd38      	pop	{r3, r4, r5, pc}
  401ebe:	f04f 0380 	mov.w	r3, #128	; 0x80
  401ec2:	b672      	cpsid	i
  401ec4:	f383 8811 	msr	BASEPRI, r3
  401ec8:	f3bf 8f6f 	isb	sy
  401ecc:	f3bf 8f4f 	dsb	sy
  401ed0:	b662      	cpsie	i
  401ed2:	e7fe      	b.n	401ed2 <xTaskRemoveFromEventList+0x66>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
  401ed4:	4629      	mov	r1, r5
  401ed6:	480a      	ldr	r0, [pc, #40]	; (401f00 <xTaskRemoveFromEventList+0x94>)
  401ed8:	4b06      	ldr	r3, [pc, #24]	; (401ef4 <xTaskRemoveFromEventList+0x88>)
  401eda:	4798      	blx	r3
  401edc:	e7e5      	b.n	401eaa <xTaskRemoveFromEventList+0x3e>
		xReturn = pdFALSE;
  401ede:	2000      	movs	r0, #0
}
  401ee0:	bd38      	pop	{r3, r4, r5, pc}
  401ee2:	bf00      	nop
  401ee4:	004009ad 	.word	0x004009ad
  401ee8:	2040da9c 	.word	0x2040da9c
  401eec:	2040daa8 	.word	0x2040daa8
  401ef0:	2040da30 	.word	0x2040da30
  401ef4:	00400961 	.word	0x00400961
  401ef8:	2040da24 	.word	0x2040da24
  401efc:	2040db20 	.word	0x2040db20
  401f00:	2040dadc 	.word	0x2040dadc

00401f04 <vTaskSetTimeOutState>:
	configASSERT( pxTimeOut );
  401f04:	b130      	cbz	r0, 401f14 <vTaskSetTimeOutState+0x10>
	pxTimeOut->xOverflowCount = xNumOfOverflows;
  401f06:	4a09      	ldr	r2, [pc, #36]	; (401f2c <vTaskSetTimeOutState+0x28>)
  401f08:	6812      	ldr	r2, [r2, #0]
  401f0a:	6002      	str	r2, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
  401f0c:	4a08      	ldr	r2, [pc, #32]	; (401f30 <vTaskSetTimeOutState+0x2c>)
  401f0e:	6812      	ldr	r2, [r2, #0]
  401f10:	6042      	str	r2, [r0, #4]
  401f12:	4770      	bx	lr
  401f14:	f04f 0380 	mov.w	r3, #128	; 0x80
  401f18:	b672      	cpsid	i
  401f1a:	f383 8811 	msr	BASEPRI, r3
  401f1e:	f3bf 8f6f 	isb	sy
  401f22:	f3bf 8f4f 	dsb	sy
  401f26:	b662      	cpsie	i
  401f28:	e7fe      	b.n	401f28 <vTaskSetTimeOutState+0x24>
  401f2a:	bf00      	nop
  401f2c:	2040dad8 	.word	0x2040dad8
  401f30:	2040db1c 	.word	0x2040db1c

00401f34 <xTaskCheckForTimeOut>:
{
  401f34:	b538      	push	{r3, r4, r5, lr}
	configASSERT( pxTimeOut );
  401f36:	b1c0      	cbz	r0, 401f6a <xTaskCheckForTimeOut+0x36>
  401f38:	4604      	mov	r4, r0
	configASSERT( pxTicksToWait );
  401f3a:	b309      	cbz	r1, 401f80 <xTaskCheckForTimeOut+0x4c>
  401f3c:	460d      	mov	r5, r1
	taskENTER_CRITICAL();
  401f3e:	4b1d      	ldr	r3, [pc, #116]	; (401fb4 <xTaskCheckForTimeOut+0x80>)
  401f40:	4798      	blx	r3
		const TickType_t xConstTickCount = xTickCount;
  401f42:	4b1d      	ldr	r3, [pc, #116]	; (401fb8 <xTaskCheckForTimeOut+0x84>)
  401f44:	681a      	ldr	r2, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
  401f46:	682b      	ldr	r3, [r5, #0]
  401f48:	f1b3 3fff 	cmp.w	r3, #4294967295
  401f4c:	d02e      	beq.n	401fac <xTaskCheckForTimeOut+0x78>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
  401f4e:	491b      	ldr	r1, [pc, #108]	; (401fbc <xTaskCheckForTimeOut+0x88>)
  401f50:	6809      	ldr	r1, [r1, #0]
  401f52:	6820      	ldr	r0, [r4, #0]
  401f54:	4288      	cmp	r0, r1
  401f56:	d002      	beq.n	401f5e <xTaskCheckForTimeOut+0x2a>
  401f58:	6861      	ldr	r1, [r4, #4]
  401f5a:	428a      	cmp	r2, r1
  401f5c:	d228      	bcs.n	401fb0 <xTaskCheckForTimeOut+0x7c>
		else if( ( xConstTickCount - pxTimeOut->xTimeOnEntering ) < *pxTicksToWait )
  401f5e:	6861      	ldr	r1, [r4, #4]
  401f60:	1a50      	subs	r0, r2, r1
  401f62:	4283      	cmp	r3, r0
  401f64:	d817      	bhi.n	401f96 <xTaskCheckForTimeOut+0x62>
			xReturn = pdTRUE;
  401f66:	2401      	movs	r4, #1
  401f68:	e01c      	b.n	401fa4 <xTaskCheckForTimeOut+0x70>
  401f6a:	f04f 0380 	mov.w	r3, #128	; 0x80
  401f6e:	b672      	cpsid	i
  401f70:	f383 8811 	msr	BASEPRI, r3
  401f74:	f3bf 8f6f 	isb	sy
  401f78:	f3bf 8f4f 	dsb	sy
  401f7c:	b662      	cpsie	i
  401f7e:	e7fe      	b.n	401f7e <xTaskCheckForTimeOut+0x4a>
  401f80:	f04f 0380 	mov.w	r3, #128	; 0x80
  401f84:	b672      	cpsid	i
  401f86:	f383 8811 	msr	BASEPRI, r3
  401f8a:	f3bf 8f6f 	isb	sy
  401f8e:	f3bf 8f4f 	dsb	sy
  401f92:	b662      	cpsie	i
  401f94:	e7fe      	b.n	401f94 <xTaskCheckForTimeOut+0x60>
			*pxTicksToWait -= ( xConstTickCount -  pxTimeOut->xTimeOnEntering );
  401f96:	1a9b      	subs	r3, r3, r2
  401f98:	440b      	add	r3, r1
  401f9a:	602b      	str	r3, [r5, #0]
			vTaskSetTimeOutState( pxTimeOut );
  401f9c:	4620      	mov	r0, r4
  401f9e:	4b08      	ldr	r3, [pc, #32]	; (401fc0 <xTaskCheckForTimeOut+0x8c>)
  401fa0:	4798      	blx	r3
			xReturn = pdFALSE;
  401fa2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
  401fa4:	4b07      	ldr	r3, [pc, #28]	; (401fc4 <xTaskCheckForTimeOut+0x90>)
  401fa6:	4798      	blx	r3
}
  401fa8:	4620      	mov	r0, r4
  401faa:	bd38      	pop	{r3, r4, r5, pc}
				xReturn = pdFALSE;
  401fac:	2400      	movs	r4, #0
  401fae:	e7f9      	b.n	401fa4 <xTaskCheckForTimeOut+0x70>
			xReturn = pdTRUE;
  401fb0:	2401      	movs	r4, #1
  401fb2:	e7f7      	b.n	401fa4 <xTaskCheckForTimeOut+0x70>
  401fb4:	00400a91 	.word	0x00400a91
  401fb8:	2040db1c 	.word	0x2040db1c
  401fbc:	2040dad8 	.word	0x2040dad8
  401fc0:	00401f05 	.word	0x00401f05
  401fc4:	00400add 	.word	0x00400add

00401fc8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
  401fc8:	2201      	movs	r2, #1
  401fca:	4b01      	ldr	r3, [pc, #4]	; (401fd0 <vTaskMissedYield+0x8>)
  401fcc:	601a      	str	r2, [r3, #0]
  401fce:	4770      	bx	lr
  401fd0:	2040db20 	.word	0x2040db20

00401fd4 <xTaskGetSchedulerState>:

	BaseType_t xTaskGetSchedulerState( void )
	{
	BaseType_t xReturn;

		if( xSchedulerRunning == pdFALSE )
  401fd4:	4b05      	ldr	r3, [pc, #20]	; (401fec <xTaskGetSchedulerState+0x18>)
  401fd6:	681b      	ldr	r3, [r3, #0]
  401fd8:	b133      	cbz	r3, 401fe8 <xTaskGetSchedulerState+0x14>
		{
			xReturn = taskSCHEDULER_NOT_STARTED;
		}
		else
		{
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
  401fda:	4b05      	ldr	r3, [pc, #20]	; (401ff0 <xTaskGetSchedulerState+0x1c>)
  401fdc:	681b      	ldr	r3, [r3, #0]
			{
				xReturn = taskSCHEDULER_RUNNING;
			}
			else
			{
				xReturn = taskSCHEDULER_SUSPENDED;
  401fde:	2b00      	cmp	r3, #0
  401fe0:	bf0c      	ite	eq
  401fe2:	2002      	moveq	r0, #2
  401fe4:	2000      	movne	r0, #0
  401fe6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
  401fe8:	2001      	movs	r0, #1
			}
		}

		return xReturn;
	}
  401fea:	4770      	bx	lr
  401fec:	2040daf0 	.word	0x2040daf0
  401ff0:	2040da9c 	.word	0x2040da9c

00401ff4 <vTaskPriorityInherit>:
	{
	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL. */
		if( pxMutexHolder != NULL )
  401ff4:	2800      	cmp	r0, #0
  401ff6:	d044      	beq.n	402082 <vTaskPriorityInherit+0x8e>
	{
  401ff8:	b538      	push	{r3, r4, r5, lr}
  401ffa:	4604      	mov	r4, r0
		{
			/* If the holder of the mutex has a priority below the priority of
			the task attempting to obtain the mutex then it will temporarily
			inherit the priority of the task attempting to obtain the mutex. */
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
  401ffc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  401ffe:	4921      	ldr	r1, [pc, #132]	; (402084 <vTaskPriorityInherit+0x90>)
  402000:	6809      	ldr	r1, [r1, #0]
  402002:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  402004:	428a      	cmp	r2, r1
  402006:	d214      	bcs.n	402032 <vTaskPriorityInherit+0x3e>
			{
				/* Adjust the mutex holder state to account for its new
				priority.  Only reset the event list item value if the value is
				not	being used for anything else. */
				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
  402008:	6981      	ldr	r1, [r0, #24]
  40200a:	2900      	cmp	r1, #0
  40200c:	db05      	blt.n	40201a <vTaskPriorityInherit+0x26>
				{
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  40200e:	491d      	ldr	r1, [pc, #116]	; (402084 <vTaskPriorityInherit+0x90>)
  402010:	6809      	ldr	r1, [r1, #0]
  402012:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  402014:	f1c1 0105 	rsb	r1, r1, #5
  402018:	6181      	str	r1, [r0, #24]
					mtCOVERAGE_TEST_MARKER();
				}

				/* If the task being modified is in the ready state it will need
				to be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListItem ) ) != pdFALSE )
  40201a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  40201e:	491a      	ldr	r1, [pc, #104]	; (402088 <vTaskPriorityInherit+0x94>)
  402020:	eb01 0282 	add.w	r2, r1, r2, lsl #2
  402024:	6961      	ldr	r1, [r4, #20]
  402026:	4291      	cmp	r1, r2
  402028:	d004      	beq.n	402034 <vTaskPriorityInherit+0x40>
					prvAddTaskToReadyList( pxTCB );
				}
				else
				{
					/* Just inherit the priority. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
  40202a:	4a16      	ldr	r2, [pc, #88]	; (402084 <vTaskPriorityInherit+0x90>)
  40202c:	6812      	ldr	r2, [r2, #0]
  40202e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
  402030:	62e2      	str	r2, [r4, #44]	; 0x2c
  402032:	bd38      	pop	{r3, r4, r5, pc}
					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
  402034:	1d25      	adds	r5, r4, #4
  402036:	4628      	mov	r0, r5
  402038:	4b14      	ldr	r3, [pc, #80]	; (40208c <vTaskPriorityInherit+0x98>)
  40203a:	4798      	blx	r3
  40203c:	b970      	cbnz	r0, 40205c <vTaskPriorityInherit+0x68>
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
  40203e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  402040:	eb03 0183 	add.w	r1, r3, r3, lsl #2
  402044:	4a10      	ldr	r2, [pc, #64]	; (402088 <vTaskPriorityInherit+0x94>)
  402046:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  40204a:	b93a      	cbnz	r2, 40205c <vTaskPriorityInherit+0x68>
  40204c:	4810      	ldr	r0, [pc, #64]	; (402090 <vTaskPriorityInherit+0x9c>)
  40204e:	6802      	ldr	r2, [r0, #0]
  402050:	2101      	movs	r1, #1
  402052:	fa01 f303 	lsl.w	r3, r1, r3
  402056:	ea22 0303 	bic.w	r3, r2, r3
  40205a:	6003      	str	r3, [r0, #0]
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
  40205c:	4b09      	ldr	r3, [pc, #36]	; (402084 <vTaskPriorityInherit+0x90>)
  40205e:	681b      	ldr	r3, [r3, #0]
  402060:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
  402062:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxTCB );
  402064:	4a0a      	ldr	r2, [pc, #40]	; (402090 <vTaskPriorityInherit+0x9c>)
  402066:	6811      	ldr	r1, [r2, #0]
  402068:	2301      	movs	r3, #1
  40206a:	4083      	lsls	r3, r0
  40206c:	430b      	orrs	r3, r1
  40206e:	6013      	str	r3, [r2, #0]
  402070:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402074:	4629      	mov	r1, r5
  402076:	4b04      	ldr	r3, [pc, #16]	; (402088 <vTaskPriorityInherit+0x94>)
  402078:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  40207c:	4b05      	ldr	r3, [pc, #20]	; (402094 <vTaskPriorityInherit+0xa0>)
  40207e:	4798      	blx	r3
  402080:	bd38      	pop	{r3, r4, r5, pc}
  402082:	4770      	bx	lr
  402084:	2040da24 	.word	0x2040da24
  402088:	2040da30 	.word	0x2040da30
  40208c:	004009ad 	.word	0x004009ad
  402090:	2040daa8 	.word	0x2040daa8
  402094:	00400961 	.word	0x00400961

00402098 <xTaskPriorityDisinherit>:
	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
	{
	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
	BaseType_t xReturn = pdFALSE;

		if( pxMutexHolder != NULL )
  402098:	2800      	cmp	r0, #0
  40209a:	d04d      	beq.n	402138 <xTaskPriorityDisinherit+0xa0>
	{
  40209c:	b538      	push	{r3, r4, r5, lr}
  40209e:	4604      	mov	r4, r0
		{
			/* A task can only have an inherited priority if it holds the mutex.
			If the mutex is held by a task then it cannot be given from an
			interrupt, and if a mutex is given by the holding task then it must
			be the running state task. */
			configASSERT( pxTCB == pxCurrentTCB );
  4020a0:	4a27      	ldr	r2, [pc, #156]	; (402140 <xTaskPriorityDisinherit+0xa8>)
  4020a2:	6812      	ldr	r2, [r2, #0]
  4020a4:	4290      	cmp	r0, r2
  4020a6:	d00a      	beq.n	4020be <xTaskPriorityDisinherit+0x26>
  4020a8:	f04f 0380 	mov.w	r3, #128	; 0x80
  4020ac:	b672      	cpsid	i
  4020ae:	f383 8811 	msr	BASEPRI, r3
  4020b2:	f3bf 8f6f 	isb	sy
  4020b6:	f3bf 8f4f 	dsb	sy
  4020ba:	b662      	cpsie	i
  4020bc:	e7fe      	b.n	4020bc <xTaskPriorityDisinherit+0x24>

			configASSERT( pxTCB->uxMutexesHeld );
  4020be:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
  4020c0:	b952      	cbnz	r2, 4020d8 <xTaskPriorityDisinherit+0x40>
  4020c2:	f04f 0380 	mov.w	r3, #128	; 0x80
  4020c6:	b672      	cpsid	i
  4020c8:	f383 8811 	msr	BASEPRI, r3
  4020cc:	f3bf 8f6f 	isb	sy
  4020d0:	f3bf 8f4f 	dsb	sy
  4020d4:	b662      	cpsie	i
  4020d6:	e7fe      	b.n	4020d6 <xTaskPriorityDisinherit+0x3e>
			( pxTCB->uxMutexesHeld )--;
  4020d8:	3a01      	subs	r2, #1
  4020da:	64c2      	str	r2, [r0, #76]	; 0x4c

			/* Has the holder of the mutex inherited the priority of another
			task? */
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
  4020dc:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
  4020de:	6ca1      	ldr	r1, [r4, #72]	; 0x48
			{
				/* Only disinherit if no other mutexes are held. */
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
  4020e0:	4288      	cmp	r0, r1
  4020e2:	d02b      	beq.n	40213c <xTaskPriorityDisinherit+0xa4>
  4020e4:	bb52      	cbnz	r2, 40213c <xTaskPriorityDisinherit+0xa4>
					/* A task can only have an inherited priority if it holds
					the mutex.  If the mutex is held by a task then it cannot be
					given from an interrupt, and if a mutex is given by the
					holding	task then it must be the running state task.  Remove
					the	holding task from the ready	list. */
					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
  4020e6:	1d25      	adds	r5, r4, #4
  4020e8:	4628      	mov	r0, r5
  4020ea:	4b16      	ldr	r3, [pc, #88]	; (402144 <xTaskPriorityDisinherit+0xac>)
  4020ec:	4798      	blx	r3
  4020ee:	b968      	cbnz	r0, 40210c <xTaskPriorityDisinherit+0x74>
					{
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
  4020f0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  4020f2:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4020f6:	4b14      	ldr	r3, [pc, #80]	; (402148 <xTaskPriorityDisinherit+0xb0>)
  4020f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  4020fc:	b933      	cbnz	r3, 40210c <xTaskPriorityDisinherit+0x74>
  4020fe:	4813      	ldr	r0, [pc, #76]	; (40214c <xTaskPriorityDisinherit+0xb4>)
  402100:	6803      	ldr	r3, [r0, #0]
  402102:	2201      	movs	r2, #1
  402104:	408a      	lsls	r2, r1
  402106:	ea23 0302 	bic.w	r3, r3, r2
  40210a:	6003      	str	r3, [r0, #0]
					}

					/* Disinherit the priority before adding the task into the
					new	ready list. */
					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
					pxTCB->uxPriority = pxTCB->uxBasePriority;
  40210c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
  40210e:	62e0      	str	r0, [r4, #44]	; 0x2c

					/* Reset the event list item value.  It cannot be in use for
					any other purpose if this task is running, and it must be
					running to give back the mutex. */
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
  402110:	f1c0 0305 	rsb	r3, r0, #5
  402114:	61a3      	str	r3, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
  402116:	4a0d      	ldr	r2, [pc, #52]	; (40214c <xTaskPriorityDisinherit+0xb4>)
  402118:	6811      	ldr	r1, [r2, #0]
  40211a:	2401      	movs	r4, #1
  40211c:	fa04 f300 	lsl.w	r3, r4, r0
  402120:	430b      	orrs	r3, r1
  402122:	6013      	str	r3, [r2, #0]
  402124:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402128:	4629      	mov	r1, r5
  40212a:	4b07      	ldr	r3, [pc, #28]	; (402148 <xTaskPriorityDisinherit+0xb0>)
  40212c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  402130:	4b07      	ldr	r3, [pc, #28]	; (402150 <xTaskPriorityDisinherit+0xb8>)
  402132:	4798      	blx	r3
					in an order different to that in which they were taken.
					If a context switch did not occur when the first mutex was
					returned, even if a task was waiting on it, then a context
					switch should occur when the last mutex is returned whether
					a task is waiting on it or not. */
					xReturn = pdTRUE;
  402134:	4620      	mov	r0, r4
  402136:	bd38      	pop	{r3, r4, r5, pc}
	BaseType_t xReturn = pdFALSE;
  402138:	2000      	movs	r0, #0
  40213a:	4770      	bx	lr
  40213c:	2000      	movs	r0, #0
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
  40213e:	bd38      	pop	{r3, r4, r5, pc}
  402140:	2040da24 	.word	0x2040da24
  402144:	004009ad 	.word	0x004009ad
  402148:	2040da30 	.word	0x2040da30
  40214c:	2040daa8 	.word	0x2040daa8
  402150:	00400961 	.word	0x00400961

00402154 <pvTaskIncrementMutexHeldCount>:

	void *pvTaskIncrementMutexHeldCount( void )
	{
		/* If xSemaphoreCreateMutex() is called before any tasks have been created
		then pxCurrentTCB will be NULL. */
		if( pxCurrentTCB != NULL )
  402154:	4b05      	ldr	r3, [pc, #20]	; (40216c <pvTaskIncrementMutexHeldCount+0x18>)
  402156:	681b      	ldr	r3, [r3, #0]
  402158:	b123      	cbz	r3, 402164 <pvTaskIncrementMutexHeldCount+0x10>
		{
			( pxCurrentTCB->uxMutexesHeld )++;
  40215a:	4b04      	ldr	r3, [pc, #16]	; (40216c <pvTaskIncrementMutexHeldCount+0x18>)
  40215c:	681a      	ldr	r2, [r3, #0]
  40215e:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
  402160:	3301      	adds	r3, #1
  402162:	64d3      	str	r3, [r2, #76]	; 0x4c
		}

		return pxCurrentTCB;
  402164:	4b01      	ldr	r3, [pc, #4]	; (40216c <pvTaskIncrementMutexHeldCount+0x18>)
  402166:	6818      	ldr	r0, [r3, #0]
	}
  402168:	4770      	bx	lr
  40216a:	bf00      	nop
  40216c:	2040da24 	.word	0x2040da24

00402170 <prvInsertTimerInActiveList>:
	return xTimeNow;
}
/*-----------------------------------------------------------*/

static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiryTime, const TickType_t xTimeNow, const TickType_t xCommandTime )
{
  402170:	b508      	push	{r3, lr}
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  402172:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  402174:	6100      	str	r0, [r0, #16]

	if( xNextExpiryTime <= xTimeNow )
  402176:	4291      	cmp	r1, r2
  402178:	d80c      	bhi.n	402194 <prvInsertTimerInActiveList+0x24>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( xTimeNow - xCommandTime ) >= pxTimer->xTimerPeriodInTicks )
  40217a:	1ad2      	subs	r2, r2, r3
  40217c:	6983      	ldr	r3, [r0, #24]
  40217e:	429a      	cmp	r2, r3
  402180:	d301      	bcc.n	402186 <prvInsertTimerInActiveList+0x16>
		{
			/* The time between a command being issued and the command being
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
  402182:	2001      	movs	r0, #1
  402184:	bd08      	pop	{r3, pc}
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  402186:	1d01      	adds	r1, r0, #4
  402188:	4b09      	ldr	r3, [pc, #36]	; (4021b0 <prvInsertTimerInActiveList+0x40>)
  40218a:	6818      	ldr	r0, [r3, #0]
  40218c:	4b09      	ldr	r3, [pc, #36]	; (4021b4 <prvInsertTimerInActiveList+0x44>)
  40218e:	4798      	blx	r3
BaseType_t xProcessTimerNow = pdFALSE;
  402190:	2000      	movs	r0, #0
  402192:	bd08      	pop	{r3, pc}
		}
	}
	else
	{
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
  402194:	429a      	cmp	r2, r3
  402196:	d203      	bcs.n	4021a0 <prvInsertTimerInActiveList+0x30>
  402198:	4299      	cmp	r1, r3
  40219a:	d301      	bcc.n	4021a0 <prvInsertTimerInActiveList+0x30>
		{
			/* If, since the command was issued, the tick count has overflowed
			but the expiry time has not, then the timer must have already passed
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
  40219c:	2001      	movs	r0, #1
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
		}
	}

	return xProcessTimerNow;
}
  40219e:	bd08      	pop	{r3, pc}
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
  4021a0:	1d01      	adds	r1, r0, #4
  4021a2:	4b05      	ldr	r3, [pc, #20]	; (4021b8 <prvInsertTimerInActiveList+0x48>)
  4021a4:	6818      	ldr	r0, [r3, #0]
  4021a6:	4b03      	ldr	r3, [pc, #12]	; (4021b4 <prvInsertTimerInActiveList+0x44>)
  4021a8:	4798      	blx	r3
BaseType_t xProcessTimerNow = pdFALSE;
  4021aa:	2000      	movs	r0, #0
  4021ac:	bd08      	pop	{r3, pc}
  4021ae:	bf00      	nop
  4021b0:	2040db28 	.word	0x2040db28
  4021b4:	00400979 	.word	0x00400979
  4021b8:	2040db24 	.word	0x2040db24

004021bc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
  4021bc:	b570      	push	{r4, r5, r6, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
  4021be:	4b15      	ldr	r3, [pc, #84]	; (402214 <prvCheckForValidListAndQueue+0x58>)
  4021c0:	4798      	blx	r3
	{
		if( xTimerQueue == NULL )
  4021c2:	4b15      	ldr	r3, [pc, #84]	; (402218 <prvCheckForValidListAndQueue+0x5c>)
  4021c4:	681b      	ldr	r3, [r3, #0]
  4021c6:	b113      	cbz	r3, 4021ce <prvCheckForValidListAndQueue+0x12>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
  4021c8:	4b14      	ldr	r3, [pc, #80]	; (40221c <prvCheckForValidListAndQueue+0x60>)
  4021ca:	4798      	blx	r3
  4021cc:	bd70      	pop	{r4, r5, r6, pc}
			vListInitialise( &xActiveTimerList1 );
  4021ce:	4d14      	ldr	r5, [pc, #80]	; (402220 <prvCheckForValidListAndQueue+0x64>)
  4021d0:	4628      	mov	r0, r5
  4021d2:	4e14      	ldr	r6, [pc, #80]	; (402224 <prvCheckForValidListAndQueue+0x68>)
  4021d4:	47b0      	blx	r6
			vListInitialise( &xActiveTimerList2 );
  4021d6:	4c14      	ldr	r4, [pc, #80]	; (402228 <prvCheckForValidListAndQueue+0x6c>)
  4021d8:	4620      	mov	r0, r4
  4021da:	47b0      	blx	r6
			pxCurrentTimerList = &xActiveTimerList1;
  4021dc:	4b13      	ldr	r3, [pc, #76]	; (40222c <prvCheckForValidListAndQueue+0x70>)
  4021de:	601d      	str	r5, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
  4021e0:	4b13      	ldr	r3, [pc, #76]	; (402230 <prvCheckForValidListAndQueue+0x74>)
  4021e2:	601c      	str	r4, [r3, #0]
			xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage_t ) );
  4021e4:	2200      	movs	r2, #0
  4021e6:	2110      	movs	r1, #16
  4021e8:	2005      	movs	r0, #5
  4021ea:	4b12      	ldr	r3, [pc, #72]	; (402234 <prvCheckForValidListAndQueue+0x78>)
  4021ec:	4798      	blx	r3
  4021ee:	4b0a      	ldr	r3, [pc, #40]	; (402218 <prvCheckForValidListAndQueue+0x5c>)
  4021f0:	6018      	str	r0, [r3, #0]
			configASSERT( xTimerQueue );
  4021f2:	b118      	cbz	r0, 4021fc <prvCheckForValidListAndQueue+0x40>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
  4021f4:	4910      	ldr	r1, [pc, #64]	; (402238 <prvCheckForValidListAndQueue+0x7c>)
  4021f6:	4b11      	ldr	r3, [pc, #68]	; (40223c <prvCheckForValidListAndQueue+0x80>)
  4021f8:	4798      	blx	r3
  4021fa:	e7e5      	b.n	4021c8 <prvCheckForValidListAndQueue+0xc>
  4021fc:	f04f 0380 	mov.w	r3, #128	; 0x80
  402200:	b672      	cpsid	i
  402202:	f383 8811 	msr	BASEPRI, r3
  402206:	f3bf 8f6f 	isb	sy
  40220a:	f3bf 8f4f 	dsb	sy
  40220e:	b662      	cpsie	i
  402210:	e7fe      	b.n	402210 <prvCheckForValidListAndQueue+0x54>
  402212:	bf00      	nop
  402214:	00400a91 	.word	0x00400a91
  402218:	2040db58 	.word	0x2040db58
  40221c:	00400add 	.word	0x00400add
  402220:	2040db2c 	.word	0x2040db2c
  402224:	00400945 	.word	0x00400945
  402228:	2040db40 	.word	0x2040db40
  40222c:	2040db24 	.word	0x2040db24
  402230:	2040db28 	.word	0x2040db28
  402234:	00400fe9 	.word	0x00400fe9
  402238:	0040cd54 	.word	0x0040cd54
  40223c:	00401519 	.word	0x00401519

00402240 <xTimerCreateTimerTask>:
{
  402240:	b510      	push	{r4, lr}
  402242:	b084      	sub	sp, #16
	prvCheckForValidListAndQueue();
  402244:	4b0f      	ldr	r3, [pc, #60]	; (402284 <xTimerCreateTimerTask+0x44>)
  402246:	4798      	blx	r3
	if( xTimerQueue != NULL )
  402248:	4b0f      	ldr	r3, [pc, #60]	; (402288 <xTimerCreateTimerTask+0x48>)
  40224a:	681b      	ldr	r3, [r3, #0]
  40224c:	b173      	cbz	r3, 40226c <xTimerCreateTimerTask+0x2c>
			xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
  40224e:	2300      	movs	r3, #0
  402250:	9303      	str	r3, [sp, #12]
  402252:	9302      	str	r3, [sp, #8]
  402254:	9301      	str	r3, [sp, #4]
  402256:	2204      	movs	r2, #4
  402258:	9200      	str	r2, [sp, #0]
  40225a:	f44f 7282 	mov.w	r2, #260	; 0x104
  40225e:	490b      	ldr	r1, [pc, #44]	; (40228c <xTimerCreateTimerTask+0x4c>)
  402260:	480b      	ldr	r0, [pc, #44]	; (402290 <xTimerCreateTimerTask+0x50>)
  402262:	4c0c      	ldr	r4, [pc, #48]	; (402294 <xTimerCreateTimerTask+0x54>)
  402264:	47a0      	blx	r4
	configASSERT( xReturn );
  402266:	b108      	cbz	r0, 40226c <xTimerCreateTimerTask+0x2c>
}
  402268:	b004      	add	sp, #16
  40226a:	bd10      	pop	{r4, pc}
  40226c:	f04f 0380 	mov.w	r3, #128	; 0x80
  402270:	b672      	cpsid	i
  402272:	f383 8811 	msr	BASEPRI, r3
  402276:	f3bf 8f6f 	isb	sy
  40227a:	f3bf 8f4f 	dsb	sy
  40227e:	b662      	cpsie	i
  402280:	e7fe      	b.n	402280 <xTimerCreateTimerTask+0x40>
  402282:	bf00      	nop
  402284:	004021bd 	.word	0x004021bd
  402288:	2040db58 	.word	0x2040db58
  40228c:	0040cd5c 	.word	0x0040cd5c
  402290:	004023c1 	.word	0x004023c1
  402294:	00401629 	.word	0x00401629

00402298 <xTimerGenericCommand>:
	configASSERT( xTimer );
  402298:	b1d8      	cbz	r0, 4022d2 <xTimerGenericCommand+0x3a>
{
  40229a:	b530      	push	{r4, r5, lr}
  40229c:	b085      	sub	sp, #20
  40229e:	4615      	mov	r5, r2
  4022a0:	4604      	mov	r4, r0
	if( xTimerQueue != NULL )
  4022a2:	4a15      	ldr	r2, [pc, #84]	; (4022f8 <xTimerGenericCommand+0x60>)
  4022a4:	6810      	ldr	r0, [r2, #0]
  4022a6:	b320      	cbz	r0, 4022f2 <xTimerGenericCommand+0x5a>
  4022a8:	461a      	mov	r2, r3
		xMessage.xMessageID = xCommandID;
  4022aa:	9100      	str	r1, [sp, #0]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
  4022ac:	9501      	str	r5, [sp, #4]
		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
  4022ae:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
  4022b0:	2905      	cmp	r1, #5
  4022b2:	dc19      	bgt.n	4022e8 <xTimerGenericCommand+0x50>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
  4022b4:	4b11      	ldr	r3, [pc, #68]	; (4022fc <xTimerGenericCommand+0x64>)
  4022b6:	4798      	blx	r3
  4022b8:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
  4022ba:	f04f 0300 	mov.w	r3, #0
  4022be:	bf0c      	ite	eq
  4022c0:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
  4022c2:	461a      	movne	r2, r3
  4022c4:	4669      	mov	r1, sp
  4022c6:	480c      	ldr	r0, [pc, #48]	; (4022f8 <xTimerGenericCommand+0x60>)
  4022c8:	6800      	ldr	r0, [r0, #0]
  4022ca:	4c0d      	ldr	r4, [pc, #52]	; (402300 <xTimerGenericCommand+0x68>)
  4022cc:	47a0      	blx	r4
}
  4022ce:	b005      	add	sp, #20
  4022d0:	bd30      	pop	{r4, r5, pc}
  4022d2:	f04f 0380 	mov.w	r3, #128	; 0x80
  4022d6:	b672      	cpsid	i
  4022d8:	f383 8811 	msr	BASEPRI, r3
  4022dc:	f3bf 8f6f 	isb	sy
  4022e0:	f3bf 8f4f 	dsb	sy
  4022e4:	b662      	cpsie	i
  4022e6:	e7fe      	b.n	4022e6 <xTimerGenericCommand+0x4e>
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
  4022e8:	2300      	movs	r3, #0
  4022ea:	4669      	mov	r1, sp
  4022ec:	4c05      	ldr	r4, [pc, #20]	; (402304 <xTimerGenericCommand+0x6c>)
  4022ee:	47a0      	blx	r4
  4022f0:	e7ed      	b.n	4022ce <xTimerGenericCommand+0x36>
BaseType_t xReturn = pdFAIL;
  4022f2:	2000      	movs	r0, #0
	return xReturn;
  4022f4:	e7eb      	b.n	4022ce <xTimerGenericCommand+0x36>
  4022f6:	bf00      	nop
  4022f8:	2040db58 	.word	0x2040db58
  4022fc:	00401fd5 	.word	0x00401fd5
  402300:	00401065 	.word	0x00401065
  402304:	00401249 	.word	0x00401249

00402308 <prvSampleTimeNow>:
{
  402308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40230c:	b082      	sub	sp, #8
  40230e:	4680      	mov	r8, r0
	xTimeNow = xTaskGetTickCount();
  402310:	4b24      	ldr	r3, [pc, #144]	; (4023a4 <prvSampleTimeNow+0x9c>)
  402312:	4798      	blx	r3
  402314:	4607      	mov	r7, r0
	if( xTimeNow < xLastTime )
  402316:	4b24      	ldr	r3, [pc, #144]	; (4023a8 <prvSampleTimeNow+0xa0>)
  402318:	681b      	ldr	r3, [r3, #0]
  40231a:	4298      	cmp	r0, r3
  40231c:	d31b      	bcc.n	402356 <prvSampleTimeNow+0x4e>
		*pxTimerListsWereSwitched = pdFALSE;
  40231e:	2300      	movs	r3, #0
  402320:	f8c8 3000 	str.w	r3, [r8]
	xLastTime = xTimeNow;
  402324:	4b20      	ldr	r3, [pc, #128]	; (4023a8 <prvSampleTimeNow+0xa0>)
  402326:	601f      	str	r7, [r3, #0]
}
  402328:	4638      	mov	r0, r7
  40232a:	b002      	add	sp, #8
  40232c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
  402330:	2100      	movs	r1, #0
  402332:	9100      	str	r1, [sp, #0]
  402334:	460b      	mov	r3, r1
  402336:	4652      	mov	r2, sl
  402338:	4620      	mov	r0, r4
  40233a:	4c1c      	ldr	r4, [pc, #112]	; (4023ac <prvSampleTimeNow+0xa4>)
  40233c:	47a0      	blx	r4
				configASSERT( xResult );
  40233e:	b960      	cbnz	r0, 40235a <prvSampleTimeNow+0x52>
  402340:	f04f 0380 	mov.w	r3, #128	; 0x80
  402344:	b672      	cpsid	i
  402346:	f383 8811 	msr	BASEPRI, r3
  40234a:	f3bf 8f6f 	isb	sy
  40234e:	f3bf 8f4f 	dsb	sy
  402352:	b662      	cpsie	i
  402354:	e7fe      	b.n	402354 <prvSampleTimeNow+0x4c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
  402356:	4d16      	ldr	r5, [pc, #88]	; (4023b0 <prvSampleTimeNow+0xa8>)
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
  402358:	4e16      	ldr	r6, [pc, #88]	; (4023b4 <prvSampleTimeNow+0xac>)
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
  40235a:	682b      	ldr	r3, [r5, #0]
  40235c:	681a      	ldr	r2, [r3, #0]
  40235e:	b1c2      	cbz	r2, 402392 <prvSampleTimeNow+0x8a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  402360:	68db      	ldr	r3, [r3, #12]
  402362:	f8d3 a000 	ldr.w	sl, [r3]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
  402366:	68dc      	ldr	r4, [r3, #12]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
  402368:	f104 0904 	add.w	r9, r4, #4
  40236c:	4648      	mov	r0, r9
  40236e:	47b0      	blx	r6
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
  402370:	6a63      	ldr	r3, [r4, #36]	; 0x24
  402372:	4620      	mov	r0, r4
  402374:	4798      	blx	r3
		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
  402376:	69e3      	ldr	r3, [r4, #28]
  402378:	2b01      	cmp	r3, #1
  40237a:	d1ee      	bne.n	40235a <prvSampleTimeNow+0x52>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
  40237c:	69a3      	ldr	r3, [r4, #24]
  40237e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
  402380:	459a      	cmp	sl, r3
  402382:	d2d5      	bcs.n	402330 <prvSampleTimeNow+0x28>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
  402384:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  402386:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
  402388:	4649      	mov	r1, r9
  40238a:	6828      	ldr	r0, [r5, #0]
  40238c:	4b0a      	ldr	r3, [pc, #40]	; (4023b8 <prvSampleTimeNow+0xb0>)
  40238e:	4798      	blx	r3
  402390:	e7e3      	b.n	40235a <prvSampleTimeNow+0x52>
	pxCurrentTimerList = pxOverflowTimerList;
  402392:	4a0a      	ldr	r2, [pc, #40]	; (4023bc <prvSampleTimeNow+0xb4>)
  402394:	6810      	ldr	r0, [r2, #0]
  402396:	4906      	ldr	r1, [pc, #24]	; (4023b0 <prvSampleTimeNow+0xa8>)
  402398:	6008      	str	r0, [r1, #0]
	pxOverflowTimerList = pxTemp;
  40239a:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
  40239c:	2301      	movs	r3, #1
  40239e:	f8c8 3000 	str.w	r3, [r8]
  4023a2:	e7bf      	b.n	402324 <prvSampleTimeNow+0x1c>
  4023a4:	004018f9 	.word	0x004018f9
  4023a8:	2040db54 	.word	0x2040db54
  4023ac:	00402299 	.word	0x00402299
  4023b0:	2040db24 	.word	0x2040db24
  4023b4:	004009ad 	.word	0x004009ad
  4023b8:	00400979 	.word	0x00400979
  4023bc:	2040db28 	.word	0x2040db28

004023c0 <prvTimerTask>:
{
  4023c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4023c4:	b088      	sub	sp, #32
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  4023c6:	4e75      	ldr	r6, [pc, #468]	; (40259c <prvTimerTask+0x1dc>)
	vTaskSuspendAll();
  4023c8:	4f75      	ldr	r7, [pc, #468]	; (4025a0 <prvTimerTask+0x1e0>)
					portYIELD_WITHIN_API();
  4023ca:	f8df 91fc 	ldr.w	r9, [pc, #508]	; 4025c8 <prvTimerTask+0x208>
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
  4023ce:	f8df 81fc 	ldr.w	r8, [pc, #508]	; 4025cc <prvTimerTask+0x20c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  4023d2:	6833      	ldr	r3, [r6, #0]
	if( *pxListWasEmpty == pdFALSE )
  4023d4:	681a      	ldr	r2, [r3, #0]
  4023d6:	2a00      	cmp	r2, #0
  4023d8:	f000 80ce 	beq.w	402578 <prvTimerTask+0x1b8>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  4023dc:	68db      	ldr	r3, [r3, #12]
  4023de:	681c      	ldr	r4, [r3, #0]
	vTaskSuspendAll();
  4023e0:	47b8      	blx	r7
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
  4023e2:	a804      	add	r0, sp, #16
  4023e4:	4b6f      	ldr	r3, [pc, #444]	; (4025a4 <prvTimerTask+0x1e4>)
  4023e6:	4798      	blx	r3
  4023e8:	4605      	mov	r5, r0
		if( xTimerListsWereSwitched == pdFALSE )
  4023ea:	9b04      	ldr	r3, [sp, #16]
  4023ec:	2b00      	cmp	r3, #0
  4023ee:	d144      	bne.n	40247a <prvTimerTask+0xba>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
  4023f0:	42a0      	cmp	r0, r4
  4023f2:	d212      	bcs.n	40241a <prvTimerTask+0x5a>
  4023f4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
  4023f6:	1b61      	subs	r1, r4, r5
  4023f8:	4b6b      	ldr	r3, [pc, #428]	; (4025a8 <prvTimerTask+0x1e8>)
  4023fa:	6818      	ldr	r0, [r3, #0]
  4023fc:	4b6b      	ldr	r3, [pc, #428]	; (4025ac <prvTimerTask+0x1ec>)
  4023fe:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
  402400:	4b6b      	ldr	r3, [pc, #428]	; (4025b0 <prvTimerTask+0x1f0>)
  402402:	4798      	blx	r3
  402404:	2800      	cmp	r0, #0
  402406:	d13a      	bne.n	40247e <prvTimerTask+0xbe>
					portYIELD_WITHIN_API();
  402408:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  40240c:	f8c9 3000 	str.w	r3, [r9]
  402410:	f3bf 8f4f 	dsb	sy
  402414:	f3bf 8f6f 	isb	sy
  402418:	e031      	b.n	40247e <prvTimerTask+0xbe>
				( void ) xTaskResumeAll();
  40241a:	4b65      	ldr	r3, [pc, #404]	; (4025b0 <prvTimerTask+0x1f0>)
  40241c:	4798      	blx	r3
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
  40241e:	6833      	ldr	r3, [r6, #0]
  402420:	68db      	ldr	r3, [r3, #12]
  402422:	f8d3 a00c 	ldr.w	sl, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
  402426:	f10a 0004 	add.w	r0, sl, #4
  40242a:	47c0      	blx	r8
	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
  40242c:	f8da 301c 	ldr.w	r3, [sl, #28]
  402430:	2b01      	cmp	r3, #1
  402432:	d004      	beq.n	40243e <prvTimerTask+0x7e>
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
  402434:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
  402438:	4650      	mov	r0, sl
  40243a:	4798      	blx	r3
  40243c:	e01f      	b.n	40247e <prvTimerTask+0xbe>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) == pdTRUE )
  40243e:	f8da 1018 	ldr.w	r1, [sl, #24]
  402442:	4623      	mov	r3, r4
  402444:	462a      	mov	r2, r5
  402446:	4421      	add	r1, r4
  402448:	4650      	mov	r0, sl
  40244a:	4d5a      	ldr	r5, [pc, #360]	; (4025b4 <prvTimerTask+0x1f4>)
  40244c:	47a8      	blx	r5
  40244e:	2801      	cmp	r0, #1
  402450:	d1f0      	bne.n	402434 <prvTimerTask+0x74>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
  402452:	2100      	movs	r1, #0
  402454:	9100      	str	r1, [sp, #0]
  402456:	460b      	mov	r3, r1
  402458:	4622      	mov	r2, r4
  40245a:	4650      	mov	r0, sl
  40245c:	4c56      	ldr	r4, [pc, #344]	; (4025b8 <prvTimerTask+0x1f8>)
  40245e:	47a0      	blx	r4
			configASSERT( xResult );
  402460:	2800      	cmp	r0, #0
  402462:	d1e7      	bne.n	402434 <prvTimerTask+0x74>
  402464:	f04f 0380 	mov.w	r3, #128	; 0x80
  402468:	b672      	cpsid	i
  40246a:	f383 8811 	msr	BASEPRI, r3
  40246e:	f3bf 8f6f 	isb	sy
  402472:	f3bf 8f4f 	dsb	sy
  402476:	b662      	cpsie	i
  402478:	e7fe      	b.n	402478 <prvTimerTask+0xb8>
			( void ) xTaskResumeAll();
  40247a:	4b4d      	ldr	r3, [pc, #308]	; (4025b0 <prvTimerTask+0x1f0>)
  40247c:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
  40247e:	4d4a      	ldr	r5, [pc, #296]	; (4025a8 <prvTimerTask+0x1e8>)
  402480:	4c4e      	ldr	r4, [pc, #312]	; (4025bc <prvTimerTask+0x1fc>)
  402482:	e006      	b.n	402492 <prvTimerTask+0xd2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
  402484:	9907      	ldr	r1, [sp, #28]
  402486:	9806      	ldr	r0, [sp, #24]
  402488:	9b05      	ldr	r3, [sp, #20]
  40248a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
  40248c:	9b04      	ldr	r3, [sp, #16]
  40248e:	2b00      	cmp	r3, #0
  402490:	da09      	bge.n	4024a6 <prvTimerTask+0xe6>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
  402492:	2300      	movs	r3, #0
  402494:	461a      	mov	r2, r3
  402496:	a904      	add	r1, sp, #16
  402498:	6828      	ldr	r0, [r5, #0]
  40249a:	47a0      	blx	r4
  40249c:	2800      	cmp	r0, #0
  40249e:	d098      	beq.n	4023d2 <prvTimerTask+0x12>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
  4024a0:	9b04      	ldr	r3, [sp, #16]
  4024a2:	2b00      	cmp	r3, #0
  4024a4:	dbee      	blt.n	402484 <prvTimerTask+0xc4>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
  4024a6:	f8dd a018 	ldr.w	sl, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
  4024aa:	f8da 3014 	ldr.w	r3, [sl, #20]
  4024ae:	b113      	cbz	r3, 4024b6 <prvTimerTask+0xf6>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
  4024b0:	f10a 0004 	add.w	r0, sl, #4
  4024b4:	47c0      	blx	r8
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
  4024b6:	a803      	add	r0, sp, #12
  4024b8:	4b3a      	ldr	r3, [pc, #232]	; (4025a4 <prvTimerTask+0x1e4>)
  4024ba:	4798      	blx	r3
			switch( xMessage.xMessageID )
  4024bc:	9b04      	ldr	r3, [sp, #16]
  4024be:	2b09      	cmp	r3, #9
  4024c0:	d8e7      	bhi.n	402492 <prvTimerTask+0xd2>
  4024c2:	a201      	add	r2, pc, #4	; (adr r2, 4024c8 <prvTimerTask+0x108>)
  4024c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  4024c8:	004024f1 	.word	0x004024f1
  4024cc:	004024f1 	.word	0x004024f1
  4024d0:	004024f1 	.word	0x004024f1
  4024d4:	00402493 	.word	0x00402493
  4024d8:	00402545 	.word	0x00402545
  4024dc:	00402571 	.word	0x00402571
  4024e0:	004024f1 	.word	0x004024f1
  4024e4:	004024f1 	.word	0x004024f1
  4024e8:	00402493 	.word	0x00402493
  4024ec:	00402545 	.word	0x00402545
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) == pdTRUE )
  4024f0:	9c05      	ldr	r4, [sp, #20]
  4024f2:	f8da 1018 	ldr.w	r1, [sl, #24]
  4024f6:	4623      	mov	r3, r4
  4024f8:	4602      	mov	r2, r0
  4024fa:	4421      	add	r1, r4
  4024fc:	4650      	mov	r0, sl
  4024fe:	4c2d      	ldr	r4, [pc, #180]	; (4025b4 <prvTimerTask+0x1f4>)
  402500:	47a0      	blx	r4
  402502:	2801      	cmp	r0, #1
  402504:	d1bc      	bne.n	402480 <prvTimerTask+0xc0>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
  402506:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
  40250a:	4650      	mov	r0, sl
  40250c:	4798      	blx	r3
						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
  40250e:	f8da 301c 	ldr.w	r3, [sl, #28]
  402512:	2b01      	cmp	r3, #1
  402514:	d1b4      	bne.n	402480 <prvTimerTask+0xc0>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
  402516:	f8da 2018 	ldr.w	r2, [sl, #24]
  40251a:	2100      	movs	r1, #0
  40251c:	9100      	str	r1, [sp, #0]
  40251e:	460b      	mov	r3, r1
  402520:	9805      	ldr	r0, [sp, #20]
  402522:	4402      	add	r2, r0
  402524:	4650      	mov	r0, sl
  402526:	4c24      	ldr	r4, [pc, #144]	; (4025b8 <prvTimerTask+0x1f8>)
  402528:	47a0      	blx	r4
							configASSERT( xResult );
  40252a:	2800      	cmp	r0, #0
  40252c:	d1a8      	bne.n	402480 <prvTimerTask+0xc0>
  40252e:	f04f 0380 	mov.w	r3, #128	; 0x80
  402532:	b672      	cpsid	i
  402534:	f383 8811 	msr	BASEPRI, r3
  402538:	f3bf 8f6f 	isb	sy
  40253c:	f3bf 8f4f 	dsb	sy
  402540:	b662      	cpsie	i
  402542:	e7fe      	b.n	402542 <prvTimerTask+0x182>
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
  402544:	9905      	ldr	r1, [sp, #20]
  402546:	f8ca 1018 	str.w	r1, [sl, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
  40254a:	b131      	cbz	r1, 40255a <prvTimerTask+0x19a>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
  40254c:	4603      	mov	r3, r0
  40254e:	4602      	mov	r2, r0
  402550:	4401      	add	r1, r0
  402552:	4650      	mov	r0, sl
  402554:	4c17      	ldr	r4, [pc, #92]	; (4025b4 <prvTimerTask+0x1f4>)
  402556:	47a0      	blx	r4
  402558:	e792      	b.n	402480 <prvTimerTask+0xc0>
  40255a:	f04f 0380 	mov.w	r3, #128	; 0x80
  40255e:	b672      	cpsid	i
  402560:	f383 8811 	msr	BASEPRI, r3
  402564:	f3bf 8f6f 	isb	sy
  402568:	f3bf 8f4f 	dsb	sy
  40256c:	b662      	cpsie	i
  40256e:	e7fe      	b.n	40256e <prvTimerTask+0x1ae>
					vPortFree( pxTimer );
  402570:	4650      	mov	r0, sl
  402572:	4b13      	ldr	r3, [pc, #76]	; (4025c0 <prvTimerTask+0x200>)
  402574:	4798      	blx	r3
  402576:	e783      	b.n	402480 <prvTimerTask+0xc0>
	vTaskSuspendAll();
  402578:	47b8      	blx	r7
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
  40257a:	a804      	add	r0, sp, #16
  40257c:	4b09      	ldr	r3, [pc, #36]	; (4025a4 <prvTimerTask+0x1e4>)
  40257e:	4798      	blx	r3
  402580:	4605      	mov	r5, r0
		if( xTimerListsWereSwitched == pdFALSE )
  402582:	9b04      	ldr	r3, [sp, #16]
  402584:	2b00      	cmp	r3, #0
  402586:	f47f af78 	bne.w	40247a <prvTimerTask+0xba>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
  40258a:	4b0e      	ldr	r3, [pc, #56]	; (4025c4 <prvTimerTask+0x204>)
  40258c:	681b      	ldr	r3, [r3, #0]
  40258e:	681a      	ldr	r2, [r3, #0]
  402590:	fab2 f282 	clz	r2, r2
  402594:	0952      	lsrs	r2, r2, #5
  402596:	2400      	movs	r4, #0
  402598:	e72d      	b.n	4023f6 <prvTimerTask+0x36>
  40259a:	bf00      	nop
  40259c:	2040db24 	.word	0x2040db24
  4025a0:	004018e9 	.word	0x004018e9
  4025a4:	00402309 	.word	0x00402309
  4025a8:	2040db58 	.word	0x2040db58
  4025ac:	0040154d 	.word	0x0040154d
  4025b0:	00401a51 	.word	0x00401a51
  4025b4:	00402171 	.word	0x00402171
  4025b8:	00402299 	.word	0x00402299
  4025bc:	00401349 	.word	0x00401349
  4025c0:	00400d5d 	.word	0x00400d5d
  4025c4:	2040db28 	.word	0x2040db28
  4025c8:	e000ed04 	.word	0xe000ed04
  4025cc:	004009ad 	.word	0x004009ad

004025d0 <chip_isr>:

static tpfNmBspIsr gpfIsr;

static void chip_isr(uint32_t id, uint32_t mask)
{
	if ((id == CONF_WINC_SPI_INT_PIO_ID) && (mask == CONF_WINC_SPI_INT_MASK)) {
  4025d0:	2810      	cmp	r0, #16
  4025d2:	d108      	bne.n	4025e6 <chip_isr+0x16>
  4025d4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4025d8:	d105      	bne.n	4025e6 <chip_isr+0x16>
{
  4025da:	b508      	push	{r3, lr}
		if (gpfIsr) {
  4025dc:	4b02      	ldr	r3, [pc, #8]	; (4025e8 <chip_isr+0x18>)
  4025de:	681b      	ldr	r3, [r3, #0]
  4025e0:	b103      	cbz	r3, 4025e4 <chip_isr+0x14>
			gpfIsr();
  4025e2:	4798      	blx	r3
  4025e4:	bd08      	pop	{r3, pc}
  4025e6:	4770      	bx	lr
  4025e8:	2040db5c 	.word	0x2040db5c

004025ec <nm_bsp_sleep>:
*	@param[IN]	u32TimeMsec
*				Time in milliseconds
*/
void nm_bsp_sleep(uint32 u32TimeMsec)
{
	while(u32TimeMsec--) {
  4025ec:	b150      	cbz	r0, 402604 <nm_bsp_sleep+0x18>
{
  4025ee:	b570      	push	{r4, r5, r6, lr}
  4025f0:	1e44      	subs	r4, r0, #1
		delay_ms(4);
  4025f2:	4e05      	ldr	r6, [pc, #20]	; (402608 <nm_bsp_sleep+0x1c>)
  4025f4:	4d05      	ldr	r5, [pc, #20]	; (40260c <nm_bsp_sleep+0x20>)
  4025f6:	4630      	mov	r0, r6
  4025f8:	47a8      	blx	r5
	while(u32TimeMsec--) {
  4025fa:	3c01      	subs	r4, #1
  4025fc:	f1b4 3fff 	cmp.w	r4, #4294967295
  402600:	d1f9      	bne.n	4025f6 <nm_bsp_sleep+0xa>
  402602:	bd70      	pop	{r4, r5, r6, pc}
  402604:	4770      	bx	lr
  402606:	bf00      	nop
  402608:	00031635 	.word	0x00031635
  40260c:	20400001 	.word	0x20400001

00402610 <nm_bsp_reset>:
{
  402610:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  402614:	4f09      	ldr	r7, [pc, #36]	; (40263c <nm_bsp_reset+0x2c>)
  402616:	f44f 3800 	mov.w	r8, #131072	; 0x20000
  40261a:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  40261e:	4d08      	ldr	r5, [pc, #32]	; (402640 <nm_bsp_reset+0x30>)
  402620:	2608      	movs	r6, #8
  402622:	636e      	str	r6, [r5, #52]	; 0x34
	nm_bsp_sleep(100);
  402624:	2064      	movs	r0, #100	; 0x64
  402626:	4c07      	ldr	r4, [pc, #28]	; (402644 <nm_bsp_reset+0x34>)
  402628:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40262a:	f8c7 8030 	str.w	r8, [r7, #48]	; 0x30
	nm_bsp_sleep(100);
  40262e:	2064      	movs	r0, #100	; 0x64
  402630:	47a0      	blx	r4
  402632:	632e      	str	r6, [r5, #48]	; 0x30
	nm_bsp_sleep(100);
  402634:	2064      	movs	r0, #100	; 0x64
  402636:	47a0      	blx	r4
  402638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40263c:	400e1200 	.word	0x400e1200
  402640:	400e1000 	.word	0x400e1000
  402644:	004025ed 	.word	0x004025ed

00402648 <nm_bsp_init>:
{
  402648:	b510      	push	{r4, lr}
	gpfIsr = NULL;
  40264a:	2200      	movs	r2, #0
  40264c:	4b14      	ldr	r3, [pc, #80]	; (4026a0 <nm_bsp_init+0x58>)
  40264e:	601a      	str	r2, [r3, #0]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  402650:	200a      	movs	r0, #10
  402652:	4c14      	ldr	r4, [pc, #80]	; (4026a4 <nm_bsp_init+0x5c>)
  402654:	47a0      	blx	r4
  402656:	200b      	movs	r0, #11
  402658:	47a0      	blx	r4
  40265a:	200c      	movs	r0, #12
  40265c:	47a0      	blx	r4
  40265e:	2010      	movs	r0, #16
  402660:	47a0      	blx	r4
  402662:	2011      	movs	r0, #17
  402664:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402666:	4b10      	ldr	r3, [pc, #64]	; (4026a8 <nm_bsp_init+0x60>)
  402668:	2208      	movs	r2, #8
  40266a:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40266c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402670:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402672:	4a0e      	ldr	r2, [pc, #56]	; (4026ac <nm_bsp_init+0x64>)
  402674:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  402678:	6111      	str	r1, [r2, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40267a:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40267e:	6311      	str	r1, [r2, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  402680:	2204      	movs	r2, #4
  402682:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  402684:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  402688:	631a      	str	r2, [r3, #48]	; 0x30
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk && SysTick->CTRL & SysTick_CTRL_TICKINT_Msk)) {
  40268a:	4b09      	ldr	r3, [pc, #36]	; (4026b0 <nm_bsp_init+0x68>)
  40268c:	681b      	ldr	r3, [r3, #0]
  40268e:	f013 0f01 	tst.w	r3, #1
  402692:	d001      	beq.n	402698 <nm_bsp_init+0x50>
  402694:	4b06      	ldr	r3, [pc, #24]	; (4026b0 <nm_bsp_init+0x68>)
  402696:	681b      	ldr	r3, [r3, #0]
	nm_bsp_reset();
  402698:	4b06      	ldr	r3, [pc, #24]	; (4026b4 <nm_bsp_init+0x6c>)
  40269a:	4798      	blx	r3
}
  40269c:	2000      	movs	r0, #0
  40269e:	bd10      	pop	{r4, pc}
  4026a0:	2040db5c 	.word	0x2040db5c
  4026a4:	004058b1 	.word	0x004058b1
  4026a8:	400e1000 	.word	0x400e1000
  4026ac:	400e1200 	.word	0x400e1200
  4026b0:	e000e010 	.word	0xe000e010
  4026b4:	00402611 	.word	0x00402611

004026b8 <nm_bsp_register_isr>:
*	@brief	Register interrupt service routine
*	@param[IN]	pfIsr
*				Pointer to ISR handler
*/
void nm_bsp_register_isr(tpfNmBspIsr pfIsr)
{
  4026b8:	b530      	push	{r4, r5, lr}
  4026ba:	b083      	sub	sp, #12
	gpfIsr = pfIsr;
  4026bc:	4b14      	ldr	r3, [pc, #80]	; (402710 <nm_bsp_register_isr+0x58>)
  4026be:	6018      	str	r0, [r3, #0]

	/* Configure PGIO pin for interrupt from SPI slave, used when slave has data to send. */
	pmc_enable_periph_clk(CONF_WINC_SPI_INT_PIO_ID);
  4026c0:	2010      	movs	r0, #16
  4026c2:	4b14      	ldr	r3, [pc, #80]	; (402714 <nm_bsp_register_isr+0x5c>)
  4026c4:	4798      	blx	r3
	pio_configure_pin(CONF_WINC_SPI_INT_PIN, PIO_TYPE_PIO_INPUT);
  4026c6:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4026ca:	207c      	movs	r0, #124	; 0x7c
  4026cc:	4b12      	ldr	r3, [pc, #72]	; (402718 <nm_bsp_register_isr+0x60>)
  4026ce:	4798      	blx	r3
	pio_pull_up(CONF_WINC_SPI_INT_PIO, CONF_WINC_SPI_INT_MASK, PIO_PULLUP);
  4026d0:	4c12      	ldr	r4, [pc, #72]	; (40271c <nm_bsp_register_isr+0x64>)
  4026d2:	2201      	movs	r2, #1
  4026d4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4026d8:	4620      	mov	r0, r4
  4026da:	4b11      	ldr	r3, [pc, #68]	; (402720 <nm_bsp_register_isr+0x68>)
  4026dc:	4798      	blx	r3
	/*Interrupt on falling edge*/
	pio_handler_set(CONF_WINC_SPI_INT_PIO, CONF_WINC_SPI_INT_PIO_ID,
  4026de:	4b11      	ldr	r3, [pc, #68]	; (402724 <nm_bsp_register_isr+0x6c>)
  4026e0:	9300      	str	r3, [sp, #0]
  4026e2:	2351      	movs	r3, #81	; 0x51
  4026e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4026e8:	2110      	movs	r1, #16
  4026ea:	4620      	mov	r0, r4
  4026ec:	4d0e      	ldr	r5, [pc, #56]	; (402728 <nm_bsp_register_isr+0x70>)
  4026ee:	47a8      	blx	r5
	CONF_WINC_SPI_INT_MASK, PIO_PULLUP | PIO_IT_FALL_EDGE, chip_isr);
	pio_enable_interrupt(CONF_WINC_SPI_INT_PIO, CONF_WINC_SPI_INT_MASK);
  4026f0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4026f4:	4620      	mov	r0, r4
  4026f6:	4b0d      	ldr	r3, [pc, #52]	; (40272c <nm_bsp_register_isr+0x74>)
  4026f8:	4798      	blx	r3
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4026fa:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  4026fe:	4b0c      	ldr	r3, [pc, #48]	; (402730 <nm_bsp_register_isr+0x78>)
  402700:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ((IRQn_Type) CONF_WINC_SPI_INT_PIO_ID);
	pio_handler_set_priority(CONF_WINC_SPI_INT_PIO, (IRQn_Type)CONF_WINC_SPI_INT_PIO_ID,
  402702:	2200      	movs	r2, #0
  402704:	2110      	movs	r1, #16
  402706:	4620      	mov	r0, r4
  402708:	4b0a      	ldr	r3, [pc, #40]	; (402734 <nm_bsp_register_isr+0x7c>)
  40270a:	4798      	blx	r3
			CONF_WINC_SPI_INT_PRIORITY);
}
  40270c:	b003      	add	sp, #12
  40270e:	bd30      	pop	{r4, r5, pc}
  402710:	2040db5c 	.word	0x2040db5c
  402714:	004058b1 	.word	0x004058b1
  402718:	004054b9 	.word	0x004054b9
  40271c:	400e1400 	.word	0x400e1400
  402720:	00405375 	.word	0x00405375
  402724:	004025d1 	.word	0x004025d1
  402728:	00405639 	.word	0x00405639
  40272c:	004054a9 	.word	0x004054a9
  402730:	e000e100 	.word	0xe000e100
  402734:	0040570d 	.word	0x0040570d

00402738 <nm_bsp_interrupt_ctrl>:
*	@brief	Enable/Disable interrupts
*	@param[IN]	u8Enable
*				'0' disable interrupts. '1' enable interrupts
*/
void nm_bsp_interrupt_ctrl(uint8 u8Enable)
{
  402738:	b508      	push	{r3, lr}
	if (u8Enable) {
  40273a:	b928      	cbnz	r0, 402748 <nm_bsp_interrupt_ctrl+0x10>
		pio_enable_interrupt(CONF_WINC_SPI_INT_PIO, CONF_WINC_SPI_INT_MASK);
	}
	else {
		pio_disable_interrupt(CONF_WINC_SPI_INT_PIO, CONF_WINC_SPI_INT_MASK);
  40273c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  402740:	4804      	ldr	r0, [pc, #16]	; (402754 <nm_bsp_interrupt_ctrl+0x1c>)
  402742:	4b05      	ldr	r3, [pc, #20]	; (402758 <nm_bsp_interrupt_ctrl+0x20>)
  402744:	4798      	blx	r3
  402746:	bd08      	pop	{r3, pc}
		pio_enable_interrupt(CONF_WINC_SPI_INT_PIO, CONF_WINC_SPI_INT_MASK);
  402748:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40274c:	4801      	ldr	r0, [pc, #4]	; (402754 <nm_bsp_interrupt_ctrl+0x1c>)
  40274e:	4b03      	ldr	r3, [pc, #12]	; (40275c <nm_bsp_interrupt_ctrl+0x24>)
  402750:	4798      	blx	r3
  402752:	bd08      	pop	{r3, pc}
  402754:	400e1400 	.word	0x400e1400
  402758:	004054ad 	.word	0x004054ad
  40275c:	004054a9 	.word	0x004054a9

00402760 <nm_bus_init>:
 *	@fn		nm_bus_init
 *	@brief	Initialize the bus wrapper
 *	@return	M2M_SUCCESS in case of success and M2M_ERR_BUS_FAIL in case of failure
 */
sint8 nm_bus_init(void *pvinit)
{
  402760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		base->PIO_PUDR = mask;
  402762:	4c39      	ldr	r4, [pc, #228]	; (402848 <nm_bus_init+0xe8>)
  402764:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  402768:	6621      	str	r1, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40276a:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  40276e:	6561      	str	r1, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  402770:	6261      	str	r1, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  402772:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  402776:	6f23      	ldr	r3, [r4, #112]	; 0x70
  402778:	430b      	orrs	r3, r1
  40277a:	6723      	str	r3, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40277c:	6f63      	ldr	r3, [r4, #116]	; 0x74
  40277e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
  402782:	6763      	str	r3, [r4, #116]	; 0x74
		base->PIO_PUDR = mask;
  402784:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  402788:	6622      	str	r2, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  40278a:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  40278e:	6562      	str	r2, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  402790:	6262      	str	r2, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  402792:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  402796:	6f23      	ldr	r3, [r4, #112]	; 0x70
  402798:	4313      	orrs	r3, r2
  40279a:	6723      	str	r3, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40279c:	6f63      	ldr	r3, [r4, #116]	; 0x74
  40279e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
  4027a2:	6763      	str	r3, [r4, #116]	; 0x74
		base->PIO_PUDR = mask;
  4027a4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  4027a8:	6623      	str	r3, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  4027aa:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  4027ae:	6563      	str	r3, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  4027b0:	6263      	str	r3, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4027b2:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  4027b6:	6f20      	ldr	r0, [r4, #112]	; 0x70
  4027b8:	4318      	orrs	r0, r3
  4027ba:	6720      	str	r0, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4027bc:	6f60      	ldr	r0, [r4, #116]	; 0x74
  4027be:	f420 0080 	bic.w	r0, r0, #4194304	; 0x400000
  4027c2:	6760      	str	r0, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4027c4:	6061      	str	r1, [r4, #4]
  4027c6:	6062      	str	r2, [r4, #4]
  4027c8:	6063      	str	r3, [r4, #4]
  4027ca:	f04f 7600 	mov.w	r6, #33554432	; 0x2000000
  4027ce:	6066      	str	r6, [r4, #4]
	ioport_disable_pin(CONF_WINC_SPI_MOSI_GPIO);
	ioport_disable_pin(CONF_WINC_SPI_CLK_GPIO);
	ioport_disable_pin(CONF_WINC_SPI_CS_GPIO);
	
	/* disable CS control by peripheral */
	PIOD->PIO_PER = (1<<25);
  4027d0:	6026      	str	r6, [r4, #0]
	PIOD->PIO_OER = (1<<25);
  4027d2:	6126      	str	r6, [r4, #16]
	SPI_DEASSERT_CS();
  4027d4:	6326      	str	r6, [r4, #48]	; 0x30

	spi_enable_clock(CONF_WINC_SPI);
  4027d6:	4d1d      	ldr	r5, [pc, #116]	; (40284c <nm_bus_init+0xec>)
  4027d8:	4628      	mov	r0, r5
  4027da:	4b1d      	ldr	r3, [pc, #116]	; (402850 <nm_bus_init+0xf0>)
  4027dc:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4027de:	2302      	movs	r3, #2
  4027e0:	602b      	str	r3, [r5, #0]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4027e2:	2380      	movs	r3, #128	; 0x80
  4027e4:	602b      	str	r3, [r5, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4027e6:	686b      	ldr	r3, [r5, #4]
  4027e8:	f043 0301 	orr.w	r3, r3, #1
  4027ec:	606b      	str	r3, [r5, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4027ee:	686b      	ldr	r3, [r5, #4]
  4027f0:	f043 0310 	orr.w	r3, r3, #16
  4027f4:	606b      	str	r3, [r5, #4]
	spi_disable(CONF_WINC_SPI);
	spi_reset(CONF_WINC_SPI);
	spi_set_master_mode(CONF_WINC_SPI);
	spi_disable_mode_fault_detect(CONF_WINC_SPI);
	spi_set_peripheral_chip_select_value(CONF_WINC_SPI, CONF_WINC_SPI_NPCS);
  4027f6:	2101      	movs	r1, #1
  4027f8:	4628      	mov	r0, r5
  4027fa:	4b16      	ldr	r3, [pc, #88]	; (402854 <nm_bus_init+0xf4>)
  4027fc:	4798      	blx	r3
	spi_set_clock_polarity(CONF_WINC_SPI,
  4027fe:	2200      	movs	r2, #0
  402800:	2101      	movs	r1, #1
  402802:	4628      	mov	r0, r5
  402804:	4b14      	ldr	r3, [pc, #80]	; (402858 <nm_bus_init+0xf8>)
  402806:	4798      	blx	r3
			CONF_WINC_SPI_NPCS, CONF_WINC_SPI_POL);
	spi_set_clock_phase(CONF_WINC_SPI, CONF_WINC_SPI_NPCS, CONF_WINC_SPI_PHA);
  402808:	2201      	movs	r2, #1
  40280a:	4611      	mov	r1, r2
  40280c:	4628      	mov	r0, r5
  40280e:	4b13      	ldr	r3, [pc, #76]	; (40285c <nm_bus_init+0xfc>)
  402810:	4798      	blx	r3
	spi_set_bits_per_transfer(CONF_WINC_SPI, CONF_WINC_SPI_NPCS, SPI_CSR_BITS_8_BIT);
  402812:	2200      	movs	r2, #0
  402814:	2101      	movs	r1, #1
  402816:	4628      	mov	r0, r5
  402818:	4b11      	ldr	r3, [pc, #68]	; (402860 <nm_bus_init+0x100>)
  40281a:	4798      	blx	r3
	spi_set_baudrate_div(CONF_WINC_SPI, CONF_WINC_SPI_NPCS,
			spi_calc_baudrate_div(CONF_WINC_SPI_CLOCK, sysclk_get_cpu_hz()));
  40281c:	4911      	ldr	r1, [pc, #68]	; (402864 <nm_bus_init+0x104>)
  40281e:	4812      	ldr	r0, [pc, #72]	; (402868 <nm_bus_init+0x108>)
  402820:	4b12      	ldr	r3, [pc, #72]	; (40286c <nm_bus_init+0x10c>)
  402822:	4798      	blx	r3
	spi_set_baudrate_div(CONF_WINC_SPI, CONF_WINC_SPI_NPCS,
  402824:	b2c2      	uxtb	r2, r0
  402826:	2101      	movs	r1, #1
  402828:	4628      	mov	r0, r5
  40282a:	4b11      	ldr	r3, [pc, #68]	; (402870 <nm_bus_init+0x110>)
  40282c:	4798      	blx	r3
	spi_set_transfer_delay(CONF_WINC_SPI, CONF_WINC_SPI_NPCS, CONF_WINC_SPI_DLYBS,
  40282e:	2300      	movs	r3, #0
  402830:	461a      	mov	r2, r3
  402832:	2101      	movs	r1, #1
  402834:	4628      	mov	r0, r5
  402836:	4f0f      	ldr	r7, [pc, #60]	; (402874 <nm_bus_init+0x114>)
  402838:	47b8      	blx	r7
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40283a:	2301      	movs	r3, #1
  40283c:	602b      	str	r3, [r5, #0]
			CONF_WINC_SPI_DLYBCT);
	spi_enable(CONF_WINC_SPI);
	
	SPI_DEASSERT_CS();
  40283e:	6326      	str	r6, [r4, #48]	; 0x30
	nm_bsp_reset();
  402840:	4b0d      	ldr	r3, [pc, #52]	; (402878 <nm_bus_init+0x118>)
  402842:	4798      	blx	r3
#endif
	return result;
}
  402844:	2000      	movs	r0, #0
  402846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402848:	400e1400 	.word	0x400e1400
  40284c:	40008000 	.word	0x40008000
  402850:	00405905 	.word	0x00405905
  402854:	00405931 	.word	0x00405931
  402858:	004059ab 	.word	0x004059ab
  40285c:	004059c9 	.word	0x004059c9
  402860:	004059e7 	.word	0x004059e7
  402864:	11e1a300 	.word	0x11e1a300
  402868:	02dc6c00 	.word	0x02dc6c00
  40286c:	004059fb 	.word	0x004059fb
  402870:	00405a11 	.word	0x00405a11
  402874:	00405a39 	.word	0x00405a39
  402878:	00402611 	.word	0x00402611

0040287c <nm_bus_ioctl>:
 *					Arbitrary parameter depenging on IOCTL
 *	@return	M2M_SUCCESS in case of success and M2M_ERR_BUS_FAIL in case of failure
 *	@note	For SPI only, it's important to be able to send/receive at the same time
 */
sint8 nm_bus_ioctl(uint8 u8Cmd, void* pvParameter)
{
  40287c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402880:	b083      	sub	sp, #12
	sint8 s8Ret = 0;
	switch(u8Cmd)
  402882:	2803      	cmp	r0, #3
  402884:	d144      	bne.n	402910 <nm_bus_ioctl+0x94>
		}
		break;
#elif CONF_WINC_USE_SPI
		case NM_BUS_IOCTL_RW: {
			tstrNmSpiRw *pstrParam = (tstrNmSpiRw *)pvParameter;
			s8Ret = spi_rw(pstrParam->pu8InBuf, pstrParam->pu8OutBuf, pstrParam->u16Sz);
  402886:	680e      	ldr	r6, [r1, #0]
  402888:	684d      	ldr	r5, [r1, #4]
  40288a:	890c      	ldrh	r4, [r1, #8]
	uint8 u8Dummy = 0;
  40288c:	2300      	movs	r3, #0
  40288e:	f88d 3004 	strb.w	r3, [sp, #4]
	uint16_t rxd_data = 0;
  402892:	f8ad 3006 	strh.w	r3, [sp, #6]
	if (!pu8Mosi) {
  402896:	b186      	cbz	r6, 4028ba <nm_bus_ioctl+0x3e>
	else if(!pu8Miso) {
  402898:	2d00      	cmp	r5, #0
  40289a:	d136      	bne.n	40290a <nm_bus_ioctl+0x8e>
		u8SkipMiso = 1;
  40289c:	f04f 0801 	mov.w	r8, #1
	uint8 u8SkipMosi = 0, u8SkipMiso = 0;
  4028a0:	4699      	mov	r9, r3
		pu8Miso = &u8Dummy;
  4028a2:	ad01      	add	r5, sp, #4
	SPI_ASSERT_CS();
  4028a4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4028a8:	4b20      	ldr	r3, [pc, #128]	; (40292c <nm_bus_ioctl+0xb0>)
  4028aa:	635a      	str	r2, [r3, #52]	; 0x34
	while (u16Sz) {
  4028ac:	b32c      	cbz	r4, 4028fa <nm_bus_ioctl+0x7e>
		spi_write(CONF_WINC_SPI, txd_data, 0, 0);
  4028ae:	4f20      	ldr	r7, [pc, #128]	; (402930 <nm_bus_ioctl+0xb4>)
  4028b0:	f8df b094 	ldr.w	fp, [pc, #148]	; 402948 <nm_bus_ioctl+0xcc>
		spi_read(CONF_WINC_SPI, &rxd_data, &uc_pcs);
  4028b4:	f8df a094 	ldr.w	sl, [pc, #148]	; 40294c <nm_bus_ioctl+0xd0>
  4028b8:	e006      	b.n	4028c8 <nm_bus_ioctl+0x4c>
	uint8 u8SkipMosi = 0, u8SkipMiso = 0;
  4028ba:	f04f 0800 	mov.w	r8, #0
		u8SkipMosi = 1;
  4028be:	f04f 0901 	mov.w	r9, #1
		pu8Mosi = &u8Dummy;
  4028c2:	ae01      	add	r6, sp, #4
  4028c4:	e7ee      	b.n	4028a4 <nm_bus_ioctl+0x28>
	while (u16Sz) {
  4028c6:	b1c4      	cbz	r4, 4028fa <nm_bus_ioctl+0x7e>
		spi_write(CONF_WINC_SPI, txd_data, 0, 0);
  4028c8:	2300      	movs	r3, #0
  4028ca:	461a      	mov	r2, r3
  4028cc:	7831      	ldrb	r1, [r6, #0]
  4028ce:	4638      	mov	r0, r7
  4028d0:	47d8      	blx	fp
		spi_read(CONF_WINC_SPI, &rxd_data, &uc_pcs);
  4028d2:	f10d 0205 	add.w	r2, sp, #5
  4028d6:	f10d 0106 	add.w	r1, sp, #6
  4028da:	4638      	mov	r0, r7
  4028dc:	47d0      	blx	sl
		*pu8Miso = rxd_data;
  4028de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  4028e2:	702b      	strb	r3, [r5, #0]
		u16Sz--;
  4028e4:	3c01      	subs	r4, #1
  4028e6:	b2a4      	uxth	r4, r4
		if (!u8SkipMiso)
  4028e8:	f1b8 0f00 	cmp.w	r8, #0
  4028ec:	d100      	bne.n	4028f0 <nm_bus_ioctl+0x74>
			pu8Miso++;
  4028ee:	3501      	adds	r5, #1
		if (!u8SkipMosi)
  4028f0:	f1b9 0f00 	cmp.w	r9, #0
  4028f4:	d1e7      	bne.n	4028c6 <nm_bus_ioctl+0x4a>
			pu8Mosi++;
  4028f6:	3601      	adds	r6, #1
  4028f8:	e7e5      	b.n	4028c6 <nm_bus_ioctl+0x4a>
	SPI_DEASSERT_CS();
  4028fa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4028fe:	4b0b      	ldr	r3, [pc, #44]	; (40292c <nm_bus_ioctl+0xb0>)
  402900:	631a      	str	r2, [r3, #48]	; 0x30
	return M2M_SUCCESS;
  402902:	2000      	movs	r0, #0
			M2M_ERR("Invalid IOCTL command!\n");
			break;
	}

	return s8Ret;
}
  402904:	b003      	add	sp, #12
  402906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		return M2M_ERR_BUS_FAIL;
  40290a:	f06f 0005 	mvn.w	r0, #5
		break;
  40290e:	e7f9      	b.n	402904 <nm_bus_ioctl+0x88>
			M2M_ERR("Invalid IOCTL command!\n");
  402910:	f240 121f 	movw	r2, #287	; 0x11f
  402914:	4907      	ldr	r1, [pc, #28]	; (402934 <nm_bus_ioctl+0xb8>)
  402916:	4808      	ldr	r0, [pc, #32]	; (402938 <nm_bus_ioctl+0xbc>)
  402918:	4c08      	ldr	r4, [pc, #32]	; (40293c <nm_bus_ioctl+0xc0>)
  40291a:	47a0      	blx	r4
  40291c:	4808      	ldr	r0, [pc, #32]	; (402940 <nm_bus_ioctl+0xc4>)
  40291e:	47a0      	blx	r4
  402920:	4808      	ldr	r0, [pc, #32]	; (402944 <nm_bus_ioctl+0xc8>)
  402922:	47a0      	blx	r4
			s8Ret = -1;
  402924:	f04f 30ff 	mov.w	r0, #4294967295
			break;
  402928:	e7ec      	b.n	402904 <nm_bus_ioctl+0x88>
  40292a:	bf00      	nop
  40292c:	400e1400 	.word	0x400e1400
  402930:	40008000 	.word	0x40008000
  402934:	0040cd64 	.word	0x0040cd64
  402938:	0040cd74 	.word	0x0040cd74
  40293c:	004066e9 	.word	0x004066e9
  402940:	0040cd88 	.word	0x0040cd88
  402944:	0040cda0 	.word	0x0040cda0
  402948:	00405977 	.word	0x00405977
  40294c:	00405947 	.word	0x00405947

00402950 <nm_bus_deinit>:
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  402950:	2202      	movs	r2, #2
  402952:	4b0e      	ldr	r3, [pc, #56]	; (40298c <nm_bus_deinit+0x3c>)
  402954:	601a      	str	r2, [r3, #0]
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  402956:	f503 2359 	add.w	r3, r3, #888832	; 0xd9000
  40295a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  40295e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  402962:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  402964:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  402968:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
  40296c:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40296e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  402972:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  402976:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  402978:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40297c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  402980:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  402982:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	ioport_set_pin_dir(CONF_WINC_SPI_MOSI_GPIO, IOPORT_DIR_INPUT);
	ioport_set_pin_dir(CONF_WINC_SPI_MISO_GPIO, IOPORT_DIR_INPUT);
	ioport_set_pin_dir(CONF_WINC_SPI_CLK_GPIO, IOPORT_DIR_INPUT);
	ioport_set_pin_dir(CONF_WINC_SPI_CS_GPIO, IOPORT_DIR_INPUT);
	return M2M_SUCCESS;
}
  402986:	2000      	movs	r0, #0
  402988:	4770      	bx	lr
  40298a:	bf00      	nop
  40298c:	40008000 	.word	0x40008000

00402990 <m2m_memcpy>:
  402990:	b13a      	cbz	r2, 4029a2 <m2m_memcpy+0x12>
  402992:	3901      	subs	r1, #1
  402994:	1882      	adds	r2, r0, r2
  402996:	f811 3f01 	ldrb.w	r3, [r1, #1]!
  40299a:	f800 3b01 	strb.w	r3, [r0], #1
  40299e:	4290      	cmp	r0, r2
  4029a0:	d1f9      	bne.n	402996 <m2m_memcpy+0x6>
  4029a2:	4770      	bx	lr

004029a4 <m2m_memset>:
  4029a4:	b122      	cbz	r2, 4029b0 <m2m_memset+0xc>
  4029a6:	1882      	adds	r2, r0, r2
  4029a8:	f800 1b01 	strb.w	r1, [r0], #1
  4029ac:	4290      	cmp	r0, r2
  4029ae:	d1fb      	bne.n	4029a8 <m2m_memset+0x4>
  4029b0:	4770      	bx	lr

004029b2 <m2m_strlen>:
  4029b2:	7803      	ldrb	r3, [r0, #0]
  4029b4:	b143      	cbz	r3, 4029c8 <m2m_strlen+0x16>
  4029b6:	2300      	movs	r3, #0
  4029b8:	3301      	adds	r3, #1
  4029ba:	b29b      	uxth	r3, r3
  4029bc:	f810 2f01 	ldrb.w	r2, [r0, #1]!
  4029c0:	2a00      	cmp	r2, #0
  4029c2:	d1f9      	bne.n	4029b8 <m2m_strlen+0x6>
  4029c4:	4618      	mov	r0, r3
  4029c6:	4770      	bx	lr
  4029c8:	2300      	movs	r3, #0
  4029ca:	e7fb      	b.n	4029c4 <m2m_strlen+0x12>

004029cc <isr>:
  4029cc:	4a02      	ldr	r2, [pc, #8]	; (4029d8 <isr+0xc>)
  4029ce:	7813      	ldrb	r3, [r2, #0]
  4029d0:	3301      	adds	r3, #1
  4029d2:	b2db      	uxtb	r3, r3
  4029d4:	7013      	strb	r3, [r2, #0]
  4029d6:	4770      	bx	lr
  4029d8:	2040db63 	.word	0x2040db63

004029dc <m2m_hif_cb>:
  4029dc:	4770      	bx	lr
	...

004029e0 <hif_set_rx_done>:
  4029e0:	b500      	push	{lr}
  4029e2:	b083      	sub	sp, #12
  4029e4:	2001      	movs	r0, #1
  4029e6:	4b0b      	ldr	r3, [pc, #44]	; (402a14 <hif_set_rx_done+0x34>)
  4029e8:	4798      	blx	r3
  4029ea:	a901      	add	r1, sp, #4
  4029ec:	f241 0070 	movw	r0, #4208	; 0x1070
  4029f0:	4b09      	ldr	r3, [pc, #36]	; (402a18 <hif_set_rx_done+0x38>)
  4029f2:	4798      	blx	r3
  4029f4:	4603      	mov	r3, r0
  4029f6:	b118      	cbz	r0, 402a00 <hif_set_rx_done+0x20>
  4029f8:	4618      	mov	r0, r3
  4029fa:	b003      	add	sp, #12
  4029fc:	f85d fb04 	ldr.w	pc, [sp], #4
  402a00:	9901      	ldr	r1, [sp, #4]
  402a02:	f041 0102 	orr.w	r1, r1, #2
  402a06:	9101      	str	r1, [sp, #4]
  402a08:	f241 0070 	movw	r0, #4208	; 0x1070
  402a0c:	4b03      	ldr	r3, [pc, #12]	; (402a1c <hif_set_rx_done+0x3c>)
  402a0e:	4798      	blx	r3
  402a10:	4603      	mov	r3, r0
  402a12:	e7f1      	b.n	4029f8 <hif_set_rx_done+0x18>
  402a14:	00402739 	.word	0x00402739
  402a18:	00403ccd 	.word	0x00403ccd
  402a1c:	00403cd9 	.word	0x00403cd9

00402a20 <hif_chip_wake>:
  402a20:	b508      	push	{r3, lr}
  402a22:	4b12      	ldr	r3, [pc, #72]	; (402a6c <hif_chip_wake+0x4c>)
  402a24:	781b      	ldrb	r3, [r3, #0]
  402a26:	b94b      	cbnz	r3, 402a3c <hif_chip_wake+0x1c>
  402a28:	4b11      	ldr	r3, [pc, #68]	; (402a70 <hif_chip_wake+0x50>)
  402a2a:	781b      	ldrb	r3, [r3, #0]
  402a2c:	b2db      	uxtb	r3, r3
  402a2e:	2b03      	cmp	r3, #3
  402a30:	d00c      	beq.n	402a4c <hif_chip_wake+0x2c>
  402a32:	4b0f      	ldr	r3, [pc, #60]	; (402a70 <hif_chip_wake+0x50>)
  402a34:	781b      	ldrb	r3, [r3, #0]
  402a36:	b2db      	uxtb	r3, r3
  402a38:	2b04      	cmp	r3, #4
  402a3a:	d007      	beq.n	402a4c <hif_chip_wake+0x2c>
  402a3c:	4a0b      	ldr	r2, [pc, #44]	; (402a6c <hif_chip_wake+0x4c>)
  402a3e:	7813      	ldrb	r3, [r2, #0]
  402a40:	3301      	adds	r3, #1
  402a42:	b2db      	uxtb	r3, r3
  402a44:	7013      	strb	r3, [r2, #0]
  402a46:	2300      	movs	r3, #0
  402a48:	4618      	mov	r0, r3
  402a4a:	bd08      	pop	{r3, pc}
  402a4c:	4b09      	ldr	r3, [pc, #36]	; (402a74 <hif_chip_wake+0x54>)
  402a4e:	4798      	blx	r3
  402a50:	4603      	mov	r3, r0
  402a52:	2800      	cmp	r0, #0
  402a54:	d1f8      	bne.n	402a48 <hif_chip_wake+0x28>
  402a56:	f245 6178 	movw	r1, #22136	; 0x5678
  402a5a:	f241 0074 	movw	r0, #4212	; 0x1074
  402a5e:	4b06      	ldr	r3, [pc, #24]	; (402a78 <hif_chip_wake+0x58>)
  402a60:	4798      	blx	r3
  402a62:	4603      	mov	r3, r0
  402a64:	2800      	cmp	r0, #0
  402a66:	d0e9      	beq.n	402a3c <hif_chip_wake+0x1c>
  402a68:	e7ee      	b.n	402a48 <hif_chip_wake+0x28>
  402a6a:	bf00      	nop
  402a6c:	2040db61 	.word	0x2040db61
  402a70:	2040db60 	.word	0x2040db60
  402a74:	0040383d 	.word	0x0040383d
  402a78:	00403cd9 	.word	0x00403cd9

00402a7c <hif_chip_sleep>:
  402a7c:	4b1e      	ldr	r3, [pc, #120]	; (402af8 <hif_chip_sleep+0x7c>)
  402a7e:	781b      	ldrb	r3, [r3, #0]
  402a80:	b123      	cbz	r3, 402a8c <hif_chip_sleep+0x10>
  402a82:	4a1d      	ldr	r2, [pc, #116]	; (402af8 <hif_chip_sleep+0x7c>)
  402a84:	7813      	ldrb	r3, [r2, #0]
  402a86:	3b01      	subs	r3, #1
  402a88:	b2db      	uxtb	r3, r3
  402a8a:	7013      	strb	r3, [r2, #0]
  402a8c:	4b1a      	ldr	r3, [pc, #104]	; (402af8 <hif_chip_sleep+0x7c>)
  402a8e:	781b      	ldrb	r3, [r3, #0]
  402a90:	2b00      	cmp	r3, #0
  402a92:	d12e      	bne.n	402af2 <hif_chip_sleep+0x76>
  402a94:	4b19      	ldr	r3, [pc, #100]	; (402afc <hif_chip_sleep+0x80>)
  402a96:	781b      	ldrb	r3, [r3, #0]
  402a98:	b2db      	uxtb	r3, r3
  402a9a:	2b03      	cmp	r3, #3
  402a9c:	d006      	beq.n	402aac <hif_chip_sleep+0x30>
  402a9e:	4b17      	ldr	r3, [pc, #92]	; (402afc <hif_chip_sleep+0x80>)
  402aa0:	781b      	ldrb	r3, [r3, #0]
  402aa2:	b2db      	uxtb	r3, r3
  402aa4:	2b04      	cmp	r3, #4
  402aa6:	d001      	beq.n	402aac <hif_chip_sleep+0x30>
  402aa8:	2300      	movs	r3, #0
  402aaa:	e023      	b.n	402af4 <hif_chip_sleep+0x78>
  402aac:	b500      	push	{lr}
  402aae:	b083      	sub	sp, #12
  402ab0:	2300      	movs	r3, #0
  402ab2:	9301      	str	r3, [sp, #4]
  402ab4:	f244 3121 	movw	r1, #17185	; 0x4321
  402ab8:	f241 0074 	movw	r0, #4212	; 0x1074
  402abc:	4b10      	ldr	r3, [pc, #64]	; (402b00 <hif_chip_sleep+0x84>)
  402abe:	4798      	blx	r3
  402ac0:	4603      	mov	r3, r0
  402ac2:	b118      	cbz	r0, 402acc <hif_chip_sleep+0x50>
  402ac4:	4618      	mov	r0, r3
  402ac6:	b003      	add	sp, #12
  402ac8:	f85d fb04 	ldr.w	pc, [sp], #4
  402acc:	a901      	add	r1, sp, #4
  402ace:	2001      	movs	r0, #1
  402ad0:	4b0c      	ldr	r3, [pc, #48]	; (402b04 <hif_chip_sleep+0x88>)
  402ad2:	4798      	blx	r3
  402ad4:	4603      	mov	r3, r0
  402ad6:	2800      	cmp	r0, #0
  402ad8:	d1f4      	bne.n	402ac4 <hif_chip_sleep+0x48>
  402ada:	9901      	ldr	r1, [sp, #4]
  402adc:	f011 0f02 	tst.w	r1, #2
  402ae0:	d0f0      	beq.n	402ac4 <hif_chip_sleep+0x48>
  402ae2:	f021 0102 	bic.w	r1, r1, #2
  402ae6:	9101      	str	r1, [sp, #4]
  402ae8:	2001      	movs	r0, #1
  402aea:	4b05      	ldr	r3, [pc, #20]	; (402b00 <hif_chip_sleep+0x84>)
  402aec:	4798      	blx	r3
  402aee:	4603      	mov	r3, r0
  402af0:	e7e8      	b.n	402ac4 <hif_chip_sleep+0x48>
  402af2:	2300      	movs	r3, #0
  402af4:	4618      	mov	r0, r3
  402af6:	4770      	bx	lr
  402af8:	2040db61 	.word	0x2040db61
  402afc:	2040db60 	.word	0x2040db60
  402b00:	00403cd9 	.word	0x00403cd9
  402b04:	00403ccd 	.word	0x00403ccd

00402b08 <hif_send>:
  402b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402b0c:	b087      	sub	sp, #28
  402b0e:	4607      	mov	r7, r0
  402b10:	4688      	mov	r8, r1
  402b12:	4692      	mov	sl, r2
  402b14:	4699      	mov	r9, r3
  402b16:	9c10      	ldr	r4, [sp, #64]	; 0x40
  402b18:	f8bd 6044 	ldrh.w	r6, [sp, #68]	; 0x44
  402b1c:	f8bd 5048 	ldrh.w	r5, [sp, #72]	; 0x48
  402b20:	f001 037f 	and.w	r3, r1, #127	; 0x7f
  402b24:	f88d 3015 	strb.w	r3, [sp, #21]
  402b28:	f88d 0014 	strb.w	r0, [sp, #20]
  402b2c:	2308      	movs	r3, #8
  402b2e:	f8ad 3016 	strh.w	r3, [sp, #22]
  402b32:	2c00      	cmp	r4, #0
  402b34:	f000 809f 	beq.w	402c76 <hif_send+0x16e>
  402b38:	f8bd 3016 	ldrh.w	r3, [sp, #22]
  402b3c:	fa16 f383 	uxtah	r3, r6, r3
  402b40:	442b      	add	r3, r5
  402b42:	b29b      	uxth	r3, r3
  402b44:	f8ad 3016 	strh.w	r3, [sp, #22]
  402b48:	4b5c      	ldr	r3, [pc, #368]	; (402cbc <hif_send+0x1b4>)
  402b4a:	4798      	blx	r3
  402b4c:	4683      	mov	fp, r0
  402b4e:	2800      	cmp	r0, #0
  402b50:	f040 80a2 	bne.w	402c98 <hif_send+0x190>
  402b54:	2300      	movs	r3, #0
  402b56:	9303      	str	r3, [sp, #12]
  402b58:	f8ad 3006 	strh.w	r3, [sp, #6]
  402b5c:	9302      	str	r3, [sp, #8]
  402b5e:	9b02      	ldr	r3, [sp, #8]
  402b60:	431f      	orrs	r7, r3
  402b62:	9702      	str	r7, [sp, #8]
  402b64:	9b02      	ldr	r3, [sp, #8]
  402b66:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
  402b6a:	9302      	str	r3, [sp, #8]
  402b6c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
  402b70:	9b02      	ldr	r3, [sp, #8]
  402b72:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  402b76:	9302      	str	r3, [sp, #8]
  402b78:	9902      	ldr	r1, [sp, #8]
  402b7a:	f241 008c 	movw	r0, #4236	; 0x108c
  402b7e:	4b50      	ldr	r3, [pc, #320]	; (402cc0 <hif_send+0x1b8>)
  402b80:	4798      	blx	r3
  402b82:	4683      	mov	fp, r0
  402b84:	2800      	cmp	r0, #0
  402b86:	f040 8091 	bne.w	402cac <hif_send+0x1a4>
  402b8a:	2300      	movs	r3, #0
  402b8c:	9302      	str	r3, [sp, #8]
  402b8e:	9b02      	ldr	r3, [sp, #8]
  402b90:	f043 0302 	orr.w	r3, r3, #2
  402b94:	9302      	str	r3, [sp, #8]
  402b96:	9902      	ldr	r1, [sp, #8]
  402b98:	f241 0078 	movw	r0, #4216	; 0x1078
  402b9c:	4b48      	ldr	r3, [pc, #288]	; (402cc0 <hif_send+0x1b8>)
  402b9e:	4798      	blx	r3
  402ba0:	4683      	mov	fp, r0
  402ba2:	2800      	cmp	r0, #0
  402ba4:	f040 8082 	bne.w	402cac <hif_send+0x1a4>
  402ba8:	2300      	movs	r3, #0
  402baa:	9303      	str	r3, [sp, #12]
  402bac:	f8ad 3006 	strh.w	r3, [sp, #6]
  402bb0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  402bb4:	b29b      	uxth	r3, r3
  402bb6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  402bba:	d216      	bcs.n	402bea <hif_send+0xe2>
  402bbc:	f241 0878 	movw	r8, #4216	; 0x1078
  402bc0:	4f40      	ldr	r7, [pc, #256]	; (402cc4 <hif_send+0x1bc>)
  402bc2:	a902      	add	r1, sp, #8
  402bc4:	4640      	mov	r0, r8
  402bc6:	47b8      	blx	r7
  402bc8:	b978      	cbnz	r0, 402bea <hif_send+0xe2>
  402bca:	9b02      	ldr	r3, [sp, #8]
  402bcc:	f013 0f02 	tst.w	r3, #2
  402bd0:	d059      	beq.n	402c86 <hif_send+0x17e>
  402bd2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  402bd6:	3301      	adds	r3, #1
  402bd8:	b29b      	uxth	r3, r3
  402bda:	f8ad 3006 	strh.w	r3, [sp, #6]
  402bde:	f8bd 3006 	ldrh.w	r3, [sp, #6]
  402be2:	b29b      	uxth	r3, r3
  402be4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  402be8:	d3eb      	bcc.n	402bc2 <hif_send+0xba>
  402bea:	9b03      	ldr	r3, [sp, #12]
  402bec:	2b00      	cmp	r3, #0
  402bee:	d061      	beq.n	402cb4 <hif_send+0x1ac>
  402bf0:	9b03      	ldr	r3, [sp, #12]
  402bf2:	9304      	str	r3, [sp, #16]
  402bf4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
  402bf8:	b29b      	uxth	r3, r3
  402bfa:	f8ad 3016 	strh.w	r3, [sp, #22]
  402bfe:	9804      	ldr	r0, [sp, #16]
  402c00:	2208      	movs	r2, #8
  402c02:	a905      	add	r1, sp, #20
  402c04:	4b30      	ldr	r3, [pc, #192]	; (402cc8 <hif_send+0x1c0>)
  402c06:	4798      	blx	r3
  402c08:	4683      	mov	fp, r0
  402c0a:	2800      	cmp	r0, #0
  402c0c:	d14e      	bne.n	402cac <hif_send+0x1a4>
  402c0e:	9b04      	ldr	r3, [sp, #16]
  402c10:	3308      	adds	r3, #8
  402c12:	9304      	str	r3, [sp, #16]
  402c14:	f1ba 0f00 	cmp.w	sl, #0
  402c18:	d00a      	beq.n	402c30 <hif_send+0x128>
  402c1a:	9804      	ldr	r0, [sp, #16]
  402c1c:	464a      	mov	r2, r9
  402c1e:	4651      	mov	r1, sl
  402c20:	4b29      	ldr	r3, [pc, #164]	; (402cc8 <hif_send+0x1c0>)
  402c22:	4798      	blx	r3
  402c24:	4683      	mov	fp, r0
  402c26:	2800      	cmp	r0, #0
  402c28:	d140      	bne.n	402cac <hif_send+0x1a4>
  402c2a:	9b04      	ldr	r3, [sp, #16]
  402c2c:	444b      	add	r3, r9
  402c2e:	9304      	str	r3, [sp, #16]
  402c30:	b17c      	cbz	r4, 402c52 <hif_send+0x14a>
  402c32:	9b04      	ldr	r3, [sp, #16]
  402c34:	eba5 0509 	sub.w	r5, r5, r9
  402c38:	441d      	add	r5, r3
  402c3a:	9504      	str	r5, [sp, #16]
  402c3c:	9804      	ldr	r0, [sp, #16]
  402c3e:	4632      	mov	r2, r6
  402c40:	4621      	mov	r1, r4
  402c42:	4b21      	ldr	r3, [pc, #132]	; (402cc8 <hif_send+0x1c0>)
  402c44:	4798      	blx	r3
  402c46:	4683      	mov	fp, r0
  402c48:	2800      	cmp	r0, #0
  402c4a:	d12f      	bne.n	402cac <hif_send+0x1a4>
  402c4c:	9b04      	ldr	r3, [sp, #16]
  402c4e:	441e      	add	r6, r3
  402c50:	9604      	str	r6, [sp, #16]
  402c52:	9b03      	ldr	r3, [sp, #12]
  402c54:	009b      	lsls	r3, r3, #2
  402c56:	9302      	str	r3, [sp, #8]
  402c58:	9b02      	ldr	r3, [sp, #8]
  402c5a:	f043 0302 	orr.w	r3, r3, #2
  402c5e:	9302      	str	r3, [sp, #8]
  402c60:	9902      	ldr	r1, [sp, #8]
  402c62:	f241 006c 	movw	r0, #4204	; 0x106c
  402c66:	4b16      	ldr	r3, [pc, #88]	; (402cc0 <hif_send+0x1b8>)
  402c68:	4798      	blx	r3
  402c6a:	4683      	mov	fp, r0
  402c6c:	b9f0      	cbnz	r0, 402cac <hif_send+0x1a4>
  402c6e:	4b17      	ldr	r3, [pc, #92]	; (402ccc <hif_send+0x1c4>)
  402c70:	4798      	blx	r3
  402c72:	4683      	mov	fp, r0
  402c74:	e01a      	b.n	402cac <hif_send+0x1a4>
  402c76:	f8bd 3016 	ldrh.w	r3, [sp, #22]
  402c7a:	fa19 f383 	uxtah	r3, r9, r3
  402c7e:	b29b      	uxth	r3, r3
  402c80:	f8ad 3016 	strh.w	r3, [sp, #22]
  402c84:	e760      	b.n	402b48 <hif_send+0x40>
  402c86:	a903      	add	r1, sp, #12
  402c88:	4811      	ldr	r0, [pc, #68]	; (402cd0 <hif_send+0x1c8>)
  402c8a:	4b0e      	ldr	r3, [pc, #56]	; (402cc4 <hif_send+0x1bc>)
  402c8c:	4798      	blx	r3
  402c8e:	2800      	cmp	r0, #0
  402c90:	d0ab      	beq.n	402bea <hif_send+0xe2>
  402c92:	2300      	movs	r3, #0
  402c94:	9303      	str	r3, [sp, #12]
  402c96:	e7a8      	b.n	402bea <hif_send+0xe2>
  402c98:	f240 129f 	movw	r2, #415	; 0x19f
  402c9c:	490d      	ldr	r1, [pc, #52]	; (402cd4 <hif_send+0x1cc>)
  402c9e:	480e      	ldr	r0, [pc, #56]	; (402cd8 <hif_send+0x1d0>)
  402ca0:	4c0e      	ldr	r4, [pc, #56]	; (402cdc <hif_send+0x1d4>)
  402ca2:	47a0      	blx	r4
  402ca4:	480e      	ldr	r0, [pc, #56]	; (402ce0 <hif_send+0x1d8>)
  402ca6:	47a0      	blx	r4
  402ca8:	480e      	ldr	r0, [pc, #56]	; (402ce4 <hif_send+0x1dc>)
  402caa:	47a0      	blx	r4
  402cac:	4658      	mov	r0, fp
  402cae:	b007      	add	sp, #28
  402cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402cb4:	f06f 0b02 	mvn.w	fp, #2
  402cb8:	e7f8      	b.n	402cac <hif_send+0x1a4>
  402cba:	bf00      	nop
  402cbc:	00402a21 	.word	0x00402a21
  402cc0:	00403cd9 	.word	0x00403cd9
  402cc4:	00403ccd 	.word	0x00403ccd
  402cc8:	00403d41 	.word	0x00403d41
  402ccc:	00402a7d 	.word	0x00402a7d
  402cd0:	00150400 	.word	0x00150400
  402cd4:	0040cda4 	.word	0x0040cda4
  402cd8:	0040cd74 	.word	0x0040cd74
  402cdc:	004066e9 	.word	0x004066e9
  402ce0:	0040cff8 	.word	0x0040cff8
  402ce4:	0040cda0 	.word	0x0040cda0

00402ce8 <hif_handle_isr>:
  402ce8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402cec:	b087      	sub	sp, #28
  402cee:	f8df 92f8 	ldr.w	r9, [pc, #760]	; 402fe8 <hif_handle_isr+0x300>
  402cf2:	4fa2      	ldr	r7, [pc, #648]	; (402f7c <hif_handle_isr+0x294>)
  402cf4:	4ea2      	ldr	r6, [pc, #648]	; (402f80 <hif_handle_isr+0x298>)
  402cf6:	f8df 82f4 	ldr.w	r8, [pc, #756]	; 402fec <hif_handle_isr+0x304>
  402cfa:	e0d5      	b.n	402ea8 <hif_handle_isr+0x1c0>
  402cfc:	2204      	movs	r2, #4
  402cfe:	a904      	add	r1, sp, #16
  402d00:	9805      	ldr	r0, [sp, #20]
  402d02:	4ba0      	ldr	r3, [pc, #640]	; (402f84 <hif_handle_isr+0x29c>)
  402d04:	4798      	blx	r3
  402d06:	f8bd 3012 	ldrh.w	r3, [sp, #18]
  402d0a:	b29b      	uxth	r3, r3
  402d0c:	f8ad 3012 	strh.w	r3, [sp, #18]
  402d10:	4604      	mov	r4, r0
  402d12:	2800      	cmp	r0, #0
  402d14:	d130      	bne.n	402d78 <hif_handle_isr+0x90>
  402d16:	f8bd 3012 	ldrh.w	r3, [sp, #18]
  402d1a:	b29b      	uxth	r3, r3
  402d1c:	429d      	cmp	r5, r3
  402d1e:	d005      	beq.n	402d2c <hif_handle_isr+0x44>
  402d20:	f8bd 3012 	ldrh.w	r3, [sp, #18]
  402d24:	b29b      	uxth	r3, r3
  402d26:	1aeb      	subs	r3, r5, r3
  402d28:	2b04      	cmp	r3, #4
  402d2a:	dc33      	bgt.n	402d94 <hif_handle_isr+0xac>
  402d2c:	f89d 3010 	ldrb.w	r3, [sp, #16]
  402d30:	b2db      	uxtb	r3, r3
  402d32:	2b01      	cmp	r3, #1
  402d34:	d047      	beq.n	402dc6 <hif_handle_isr+0xde>
  402d36:	f89d 3010 	ldrb.w	r3, [sp, #16]
  402d3a:	b2db      	uxtb	r3, r3
  402d3c:	2b02      	cmp	r3, #2
  402d3e:	d05f      	beq.n	402e00 <hif_handle_isr+0x118>
  402d40:	f89d 3010 	ldrb.w	r3, [sp, #16]
  402d44:	b2db      	uxtb	r3, r3
  402d46:	2b04      	cmp	r3, #4
  402d48:	d068      	beq.n	402e1c <hif_handle_isr+0x134>
  402d4a:	f89d 3010 	ldrb.w	r3, [sp, #16]
  402d4e:	b2db      	uxtb	r3, r3
  402d50:	2b06      	cmp	r3, #6
  402d52:	d071      	beq.n	402e38 <hif_handle_isr+0x150>
  402d54:	f89d 3010 	ldrb.w	r3, [sp, #16]
  402d58:	b2db      	uxtb	r3, r3
  402d5a:	2b07      	cmp	r3, #7
  402d5c:	d07a      	beq.n	402e54 <hif_handle_isr+0x16c>
  402d5e:	f240 2202 	movw	r2, #514	; 0x202
  402d62:	4641      	mov	r1, r8
  402d64:	4630      	mov	r0, r6
  402d66:	4c88      	ldr	r4, [pc, #544]	; (402f88 <hif_handle_isr+0x2a0>)
  402d68:	47a0      	blx	r4
  402d6a:	4888      	ldr	r0, [pc, #544]	; (402f8c <hif_handle_isr+0x2a4>)
  402d6c:	47a0      	blx	r4
  402d6e:	4888      	ldr	r0, [pc, #544]	; (402f90 <hif_handle_isr+0x2a8>)
  402d70:	47a0      	blx	r4
  402d72:	f06f 0405 	mvn.w	r4, #5
  402d76:	e096      	b.n	402ea6 <hif_handle_isr+0x1be>
  402d78:	f44f 72eb 	mov.w	r2, #470	; 0x1d6
  402d7c:	4641      	mov	r1, r8
  402d7e:	4630      	mov	r0, r6
  402d80:	4d81      	ldr	r5, [pc, #516]	; (402f88 <hif_handle_isr+0x2a0>)
  402d82:	47a8      	blx	r5
  402d84:	4883      	ldr	r0, [pc, #524]	; (402f94 <hif_handle_isr+0x2ac>)
  402d86:	47a8      	blx	r5
  402d88:	4881      	ldr	r0, [pc, #516]	; (402f90 <hif_handle_isr+0x2a8>)
  402d8a:	47a8      	blx	r5
  402d8c:	2001      	movs	r0, #1
  402d8e:	4b82      	ldr	r3, [pc, #520]	; (402f98 <hif_handle_isr+0x2b0>)
  402d90:	4798      	blx	r3
  402d92:	e088      	b.n	402ea6 <hif_handle_isr+0x1be>
  402d94:	f240 12df 	movw	r2, #479	; 0x1df
  402d98:	4641      	mov	r1, r8
  402d9a:	4630      	mov	r0, r6
  402d9c:	4c7a      	ldr	r4, [pc, #488]	; (402f88 <hif_handle_isr+0x2a0>)
  402d9e:	47a0      	blx	r4
  402da0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
  402da4:	f89d 3010 	ldrb.w	r3, [sp, #16]
  402da8:	f89d 1011 	ldrb.w	r1, [sp, #17]
  402dac:	9100      	str	r1, [sp, #0]
  402dae:	b292      	uxth	r2, r2
  402db0:	4629      	mov	r1, r5
  402db2:	487a      	ldr	r0, [pc, #488]	; (402f9c <hif_handle_isr+0x2b4>)
  402db4:	47a0      	blx	r4
  402db6:	4876      	ldr	r0, [pc, #472]	; (402f90 <hif_handle_isr+0x2a8>)
  402db8:	47a0      	blx	r4
  402dba:	2001      	movs	r0, #1
  402dbc:	4b76      	ldr	r3, [pc, #472]	; (402f98 <hif_handle_isr+0x2b0>)
  402dbe:	4798      	blx	r3
  402dc0:	f06f 0405 	mvn.w	r4, #5
  402dc4:	e06f      	b.n	402ea6 <hif_handle_isr+0x1be>
  402dc6:	4b76      	ldr	r3, [pc, #472]	; (402fa0 <hif_handle_isr+0x2b8>)
  402dc8:	681b      	ldr	r3, [r3, #0]
  402dca:	b143      	cbz	r3, 402dde <hif_handle_isr+0xf6>
  402dcc:	f89d 0011 	ldrb.w	r0, [sp, #17]
  402dd0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
  402dd4:	3908      	subs	r1, #8
  402dd6:	9a05      	ldr	r2, [sp, #20]
  402dd8:	3208      	adds	r2, #8
  402dda:	b289      	uxth	r1, r1
  402ddc:	4798      	blx	r3
  402dde:	4b71      	ldr	r3, [pc, #452]	; (402fa4 <hif_handle_isr+0x2bc>)
  402de0:	781b      	ldrb	r3, [r3, #0]
  402de2:	2b00      	cmp	r3, #0
  402de4:	d15c      	bne.n	402ea0 <hif_handle_isr+0x1b8>
  402de6:	f240 2209 	movw	r2, #521	; 0x209
  402dea:	4641      	mov	r1, r8
  402dec:	4630      	mov	r0, r6
  402dee:	4c66      	ldr	r4, [pc, #408]	; (402f88 <hif_handle_isr+0x2a0>)
  402df0:	47a0      	blx	r4
  402df2:	486d      	ldr	r0, [pc, #436]	; (402fa8 <hif_handle_isr+0x2c0>)
  402df4:	47a0      	blx	r4
  402df6:	4866      	ldr	r0, [pc, #408]	; (402f90 <hif_handle_isr+0x2a8>)
  402df8:	47a0      	blx	r4
  402dfa:	4b6c      	ldr	r3, [pc, #432]	; (402fac <hif_handle_isr+0x2c4>)
  402dfc:	4798      	blx	r3
  402dfe:	e04f      	b.n	402ea0 <hif_handle_isr+0x1b8>
  402e00:	4b6b      	ldr	r3, [pc, #428]	; (402fb0 <hif_handle_isr+0x2c8>)
  402e02:	681b      	ldr	r3, [r3, #0]
  402e04:	2b00      	cmp	r3, #0
  402e06:	d0ea      	beq.n	402dde <hif_handle_isr+0xf6>
  402e08:	f89d 0011 	ldrb.w	r0, [sp, #17]
  402e0c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
  402e10:	3908      	subs	r1, #8
  402e12:	9a05      	ldr	r2, [sp, #20]
  402e14:	3208      	adds	r2, #8
  402e16:	b289      	uxth	r1, r1
  402e18:	4798      	blx	r3
  402e1a:	e7e0      	b.n	402dde <hif_handle_isr+0xf6>
  402e1c:	4b65      	ldr	r3, [pc, #404]	; (402fb4 <hif_handle_isr+0x2cc>)
  402e1e:	681b      	ldr	r3, [r3, #0]
  402e20:	2b00      	cmp	r3, #0
  402e22:	d0dc      	beq.n	402dde <hif_handle_isr+0xf6>
  402e24:	f89d 0011 	ldrb.w	r0, [sp, #17]
  402e28:	f8bd 1012 	ldrh.w	r1, [sp, #18]
  402e2c:	3908      	subs	r1, #8
  402e2e:	9a05      	ldr	r2, [sp, #20]
  402e30:	3208      	adds	r2, #8
  402e32:	b289      	uxth	r1, r1
  402e34:	4798      	blx	r3
  402e36:	e7d2      	b.n	402dde <hif_handle_isr+0xf6>
  402e38:	4b5f      	ldr	r3, [pc, #380]	; (402fb8 <hif_handle_isr+0x2d0>)
  402e3a:	681b      	ldr	r3, [r3, #0]
  402e3c:	2b00      	cmp	r3, #0
  402e3e:	d0ce      	beq.n	402dde <hif_handle_isr+0xf6>
  402e40:	f89d 0011 	ldrb.w	r0, [sp, #17]
  402e44:	f8bd 1012 	ldrh.w	r1, [sp, #18]
  402e48:	3908      	subs	r1, #8
  402e4a:	9a05      	ldr	r2, [sp, #20]
  402e4c:	3208      	adds	r2, #8
  402e4e:	b289      	uxth	r1, r1
  402e50:	4798      	blx	r3
  402e52:	e7c4      	b.n	402dde <hif_handle_isr+0xf6>
  402e54:	4b59      	ldr	r3, [pc, #356]	; (402fbc <hif_handle_isr+0x2d4>)
  402e56:	681b      	ldr	r3, [r3, #0]
  402e58:	2b00      	cmp	r3, #0
  402e5a:	d0c0      	beq.n	402dde <hif_handle_isr+0xf6>
  402e5c:	f89d 0011 	ldrb.w	r0, [sp, #17]
  402e60:	f8bd 1012 	ldrh.w	r1, [sp, #18]
  402e64:	3908      	subs	r1, #8
  402e66:	9a05      	ldr	r2, [sp, #20]
  402e68:	3208      	adds	r2, #8
  402e6a:	b289      	uxth	r1, r1
  402e6c:	4798      	blx	r3
  402e6e:	e7b6      	b.n	402dde <hif_handle_isr+0xf6>
  402e70:	f240 2211 	movw	r2, #529	; 0x211
  402e74:	4641      	mov	r1, r8
  402e76:	4630      	mov	r0, r6
  402e78:	4c43      	ldr	r4, [pc, #268]	; (402f88 <hif_handle_isr+0x2a0>)
  402e7a:	47a0      	blx	r4
  402e7c:	4850      	ldr	r0, [pc, #320]	; (402fc0 <hif_handle_isr+0x2d8>)
  402e7e:	47a0      	blx	r4
  402e80:	4843      	ldr	r0, [pc, #268]	; (402f90 <hif_handle_isr+0x2a8>)
  402e82:	47a0      	blx	r4
  402e84:	f06f 0401 	mvn.w	r4, #1
  402e88:	e02f      	b.n	402eea <hif_handle_isr+0x202>
  402e8a:	f44f 7206 	mov.w	r2, #536	; 0x218
  402e8e:	4641      	mov	r1, r8
  402e90:	4630      	mov	r0, r6
  402e92:	4c3d      	ldr	r4, [pc, #244]	; (402f88 <hif_handle_isr+0x2a0>)
  402e94:	47a0      	blx	r4
  402e96:	9903      	ldr	r1, [sp, #12]
  402e98:	484a      	ldr	r0, [pc, #296]	; (402fc4 <hif_handle_isr+0x2dc>)
  402e9a:	47a0      	blx	r4
  402e9c:	483c      	ldr	r0, [pc, #240]	; (402f90 <hif_handle_isr+0x2a8>)
  402e9e:	47a0      	blx	r4
  402ea0:	4b49      	ldr	r3, [pc, #292]	; (402fc8 <hif_handle_isr+0x2e0>)
  402ea2:	4798      	blx	r3
  402ea4:	4604      	mov	r4, r0
  402ea6:	bb04      	cbnz	r4, 402eea <hif_handle_isr+0x202>
  402ea8:	f899 3000 	ldrb.w	r3, [r9]
  402eac:	2b00      	cmp	r3, #0
  402eae:	f000 809f 	beq.w	402ff0 <hif_handle_isr+0x308>
  402eb2:	f899 3000 	ldrb.w	r3, [r9]
  402eb6:	3b01      	subs	r3, #1
  402eb8:	b2db      	uxtb	r3, r3
  402eba:	f889 3000 	strb.w	r3, [r9]
  402ebe:	e01f      	b.n	402f00 <hif_handle_isr+0x218>
  402ec0:	f240 221e 	movw	r2, #542	; 0x21e
  402ec4:	4641      	mov	r1, r8
  402ec6:	4630      	mov	r0, r6
  402ec8:	4d2f      	ldr	r5, [pc, #188]	; (402f88 <hif_handle_isr+0x2a0>)
  402eca:	47a8      	blx	r5
  402ecc:	483f      	ldr	r0, [pc, #252]	; (402fcc <hif_handle_isr+0x2e4>)
  402ece:	47a8      	blx	r5
  402ed0:	482f      	ldr	r0, [pc, #188]	; (402f90 <hif_handle_isr+0x2a8>)
  402ed2:	47a8      	blx	r5
  402ed4:	e009      	b.n	402eea <hif_handle_isr+0x202>
  402ed6:	f44f 7209 	mov.w	r2, #548	; 0x224
  402eda:	4641      	mov	r1, r8
  402edc:	4630      	mov	r0, r6
  402ede:	4d2a      	ldr	r5, [pc, #168]	; (402f88 <hif_handle_isr+0x2a0>)
  402ee0:	47a8      	blx	r5
  402ee2:	483b      	ldr	r0, [pc, #236]	; (402fd0 <hif_handle_isr+0x2e8>)
  402ee4:	47a8      	blx	r5
  402ee6:	482a      	ldr	r0, [pc, #168]	; (402f90 <hif_handle_isr+0x2a8>)
  402ee8:	47a8      	blx	r5
  402eea:	f240 2243 	movw	r2, #579	; 0x243
  402eee:	4939      	ldr	r1, [pc, #228]	; (402fd4 <hif_handle_isr+0x2ec>)
  402ef0:	4630      	mov	r0, r6
  402ef2:	4d25      	ldr	r5, [pc, #148]	; (402f88 <hif_handle_isr+0x2a0>)
  402ef4:	47a8      	blx	r5
  402ef6:	4621      	mov	r1, r4
  402ef8:	4837      	ldr	r0, [pc, #220]	; (402fd8 <hif_handle_isr+0x2f0>)
  402efa:	47a8      	blx	r5
  402efc:	4824      	ldr	r0, [pc, #144]	; (402f90 <hif_handle_isr+0x2a8>)
  402efe:	47a8      	blx	r5
  402f00:	47b8      	blx	r7
  402f02:	4604      	mov	r4, r0
  402f04:	2800      	cmp	r0, #0
  402f06:	d1e6      	bne.n	402ed6 <hif_handle_isr+0x1ee>
  402f08:	a903      	add	r1, sp, #12
  402f0a:	f241 0070 	movw	r0, #4208	; 0x1070
  402f0e:	4b33      	ldr	r3, [pc, #204]	; (402fdc <hif_handle_isr+0x2f4>)
  402f10:	4798      	blx	r3
  402f12:	4604      	mov	r4, r0
  402f14:	2800      	cmp	r0, #0
  402f16:	d1d3      	bne.n	402ec0 <hif_handle_isr+0x1d8>
  402f18:	9b03      	ldr	r3, [sp, #12]
  402f1a:	f013 0f01 	tst.w	r3, #1
  402f1e:	d0b4      	beq.n	402e8a <hif_handle_isr+0x1a2>
  402f20:	4b1d      	ldr	r3, [pc, #116]	; (402f98 <hif_handle_isr+0x2b0>)
  402f22:	4798      	blx	r3
  402f24:	9903      	ldr	r1, [sp, #12]
  402f26:	f021 0101 	bic.w	r1, r1, #1
  402f2a:	9103      	str	r1, [sp, #12]
  402f2c:	f241 0070 	movw	r0, #4208	; 0x1070
  402f30:	4b2b      	ldr	r3, [pc, #172]	; (402fe0 <hif_handle_isr+0x2f8>)
  402f32:	4798      	blx	r3
  402f34:	4604      	mov	r4, r0
  402f36:	2800      	cmp	r0, #0
  402f38:	d1d7      	bne.n	402eea <hif_handle_isr+0x202>
  402f3a:	2200      	movs	r2, #0
  402f3c:	4b19      	ldr	r3, [pc, #100]	; (402fa4 <hif_handle_isr+0x2bc>)
  402f3e:	701a      	strb	r2, [r3, #0]
  402f40:	9d03      	ldr	r5, [sp, #12]
  402f42:	f3c5 058b 	ubfx	r5, r5, #2, #12
  402f46:	2d00      	cmp	r5, #0
  402f48:	d092      	beq.n	402e70 <hif_handle_isr+0x188>
  402f4a:	a906      	add	r1, sp, #24
  402f4c:	f841 2d04 	str.w	r2, [r1, #-4]!
  402f50:	f241 0084 	movw	r0, #4228	; 0x1084
  402f54:	4b21      	ldr	r3, [pc, #132]	; (402fdc <hif_handle_isr+0x2f4>)
  402f56:	4798      	blx	r3
  402f58:	4604      	mov	r4, r0
  402f5a:	2800      	cmp	r0, #0
  402f5c:	f43f aece 	beq.w	402cfc <hif_handle_isr+0x14>
  402f60:	f44f 72e7 	mov.w	r2, #462	; 0x1ce
  402f64:	4641      	mov	r1, r8
  402f66:	4630      	mov	r0, r6
  402f68:	4d07      	ldr	r5, [pc, #28]	; (402f88 <hif_handle_isr+0x2a0>)
  402f6a:	47a8      	blx	r5
  402f6c:	481d      	ldr	r0, [pc, #116]	; (402fe4 <hif_handle_isr+0x2fc>)
  402f6e:	47a8      	blx	r5
  402f70:	4807      	ldr	r0, [pc, #28]	; (402f90 <hif_handle_isr+0x2a8>)
  402f72:	47a8      	blx	r5
  402f74:	2001      	movs	r0, #1
  402f76:	4b08      	ldr	r3, [pc, #32]	; (402f98 <hif_handle_isr+0x2b0>)
  402f78:	4798      	blx	r3
  402f7a:	e794      	b.n	402ea6 <hif_handle_isr+0x1be>
  402f7c:	00402a21 	.word	0x00402a21
  402f80:	0040cd74 	.word	0x0040cd74
  402f84:	00403ce5 	.word	0x00403ce5
  402f88:	004066e9 	.word	0x004066e9
  402f8c:	0040ce64 	.word	0x0040ce64
  402f90:	0040cda0 	.word	0x0040cda0
  402f94:	0040ce0c 	.word	0x0040ce0c
  402f98:	00402739 	.word	0x00402739
  402f9c:	0040ce24 	.word	0x0040ce24
  402fa0:	2040db78 	.word	0x2040db78
  402fa4:	2040db62 	.word	0x2040db62
  402fa8:	0040ce7c 	.word	0x0040ce7c
  402fac:	004029e1 	.word	0x004029e1
  402fb0:	2040db6c 	.word	0x2040db6c
  402fb4:	2040db70 	.word	0x2040db70
  402fb8:	2040db64 	.word	0x2040db64
  402fbc:	2040db74 	.word	0x2040db74
  402fc0:	0040cea0 	.word	0x0040cea0
  402fc4:	0040ceb4 	.word	0x0040ceb4
  402fc8:	00402a7d 	.word	0x00402a7d
  402fcc:	0040ced0 	.word	0x0040ced0
  402fd0:	0040cef4 	.word	0x0040cef4
  402fd4:	0040cdb8 	.word	0x0040cdb8
  402fd8:	0040cf14 	.word	0x0040cf14
  402fdc:	00403ccd 	.word	0x00403ccd
  402fe0:	00403cd9 	.word	0x00403cd9
  402fe4:	0040cde4 	.word	0x0040cde4
  402fe8:	2040db63 	.word	0x2040db63
  402fec:	0040cdb0 	.word	0x0040cdb0
  402ff0:	2000      	movs	r0, #0
  402ff2:	b007      	add	sp, #28
  402ff4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00402ff8 <hif_receive>:
  402ff8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402ffc:	b083      	sub	sp, #12
  402ffe:	461c      	mov	r4, r3
  403000:	2a00      	cmp	r2, #0
  403002:	bf18      	it	ne
  403004:	2900      	cmpne	r1, #0
  403006:	d003      	beq.n	403010 <hif_receive+0x18>
  403008:	4605      	mov	r5, r0
  40300a:	460f      	mov	r7, r1
  40300c:	4616      	mov	r6, r2
  40300e:	b9b8      	cbnz	r0, 403040 <hif_receive+0x48>
  403010:	b14c      	cbz	r4, 403026 <hif_receive+0x2e>
  403012:	2201      	movs	r2, #1
  403014:	4b32      	ldr	r3, [pc, #200]	; (4030e0 <hif_receive+0xe8>)
  403016:	701a      	strb	r2, [r3, #0]
  403018:	4b32      	ldr	r3, [pc, #200]	; (4030e4 <hif_receive+0xec>)
  40301a:	4798      	blx	r3
  40301c:	4603      	mov	r3, r0
  40301e:	4618      	mov	r0, r3
  403020:	b003      	add	sp, #12
  403022:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403026:	f240 2269 	movw	r2, #617	; 0x269
  40302a:	492f      	ldr	r1, [pc, #188]	; (4030e8 <hif_receive+0xf0>)
  40302c:	482f      	ldr	r0, [pc, #188]	; (4030ec <hif_receive+0xf4>)
  40302e:	4c30      	ldr	r4, [pc, #192]	; (4030f0 <hif_receive+0xf8>)
  403030:	47a0      	blx	r4
  403032:	4830      	ldr	r0, [pc, #192]	; (4030f4 <hif_receive+0xfc>)
  403034:	47a0      	blx	r4
  403036:	4830      	ldr	r0, [pc, #192]	; (4030f8 <hif_receive+0x100>)
  403038:	47a0      	blx	r4
  40303a:	f06f 030b 	mvn.w	r3, #11
  40303e:	e7ee      	b.n	40301e <hif_receive+0x26>
  403040:	4669      	mov	r1, sp
  403042:	f241 0070 	movw	r0, #4208	; 0x1070
  403046:	4b2d      	ldr	r3, [pc, #180]	; (4030fc <hif_receive+0x104>)
  403048:	4798      	blx	r3
  40304a:	4603      	mov	r3, r0
  40304c:	2800      	cmp	r0, #0
  40304e:	d1e6      	bne.n	40301e <hif_receive+0x26>
  403050:	f8dd 8000 	ldr.w	r8, [sp]
  403054:	a901      	add	r1, sp, #4
  403056:	f241 0084 	movw	r0, #4228	; 0x1084
  40305a:	4b28      	ldr	r3, [pc, #160]	; (4030fc <hif_receive+0x104>)
  40305c:	4798      	blx	r3
  40305e:	4603      	mov	r3, r0
  403060:	2800      	cmp	r0, #0
  403062:	d1dc      	bne.n	40301e <hif_receive+0x26>
  403064:	f3c8 088b 	ubfx	r8, r8, #2, #12
  403068:	4546      	cmp	r6, r8
  40306a:	d81c      	bhi.n	4030a6 <hif_receive+0xae>
  40306c:	9b01      	ldr	r3, [sp, #4]
  40306e:	429d      	cmp	r5, r3
  403070:	d328      	bcc.n	4030c4 <hif_receive+0xcc>
  403072:	eb05 0906 	add.w	r9, r5, r6
  403076:	4443      	add	r3, r8
  403078:	4599      	cmp	r9, r3
  40307a:	d823      	bhi.n	4030c4 <hif_receive+0xcc>
  40307c:	4632      	mov	r2, r6
  40307e:	4639      	mov	r1, r7
  403080:	4628      	mov	r0, r5
  403082:	4b1f      	ldr	r3, [pc, #124]	; (403100 <hif_receive+0x108>)
  403084:	4798      	blx	r3
  403086:	4603      	mov	r3, r0
  403088:	2800      	cmp	r0, #0
  40308a:	d1c8      	bne.n	40301e <hif_receive+0x26>
  40308c:	9a01      	ldr	r2, [sp, #4]
  40308e:	4490      	add	r8, r2
  403090:	45c8      	cmp	r8, r9
  403092:	d001      	beq.n	403098 <hif_receive+0xa0>
  403094:	2c00      	cmp	r4, #0
  403096:	d0c2      	beq.n	40301e <hif_receive+0x26>
  403098:	2201      	movs	r2, #1
  40309a:	4b11      	ldr	r3, [pc, #68]	; (4030e0 <hif_receive+0xe8>)
  40309c:	701a      	strb	r2, [r3, #0]
  40309e:	4b11      	ldr	r3, [pc, #68]	; (4030e4 <hif_receive+0xec>)
  4030a0:	4798      	blx	r3
  4030a2:	4603      	mov	r3, r0
  4030a4:	e7bb      	b.n	40301e <hif_receive+0x26>
  4030a6:	f240 227a 	movw	r2, #634	; 0x27a
  4030aa:	490f      	ldr	r1, [pc, #60]	; (4030e8 <hif_receive+0xf0>)
  4030ac:	480f      	ldr	r0, [pc, #60]	; (4030ec <hif_receive+0xf4>)
  4030ae:	4c10      	ldr	r4, [pc, #64]	; (4030f0 <hif_receive+0xf8>)
  4030b0:	47a0      	blx	r4
  4030b2:	4642      	mov	r2, r8
  4030b4:	4631      	mov	r1, r6
  4030b6:	4813      	ldr	r0, [pc, #76]	; (403104 <hif_receive+0x10c>)
  4030b8:	47a0      	blx	r4
  4030ba:	480f      	ldr	r0, [pc, #60]	; (4030f8 <hif_receive+0x100>)
  4030bc:	47a0      	blx	r4
  4030be:	f06f 030b 	mvn.w	r3, #11
  4030c2:	e7ac      	b.n	40301e <hif_receive+0x26>
  4030c4:	f44f 7220 	mov.w	r2, #640	; 0x280
  4030c8:	4907      	ldr	r1, [pc, #28]	; (4030e8 <hif_receive+0xf0>)
  4030ca:	4808      	ldr	r0, [pc, #32]	; (4030ec <hif_receive+0xf4>)
  4030cc:	4c08      	ldr	r4, [pc, #32]	; (4030f0 <hif_receive+0xf8>)
  4030ce:	47a0      	blx	r4
  4030d0:	480d      	ldr	r0, [pc, #52]	; (403108 <hif_receive+0x110>)
  4030d2:	47a0      	blx	r4
  4030d4:	4808      	ldr	r0, [pc, #32]	; (4030f8 <hif_receive+0x100>)
  4030d6:	47a0      	blx	r4
  4030d8:	f06f 030b 	mvn.w	r3, #11
  4030dc:	e79f      	b.n	40301e <hif_receive+0x26>
  4030de:	bf00      	nop
  4030e0:	2040db62 	.word	0x2040db62
  4030e4:	004029e1 	.word	0x004029e1
  4030e8:	0040cdc8 	.word	0x0040cdc8
  4030ec:	0040cd74 	.word	0x0040cd74
  4030f0:	004066e9 	.word	0x004066e9
  4030f4:	0040cf44 	.word	0x0040cf44
  4030f8:	0040cda0 	.word	0x0040cda0
  4030fc:	00403ccd 	.word	0x00403ccd
  403100:	00403ce5 	.word	0x00403ce5
  403104:	0040cf64 	.word	0x0040cf64
  403108:	0040cfa8 	.word	0x0040cfa8

0040310c <hif_register_cb>:
  40310c:	b538      	push	{r3, r4, r5, lr}
  40310e:	1e43      	subs	r3, r0, #1
  403110:	2b06      	cmp	r3, #6
  403112:	d81d      	bhi.n	403150 <hif_register_cb+0x44>
  403114:	e8df f003 	tbb	[pc, r3]
  403118:	0c100408 	.word	0x0c100408
  40311c:	141c      	.short	0x141c
  40311e:	18          	.byte	0x18
  40311f:	00          	.byte	0x00
  403120:	4b13      	ldr	r3, [pc, #76]	; (403170 <hif_register_cb+0x64>)
  403122:	6019      	str	r1, [r3, #0]
  403124:	2000      	movs	r0, #0
  403126:	bd38      	pop	{r3, r4, r5, pc}
  403128:	4b12      	ldr	r3, [pc, #72]	; (403174 <hif_register_cb+0x68>)
  40312a:	6019      	str	r1, [r3, #0]
  40312c:	2000      	movs	r0, #0
  40312e:	bd38      	pop	{r3, r4, r5, pc}
  403130:	4b11      	ldr	r3, [pc, #68]	; (403178 <hif_register_cb+0x6c>)
  403132:	6019      	str	r1, [r3, #0]
  403134:	2000      	movs	r0, #0
  403136:	bd38      	pop	{r3, r4, r5, pc}
  403138:	4b10      	ldr	r3, [pc, #64]	; (40317c <hif_register_cb+0x70>)
  40313a:	6019      	str	r1, [r3, #0]
  40313c:	2000      	movs	r0, #0
  40313e:	bd38      	pop	{r3, r4, r5, pc}
  403140:	4b0f      	ldr	r3, [pc, #60]	; (403180 <hif_register_cb+0x74>)
  403142:	6019      	str	r1, [r3, #0]
  403144:	2000      	movs	r0, #0
  403146:	bd38      	pop	{r3, r4, r5, pc}
  403148:	4b0e      	ldr	r3, [pc, #56]	; (403184 <hif_register_cb+0x78>)
  40314a:	6019      	str	r1, [r3, #0]
  40314c:	2000      	movs	r0, #0
  40314e:	bd38      	pop	{r3, r4, r5, pc}
  403150:	4604      	mov	r4, r0
  403152:	f240 22b9 	movw	r2, #697	; 0x2b9
  403156:	490c      	ldr	r1, [pc, #48]	; (403188 <hif_register_cb+0x7c>)
  403158:	480c      	ldr	r0, [pc, #48]	; (40318c <hif_register_cb+0x80>)
  40315a:	4d0d      	ldr	r5, [pc, #52]	; (403190 <hif_register_cb+0x84>)
  40315c:	47a8      	blx	r5
  40315e:	4621      	mov	r1, r4
  403160:	480c      	ldr	r0, [pc, #48]	; (403194 <hif_register_cb+0x88>)
  403162:	47a8      	blx	r5
  403164:	480c      	ldr	r0, [pc, #48]	; (403198 <hif_register_cb+0x8c>)
  403166:	47a8      	blx	r5
  403168:	f06f 000b 	mvn.w	r0, #11
  40316c:	bd38      	pop	{r3, r4, r5, pc}
  40316e:	bf00      	nop
  403170:	2040db6c 	.word	0x2040db6c
  403174:	2040db78 	.word	0x2040db78
  403178:	2040db70 	.word	0x2040db70
  40317c:	2040db68 	.word	0x2040db68
  403180:	2040db64 	.word	0x2040db64
  403184:	2040db74 	.word	0x2040db74
  403188:	0040cdd4 	.word	0x0040cdd4
  40318c:	0040cd74 	.word	0x0040cd74
  403190:	004066e9 	.word	0x004066e9
  403194:	0040cfec 	.word	0x0040cfec
  403198:	0040cda0 	.word	0x0040cda0

0040319c <hif_init>:
  40319c:	b510      	push	{r4, lr}
  40319e:	2400      	movs	r4, #0
  4031a0:	4b09      	ldr	r3, [pc, #36]	; (4031c8 <hif_init+0x2c>)
  4031a2:	601c      	str	r4, [r3, #0]
  4031a4:	4b09      	ldr	r3, [pc, #36]	; (4031cc <hif_init+0x30>)
  4031a6:	601c      	str	r4, [r3, #0]
  4031a8:	4b09      	ldr	r3, [pc, #36]	; (4031d0 <hif_init+0x34>)
  4031aa:	701c      	strb	r4, [r3, #0]
  4031ac:	4b09      	ldr	r3, [pc, #36]	; (4031d4 <hif_init+0x38>)
  4031ae:	701c      	strb	r4, [r3, #0]
  4031b0:	4b09      	ldr	r3, [pc, #36]	; (4031d8 <hif_init+0x3c>)
  4031b2:	701c      	strb	r4, [r3, #0]
  4031b4:	4809      	ldr	r0, [pc, #36]	; (4031dc <hif_init+0x40>)
  4031b6:	4b0a      	ldr	r3, [pc, #40]	; (4031e0 <hif_init+0x44>)
  4031b8:	4798      	blx	r3
  4031ba:	490a      	ldr	r1, [pc, #40]	; (4031e4 <hif_init+0x48>)
  4031bc:	2003      	movs	r0, #3
  4031be:	4b0a      	ldr	r3, [pc, #40]	; (4031e8 <hif_init+0x4c>)
  4031c0:	4798      	blx	r3
  4031c2:	4620      	mov	r0, r4
  4031c4:	bd10      	pop	{r4, pc}
  4031c6:	bf00      	nop
  4031c8:	2040db78 	.word	0x2040db78
  4031cc:	2040db6c 	.word	0x2040db6c
  4031d0:	2040db61 	.word	0x2040db61
  4031d4:	2040db60 	.word	0x2040db60
  4031d8:	2040db63 	.word	0x2040db63
  4031dc:	004029cd 	.word	0x004029cd
  4031e0:	004026b9 	.word	0x004026b9
  4031e4:	004029dd 	.word	0x004029dd
  4031e8:	0040310d 	.word	0x0040310d

004031ec <m2m_wifi_cb>:
  4031ec:	b530      	push	{r4, r5, lr}
  4031ee:	b09f      	sub	sp, #124	; 0x7c
  4031f0:	4615      	mov	r5, r2
  4031f2:	282c      	cmp	r0, #44	; 0x2c
  4031f4:	d02e      	beq.n	403254 <m2m_wifi_cb+0x68>
  4031f6:	4604      	mov	r4, r0
  4031f8:	281b      	cmp	r0, #27
  4031fa:	d03b      	beq.n	403274 <m2m_wifi_cb+0x88>
  4031fc:	2806      	cmp	r0, #6
  4031fe:	d049      	beq.n	403294 <m2m_wifi_cb+0xa8>
  403200:	280e      	cmp	r0, #14
  403202:	d025      	beq.n	403250 <m2m_wifi_cb+0x64>
  403204:	2832      	cmp	r0, #50	; 0x32
  403206:	d055      	beq.n	4032b4 <m2m_wifi_cb+0xc8>
  403208:	282f      	cmp	r0, #47	; 0x2f
  40320a:	d063      	beq.n	4032d4 <m2m_wifi_cb+0xe8>
  40320c:	2834      	cmp	r0, #52	; 0x34
  40320e:	d076      	beq.n	4032fe <m2m_wifi_cb+0x112>
  403210:	2811      	cmp	r0, #17
  403212:	f000 8093 	beq.w	40333c <m2m_wifi_cb+0x150>
  403216:	2813      	cmp	r0, #19
  403218:	f000 80a8 	beq.w	40336c <m2m_wifi_cb+0x180>
  40321c:	2804      	cmp	r0, #4
  40321e:	f000 80b7 	beq.w	403390 <m2m_wifi_cb+0x1a4>
  403222:	2865      	cmp	r0, #101	; 0x65
  403224:	f000 80c6 	beq.w	4033b4 <m2m_wifi_cb+0x1c8>
  403228:	2809      	cmp	r0, #9
  40322a:	f000 80d5 	beq.w	4033d8 <m2m_wifi_cb+0x1ec>
  40322e:	282a      	cmp	r0, #42	; 0x2a
  403230:	f000 80e4 	beq.w	4033fc <m2m_wifi_cb+0x210>
  403234:	2820      	cmp	r0, #32
  403236:	f000 80f3 	beq.w	403420 <m2m_wifi_cb+0x234>
  40323a:	f44f 7295 	mov.w	r2, #298	; 0x12a
  40323e:	4986      	ldr	r1, [pc, #536]	; (403458 <m2m_wifi_cb+0x26c>)
  403240:	4886      	ldr	r0, [pc, #536]	; (40345c <m2m_wifi_cb+0x270>)
  403242:	4d87      	ldr	r5, [pc, #540]	; (403460 <m2m_wifi_cb+0x274>)
  403244:	47a8      	blx	r5
  403246:	4621      	mov	r1, r4
  403248:	4886      	ldr	r0, [pc, #536]	; (403464 <m2m_wifi_cb+0x278>)
  40324a:	47a8      	blx	r5
  40324c:	4886      	ldr	r0, [pc, #536]	; (403468 <m2m_wifi_cb+0x27c>)
  40324e:	47a8      	blx	r5
  403250:	b01f      	add	sp, #124	; 0x7c
  403252:	bd30      	pop	{r4, r5, pc}
  403254:	2300      	movs	r3, #0
  403256:	2204      	movs	r2, #4
  403258:	a903      	add	r1, sp, #12
  40325a:	4628      	mov	r0, r5
  40325c:	4c83      	ldr	r4, [pc, #524]	; (40346c <m2m_wifi_cb+0x280>)
  40325e:	47a0      	blx	r4
  403260:	2800      	cmp	r0, #0
  403262:	d1f5      	bne.n	403250 <m2m_wifi_cb+0x64>
  403264:	4b82      	ldr	r3, [pc, #520]	; (403470 <m2m_wifi_cb+0x284>)
  403266:	681b      	ldr	r3, [r3, #0]
  403268:	2b00      	cmp	r3, #0
  40326a:	d0f1      	beq.n	403250 <m2m_wifi_cb+0x64>
  40326c:	a903      	add	r1, sp, #12
  40326e:	202c      	movs	r0, #44	; 0x2c
  403270:	4798      	blx	r3
  403272:	e7ed      	b.n	403250 <m2m_wifi_cb+0x64>
  403274:	2300      	movs	r3, #0
  403276:	2208      	movs	r2, #8
  403278:	a903      	add	r1, sp, #12
  40327a:	4628      	mov	r0, r5
  40327c:	4c7b      	ldr	r4, [pc, #492]	; (40346c <m2m_wifi_cb+0x280>)
  40327e:	47a0      	blx	r4
  403280:	2800      	cmp	r0, #0
  403282:	d1e5      	bne.n	403250 <m2m_wifi_cb+0x64>
  403284:	4b7a      	ldr	r3, [pc, #488]	; (403470 <m2m_wifi_cb+0x284>)
  403286:	681b      	ldr	r3, [r3, #0]
  403288:	2b00      	cmp	r3, #0
  40328a:	d0e1      	beq.n	403250 <m2m_wifi_cb+0x64>
  40328c:	a903      	add	r1, sp, #12
  40328e:	201b      	movs	r0, #27
  403290:	4798      	blx	r3
  403292:	e7dd      	b.n	403250 <m2m_wifi_cb+0x64>
  403294:	2301      	movs	r3, #1
  403296:	2230      	movs	r2, #48	; 0x30
  403298:	a903      	add	r1, sp, #12
  40329a:	4628      	mov	r0, r5
  40329c:	4c73      	ldr	r4, [pc, #460]	; (40346c <m2m_wifi_cb+0x280>)
  40329e:	47a0      	blx	r4
  4032a0:	2800      	cmp	r0, #0
  4032a2:	d1d5      	bne.n	403250 <m2m_wifi_cb+0x64>
  4032a4:	4b72      	ldr	r3, [pc, #456]	; (403470 <m2m_wifi_cb+0x284>)
  4032a6:	681b      	ldr	r3, [r3, #0]
  4032a8:	2b00      	cmp	r3, #0
  4032aa:	d0d1      	beq.n	403250 <m2m_wifi_cb+0x64>
  4032ac:	a903      	add	r1, sp, #12
  4032ae:	2006      	movs	r0, #6
  4032b0:	4798      	blx	r3
  4032b2:	e7cd      	b.n	403250 <m2m_wifi_cb+0x64>
  4032b4:	2300      	movs	r3, #0
  4032b6:	2210      	movs	r2, #16
  4032b8:	a903      	add	r1, sp, #12
  4032ba:	4628      	mov	r0, r5
  4032bc:	4c6b      	ldr	r4, [pc, #428]	; (40346c <m2m_wifi_cb+0x280>)
  4032be:	47a0      	blx	r4
  4032c0:	2800      	cmp	r0, #0
  4032c2:	d1c5      	bne.n	403250 <m2m_wifi_cb+0x64>
  4032c4:	4b6a      	ldr	r3, [pc, #424]	; (403470 <m2m_wifi_cb+0x284>)
  4032c6:	681b      	ldr	r3, [r3, #0]
  4032c8:	2b00      	cmp	r3, #0
  4032ca:	d0c1      	beq.n	403250 <m2m_wifi_cb+0x64>
  4032cc:	a903      	add	r1, sp, #12
  4032ce:	2032      	movs	r0, #50	; 0x32
  4032d0:	4798      	blx	r3
  4032d2:	e7bd      	b.n	403250 <m2m_wifi_cb+0x64>
  4032d4:	2264      	movs	r2, #100	; 0x64
  4032d6:	2100      	movs	r1, #0
  4032d8:	a803      	add	r0, sp, #12
  4032da:	4b66      	ldr	r3, [pc, #408]	; (403474 <m2m_wifi_cb+0x288>)
  4032dc:	4798      	blx	r3
  4032de:	2300      	movs	r3, #0
  4032e0:	2264      	movs	r2, #100	; 0x64
  4032e2:	a903      	add	r1, sp, #12
  4032e4:	4628      	mov	r0, r5
  4032e6:	4c61      	ldr	r4, [pc, #388]	; (40346c <m2m_wifi_cb+0x280>)
  4032e8:	47a0      	blx	r4
  4032ea:	2800      	cmp	r0, #0
  4032ec:	d1b0      	bne.n	403250 <m2m_wifi_cb+0x64>
  4032ee:	4b60      	ldr	r3, [pc, #384]	; (403470 <m2m_wifi_cb+0x284>)
  4032f0:	681b      	ldr	r3, [r3, #0]
  4032f2:	2b00      	cmp	r3, #0
  4032f4:	d0ac      	beq.n	403250 <m2m_wifi_cb+0x64>
  4032f6:	a903      	add	r1, sp, #12
  4032f8:	202f      	movs	r0, #47	; 0x2f
  4032fa:	4798      	blx	r3
  4032fc:	e7a8      	b.n	403250 <m2m_wifi_cb+0x64>
  4032fe:	2300      	movs	r3, #0
  403300:	2204      	movs	r2, #4
  403302:	a903      	add	r1, sp, #12
  403304:	4628      	mov	r0, r5
  403306:	4c59      	ldr	r4, [pc, #356]	; (40346c <m2m_wifi_cb+0x280>)
  403308:	47a0      	blx	r4
  40330a:	2800      	cmp	r0, #0
  40330c:	d1a0      	bne.n	403250 <m2m_wifi_cb+0x64>
  40330e:	485a      	ldr	r0, [pc, #360]	; (403478 <m2m_wifi_cb+0x28c>)
  403310:	4c53      	ldr	r4, [pc, #332]	; (403460 <m2m_wifi_cb+0x274>)
  403312:	47a0      	blx	r4
  403314:	9903      	ldr	r1, [sp, #12]
  403316:	b2cb      	uxtb	r3, r1
  403318:	9300      	str	r3, [sp, #0]
  40331a:	f3c1 2307 	ubfx	r3, r1, #8, #8
  40331e:	f3c1 4207 	ubfx	r2, r1, #16, #8
  403322:	0e09      	lsrs	r1, r1, #24
  403324:	4855      	ldr	r0, [pc, #340]	; (40347c <m2m_wifi_cb+0x290>)
  403326:	47a0      	blx	r4
  403328:	484f      	ldr	r0, [pc, #316]	; (403468 <m2m_wifi_cb+0x27c>)
  40332a:	47a0      	blx	r4
  40332c:	4b50      	ldr	r3, [pc, #320]	; (403470 <m2m_wifi_cb+0x284>)
  40332e:	681b      	ldr	r3, [r3, #0]
  403330:	2b00      	cmp	r3, #0
  403332:	d08d      	beq.n	403250 <m2m_wifi_cb+0x64>
  403334:	2100      	movs	r1, #0
  403336:	2034      	movs	r0, #52	; 0x34
  403338:	4798      	blx	r3
  40333a:	e789      	b.n	403250 <m2m_wifi_cb+0x64>
  40333c:	2300      	movs	r3, #0
  40333e:	4a50      	ldr	r2, [pc, #320]	; (403480 <m2m_wifi_cb+0x294>)
  403340:	7013      	strb	r3, [r2, #0]
  403342:	2204      	movs	r2, #4
  403344:	a903      	add	r1, sp, #12
  403346:	4628      	mov	r0, r5
  403348:	4c48      	ldr	r4, [pc, #288]	; (40346c <m2m_wifi_cb+0x280>)
  40334a:	47a0      	blx	r4
  40334c:	2800      	cmp	r0, #0
  40334e:	f47f af7f 	bne.w	403250 <m2m_wifi_cb+0x64>
  403352:	f89d 200c 	ldrb.w	r2, [sp, #12]
  403356:	4b4b      	ldr	r3, [pc, #300]	; (403484 <m2m_wifi_cb+0x298>)
  403358:	701a      	strb	r2, [r3, #0]
  40335a:	4b45      	ldr	r3, [pc, #276]	; (403470 <m2m_wifi_cb+0x284>)
  40335c:	681b      	ldr	r3, [r3, #0]
  40335e:	2b00      	cmp	r3, #0
  403360:	f43f af76 	beq.w	403250 <m2m_wifi_cb+0x64>
  403364:	a903      	add	r1, sp, #12
  403366:	2011      	movs	r0, #17
  403368:	4798      	blx	r3
  40336a:	e771      	b.n	403250 <m2m_wifi_cb+0x64>
  40336c:	2300      	movs	r3, #0
  40336e:	222c      	movs	r2, #44	; 0x2c
  403370:	a903      	add	r1, sp, #12
  403372:	4628      	mov	r0, r5
  403374:	4c3d      	ldr	r4, [pc, #244]	; (40346c <m2m_wifi_cb+0x280>)
  403376:	47a0      	blx	r4
  403378:	2800      	cmp	r0, #0
  40337a:	f47f af69 	bne.w	403250 <m2m_wifi_cb+0x64>
  40337e:	4b3c      	ldr	r3, [pc, #240]	; (403470 <m2m_wifi_cb+0x284>)
  403380:	681b      	ldr	r3, [r3, #0]
  403382:	2b00      	cmp	r3, #0
  403384:	f43f af64 	beq.w	403250 <m2m_wifi_cb+0x64>
  403388:	a903      	add	r1, sp, #12
  40338a:	2013      	movs	r0, #19
  40338c:	4798      	blx	r3
  40338e:	e75f      	b.n	403250 <m2m_wifi_cb+0x64>
  403390:	2300      	movs	r3, #0
  403392:	2204      	movs	r2, #4
  403394:	a91c      	add	r1, sp, #112	; 0x70
  403396:	4628      	mov	r0, r5
  403398:	4c34      	ldr	r4, [pc, #208]	; (40346c <m2m_wifi_cb+0x280>)
  40339a:	47a0      	blx	r4
  40339c:	2800      	cmp	r0, #0
  40339e:	f47f af57 	bne.w	403250 <m2m_wifi_cb+0x64>
  4033a2:	4b33      	ldr	r3, [pc, #204]	; (403470 <m2m_wifi_cb+0x284>)
  4033a4:	681b      	ldr	r3, [r3, #0]
  4033a6:	2b00      	cmp	r3, #0
  4033a8:	f43f af52 	beq.w	403250 <m2m_wifi_cb+0x64>
  4033ac:	a91c      	add	r1, sp, #112	; 0x70
  4033ae:	2004      	movs	r0, #4
  4033b0:	4798      	blx	r3
  4033b2:	e74d      	b.n	403250 <m2m_wifi_cb+0x64>
  4033b4:	2300      	movs	r3, #0
  4033b6:	2204      	movs	r2, #4
  4033b8:	a91c      	add	r1, sp, #112	; 0x70
  4033ba:	4628      	mov	r0, r5
  4033bc:	4c2b      	ldr	r4, [pc, #172]	; (40346c <m2m_wifi_cb+0x280>)
  4033be:	47a0      	blx	r4
  4033c0:	2800      	cmp	r0, #0
  4033c2:	f47f af45 	bne.w	403250 <m2m_wifi_cb+0x64>
  4033c6:	4b2a      	ldr	r3, [pc, #168]	; (403470 <m2m_wifi_cb+0x284>)
  4033c8:	681b      	ldr	r3, [r3, #0]
  4033ca:	2b00      	cmp	r3, #0
  4033cc:	f43f af40 	beq.w	403250 <m2m_wifi_cb+0x64>
  4033d0:	a91c      	add	r1, sp, #112	; 0x70
  4033d2:	2065      	movs	r0, #101	; 0x65
  4033d4:	4798      	blx	r3
  4033d6:	e73b      	b.n	403250 <m2m_wifi_cb+0x64>
  4033d8:	2301      	movs	r3, #1
  4033da:	2264      	movs	r2, #100	; 0x64
  4033dc:	a903      	add	r1, sp, #12
  4033de:	4628      	mov	r0, r5
  4033e0:	4c22      	ldr	r4, [pc, #136]	; (40346c <m2m_wifi_cb+0x280>)
  4033e2:	47a0      	blx	r4
  4033e4:	2800      	cmp	r0, #0
  4033e6:	f47f af33 	bne.w	403250 <m2m_wifi_cb+0x64>
  4033ea:	4b21      	ldr	r3, [pc, #132]	; (403470 <m2m_wifi_cb+0x284>)
  4033ec:	681b      	ldr	r3, [r3, #0]
  4033ee:	2b00      	cmp	r3, #0
  4033f0:	f43f af2e 	beq.w	403250 <m2m_wifi_cb+0x64>
  4033f4:	a903      	add	r1, sp, #12
  4033f6:	2009      	movs	r0, #9
  4033f8:	4798      	blx	r3
  4033fa:	e729      	b.n	403250 <m2m_wifi_cb+0x64>
  4033fc:	2301      	movs	r3, #1
  4033fe:	2204      	movs	r2, #4
  403400:	a903      	add	r1, sp, #12
  403402:	4628      	mov	r0, r5
  403404:	4c19      	ldr	r4, [pc, #100]	; (40346c <m2m_wifi_cb+0x280>)
  403406:	47a0      	blx	r4
  403408:	2800      	cmp	r0, #0
  40340a:	f47f af21 	bne.w	403250 <m2m_wifi_cb+0x64>
  40340e:	4b18      	ldr	r3, [pc, #96]	; (403470 <m2m_wifi_cb+0x284>)
  403410:	681b      	ldr	r3, [r3, #0]
  403412:	2b00      	cmp	r3, #0
  403414:	f43f af1c 	beq.w	403250 <m2m_wifi_cb+0x64>
  403418:	a903      	add	r1, sp, #12
  40341a:	202a      	movs	r0, #42	; 0x2a
  40341c:	4798      	blx	r3
  40341e:	e717      	b.n	403250 <m2m_wifi_cb+0x64>
  403420:	2300      	movs	r3, #0
  403422:	2208      	movs	r2, #8
  403424:	a903      	add	r1, sp, #12
  403426:	4628      	mov	r0, r5
  403428:	4c10      	ldr	r4, [pc, #64]	; (40346c <m2m_wifi_cb+0x280>)
  40342a:	47a0      	blx	r4
  40342c:	2800      	cmp	r0, #0
  40342e:	f47f af0f 	bne.w	403250 <m2m_wifi_cb+0x64>
  403432:	2301      	movs	r3, #1
  403434:	f8bd 2010 	ldrh.w	r2, [sp, #16]
  403438:	9903      	ldr	r1, [sp, #12]
  40343a:	f105 0008 	add.w	r0, r5, #8
  40343e:	47a0      	blx	r4
  403440:	2800      	cmp	r0, #0
  403442:	f47f af05 	bne.w	403250 <m2m_wifi_cb+0x64>
  403446:	4b0a      	ldr	r3, [pc, #40]	; (403470 <m2m_wifi_cb+0x284>)
  403448:	681b      	ldr	r3, [r3, #0]
  40344a:	2b00      	cmp	r3, #0
  40344c:	f43f af00 	beq.w	403250 <m2m_wifi_cb+0x64>
  403450:	a903      	add	r1, sp, #12
  403452:	2020      	movs	r0, #32
  403454:	4798      	blx	r3
  403456:	e6fb      	b.n	403250 <m2m_wifi_cb+0x64>
  403458:	0040d018 	.word	0x0040d018
  40345c:	0040cd74 	.word	0x0040cd74
  403460:	004066e9 	.word	0x004066e9
  403464:	0040d074 	.word	0x0040d074
  403468:	0040cda0 	.word	0x0040cda0
  40346c:	00402ff9 	.word	0x00402ff9
  403470:	2040db7c 	.word	0x2040db7c
  403474:	004029a5 	.word	0x004029a5
  403478:	0040d048 	.word	0x0040d048
  40347c:	0040d054 	.word	0x0040d054
  403480:	2040db81 	.word	0x2040db81
  403484:	2040db80 	.word	0x2040db80

00403488 <m2m_wifi_init>:
  403488:	b5f0      	push	{r4, r5, r6, r7, lr}
  40348a:	b08b      	sub	sp, #44	; 0x2c
  40348c:	2301      	movs	r3, #1
  40348e:	f88d 3007 	strb.w	r3, [sp, #7]
  403492:	2800      	cmp	r0, #0
  403494:	d050      	beq.n	403538 <m2m_wifi_init+0xb0>
  403496:	6802      	ldr	r2, [r0, #0]
  403498:	4b29      	ldr	r3, [pc, #164]	; (403540 <m2m_wifi_init+0xb8>)
  40349a:	601a      	str	r2, [r3, #0]
  40349c:	2200      	movs	r2, #0
  40349e:	4b29      	ldr	r3, [pc, #164]	; (403544 <m2m_wifi_init+0xbc>)
  4034a0:	701a      	strb	r2, [r3, #0]
  4034a2:	f10d 0007 	add.w	r0, sp, #7
  4034a6:	4b28      	ldr	r3, [pc, #160]	; (403548 <m2m_wifi_init+0xc0>)
  4034a8:	4798      	blx	r3
  4034aa:	4604      	mov	r4, r0
  4034ac:	b110      	cbz	r0, 4034b4 <m2m_wifi_init+0x2c>
  4034ae:	4620      	mov	r0, r4
  4034b0:	b00b      	add	sp, #44	; 0x2c
  4034b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4034b4:	4b25      	ldr	r3, [pc, #148]	; (40354c <m2m_wifi_init+0xc4>)
  4034b6:	4798      	blx	r3
  4034b8:	4604      	mov	r4, r0
  4034ba:	2800      	cmp	r0, #0
  4034bc:	d138      	bne.n	403530 <m2m_wifi_init+0xa8>
  4034be:	4924      	ldr	r1, [pc, #144]	; (403550 <m2m_wifi_init+0xc8>)
  4034c0:	2001      	movs	r0, #1
  4034c2:	4b24      	ldr	r3, [pc, #144]	; (403554 <m2m_wifi_init+0xcc>)
  4034c4:	4798      	blx	r3
  4034c6:	a802      	add	r0, sp, #8
  4034c8:	4b23      	ldr	r3, [pc, #140]	; (403558 <m2m_wifi_init+0xd0>)
  4034ca:	4798      	blx	r3
  4034cc:	4604      	mov	r4, r0
  4034ce:	4f23      	ldr	r7, [pc, #140]	; (40355c <m2m_wifi_init+0xd4>)
  4034d0:	4638      	mov	r0, r7
  4034d2:	4d23      	ldr	r5, [pc, #140]	; (403560 <m2m_wifi_init+0xd8>)
  4034d4:	47a8      	blx	r5
  4034d6:	f89d 300e 	ldrb.w	r3, [sp, #14]
  4034da:	f89d 200d 	ldrb.w	r2, [sp, #13]
  4034de:	f89d 100c 	ldrb.w	r1, [sp, #12]
  4034e2:	4820      	ldr	r0, [pc, #128]	; (403564 <m2m_wifi_init+0xdc>)
  4034e4:	47a8      	blx	r5
  4034e6:	4e20      	ldr	r6, [pc, #128]	; (403568 <m2m_wifi_init+0xe0>)
  4034e8:	4630      	mov	r0, r6
  4034ea:	47a8      	blx	r5
  4034ec:	4638      	mov	r0, r7
  4034ee:	47a8      	blx	r5
  4034f0:	f89d 3011 	ldrb.w	r3, [sp, #17]
  4034f4:	f89d 2010 	ldrb.w	r2, [sp, #16]
  4034f8:	f89d 100f 	ldrb.w	r1, [sp, #15]
  4034fc:	481b      	ldr	r0, [pc, #108]	; (40356c <m2m_wifi_init+0xe4>)
  4034fe:	47a8      	blx	r5
  403500:	4630      	mov	r0, r6
  403502:	47a8      	blx	r5
  403504:	4638      	mov	r0, r7
  403506:	47a8      	blx	r5
  403508:	2300      	movs	r3, #0
  40350a:	2203      	movs	r2, #3
  40350c:	2113      	movs	r1, #19
  40350e:	4818      	ldr	r0, [pc, #96]	; (403570 <m2m_wifi_init+0xe8>)
  403510:	47a8      	blx	r5
  403512:	4630      	mov	r0, r6
  403514:	47a8      	blx	r5
  403516:	f114 0f0d 	cmn.w	r4, #13
  40351a:	d1c8      	bne.n	4034ae <m2m_wifi_init+0x26>
  40351c:	f240 12d5 	movw	r2, #469	; 0x1d5
  403520:	4914      	ldr	r1, [pc, #80]	; (403574 <m2m_wifi_init+0xec>)
  403522:	4815      	ldr	r0, [pc, #84]	; (403578 <m2m_wifi_init+0xf0>)
  403524:	47a8      	blx	r5
  403526:	4815      	ldr	r0, [pc, #84]	; (40357c <m2m_wifi_init+0xf4>)
  403528:	47a8      	blx	r5
  40352a:	4630      	mov	r0, r6
  40352c:	47a8      	blx	r5
  40352e:	e7be      	b.n	4034ae <m2m_wifi_init+0x26>
  403530:	2000      	movs	r0, #0
  403532:	4b13      	ldr	r3, [pc, #76]	; (403580 <m2m_wifi_init+0xf8>)
  403534:	4798      	blx	r3
  403536:	e7ba      	b.n	4034ae <m2m_wifi_init+0x26>
  403538:	f06f 040b 	mvn.w	r4, #11
  40353c:	e7b7      	b.n	4034ae <m2m_wifi_init+0x26>
  40353e:	bf00      	nop
  403540:	2040db7c 	.word	0x2040db7c
  403544:	2040db81 	.word	0x2040db81
  403548:	00403e4d 	.word	0x00403e4d
  40354c:	0040319d 	.word	0x0040319d
  403550:	004031ed 	.word	0x004031ed
  403554:	0040310d 	.word	0x0040310d
  403558:	00403d9d 	.word	0x00403d9d
  40355c:	0040d048 	.word	0x0040d048
  403560:	004066e9 	.word	0x004066e9
  403564:	0040d134 	.word	0x0040d134
  403568:	0040cda0 	.word	0x0040cda0
  40356c:	0040d150 	.word	0x0040d150
  403570:	0040d16c 	.word	0x0040d16c
  403574:	0040d024 	.word	0x0040d024
  403578:	0040cd74 	.word	0x0040cd74
  40357c:	0040d188 	.word	0x0040d188
  403580:	00403f19 	.word	0x00403f19

00403584 <m2m_wifi_handle_events>:
  403584:	b508      	push	{r3, lr}
  403586:	4b01      	ldr	r3, [pc, #4]	; (40358c <m2m_wifi_handle_events+0x8>)
  403588:	4798      	blx	r3
  40358a:	bd08      	pop	{r3, pc}
  40358c:	00402ce9 	.word	0x00402ce9

00403590 <m2m_wifi_connect_sc>:
  403590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403594:	b0a0      	sub	sp, #128	; 0x80
  403596:	4680      	mov	r8, r0
  403598:	460d      	mov	r5, r1
  40359a:	4614      	mov	r4, r2
  40359c:	461e      	mov	r6, r3
  40359e:	f8bd 7098 	ldrh.w	r7, [sp, #152]	; 0x98
  4035a2:	2a01      	cmp	r2, #1
  4035a4:	d003      	beq.n	4035ae <m2m_wifi_connect_sc+0x1e>
  4035a6:	2b00      	cmp	r3, #0
  4035a8:	d037      	beq.n	40361a <m2m_wifi_connect_sc+0x8a>
  4035aa:	2a02      	cmp	r2, #2
  4035ac:	d042      	beq.n	403634 <m2m_wifi_connect_sc+0xa4>
  4035ae:	1e6b      	subs	r3, r5, #1
  4035b0:	b2db      	uxtb	r3, r3
  4035b2:	2b1f      	cmp	r3, #31
  4035b4:	d875      	bhi.n	4036a2 <m2m_wifi_connect_sc+0x112>
  4035b6:	2fff      	cmp	r7, #255	; 0xff
  4035b8:	d001      	beq.n	4035be <m2m_wifi_connect_sc+0x2e>
  4035ba:	2f0d      	cmp	r7, #13
  4035bc:	d87e      	bhi.n	4036bc <m2m_wifi_connect_sc+0x12c>
  4035be:	462a      	mov	r2, r5
  4035c0:	4641      	mov	r1, r8
  4035c2:	f10d 005a 	add.w	r0, sp, #90	; 0x5a
  4035c6:	4b77      	ldr	r3, [pc, #476]	; (4037a4 <m2m_wifi_connect_sc+0x214>)
  4035c8:	4798      	blx	r3
  4035ca:	ab20      	add	r3, sp, #128	; 0x80
  4035cc:	441d      	add	r5, r3
  4035ce:	2300      	movs	r3, #0
  4035d0:	f805 3c26 	strb.w	r3, [r5, #-38]
  4035d4:	f8ad 7058 	strh.w	r7, [sp, #88]	; 0x58
  4035d8:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
  4035dc:	3300      	adds	r3, #0
  4035de:	bf18      	it	ne
  4035e0:	2301      	movne	r3, #1
  4035e2:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
  4035e6:	f88d 4055 	strb.w	r4, [sp, #85]	; 0x55
  4035ea:	2c03      	cmp	r4, #3
  4035ec:	d073      	beq.n	4036d6 <m2m_wifi_connect_sc+0x146>
  4035ee:	2c02      	cmp	r4, #2
  4035f0:	f000 80aa 	beq.w	403748 <m2m_wifi_connect_sc+0x1b8>
  4035f4:	2c04      	cmp	r4, #4
  4035f6:	f000 80c1 	beq.w	40377c <m2m_wifi_connect_sc+0x1ec>
  4035fa:	2c01      	cmp	r4, #1
  4035fc:	f040 80c4 	bne.w	403788 <m2m_wifi_connect_sc+0x1f8>
  403600:	2300      	movs	r3, #0
  403602:	9302      	str	r3, [sp, #8]
  403604:	9301      	str	r3, [sp, #4]
  403606:	9300      	str	r3, [sp, #0]
  403608:	236c      	movs	r3, #108	; 0x6c
  40360a:	aa05      	add	r2, sp, #20
  40360c:	2128      	movs	r1, #40	; 0x28
  40360e:	2001      	movs	r0, #1
  403610:	4c65      	ldr	r4, [pc, #404]	; (4037a8 <m2m_wifi_connect_sc+0x218>)
  403612:	47a0      	blx	r4
  403614:	b020      	add	sp, #128	; 0x80
  403616:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40361a:	f240 2203 	movw	r2, #515	; 0x203
  40361e:	4963      	ldr	r1, [pc, #396]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  403620:	4863      	ldr	r0, [pc, #396]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  403622:	4c64      	ldr	r4, [pc, #400]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  403624:	47a0      	blx	r4
  403626:	4864      	ldr	r0, [pc, #400]	; (4037b8 <m2m_wifi_connect_sc+0x228>)
  403628:	47a0      	blx	r4
  40362a:	4864      	ldr	r0, [pc, #400]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  40362c:	47a0      	blx	r4
  40362e:	f06f 000b 	mvn.w	r0, #11
  403632:	e7ef      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  403634:	4618      	mov	r0, r3
  403636:	4b62      	ldr	r3, [pc, #392]	; (4037c0 <m2m_wifi_connect_sc+0x230>)
  403638:	4798      	blx	r3
  40363a:	2840      	cmp	r0, #64	; 0x40
  40363c:	d1b7      	bne.n	4035ae <m2m_wifi_connect_sc+0x1e>
  40363e:	7833      	ldrb	r3, [r6, #0]
  403640:	f1a3 023a 	sub.w	r2, r3, #58	; 0x3a
  403644:	b2d2      	uxtb	r2, r2
  403646:	2a06      	cmp	r2, #6
  403648:	d91e      	bls.n	403688 <m2m_wifi_connect_sc+0xf8>
  40364a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40364e:	b2d2      	uxtb	r2, r2
  403650:	2a36      	cmp	r2, #54	; 0x36
  403652:	d819      	bhi.n	403688 <m2m_wifi_connect_sc+0xf8>
  403654:	3b47      	subs	r3, #71	; 0x47
  403656:	b2db      	uxtb	r3, r3
  403658:	2b19      	cmp	r3, #25
  40365a:	d915      	bls.n	403688 <m2m_wifi_connect_sc+0xf8>
  40365c:	4631      	mov	r1, r6
  40365e:	f106 003f 	add.w	r0, r6, #63	; 0x3f
  403662:	f811 3f01 	ldrb.w	r3, [r1, #1]!
  403666:	f1a3 023a 	sub.w	r2, r3, #58	; 0x3a
  40366a:	b2d2      	uxtb	r2, r2
  40366c:	2a06      	cmp	r2, #6
  40366e:	d90b      	bls.n	403688 <m2m_wifi_connect_sc+0xf8>
  403670:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  403674:	b2d2      	uxtb	r2, r2
  403676:	2a36      	cmp	r2, #54	; 0x36
  403678:	d806      	bhi.n	403688 <m2m_wifi_connect_sc+0xf8>
  40367a:	3b47      	subs	r3, #71	; 0x47
  40367c:	b2db      	uxtb	r3, r3
  40367e:	2b19      	cmp	r3, #25
  403680:	d902      	bls.n	403688 <m2m_wifi_connect_sc+0xf8>
  403682:	4288      	cmp	r0, r1
  403684:	d1ed      	bne.n	403662 <m2m_wifi_connect_sc+0xd2>
  403686:	e792      	b.n	4035ae <m2m_wifi_connect_sc+0x1e>
  403688:	f240 220f 	movw	r2, #527	; 0x20f
  40368c:	4947      	ldr	r1, [pc, #284]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  40368e:	4848      	ldr	r0, [pc, #288]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  403690:	4c48      	ldr	r4, [pc, #288]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  403692:	47a0      	blx	r4
  403694:	484b      	ldr	r0, [pc, #300]	; (4037c4 <m2m_wifi_connect_sc+0x234>)
  403696:	47a0      	blx	r4
  403698:	4848      	ldr	r0, [pc, #288]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  40369a:	47a0      	blx	r4
  40369c:	f06f 000b 	mvn.w	r0, #11
  4036a0:	e7b8      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  4036a2:	f240 2219 	movw	r2, #537	; 0x219
  4036a6:	4941      	ldr	r1, [pc, #260]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  4036a8:	4841      	ldr	r0, [pc, #260]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  4036aa:	4c42      	ldr	r4, [pc, #264]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  4036ac:	47a0      	blx	r4
  4036ae:	4846      	ldr	r0, [pc, #280]	; (4037c8 <m2m_wifi_connect_sc+0x238>)
  4036b0:	47a0      	blx	r4
  4036b2:	4842      	ldr	r0, [pc, #264]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  4036b4:	47a0      	blx	r4
  4036b6:	f06f 000b 	mvn.w	r0, #11
  4036ba:	e7ab      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  4036bc:	f240 2222 	movw	r2, #546	; 0x222
  4036c0:	493a      	ldr	r1, [pc, #232]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  4036c2:	483b      	ldr	r0, [pc, #236]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  4036c4:	4c3b      	ldr	r4, [pc, #236]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  4036c6:	47a0      	blx	r4
  4036c8:	4840      	ldr	r0, [pc, #256]	; (4037cc <m2m_wifi_connect_sc+0x23c>)
  4036ca:	47a0      	blx	r4
  4036cc:	483b      	ldr	r0, [pc, #236]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  4036ce:	47a0      	blx	r4
  4036d0:	f06f 000b 	mvn.w	r0, #11
  4036d4:	e79e      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  4036d6:	7833      	ldrb	r3, [r6, #0]
  4036d8:	3b01      	subs	r3, #1
  4036da:	b2db      	uxtb	r3, r3
  4036dc:	f88d 3014 	strb.w	r3, [sp, #20]
  4036e0:	2b03      	cmp	r3, #3
  4036e2:	d813      	bhi.n	40370c <m2m_wifi_connect_sc+0x17c>
  4036e4:	7872      	ldrb	r2, [r6, #1]
  4036e6:	1e53      	subs	r3, r2, #1
  4036e8:	f88d 3015 	strb.w	r3, [sp, #21]
  4036ec:	f002 03ef 	and.w	r3, r2, #239	; 0xef
  4036f0:	2b0b      	cmp	r3, #11
  4036f2:	d11a      	bne.n	40372a <m2m_wifi_connect_sc+0x19a>
  4036f4:	1cb1      	adds	r1, r6, #2
  4036f6:	f10d 0016 	add.w	r0, sp, #22
  4036fa:	4b2a      	ldr	r3, [pc, #168]	; (4037a4 <m2m_wifi_connect_sc+0x214>)
  4036fc:	4798      	blx	r3
  4036fe:	7873      	ldrb	r3, [r6, #1]
  403700:	aa20      	add	r2, sp, #128	; 0x80
  403702:	4413      	add	r3, r2
  403704:	2200      	movs	r2, #0
  403706:	f803 2c6a 	strb.w	r2, [r3, #-106]
  40370a:	e779      	b.n	403600 <m2m_wifi_connect_sc+0x70>
  40370c:	f240 2239 	movw	r2, #569	; 0x239
  403710:	4926      	ldr	r1, [pc, #152]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  403712:	4827      	ldr	r0, [pc, #156]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  403714:	4c27      	ldr	r4, [pc, #156]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  403716:	47a0      	blx	r4
  403718:	f89d 1014 	ldrb.w	r1, [sp, #20]
  40371c:	482c      	ldr	r0, [pc, #176]	; (4037d0 <m2m_wifi_connect_sc+0x240>)
  40371e:	47a0      	blx	r4
  403720:	4826      	ldr	r0, [pc, #152]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  403722:	47a0      	blx	r4
  403724:	f06f 000b 	mvn.w	r0, #11
  403728:	e774      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  40372a:	f44f 7210 	mov.w	r2, #576	; 0x240
  40372e:	491f      	ldr	r1, [pc, #124]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  403730:	481f      	ldr	r0, [pc, #124]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  403732:	4c20      	ldr	r4, [pc, #128]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  403734:	47a0      	blx	r4
  403736:	f89d 1015 	ldrb.w	r1, [sp, #21]
  40373a:	4826      	ldr	r0, [pc, #152]	; (4037d4 <m2m_wifi_connect_sc+0x244>)
  40373c:	47a0      	blx	r4
  40373e:	481f      	ldr	r0, [pc, #124]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  403740:	47a0      	blx	r4
  403742:	f06f 000b 	mvn.w	r0, #11
  403746:	e765      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  403748:	4630      	mov	r0, r6
  40374a:	4b1d      	ldr	r3, [pc, #116]	; (4037c0 <m2m_wifi_connect_sc+0x230>)
  40374c:	4798      	blx	r3
  40374e:	1e43      	subs	r3, r0, #1
  403750:	b29b      	uxth	r3, r3
  403752:	2b3f      	cmp	r3, #63	; 0x3f
  403754:	d805      	bhi.n	403762 <m2m_wifi_connect_sc+0x1d2>
  403756:	1c42      	adds	r2, r0, #1
  403758:	4631      	mov	r1, r6
  40375a:	a805      	add	r0, sp, #20
  40375c:	4b11      	ldr	r3, [pc, #68]	; (4037a4 <m2m_wifi_connect_sc+0x214>)
  40375e:	4798      	blx	r3
  403760:	e74e      	b.n	403600 <m2m_wifi_connect_sc+0x70>
  403762:	f240 224f 	movw	r2, #591	; 0x24f
  403766:	4911      	ldr	r1, [pc, #68]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  403768:	4811      	ldr	r0, [pc, #68]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  40376a:	4c12      	ldr	r4, [pc, #72]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  40376c:	47a0      	blx	r4
  40376e:	481a      	ldr	r0, [pc, #104]	; (4037d8 <m2m_wifi_connect_sc+0x248>)
  403770:	47a0      	blx	r4
  403772:	4812      	ldr	r0, [pc, #72]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  403774:	47a0      	blx	r4
  403776:	f06f 000b 	mvn.w	r0, #11
  40377a:	e74b      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  40377c:	223e      	movs	r2, #62	; 0x3e
  40377e:	4631      	mov	r1, r6
  403780:	a805      	add	r0, sp, #20
  403782:	4b08      	ldr	r3, [pc, #32]	; (4037a4 <m2m_wifi_connect_sc+0x214>)
  403784:	4798      	blx	r3
  403786:	e73b      	b.n	403600 <m2m_wifi_connect_sc+0x70>
  403788:	f240 225f 	movw	r2, #607	; 0x25f
  40378c:	4907      	ldr	r1, [pc, #28]	; (4037ac <m2m_wifi_connect_sc+0x21c>)
  40378e:	4808      	ldr	r0, [pc, #32]	; (4037b0 <m2m_wifi_connect_sc+0x220>)
  403790:	4c08      	ldr	r4, [pc, #32]	; (4037b4 <m2m_wifi_connect_sc+0x224>)
  403792:	47a0      	blx	r4
  403794:	4811      	ldr	r0, [pc, #68]	; (4037dc <m2m_wifi_connect_sc+0x24c>)
  403796:	47a0      	blx	r4
  403798:	4808      	ldr	r0, [pc, #32]	; (4037bc <m2m_wifi_connect_sc+0x22c>)
  40379a:	47a0      	blx	r4
  40379c:	f06f 000b 	mvn.w	r0, #11
  4037a0:	e738      	b.n	403614 <m2m_wifi_connect_sc+0x84>
  4037a2:	bf00      	nop
  4037a4:	00402991 	.word	0x00402991
  4037a8:	00402b09 	.word	0x00402b09
  4037ac:	0040d034 	.word	0x0040d034
  4037b0:	0040cd74 	.word	0x0040cd74
  4037b4:	004066e9 	.word	0x004066e9
  4037b8:	0040d088 	.word	0x0040d088
  4037bc:	0040cda0 	.word	0x0040cda0
  4037c0:	004029b3 	.word	0x004029b3
  4037c4:	0040d09c 	.word	0x0040d09c
  4037c8:	0040d0ac 	.word	0x0040d0ac
  4037cc:	0040d0c0 	.word	0x0040d0c0
  4037d0:	0040d0cc 	.word	0x0040d0cc
  4037d4:	0040d0e8 	.word	0x0040d0e8
  4037d8:	0040d104 	.word	0x0040d104
  4037dc:	0040d120 	.word	0x0040d120

004037e0 <m2m_wifi_connect>:
  4037e0:	b510      	push	{r4, lr}
  4037e2:	b082      	sub	sp, #8
  4037e4:	2400      	movs	r4, #0
  4037e6:	9401      	str	r4, [sp, #4]
  4037e8:	f8bd 4010 	ldrh.w	r4, [sp, #16]
  4037ec:	9400      	str	r4, [sp, #0]
  4037ee:	4c02      	ldr	r4, [pc, #8]	; (4037f8 <m2m_wifi_connect+0x18>)
  4037f0:	47a0      	blx	r4
  4037f2:	b002      	add	sp, #8
  4037f4:	bd10      	pop	{r4, pc}
  4037f6:	bf00      	nop
  4037f8:	00403591 	.word	0x00403591

004037fc <m2m_wifi_request_dhcp_client>:
  4037fc:	2000      	movs	r0, #0
  4037fe:	4770      	bx	lr

00403800 <chip_apply_conf>:
  403800:	b5f0      	push	{r4, r5, r6, r7, lr}
  403802:	b083      	sub	sp, #12
  403804:	4604      	mov	r4, r0
  403806:	f44f 55a5 	mov.w	r5, #5280	; 0x14a0
  40380a:	4e0a      	ldr	r6, [pc, #40]	; (403834 <chip_apply_conf+0x34>)
  40380c:	4f0a      	ldr	r7, [pc, #40]	; (403838 <chip_apply_conf+0x38>)
  40380e:	4621      	mov	r1, r4
  403810:	4628      	mov	r0, r5
  403812:	47b0      	blx	r6
  403814:	b154      	cbz	r4, 40382c <chip_apply_conf+0x2c>
  403816:	a902      	add	r1, sp, #8
  403818:	2300      	movs	r3, #0
  40381a:	f841 3d04 	str.w	r3, [r1, #-4]!
  40381e:	4628      	mov	r0, r5
  403820:	47b8      	blx	r7
  403822:	2800      	cmp	r0, #0
  403824:	d1f3      	bne.n	40380e <chip_apply_conf+0xe>
  403826:	9b01      	ldr	r3, [sp, #4]
  403828:	429c      	cmp	r4, r3
  40382a:	d1f0      	bne.n	40380e <chip_apply_conf+0xe>
  40382c:	2000      	movs	r0, #0
  40382e:	b003      	add	sp, #12
  403830:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403832:	bf00      	nop
  403834:	00403cd9 	.word	0x00403cd9
  403838:	00403ccd 	.word	0x00403ccd

0040383c <nm_clkless_wake>:
  40383c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403840:	b083      	sub	sp, #12
  403842:	2001      	movs	r0, #1
  403844:	4b3c      	ldr	r3, [pc, #240]	; (403938 <nm_clkless_wake+0xfc>)
  403846:	4798      	blx	r3
  403848:	a901      	add	r1, sp, #4
  40384a:	2001      	movs	r0, #1
  40384c:	4b3b      	ldr	r3, [pc, #236]	; (40393c <nm_clkless_wake+0x100>)
  40384e:	4798      	blx	r3
  403850:	4682      	mov	sl, r0
  403852:	b938      	cbnz	r0, 403864 <nm_clkless_wake+0x28>
  403854:	2400      	movs	r4, #0
  403856:	f04f 0801 	mov.w	r8, #1
  40385a:	f8df 9108 	ldr.w	r9, [pc, #264]	; 403964 <nm_clkless_wake+0x128>
  40385e:	4d36      	ldr	r5, [pc, #216]	; (403938 <nm_clkless_wake+0xfc>)
  403860:	4f37      	ldr	r7, [pc, #220]	; (403940 <nm_clkless_wake+0x104>)
  403862:	e020      	b.n	4038a6 <nm_clkless_wake+0x6a>
  403864:	2272      	movs	r2, #114	; 0x72
  403866:	4937      	ldr	r1, [pc, #220]	; (403944 <nm_clkless_wake+0x108>)
  403868:	4837      	ldr	r0, [pc, #220]	; (403948 <nm_clkless_wake+0x10c>)
  40386a:	4c38      	ldr	r4, [pc, #224]	; (40394c <nm_clkless_wake+0x110>)
  40386c:	47a0      	blx	r4
  40386e:	4838      	ldr	r0, [pc, #224]	; (403950 <nm_clkless_wake+0x114>)
  403870:	47a0      	blx	r4
  403872:	4838      	ldr	r0, [pc, #224]	; (403954 <nm_clkless_wake+0x118>)
  403874:	47a0      	blx	r4
  403876:	e009      	b.n	40388c <nm_clkless_wake+0x50>
  403878:	2296      	movs	r2, #150	; 0x96
  40387a:	4932      	ldr	r1, [pc, #200]	; (403944 <nm_clkless_wake+0x108>)
  40387c:	4832      	ldr	r0, [pc, #200]	; (403948 <nm_clkless_wake+0x10c>)
  40387e:	4c33      	ldr	r4, [pc, #204]	; (40394c <nm_clkless_wake+0x110>)
  403880:	47a0      	blx	r4
  403882:	4835      	ldr	r0, [pc, #212]	; (403958 <nm_clkless_wake+0x11c>)
  403884:	47a0      	blx	r4
  403886:	4833      	ldr	r0, [pc, #204]	; (403954 <nm_clkless_wake+0x118>)
  403888:	47a0      	blx	r4
  40388a:	46b2      	mov	sl, r6
  40388c:	4650      	mov	r0, sl
  40388e:	b003      	add	sp, #12
  403890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403894:	9901      	ldr	r1, [sp, #4]
  403896:	f041 0102 	orr.w	r1, r1, #2
  40389a:	4640      	mov	r0, r8
  40389c:	47c8      	blx	r9
  40389e:	9b00      	ldr	r3, [sp, #0]
  4038a0:	f013 0f04 	tst.w	r3, #4
  4038a4:	d1f2      	bne.n	40388c <nm_clkless_wake+0x50>
  4038a6:	9901      	ldr	r1, [sp, #4]
  4038a8:	f041 0102 	orr.w	r1, r1, #2
  4038ac:	4640      	mov	r0, r8
  4038ae:	47c8      	blx	r9
  4038b0:	4640      	mov	r0, r8
  4038b2:	47a8      	blx	r5
  4038b4:	4669      	mov	r1, sp
  4038b6:	4b29      	ldr	r3, [pc, #164]	; (40395c <nm_clkless_wake+0x120>)
  4038b8:	6818      	ldr	r0, [r3, #0]
  4038ba:	4b20      	ldr	r3, [pc, #128]	; (40393c <nm_clkless_wake+0x100>)
  4038bc:	4798      	blx	r3
  4038be:	b908      	cbnz	r0, 4038c4 <nm_clkless_wake+0x88>
  4038c0:	9b00      	ldr	r3, [sp, #0]
  4038c2:	b9bb      	cbnz	r3, 4038f4 <nm_clkless_wake+0xb8>
  4038c4:	4e25      	ldr	r6, [pc, #148]	; (40395c <nm_clkless_wake+0x120>)
  4038c6:	230e      	movs	r3, #14
  4038c8:	6033      	str	r3, [r6, #0]
  4038ca:	4640      	mov	r0, r8
  4038cc:	47a8      	blx	r5
  4038ce:	4669      	mov	r1, sp
  4038d0:	6830      	ldr	r0, [r6, #0]
  4038d2:	4b1a      	ldr	r3, [pc, #104]	; (40393c <nm_clkless_wake+0x100>)
  4038d4:	4798      	blx	r3
  4038d6:	b908      	cbnz	r0, 4038dc <nm_clkless_wake+0xa0>
  4038d8:	9b00      	ldr	r3, [sp, #0]
  4038da:	b95b      	cbnz	r3, 4038f4 <nm_clkless_wake+0xb8>
  4038dc:	4e1f      	ldr	r6, [pc, #124]	; (40395c <nm_clkless_wake+0x120>)
  4038de:	2313      	movs	r3, #19
  4038e0:	6033      	str	r3, [r6, #0]
  4038e2:	4640      	mov	r0, r8
  4038e4:	47a8      	blx	r5
  4038e6:	4669      	mov	r1, sp
  4038e8:	6830      	ldr	r0, [r6, #0]
  4038ea:	4b14      	ldr	r3, [pc, #80]	; (40393c <nm_clkless_wake+0x100>)
  4038ec:	4798      	blx	r3
  4038ee:	4606      	mov	r6, r0
  4038f0:	2800      	cmp	r0, #0
  4038f2:	d1c1      	bne.n	403878 <nm_clkless_wake+0x3c>
  4038f4:	4e19      	ldr	r6, [pc, #100]	; (40395c <nm_clkless_wake+0x120>)
  4038f6:	9b00      	ldr	r3, [sp, #0]
  4038f8:	f013 0f04 	tst.w	r3, #4
  4038fc:	d1c6      	bne.n	40388c <nm_clkless_wake+0x50>
  4038fe:	3401      	adds	r4, #1
  403900:	fba7 2304 	umull	r2, r3, r7, r4
  403904:	085b      	lsrs	r3, r3, #1
  403906:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  40390a:	429c      	cmp	r4, r3
  40390c:	d1c2      	bne.n	403894 <nm_clkless_wake+0x58>
  40390e:	2002      	movs	r0, #2
  403910:	47a8      	blx	r5
  403912:	4669      	mov	r1, sp
  403914:	6830      	ldr	r0, [r6, #0]
  403916:	4b09      	ldr	r3, [pc, #36]	; (40393c <nm_clkless_wake+0x100>)
  403918:	4798      	blx	r3
  40391a:	9b00      	ldr	r3, [sp, #0]
  40391c:	f013 0f04 	tst.w	r3, #4
  403920:	d1e9      	bne.n	4038f6 <nm_clkless_wake+0xba>
  403922:	22aa      	movs	r2, #170	; 0xaa
  403924:	4907      	ldr	r1, [pc, #28]	; (403944 <nm_clkless_wake+0x108>)
  403926:	4808      	ldr	r0, [pc, #32]	; (403948 <nm_clkless_wake+0x10c>)
  403928:	f8df b020 	ldr.w	fp, [pc, #32]	; 40394c <nm_clkless_wake+0x110>
  40392c:	47d8      	blx	fp
  40392e:	480c      	ldr	r0, [pc, #48]	; (403960 <nm_clkless_wake+0x124>)
  403930:	47d8      	blx	fp
  403932:	4808      	ldr	r0, [pc, #32]	; (403954 <nm_clkless_wake+0x118>)
  403934:	47d8      	blx	fp
  403936:	e7de      	b.n	4038f6 <nm_clkless_wake+0xba>
  403938:	004025ed 	.word	0x004025ed
  40393c:	00403ccd 	.word	0x00403ccd
  403940:	aaaaaaab 	.word	0xaaaaaaab
  403944:	0040d1a4 	.word	0x0040d1a4
  403948:	0040cd74 	.word	0x0040cd74
  40394c:	004066e9 	.word	0x004066e9
  403950:	0040d214 	.word	0x0040d214
  403954:	0040cda0 	.word	0x0040cda0
  403958:	0040d234 	.word	0x0040d234
  40395c:	20400014 	.word	0x20400014
  403960:	0040d254 	.word	0x0040d254
  403964:	00403cd9 	.word	0x00403cd9

00403968 <enable_interrupts>:
  403968:	b500      	push	{lr}
  40396a:	b083      	sub	sp, #12
  40396c:	a901      	add	r1, sp, #4
  40396e:	f241 4008 	movw	r0, #5128	; 0x1408
  403972:	4b15      	ldr	r3, [pc, #84]	; (4039c8 <enable_interrupts+0x60>)
  403974:	4798      	blx	r3
  403976:	b9e8      	cbnz	r0, 4039b4 <enable_interrupts+0x4c>
  403978:	9901      	ldr	r1, [sp, #4]
  40397a:	f441 7180 	orr.w	r1, r1, #256	; 0x100
  40397e:	9101      	str	r1, [sp, #4]
  403980:	f241 4008 	movw	r0, #5128	; 0x1408
  403984:	4b11      	ldr	r3, [pc, #68]	; (4039cc <enable_interrupts+0x64>)
  403986:	4798      	blx	r3
  403988:	b9b8      	cbnz	r0, 4039ba <enable_interrupts+0x52>
  40398a:	a901      	add	r1, sp, #4
  40398c:	f44f 50d0 	mov.w	r0, #6656	; 0x1a00
  403990:	4b0d      	ldr	r3, [pc, #52]	; (4039c8 <enable_interrupts+0x60>)
  403992:	4798      	blx	r3
  403994:	b9a0      	cbnz	r0, 4039c0 <enable_interrupts+0x58>
  403996:	9901      	ldr	r1, [sp, #4]
  403998:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
  40399c:	9101      	str	r1, [sp, #4]
  40399e:	f44f 50d0 	mov.w	r0, #6656	; 0x1a00
  4039a2:	4b0a      	ldr	r3, [pc, #40]	; (4039cc <enable_interrupts+0x64>)
  4039a4:	4798      	blx	r3
  4039a6:	2800      	cmp	r0, #0
  4039a8:	bf18      	it	ne
  4039aa:	f06f 0005 	mvnne.w	r0, #5
  4039ae:	b003      	add	sp, #12
  4039b0:	f85d fb04 	ldr.w	pc, [sp], #4
  4039b4:	f06f 0005 	mvn.w	r0, #5
  4039b8:	e7f9      	b.n	4039ae <enable_interrupts+0x46>
  4039ba:	f06f 0005 	mvn.w	r0, #5
  4039be:	e7f6      	b.n	4039ae <enable_interrupts+0x46>
  4039c0:	f06f 0005 	mvn.w	r0, #5
  4039c4:	e7f3      	b.n	4039ae <enable_interrupts+0x46>
  4039c6:	bf00      	nop
  4039c8:	00403ccd 	.word	0x00403ccd
  4039cc:	00403cd9 	.word	0x00403cd9

004039d0 <nmi_get_chipid>:
  4039d0:	b510      	push	{r4, lr}
  4039d2:	b082      	sub	sp, #8
  4039d4:	4b25      	ldr	r3, [pc, #148]	; (403a6c <nmi_get_chipid+0x9c>)
  4039d6:	681c      	ldr	r4, [r3, #0]
  4039d8:	b124      	cbz	r4, 4039e4 <nmi_get_chipid+0x14>
  4039da:	4b24      	ldr	r3, [pc, #144]	; (403a6c <nmi_get_chipid+0x9c>)
  4039dc:	681c      	ldr	r4, [r3, #0]
  4039de:	4620      	mov	r0, r4
  4039e0:	b002      	add	sp, #8
  4039e2:	bd10      	pop	{r4, pc}
  4039e4:	4619      	mov	r1, r3
  4039e6:	f44f 5080 	mov.w	r0, #4096	; 0x1000
  4039ea:	4b21      	ldr	r3, [pc, #132]	; (403a70 <nmi_get_chipid+0xa0>)
  4039ec:	4798      	blx	r3
  4039ee:	b118      	cbz	r0, 4039f8 <nmi_get_chipid+0x28>
  4039f0:	2200      	movs	r2, #0
  4039f2:	4b1e      	ldr	r3, [pc, #120]	; (403a6c <nmi_get_chipid+0x9c>)
  4039f4:	601a      	str	r2, [r3, #0]
  4039f6:	e7f2      	b.n	4039de <nmi_get_chipid+0xe>
  4039f8:	a901      	add	r1, sp, #4
  4039fa:	f241 30f4 	movw	r0, #5108	; 0x13f4
  4039fe:	4b1c      	ldr	r3, [pc, #112]	; (403a70 <nmi_get_chipid+0xa0>)
  403a00:	4798      	blx	r3
  403a02:	b118      	cbz	r0, 403a0c <nmi_get_chipid+0x3c>
  403a04:	2200      	movs	r2, #0
  403a06:	4b19      	ldr	r3, [pc, #100]	; (403a6c <nmi_get_chipid+0x9c>)
  403a08:	601a      	str	r2, [r3, #0]
  403a0a:	e7e8      	b.n	4039de <nmi_get_chipid+0xe>
  403a0c:	4b17      	ldr	r3, [pc, #92]	; (403a6c <nmi_get_chipid+0x9c>)
  403a0e:	681b      	ldr	r3, [r3, #0]
  403a10:	4a18      	ldr	r2, [pc, #96]	; (403a74 <nmi_get_chipid+0xa4>)
  403a12:	4293      	cmp	r3, r2
  403a14:	d00d      	beq.n	403a32 <nmi_get_chipid+0x62>
  403a16:	4a18      	ldr	r2, [pc, #96]	; (403a78 <nmi_get_chipid+0xa8>)
  403a18:	4293      	cmp	r3, r2
  403a1a:	d011      	beq.n	403a40 <nmi_get_chipid+0x70>
  403a1c:	4a17      	ldr	r2, [pc, #92]	; (403a7c <nmi_get_chipid+0xac>)
  403a1e:	4293      	cmp	r3, r2
  403a20:	d018      	beq.n	403a54 <nmi_get_chipid+0x84>
  403a22:	4a12      	ldr	r2, [pc, #72]	; (403a6c <nmi_get_chipid+0x9c>)
  403a24:	6813      	ldr	r3, [r2, #0]
  403a26:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  403a2a:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
  403a2e:	6013      	str	r3, [r2, #0]
  403a30:	e7d3      	b.n	4039da <nmi_get_chipid+0xa>
  403a32:	9b01      	ldr	r3, [sp, #4]
  403a34:	2b01      	cmp	r3, #1
  403a36:	d0f4      	beq.n	403a22 <nmi_get_chipid+0x52>
  403a38:	3201      	adds	r2, #1
  403a3a:	4b0c      	ldr	r3, [pc, #48]	; (403a6c <nmi_get_chipid+0x9c>)
  403a3c:	601a      	str	r2, [r3, #0]
  403a3e:	e7f0      	b.n	403a22 <nmi_get_chipid+0x52>
  403a40:	9b01      	ldr	r3, [sp, #4]
  403a42:	2b03      	cmp	r3, #3
  403a44:	d0ed      	beq.n	403a22 <nmi_get_chipid+0x52>
  403a46:	2b04      	cmp	r3, #4
  403a48:	bf0c      	ite	eq
  403a4a:	3201      	addeq	r2, #1
  403a4c:	4a0c      	ldrne	r2, [pc, #48]	; (403a80 <nmi_get_chipid+0xb0>)
  403a4e:	4b07      	ldr	r3, [pc, #28]	; (403a6c <nmi_get_chipid+0x9c>)
  403a50:	601a      	str	r2, [r3, #0]
  403a52:	e7e6      	b.n	403a22 <nmi_get_chipid+0x52>
  403a54:	4905      	ldr	r1, [pc, #20]	; (403a6c <nmi_get_chipid+0x9c>)
  403a56:	f44f 106c 	mov.w	r0, #3866624	; 0x3b0000
  403a5a:	4b05      	ldr	r3, [pc, #20]	; (403a70 <nmi_get_chipid+0xa0>)
  403a5c:	4798      	blx	r3
  403a5e:	2800      	cmp	r0, #0
  403a60:	d0df      	beq.n	403a22 <nmi_get_chipid+0x52>
  403a62:	2200      	movs	r2, #0
  403a64:	4b01      	ldr	r3, [pc, #4]	; (403a6c <nmi_get_chipid+0x9c>)
  403a66:	601a      	str	r2, [r3, #0]
  403a68:	e7b9      	b.n	4039de <nmi_get_chipid+0xe>
  403a6a:	bf00      	nop
  403a6c:	2040db84 	.word	0x2040db84
  403a70:	00403ccd 	.word	0x00403ccd
  403a74:	001002a0 	.word	0x001002a0
  403a78:	001002b0 	.word	0x001002b0
  403a7c:	001000f0 	.word	0x001000f0
  403a80:	001002b2 	.word	0x001002b2

00403a84 <wait_for_bootrom>:
  403a84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403a88:	4607      	mov	r7, r0
  403a8a:	f241 0514 	movw	r5, #4116	; 0x1014
  403a8e:	4c28      	ldr	r4, [pc, #160]	; (403b30 <wait_for_bootrom+0xac>)
  403a90:	4e28      	ldr	r6, [pc, #160]	; (403b34 <wait_for_bootrom+0xb0>)
  403a92:	4628      	mov	r0, r5
  403a94:	47a0      	blx	r4
  403a96:	2800      	cmp	r0, #0
  403a98:	db02      	blt.n	403aa0 <wait_for_bootrom+0x1c>
  403a9a:	2001      	movs	r0, #1
  403a9c:	47b0      	blx	r6
  403a9e:	e7f8      	b.n	403a92 <wait_for_bootrom+0xe>
  403aa0:	4825      	ldr	r0, [pc, #148]	; (403b38 <wait_for_bootrom+0xb4>)
  403aa2:	4b23      	ldr	r3, [pc, #140]	; (403b30 <wait_for_bootrom+0xac>)
  403aa4:	4798      	blx	r3
  403aa6:	f010 0f01 	tst.w	r0, #1
  403aaa:	d110      	bne.n	403ace <wait_for_bootrom+0x4a>
  403aac:	f8df 8084 	ldr.w	r8, [pc, #132]	; 403b34 <wait_for_bootrom+0xb0>
  403ab0:	4e1f      	ldr	r6, [pc, #124]	; (403b30 <wait_for_bootrom+0xac>)
  403ab2:	4d22      	ldr	r5, [pc, #136]	; (403b3c <wait_for_bootrom+0xb8>)
  403ab4:	2001      	movs	r0, #1
  403ab6:	47c0      	blx	r8
  403ab8:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
  403abc:	47b0      	blx	r6
  403abe:	4604      	mov	r4, r0
  403ac0:	462a      	mov	r2, r5
  403ac2:	4601      	mov	r1, r0
  403ac4:	481e      	ldr	r0, [pc, #120]	; (403b40 <wait_for_bootrom+0xbc>)
  403ac6:	4b1f      	ldr	r3, [pc, #124]	; (403b44 <wait_for_bootrom+0xc0>)
  403ac8:	4798      	blx	r3
  403aca:	42ac      	cmp	r4, r5
  403acc:	d1f2      	bne.n	403ab4 <wait_for_bootrom+0x30>
  403ace:	2f02      	cmp	r7, #2
  403ad0:	d019      	beq.n	403b06 <wait_for_bootrom+0x82>
  403ad2:	2f03      	cmp	r7, #3
  403ad4:	d022      	beq.n	403b1c <wait_for_bootrom+0x98>
  403ad6:	2f04      	cmp	r7, #4
  403ad8:	bf14      	ite	ne
  403ada:	2400      	movne	r4, #0
  403adc:	2480      	moveq	r4, #128	; 0x80
  403ade:	4b1a      	ldr	r3, [pc, #104]	; (403b48 <wait_for_bootrom+0xc4>)
  403ae0:	4798      	blx	r3
  403ae2:	f3c0 000b 	ubfx	r0, r0, #0, #12
  403ae6:	f5b0 7f68 	cmp.w	r0, #928	; 0x3a0
  403aea:	bf0c      	ite	eq
  403aec:	f044 0002 	orreq.w	r0, r4, #2
  403af0:	4620      	movne	r0, r4
  403af2:	4b16      	ldr	r3, [pc, #88]	; (403b4c <wait_for_bootrom+0xc8>)
  403af4:	4798      	blx	r3
  403af6:	4916      	ldr	r1, [pc, #88]	; (403b50 <wait_for_bootrom+0xcc>)
  403af8:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
  403afc:	4b15      	ldr	r3, [pc, #84]	; (403b54 <wait_for_bootrom+0xd0>)
  403afe:	4798      	blx	r3
  403b00:	2000      	movs	r0, #0
  403b02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403b06:	4914      	ldr	r1, [pc, #80]	; (403b58 <wait_for_bootrom+0xd4>)
  403b08:	4814      	ldr	r0, [pc, #80]	; (403b5c <wait_for_bootrom+0xd8>)
  403b0a:	4c12      	ldr	r4, [pc, #72]	; (403b54 <wait_for_bootrom+0xd0>)
  403b0c:	47a0      	blx	r4
  403b0e:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
  403b12:	f241 008c 	movw	r0, #4236	; 0x108c
  403b16:	47a0      	blx	r4
  403b18:	2400      	movs	r4, #0
  403b1a:	e7e0      	b.n	403ade <wait_for_bootrom+0x5a>
  403b1c:	490e      	ldr	r1, [pc, #56]	; (403b58 <wait_for_bootrom+0xd4>)
  403b1e:	480f      	ldr	r0, [pc, #60]	; (403b5c <wait_for_bootrom+0xd8>)
  403b20:	4c0c      	ldr	r4, [pc, #48]	; (403b54 <wait_for_bootrom+0xd0>)
  403b22:	47a0      	blx	r4
  403b24:	2100      	movs	r1, #0
  403b26:	f241 008c 	movw	r0, #4236	; 0x108c
  403b2a:	47a0      	blx	r4
  403b2c:	2400      	movs	r4, #0
  403b2e:	e7d6      	b.n	403ade <wait_for_bootrom+0x5a>
  403b30:	00403cc1 	.word	0x00403cc1
  403b34:	004025ed 	.word	0x004025ed
  403b38:	000207bc 	.word	0x000207bc
  403b3c:	10add09e 	.word	0x10add09e
  403b40:	0040d278 	.word	0x0040d278
  403b44:	004066e9 	.word	0x004066e9
  403b48:	004039d1 	.word	0x004039d1
  403b4c:	00403801 	.word	0x00403801
  403b50:	ef522f61 	.word	0xef522f61
  403b54:	00403cd9 	.word	0x00403cd9
  403b58:	3c1cd57d 	.word	0x3c1cd57d
  403b5c:	000207ac 	.word	0x000207ac

00403b60 <wait_for_firmware_start>:
  403b60:	b5f0      	push	{r4, r5, r6, r7, lr}
  403b62:	b083      	sub	sp, #12
  403b64:	f241 038c 	movw	r3, #4236	; 0x108c
  403b68:	9301      	str	r3, [sp, #4]
  403b6a:	4b18      	ldr	r3, [pc, #96]	; (403bcc <wait_for_firmware_start+0x6c>)
  403b6c:	9300      	str	r3, [sp, #0]
  403b6e:	3802      	subs	r0, #2
  403b70:	b2c0      	uxtb	r0, r0
  403b72:	2801      	cmp	r0, #1
  403b74:	d911      	bls.n	403b9a <wait_for_firmware_start+0x3a>
  403b76:	f04f 34ff 	mov.w	r4, #4294967295
  403b7a:	2000      	movs	r0, #0
  403b7c:	2702      	movs	r7, #2
  403b7e:	4e14      	ldr	r6, [pc, #80]	; (403bd0 <wait_for_firmware_start+0x70>)
  403b80:	4d14      	ldr	r5, [pc, #80]	; (403bd4 <wait_for_firmware_start+0x74>)
  403b82:	9b00      	ldr	r3, [sp, #0]
  403b84:	4298      	cmp	r0, r3
  403b86:	d012      	beq.n	403bae <wait_for_firmware_start+0x4e>
  403b88:	4638      	mov	r0, r7
  403b8a:	47b0      	blx	r6
  403b8c:	9801      	ldr	r0, [sp, #4]
  403b8e:	47a8      	blx	r5
  403b90:	3c01      	subs	r4, #1
  403b92:	d1f6      	bne.n	403b82 <wait_for_firmware_start+0x22>
  403b94:	f06f 0004 	mvn.w	r0, #4
  403b98:	e00e      	b.n	403bb8 <wait_for_firmware_start+0x58>
  403b9a:	4b0f      	ldr	r3, [pc, #60]	; (403bd8 <wait_for_firmware_start+0x78>)
  403b9c:	9301      	str	r3, [sp, #4]
  403b9e:	f1a3 5322 	sub.w	r3, r3, #679477248	; 0x28800000
  403ba2:	f5a3 1311 	sub.w	r3, r3, #2375680	; 0x244000
  403ba6:	f2a3 53e9 	subw	r3, r3, #1513	; 0x5e9
  403baa:	9300      	str	r3, [sp, #0]
  403bac:	e7e3      	b.n	403b76 <wait_for_firmware_start+0x16>
  403bae:	9a00      	ldr	r2, [sp, #0]
  403bb0:	4b06      	ldr	r3, [pc, #24]	; (403bcc <wait_for_firmware_start+0x6c>)
  403bb2:	429a      	cmp	r2, r3
  403bb4:	d002      	beq.n	403bbc <wait_for_firmware_start+0x5c>
  403bb6:	2000      	movs	r0, #0
  403bb8:	b003      	add	sp, #12
  403bba:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403bbc:	2100      	movs	r1, #0
  403bbe:	f241 008c 	movw	r0, #4236	; 0x108c
  403bc2:	4b06      	ldr	r3, [pc, #24]	; (403bdc <wait_for_firmware_start+0x7c>)
  403bc4:	4798      	blx	r3
  403bc6:	2000      	movs	r0, #0
  403bc8:	e7f6      	b.n	403bb8 <wait_for_firmware_start+0x58>
  403bca:	bf00      	nop
  403bcc:	02532636 	.word	0x02532636
  403bd0:	004025ed 	.word	0x004025ed
  403bd4:	00403cc1 	.word	0x00403cc1
  403bd8:	000207ac 	.word	0x000207ac
  403bdc:	00403cd9 	.word	0x00403cd9

00403be0 <chip_deinit>:
  403be0:	b5f0      	push	{r4, r5, r6, r7, lr}
  403be2:	b083      	sub	sp, #12
  403be4:	a902      	add	r1, sp, #8
  403be6:	2300      	movs	r3, #0
  403be8:	f841 3d04 	str.w	r3, [r1, #-4]!
  403bec:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
  403bf0:	4b24      	ldr	r3, [pc, #144]	; (403c84 <chip_deinit+0xa4>)
  403bf2:	4798      	blx	r3
  403bf4:	bb20      	cbnz	r0, 403c40 <chip_deinit+0x60>
  403bf6:	9901      	ldr	r1, [sp, #4]
  403bf8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
  403bfc:	9101      	str	r1, [sp, #4]
  403bfe:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
  403c02:	4b21      	ldr	r3, [pc, #132]	; (403c88 <chip_deinit+0xa8>)
  403c04:	4798      	blx	r3
  403c06:	4605      	mov	r5, r0
  403c08:	bb28      	cbnz	r0, 403c56 <chip_deinit+0x76>
  403c0a:	240a      	movs	r4, #10
  403c0c:	4e1d      	ldr	r6, [pc, #116]	; (403c84 <chip_deinit+0xa4>)
  403c0e:	4f1e      	ldr	r7, [pc, #120]	; (403c88 <chip_deinit+0xa8>)
  403c10:	a901      	add	r1, sp, #4
  403c12:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
  403c16:	47b0      	blx	r6
  403c18:	4605      	mov	r5, r0
  403c1a:	bb38      	cbnz	r0, 403c6c <chip_deinit+0x8c>
  403c1c:	9901      	ldr	r1, [sp, #4]
  403c1e:	f411 6f80 	tst.w	r1, #1024	; 0x400
  403c22:	d00a      	beq.n	403c3a <chip_deinit+0x5a>
  403c24:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
  403c28:	9101      	str	r1, [sp, #4]
  403c2a:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
  403c2e:	47b8      	blx	r7
  403c30:	4605      	mov	r5, r0
  403c32:	1e63      	subs	r3, r4, #1
  403c34:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  403c38:	d1ea      	bne.n	403c10 <chip_deinit+0x30>
  403c3a:	4628      	mov	r0, r5
  403c3c:	b003      	add	sp, #12
  403c3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403c40:	f240 2231 	movw	r2, #561	; 0x231
  403c44:	4911      	ldr	r1, [pc, #68]	; (403c8c <chip_deinit+0xac>)
  403c46:	4812      	ldr	r0, [pc, #72]	; (403c90 <chip_deinit+0xb0>)
  403c48:	4c12      	ldr	r4, [pc, #72]	; (403c94 <chip_deinit+0xb4>)
  403c4a:	47a0      	blx	r4
  403c4c:	4812      	ldr	r0, [pc, #72]	; (403c98 <chip_deinit+0xb8>)
  403c4e:	47a0      	blx	r4
  403c50:	4812      	ldr	r0, [pc, #72]	; (403c9c <chip_deinit+0xbc>)
  403c52:	47a0      	blx	r4
  403c54:	e7cf      	b.n	403bf6 <chip_deinit+0x16>
  403c56:	f240 2237 	movw	r2, #567	; 0x237
  403c5a:	490c      	ldr	r1, [pc, #48]	; (403c8c <chip_deinit+0xac>)
  403c5c:	480c      	ldr	r0, [pc, #48]	; (403c90 <chip_deinit+0xb0>)
  403c5e:	4c0d      	ldr	r4, [pc, #52]	; (403c94 <chip_deinit+0xb4>)
  403c60:	47a0      	blx	r4
  403c62:	480f      	ldr	r0, [pc, #60]	; (403ca0 <chip_deinit+0xc0>)
  403c64:	47a0      	blx	r4
  403c66:	480d      	ldr	r0, [pc, #52]	; (403c9c <chip_deinit+0xbc>)
  403c68:	47a0      	blx	r4
  403c6a:	e7e6      	b.n	403c3a <chip_deinit+0x5a>
  403c6c:	f240 223e 	movw	r2, #574	; 0x23e
  403c70:	4906      	ldr	r1, [pc, #24]	; (403c8c <chip_deinit+0xac>)
  403c72:	4807      	ldr	r0, [pc, #28]	; (403c90 <chip_deinit+0xb0>)
  403c74:	4c07      	ldr	r4, [pc, #28]	; (403c94 <chip_deinit+0xb4>)
  403c76:	47a0      	blx	r4
  403c78:	480a      	ldr	r0, [pc, #40]	; (403ca4 <chip_deinit+0xc4>)
  403c7a:	47a0      	blx	r4
  403c7c:	4807      	ldr	r0, [pc, #28]	; (403c9c <chip_deinit+0xbc>)
  403c7e:	47a0      	blx	r4
  403c80:	e7db      	b.n	403c3a <chip_deinit+0x5a>
  403c82:	bf00      	nop
  403c84:	00403ccd 	.word	0x00403ccd
  403c88:	00403cd9 	.word	0x00403cd9
  403c8c:	0040d1b4 	.word	0x0040d1b4
  403c90:	0040cd74 	.word	0x0040cd74
  403c94:	004066e9 	.word	0x004066e9
  403c98:	0040d1c0 	.word	0x0040d1c0
  403c9c:	0040cda0 	.word	0x0040cda0
  403ca0:	0040d1dc 	.word	0x0040d1dc
  403ca4:	0040d1f8 	.word	0x0040d1f8

00403ca8 <nm_bus_iface_init>:
  403ca8:	b508      	push	{r3, lr}
  403caa:	4b01      	ldr	r3, [pc, #4]	; (403cb0 <nm_bus_iface_init+0x8>)
  403cac:	4798      	blx	r3
  403cae:	bd08      	pop	{r3, pc}
  403cb0:	00402761 	.word	0x00402761

00403cb4 <nm_bus_iface_deinit>:
  403cb4:	b508      	push	{r3, lr}
  403cb6:	4b01      	ldr	r3, [pc, #4]	; (403cbc <nm_bus_iface_deinit+0x8>)
  403cb8:	4798      	blx	r3
  403cba:	bd08      	pop	{r3, pc}
  403cbc:	00402951 	.word	0x00402951

00403cc0 <nm_read_reg>:
  403cc0:	b508      	push	{r3, lr}
  403cc2:	4b01      	ldr	r3, [pc, #4]	; (403cc8 <nm_read_reg+0x8>)
  403cc4:	4798      	blx	r3
  403cc6:	bd08      	pop	{r3, pc}
  403cc8:	00404515 	.word	0x00404515

00403ccc <nm_read_reg_with_ret>:
  403ccc:	b508      	push	{r3, lr}
  403cce:	4b01      	ldr	r3, [pc, #4]	; (403cd4 <nm_read_reg_with_ret+0x8>)
  403cd0:	4798      	blx	r3
  403cd2:	bd08      	pop	{r3, pc}
  403cd4:	0040452d 	.word	0x0040452d

00403cd8 <nm_write_reg>:
  403cd8:	b508      	push	{r3, lr}
  403cda:	4b01      	ldr	r3, [pc, #4]	; (403ce0 <nm_write_reg+0x8>)
  403cdc:	4798      	blx	r3
  403cde:	bd08      	pop	{r3, pc}
  403ce0:	00404545 	.word	0x00404545

00403ce4 <nm_read_block>:
  403ce4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403ce8:	4607      	mov	r7, r0
  403cea:	4689      	mov	r9, r1
  403cec:	4615      	mov	r5, r2
  403cee:	4b12      	ldr	r3, [pc, #72]	; (403d38 <nm_read_block+0x54>)
  403cf0:	f8b3 8000 	ldrh.w	r8, [r3]
  403cf4:	f1a8 0808 	sub.w	r8, r8, #8
  403cf8:	fa1f f888 	uxth.w	r8, r8
  403cfc:	4542      	cmp	r2, r8
  403cfe:	d919      	bls.n	403d34 <nm_read_block+0x50>
  403d00:	4644      	mov	r4, r8
  403d02:	2600      	movs	r6, #0
  403d04:	f8df a034 	ldr.w	sl, [pc, #52]	; 403d3c <nm_read_block+0x58>
  403d08:	4642      	mov	r2, r8
  403d0a:	eb09 0106 	add.w	r1, r9, r6
  403d0e:	4638      	mov	r0, r7
  403d10:	47d0      	blx	sl
  403d12:	4603      	mov	r3, r0
  403d14:	b958      	cbnz	r0, 403d2e <nm_read_block+0x4a>
  403d16:	1b2d      	subs	r5, r5, r4
  403d18:	4426      	add	r6, r4
  403d1a:	4427      	add	r7, r4
  403d1c:	42a5      	cmp	r5, r4
  403d1e:	d8f3      	bhi.n	403d08 <nm_read_block+0x24>
  403d20:	b2aa      	uxth	r2, r5
  403d22:	eb09 0106 	add.w	r1, r9, r6
  403d26:	4638      	mov	r0, r7
  403d28:	4b04      	ldr	r3, [pc, #16]	; (403d3c <nm_read_block+0x58>)
  403d2a:	4798      	blx	r3
  403d2c:	4603      	mov	r3, r0
  403d2e:	4618      	mov	r0, r3
  403d30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d34:	2600      	movs	r6, #0
  403d36:	e7f3      	b.n	403d20 <nm_read_block+0x3c>
  403d38:	20400010 	.word	0x20400010
  403d3c:	00404671 	.word	0x00404671

00403d40 <nm_write_block>:
  403d40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403d44:	4607      	mov	r7, r0
  403d46:	4689      	mov	r9, r1
  403d48:	4615      	mov	r5, r2
  403d4a:	4b12      	ldr	r3, [pc, #72]	; (403d94 <nm_write_block+0x54>)
  403d4c:	f8b3 8000 	ldrh.w	r8, [r3]
  403d50:	f1a8 0808 	sub.w	r8, r8, #8
  403d54:	fa1f f888 	uxth.w	r8, r8
  403d58:	4542      	cmp	r2, r8
  403d5a:	d919      	bls.n	403d90 <nm_write_block+0x50>
  403d5c:	4644      	mov	r4, r8
  403d5e:	2600      	movs	r6, #0
  403d60:	f8df a034 	ldr.w	sl, [pc, #52]	; 403d98 <nm_write_block+0x58>
  403d64:	4642      	mov	r2, r8
  403d66:	eb09 0106 	add.w	r1, r9, r6
  403d6a:	4638      	mov	r0, r7
  403d6c:	47d0      	blx	sl
  403d6e:	4603      	mov	r3, r0
  403d70:	b958      	cbnz	r0, 403d8a <nm_write_block+0x4a>
  403d72:	1b2d      	subs	r5, r5, r4
  403d74:	4426      	add	r6, r4
  403d76:	4427      	add	r7, r4
  403d78:	42a5      	cmp	r5, r4
  403d7a:	d8f3      	bhi.n	403d64 <nm_write_block+0x24>
  403d7c:	b2aa      	uxth	r2, r5
  403d7e:	eb09 0106 	add.w	r1, r9, r6
  403d82:	4638      	mov	r0, r7
  403d84:	4b04      	ldr	r3, [pc, #16]	; (403d98 <nm_write_block+0x58>)
  403d86:	4798      	blx	r3
  403d88:	4603      	mov	r3, r0
  403d8a:	4618      	mov	r0, r3
  403d8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d90:	2600      	movs	r6, #0
  403d92:	e7f3      	b.n	403d7c <nm_write_block+0x3c>
  403d94:	20400010 	.word	0x20400010
  403d98:	00404739 	.word	0x00404739

00403d9c <nm_get_firmware_info>:
  403d9c:	b530      	push	{r4, r5, lr}
  403d9e:	b083      	sub	sp, #12
  403da0:	4604      	mov	r4, r0
  403da2:	a902      	add	r1, sp, #8
  403da4:	2300      	movs	r3, #0
  403da6:	f841 3d04 	str.w	r3, [r1, #-4]!
  403daa:	4824      	ldr	r0, [pc, #144]	; (403e3c <nm_get_firmware_info+0xa0>)
  403dac:	4b24      	ldr	r3, [pc, #144]	; (403e40 <nm_get_firmware_info+0xa4>)
  403dae:	4798      	blx	r3
  403db0:	4605      	mov	r5, r0
  403db2:	9a01      	ldr	r2, [sp, #4]
  403db4:	4b23      	ldr	r3, [pc, #140]	; (403e44 <nm_get_firmware_info+0xa8>)
  403db6:	429a      	cmp	r2, r3
  403db8:	d039      	beq.n	403e2e <nm_get_firmware_info+0x92>
  403dba:	9b01      	ldr	r3, [sp, #4]
  403dbc:	0c1a      	lsrs	r2, r3, #16
  403dbe:	b291      	uxth	r1, r2
  403dc0:	0a08      	lsrs	r0, r1, #8
  403dc2:	71e0      	strb	r0, [r4, #7]
  403dc4:	f3c1 1103 	ubfx	r1, r1, #4, #4
  403dc8:	7221      	strb	r1, [r4, #8]
  403dca:	f002 020f 	and.w	r2, r2, #15
  403dce:	7262      	strb	r2, [r4, #9]
  403dd0:	b29a      	uxth	r2, r3
  403dd2:	0a11      	lsrs	r1, r2, #8
  403dd4:	7121      	strb	r1, [r4, #4]
  403dd6:	f3c2 1203 	ubfx	r2, r2, #4, #4
  403dda:	7162      	strb	r2, [r4, #5]
  403ddc:	f003 030f 	and.w	r3, r3, #15
  403de0:	71a3      	strb	r3, [r4, #6]
  403de2:	4b19      	ldr	r3, [pc, #100]	; (403e48 <nm_get_firmware_info+0xac>)
  403de4:	4798      	blx	r3
  403de6:	6020      	str	r0, [r4, #0]
  403de8:	7922      	ldrb	r2, [r4, #4]
  403dea:	79a3      	ldrb	r3, [r4, #6]
  403dec:	f003 030f 	and.w	r3, r3, #15
  403df0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  403df4:	7962      	ldrb	r2, [r4, #5]
  403df6:	0112      	lsls	r2, r2, #4
  403df8:	b2d2      	uxtb	r2, r2
  403dfa:	4313      	orrs	r3, r2
  403dfc:	79e1      	ldrb	r1, [r4, #7]
  403dfe:	7a62      	ldrb	r2, [r4, #9]
  403e00:	f002 020f 	and.w	r2, r2, #15
  403e04:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  403e08:	7a21      	ldrb	r1, [r4, #8]
  403e0a:	0109      	lsls	r1, r1, #4
  403e0c:	b2c9      	uxtb	r1, r1
  403e0e:	430a      	orrs	r2, r1
  403e10:	f241 3130 	movw	r1, #4912	; 0x1330
  403e14:	428a      	cmp	r2, r1
  403e16:	bf88      	it	hi
  403e18:	f06f 050c 	mvnhi.w	r5, #12
  403e1c:	f241 322f 	movw	r2, #4911	; 0x132f
  403e20:	4293      	cmp	r3, r2
  403e22:	bf8c      	ite	hi
  403e24:	4628      	movhi	r0, r5
  403e26:	f06f 000c 	mvnls.w	r0, #12
  403e2a:	b003      	add	sp, #12
  403e2c:	bd30      	pop	{r4, r5, pc}
  403e2e:	a901      	add	r1, sp, #4
  403e30:	f241 0048 	movw	r0, #4168	; 0x1048
  403e34:	4b02      	ldr	r3, [pc, #8]	; (403e40 <nm_get_firmware_info+0xa4>)
  403e36:	4798      	blx	r3
  403e38:	4605      	mov	r5, r0
  403e3a:	e7be      	b.n	403dba <nm_get_firmware_info+0x1e>
  403e3c:	000207ac 	.word	0x000207ac
  403e40:	00403ccd 	.word	0x00403ccd
  403e44:	d75dc1c3 	.word	0xd75dc1c3
  403e48:	004039d1 	.word	0x004039d1

00403e4c <nm_drv_init>:
  403e4c:	b538      	push	{r3, r4, r5, lr}
  403e4e:	2800      	cmp	r0, #0
  403e50:	d037      	beq.n	403ec2 <nm_drv_init+0x76>
  403e52:	7804      	ldrb	r4, [r0, #0]
  403e54:	1e63      	subs	r3, r4, #1
  403e56:	b2db      	uxtb	r3, r3
  403e58:	2b04      	cmp	r3, #4
  403e5a:	bf28      	it	cs
  403e5c:	2401      	movcs	r4, #1
  403e5e:	2000      	movs	r0, #0
  403e60:	4b1e      	ldr	r3, [pc, #120]	; (403edc <nm_drv_init+0x90>)
  403e62:	4798      	blx	r3
  403e64:	4605      	mov	r5, r0
  403e66:	2800      	cmp	r0, #0
  403e68:	d12d      	bne.n	403ec6 <nm_drv_init+0x7a>
  403e6a:	481d      	ldr	r0, [pc, #116]	; (403ee0 <nm_drv_init+0x94>)
  403e6c:	4d1d      	ldr	r5, [pc, #116]	; (403ee4 <nm_drv_init+0x98>)
  403e6e:	47a8      	blx	r5
  403e70:	4b1d      	ldr	r3, [pc, #116]	; (403ee8 <nm_drv_init+0x9c>)
  403e72:	4798      	blx	r3
  403e74:	4601      	mov	r1, r0
  403e76:	481d      	ldr	r0, [pc, #116]	; (403eec <nm_drv_init+0xa0>)
  403e78:	47a8      	blx	r5
  403e7a:	481d      	ldr	r0, [pc, #116]	; (403ef0 <nm_drv_init+0xa4>)
  403e7c:	47a8      	blx	r5
  403e7e:	4b1d      	ldr	r3, [pc, #116]	; (403ef4 <nm_drv_init+0xa8>)
  403e80:	4798      	blx	r3
  403e82:	4620      	mov	r0, r4
  403e84:	4b1c      	ldr	r3, [pc, #112]	; (403ef8 <nm_drv_init+0xac>)
  403e86:	4798      	blx	r3
  403e88:	4605      	mov	r5, r0
  403e8a:	b9b0      	cbnz	r0, 403eba <nm_drv_init+0x6e>
  403e8c:	4620      	mov	r0, r4
  403e8e:	4b1b      	ldr	r3, [pc, #108]	; (403efc <nm_drv_init+0xb0>)
  403e90:	4798      	blx	r3
  403e92:	4605      	mov	r5, r0
  403e94:	b988      	cbnz	r0, 403eba <nm_drv_init+0x6e>
  403e96:	3c02      	subs	r4, #2
  403e98:	b2e4      	uxtb	r4, r4
  403e9a:	2c01      	cmp	r4, #1
  403e9c:	d90f      	bls.n	403ebe <nm_drv_init+0x72>
  403e9e:	4b18      	ldr	r3, [pc, #96]	; (403f00 <nm_drv_init+0xb4>)
  403ea0:	4798      	blx	r3
  403ea2:	4605      	mov	r5, r0
  403ea4:	b158      	cbz	r0, 403ebe <nm_drv_init+0x72>
  403ea6:	f44f 72ae 	mov.w	r2, #348	; 0x15c
  403eaa:	4916      	ldr	r1, [pc, #88]	; (403f04 <nm_drv_init+0xb8>)
  403eac:	4816      	ldr	r0, [pc, #88]	; (403f08 <nm_drv_init+0xbc>)
  403eae:	4c0d      	ldr	r4, [pc, #52]	; (403ee4 <nm_drv_init+0x98>)
  403eb0:	47a0      	blx	r4
  403eb2:	4816      	ldr	r0, [pc, #88]	; (403f0c <nm_drv_init+0xc0>)
  403eb4:	47a0      	blx	r4
  403eb6:	480e      	ldr	r0, [pc, #56]	; (403ef0 <nm_drv_init+0xa4>)
  403eb8:	47a0      	blx	r4
  403eba:	4b15      	ldr	r3, [pc, #84]	; (403f10 <nm_drv_init+0xc4>)
  403ebc:	4798      	blx	r3
  403ebe:	4628      	mov	r0, r5
  403ec0:	bd38      	pop	{r3, r4, r5, pc}
  403ec2:	2401      	movs	r4, #1
  403ec4:	e7cb      	b.n	403e5e <nm_drv_init+0x12>
  403ec6:	f44f 7292 	mov.w	r2, #292	; 0x124
  403eca:	490e      	ldr	r1, [pc, #56]	; (403f04 <nm_drv_init+0xb8>)
  403ecc:	480e      	ldr	r0, [pc, #56]	; (403f08 <nm_drv_init+0xbc>)
  403ece:	4c05      	ldr	r4, [pc, #20]	; (403ee4 <nm_drv_init+0x98>)
  403ed0:	47a0      	blx	r4
  403ed2:	4810      	ldr	r0, [pc, #64]	; (403f14 <nm_drv_init+0xc8>)
  403ed4:	47a0      	blx	r4
  403ed6:	4806      	ldr	r0, [pc, #24]	; (403ef0 <nm_drv_init+0xa4>)
  403ed8:	47a0      	blx	r4
  403eda:	e7f0      	b.n	403ebe <nm_drv_init+0x72>
  403edc:	00403ca9 	.word	0x00403ca9
  403ee0:	0040d048 	.word	0x0040d048
  403ee4:	004066e9 	.word	0x004066e9
  403ee8:	004039d1 	.word	0x004039d1
  403eec:	0040d340 	.word	0x0040d340
  403ef0:	0040cda0 	.word	0x0040cda0
  403ef4:	0040455d 	.word	0x0040455d
  403ef8:	00403a85 	.word	0x00403a85
  403efc:	00403b61 	.word	0x00403b61
  403f00:	00403969 	.word	0x00403969
  403f04:	0040d288 	.word	0x0040d288
  403f08:	0040cd74 	.word	0x0040cd74
  403f0c:	0040d304 	.word	0x0040d304
  403f10:	00403cb5 	.word	0x00403cb5
  403f14:	0040d324 	.word	0x0040d324

00403f18 <nm_drv_deinit>:
  403f18:	b538      	push	{r3, r4, r5, lr}
  403f1a:	4b19      	ldr	r3, [pc, #100]	; (403f80 <nm_drv_deinit+0x68>)
  403f1c:	4798      	blx	r3
  403f1e:	b958      	cbnz	r0, 403f38 <nm_drv_deinit+0x20>
  403f20:	2000      	movs	r0, #0
  403f22:	4b18      	ldr	r3, [pc, #96]	; (403f84 <nm_drv_deinit+0x6c>)
  403f24:	4798      	blx	r3
  403f26:	4604      	mov	r4, r0
  403f28:	b998      	cbnz	r0, 403f52 <nm_drv_deinit+0x3a>
  403f2a:	4b17      	ldr	r3, [pc, #92]	; (403f88 <nm_drv_deinit+0x70>)
  403f2c:	4798      	blx	r3
  403f2e:	4604      	mov	r4, r0
  403f30:	b9d0      	cbnz	r0, 403f68 <nm_drv_deinit+0x50>
  403f32:	4b16      	ldr	r3, [pc, #88]	; (403f8c <nm_drv_deinit+0x74>)
  403f34:	4798      	blx	r3
  403f36:	e00a      	b.n	403f4e <nm_drv_deinit+0x36>
  403f38:	4604      	mov	r4, r0
  403f3a:	f44f 72ba 	mov.w	r2, #372	; 0x174
  403f3e:	4914      	ldr	r1, [pc, #80]	; (403f90 <nm_drv_deinit+0x78>)
  403f40:	4814      	ldr	r0, [pc, #80]	; (403f94 <nm_drv_deinit+0x7c>)
  403f42:	4d15      	ldr	r5, [pc, #84]	; (403f98 <nm_drv_deinit+0x80>)
  403f44:	47a8      	blx	r5
  403f46:	4815      	ldr	r0, [pc, #84]	; (403f9c <nm_drv_deinit+0x84>)
  403f48:	47a8      	blx	r5
  403f4a:	4815      	ldr	r0, [pc, #84]	; (403fa0 <nm_drv_deinit+0x88>)
  403f4c:	47a8      	blx	r5
  403f4e:	4620      	mov	r0, r4
  403f50:	bd38      	pop	{r3, r4, r5, pc}
  403f52:	f240 127b 	movw	r2, #379	; 0x17b
  403f56:	490e      	ldr	r1, [pc, #56]	; (403f90 <nm_drv_deinit+0x78>)
  403f58:	480e      	ldr	r0, [pc, #56]	; (403f94 <nm_drv_deinit+0x7c>)
  403f5a:	4d0f      	ldr	r5, [pc, #60]	; (403f98 <nm_drv_deinit+0x80>)
  403f5c:	47a8      	blx	r5
  403f5e:	4811      	ldr	r0, [pc, #68]	; (403fa4 <nm_drv_deinit+0x8c>)
  403f60:	47a8      	blx	r5
  403f62:	480f      	ldr	r0, [pc, #60]	; (403fa0 <nm_drv_deinit+0x88>)
  403f64:	47a8      	blx	r5
  403f66:	e7f2      	b.n	403f4e <nm_drv_deinit+0x36>
  403f68:	f240 1281 	movw	r2, #385	; 0x181
  403f6c:	4908      	ldr	r1, [pc, #32]	; (403f90 <nm_drv_deinit+0x78>)
  403f6e:	4809      	ldr	r0, [pc, #36]	; (403f94 <nm_drv_deinit+0x7c>)
  403f70:	4d09      	ldr	r5, [pc, #36]	; (403f98 <nm_drv_deinit+0x80>)
  403f72:	47a8      	blx	r5
  403f74:	480c      	ldr	r0, [pc, #48]	; (403fa8 <nm_drv_deinit+0x90>)
  403f76:	47a8      	blx	r5
  403f78:	4809      	ldr	r0, [pc, #36]	; (403fa0 <nm_drv_deinit+0x88>)
  403f7a:	47a8      	blx	r5
  403f7c:	e7e7      	b.n	403f4e <nm_drv_deinit+0x36>
  403f7e:	bf00      	nop
  403f80:	00403be1 	.word	0x00403be1
  403f84:	00404ffd 	.word	0x00404ffd
  403f88:	00403cb5 	.word	0x00403cb5
  403f8c:	00404509 	.word	0x00404509
  403f90:	0040d294 	.word	0x0040d294
  403f94:	0040cd74 	.word	0x0040cd74
  403f98:	004066e9 	.word	0x004066e9
  403f9c:	0040d2a4 	.word	0x0040d2a4
  403fa0:	0040cda0 	.word	0x0040cda0
  403fa4:	0040d2c4 	.word	0x0040d2c4
  403fa8:	0040d2e8 	.word	0x0040d2e8

00403fac <nmi_spi_read>:
  403fac:	b500      	push	{lr}
  403fae:	b085      	sub	sp, #20
  403fb0:	2300      	movs	r3, #0
  403fb2:	9301      	str	r3, [sp, #4]
  403fb4:	9002      	str	r0, [sp, #8]
  403fb6:	f8ad 100c 	strh.w	r1, [sp, #12]
  403fba:	a901      	add	r1, sp, #4
  403fbc:	2003      	movs	r0, #3
  403fbe:	4b02      	ldr	r3, [pc, #8]	; (403fc8 <nmi_spi_read+0x1c>)
  403fc0:	4798      	blx	r3
  403fc2:	b005      	add	sp, #20
  403fc4:	f85d fb04 	ldr.w	pc, [sp], #4
  403fc8:	0040287d 	.word	0x0040287d

00403fcc <spi_cmd_rsp>:
  403fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403fd0:	b082      	sub	sp, #8
  403fd2:	4605      	mov	r5, r0
  403fd4:	f100 033b 	add.w	r3, r0, #59	; 0x3b
  403fd8:	b2db      	uxtb	r3, r3
  403fda:	2b01      	cmp	r3, #1
  403fdc:	d927      	bls.n	40402e <spi_cmd_rsp+0x62>
  403fde:	28cf      	cmp	r0, #207	; 0xcf
  403fe0:	d025      	beq.n	40402e <spi_cmd_rsp+0x62>
  403fe2:	240b      	movs	r4, #11
  403fe4:	f04f 0801 	mov.w	r8, #1
  403fe8:	4f23      	ldr	r7, [pc, #140]	; (404078 <spi_cmd_rsp+0xac>)
  403fea:	4641      	mov	r1, r8
  403fec:	f10d 0007 	add.w	r0, sp, #7
  403ff0:	47b8      	blx	r7
  403ff2:	4606      	mov	r6, r0
  403ff4:	bb20      	cbnz	r0, 404040 <spi_cmd_rsp+0x74>
  403ff6:	f89d 3007 	ldrb.w	r3, [sp, #7]
  403ffa:	42ab      	cmp	r3, r5
  403ffc:	d02c      	beq.n	404058 <spi_cmd_rsp+0x8c>
  403ffe:	1e63      	subs	r3, r4, #1
  404000:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  404004:	d1f1      	bne.n	403fea <spi_cmd_rsp+0x1e>
  404006:	240b      	movs	r4, #11
  404008:	2701      	movs	r7, #1
  40400a:	4d1b      	ldr	r5, [pc, #108]	; (404078 <spi_cmd_rsp+0xac>)
  40400c:	4639      	mov	r1, r7
  40400e:	f10d 0007 	add.w	r0, sp, #7
  404012:	47a8      	blx	r5
  404014:	bb10      	cbnz	r0, 40405c <spi_cmd_rsp+0x90>
  404016:	f89d 3007 	ldrb.w	r3, [sp, #7]
  40401a:	b353      	cbz	r3, 404072 <spi_cmd_rsp+0xa6>
  40401c:	1e63      	subs	r3, r4, #1
  40401e:	f013 04ff 	ands.w	r4, r3, #255	; 0xff
  404022:	d1f3      	bne.n	40400c <spi_cmd_rsp+0x40>
  404024:	2601      	movs	r6, #1
  404026:	4630      	mov	r0, r6
  404028:	b002      	add	sp, #8
  40402a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40402e:	2101      	movs	r1, #1
  404030:	f10d 0007 	add.w	r0, sp, #7
  404034:	4b10      	ldr	r3, [pc, #64]	; (404078 <spi_cmd_rsp+0xac>)
  404036:	4798      	blx	r3
  404038:	2800      	cmp	r0, #0
  40403a:	d0d2      	beq.n	403fe2 <spi_cmd_rsp+0x16>
  40403c:	2600      	movs	r6, #0
  40403e:	e7f2      	b.n	404026 <spi_cmd_rsp+0x5a>
  404040:	f240 1227 	movw	r2, #295	; 0x127
  404044:	490d      	ldr	r1, [pc, #52]	; (40407c <spi_cmd_rsp+0xb0>)
  404046:	480e      	ldr	r0, [pc, #56]	; (404080 <spi_cmd_rsp+0xb4>)
  404048:	4c0e      	ldr	r4, [pc, #56]	; (404084 <spi_cmd_rsp+0xb8>)
  40404a:	47a0      	blx	r4
  40404c:	480e      	ldr	r0, [pc, #56]	; (404088 <spi_cmd_rsp+0xbc>)
  40404e:	47a0      	blx	r4
  404050:	480e      	ldr	r0, [pc, #56]	; (40408c <spi_cmd_rsp+0xc0>)
  404052:	47a0      	blx	r4
  404054:	2600      	movs	r6, #0
  404056:	e7e6      	b.n	404026 <spi_cmd_rsp+0x5a>
  404058:	240b      	movs	r4, #11
  40405a:	e7d5      	b.n	404008 <spi_cmd_rsp+0x3c>
  40405c:	f240 1235 	movw	r2, #309	; 0x135
  404060:	4906      	ldr	r1, [pc, #24]	; (40407c <spi_cmd_rsp+0xb0>)
  404062:	4807      	ldr	r0, [pc, #28]	; (404080 <spi_cmd_rsp+0xb4>)
  404064:	4c07      	ldr	r4, [pc, #28]	; (404084 <spi_cmd_rsp+0xb8>)
  404066:	47a0      	blx	r4
  404068:	4807      	ldr	r0, [pc, #28]	; (404088 <spi_cmd_rsp+0xbc>)
  40406a:	47a0      	blx	r4
  40406c:	4807      	ldr	r0, [pc, #28]	; (40408c <spi_cmd_rsp+0xc0>)
  40406e:	47a0      	blx	r4
  404070:	e7d9      	b.n	404026 <spi_cmd_rsp+0x5a>
  404072:	2601      	movs	r6, #1
  404074:	e7d7      	b.n	404026 <spi_cmd_rsp+0x5a>
  404076:	bf00      	nop
  404078:	00403fad 	.word	0x00403fad
  40407c:	0040d358 	.word	0x0040d358
  404080:	0040cd74 	.word	0x0040cd74
  404084:	004066e9 	.word	0x004066e9
  404088:	0040d798 	.word	0x0040d798
  40408c:	0040cda0 	.word	0x0040cda0

00404090 <spi_data_read>:
  404090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404094:	b085      	sub	sp, #20
  404096:	4683      	mov	fp, r0
  404098:	468a      	mov	sl, r1
  40409a:	4617      	mov	r7, r2
  40409c:	f04f 0900 	mov.w	r9, #0
  4040a0:	4d37      	ldr	r5, [pc, #220]	; (404180 <spi_data_read+0xf0>)
  4040a2:	e027      	b.n	4040f4 <spi_data_read+0x64>
  4040a4:	f240 1257 	movw	r2, #343	; 0x157
  4040a8:	4936      	ldr	r1, [pc, #216]	; (404184 <spi_data_read+0xf4>)
  4040aa:	4837      	ldr	r0, [pc, #220]	; (404188 <spi_data_read+0xf8>)
  4040ac:	4c37      	ldr	r4, [pc, #220]	; (40418c <spi_data_read+0xfc>)
  4040ae:	47a0      	blx	r4
  4040b0:	4837      	ldr	r0, [pc, #220]	; (404190 <spi_data_read+0x100>)
  4040b2:	47a0      	blx	r4
  4040b4:	4837      	ldr	r0, [pc, #220]	; (404194 <spi_data_read+0x104>)
  4040b6:	47a0      	blx	r4
  4040b8:	2300      	movs	r3, #0
  4040ba:	9301      	str	r3, [sp, #4]
  4040bc:	9801      	ldr	r0, [sp, #4]
  4040be:	b005      	add	sp, #20
  4040c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040c4:	2c00      	cmp	r4, #0
  4040c6:	dd2e      	ble.n	404126 <spi_data_read+0x96>
  4040c8:	4641      	mov	r1, r8
  4040ca:	eb0b 0009 	add.w	r0, fp, r9
  4040ce:	47a8      	blx	r5
  4040d0:	4604      	mov	r4, r0
  4040d2:	2800      	cmp	r0, #0
  4040d4:	d134      	bne.n	404140 <spi_data_read+0xb0>
  4040d6:	b91f      	cbnz	r7, 4040e0 <spi_data_read+0x50>
  4040d8:	4b2f      	ldr	r3, [pc, #188]	; (404198 <spi_data_read+0x108>)
  4040da:	781b      	ldrb	r3, [r3, #0]
  4040dc:	2b00      	cmp	r3, #0
  4040de:	d03a      	beq.n	404156 <spi_data_read+0xc6>
  4040e0:	44c1      	add	r9, r8
  4040e2:	fa0f f989 	sxth.w	r9, r9
  4040e6:	ebaa 0a08 	sub.w	sl, sl, r8
  4040ea:	fa1f fa8a 	uxth.w	sl, sl
  4040ee:	f1ba 0f00 	cmp.w	sl, #0
  4040f2:	d041      	beq.n	404178 <spi_data_read+0xe8>
  4040f4:	46d0      	mov	r8, sl
  4040f6:	f5ba 5f00 	cmp.w	sl, #8192	; 0x2000
  4040fa:	bf28      	it	cs
  4040fc:	f44f 5800 	movcs.w	r8, #8192	; 0x2000
  404100:	240a      	movs	r4, #10
  404102:	2601      	movs	r6, #1
  404104:	4631      	mov	r1, r6
  404106:	f10d 000b 	add.w	r0, sp, #11
  40410a:	47a8      	blx	r5
  40410c:	9001      	str	r0, [sp, #4]
  40410e:	2800      	cmp	r0, #0
  404110:	d1c8      	bne.n	4040a4 <spi_data_read+0x14>
  404112:	f89d 300b 	ldrb.w	r3, [sp, #11]
  404116:	091b      	lsrs	r3, r3, #4
  404118:	2b0f      	cmp	r3, #15
  40411a:	d0d3      	beq.n	4040c4 <spi_data_read+0x34>
  40411c:	3c01      	subs	r4, #1
  40411e:	b224      	sxth	r4, r4
  404120:	f1b4 3fff 	cmp.w	r4, #4294967295
  404124:	d1ee      	bne.n	404104 <spi_data_read+0x74>
  404126:	f240 1263 	movw	r2, #355	; 0x163
  40412a:	4916      	ldr	r1, [pc, #88]	; (404184 <spi_data_read+0xf4>)
  40412c:	4816      	ldr	r0, [pc, #88]	; (404188 <spi_data_read+0xf8>)
  40412e:	4c17      	ldr	r4, [pc, #92]	; (40418c <spi_data_read+0xfc>)
  404130:	47a0      	blx	r4
  404132:	f89d 100b 	ldrb.w	r1, [sp, #11]
  404136:	4819      	ldr	r0, [pc, #100]	; (40419c <spi_data_read+0x10c>)
  404138:	47a0      	blx	r4
  40413a:	4816      	ldr	r0, [pc, #88]	; (404194 <spi_data_read+0x104>)
  40413c:	47a0      	blx	r4
  40413e:	e7bd      	b.n	4040bc <spi_data_read+0x2c>
  404140:	f44f 72b6 	mov.w	r2, #364	; 0x16c
  404144:	490f      	ldr	r1, [pc, #60]	; (404184 <spi_data_read+0xf4>)
  404146:	4810      	ldr	r0, [pc, #64]	; (404188 <spi_data_read+0xf8>)
  404148:	4c10      	ldr	r4, [pc, #64]	; (40418c <spi_data_read+0xfc>)
  40414a:	47a0      	blx	r4
  40414c:	4814      	ldr	r0, [pc, #80]	; (4041a0 <spi_data_read+0x110>)
  40414e:	47a0      	blx	r4
  404150:	4810      	ldr	r0, [pc, #64]	; (404194 <spi_data_read+0x104>)
  404152:	47a0      	blx	r4
  404154:	e7b2      	b.n	4040bc <spi_data_read+0x2c>
  404156:	2102      	movs	r1, #2
  404158:	a803      	add	r0, sp, #12
  40415a:	47a8      	blx	r5
  40415c:	2800      	cmp	r0, #0
  40415e:	d0bf      	beq.n	4040e0 <spi_data_read+0x50>
  404160:	f240 1277 	movw	r2, #375	; 0x177
  404164:	4907      	ldr	r1, [pc, #28]	; (404184 <spi_data_read+0xf4>)
  404166:	4808      	ldr	r0, [pc, #32]	; (404188 <spi_data_read+0xf8>)
  404168:	4d08      	ldr	r5, [pc, #32]	; (40418c <spi_data_read+0xfc>)
  40416a:	47a8      	blx	r5
  40416c:	480d      	ldr	r0, [pc, #52]	; (4041a4 <spi_data_read+0x114>)
  40416e:	47a8      	blx	r5
  404170:	4808      	ldr	r0, [pc, #32]	; (404194 <spi_data_read+0x104>)
  404172:	47a8      	blx	r5
  404174:	9401      	str	r4, [sp, #4]
  404176:	e7a1      	b.n	4040bc <spi_data_read+0x2c>
  404178:	2301      	movs	r3, #1
  40417a:	9301      	str	r3, [sp, #4]
  40417c:	e79e      	b.n	4040bc <spi_data_read+0x2c>
  40417e:	bf00      	nop
  404180:	00403fad 	.word	0x00403fad
  404184:	0040d364 	.word	0x0040d364
  404188:	0040cd74 	.word	0x0040cd74
  40418c:	004066e9 	.word	0x004066e9
  404190:	0040d7cc 	.word	0x0040d7cc
  404194:	0040cda0 	.word	0x0040cda0
  404198:	2040db88 	.word	0x2040db88
  40419c:	0040d800 	.word	0x0040d800
  4041a0:	0040d830 	.word	0x0040d830
  4041a4:	0040d864 	.word	0x0040d864

004041a8 <nmi_spi_write>:
  4041a8:	b500      	push	{lr}
  4041aa:	b085      	sub	sp, #20
  4041ac:	9001      	str	r0, [sp, #4]
  4041ae:	2300      	movs	r3, #0
  4041b0:	9302      	str	r3, [sp, #8]
  4041b2:	f8ad 100c 	strh.w	r1, [sp, #12]
  4041b6:	a901      	add	r1, sp, #4
  4041b8:	2003      	movs	r0, #3
  4041ba:	4b02      	ldr	r3, [pc, #8]	; (4041c4 <nmi_spi_write+0x1c>)
  4041bc:	4798      	blx	r3
  4041be:	b005      	add	sp, #20
  4041c0:	f85d fb04 	ldr.w	pc, [sp], #4
  4041c4:	0040287d 	.word	0x0040287d

004041c8 <spi_cmd>:
  4041c8:	b570      	push	{r4, r5, r6, lr}
  4041ca:	b084      	sub	sp, #16
  4041cc:	f89d 4020 	ldrb.w	r4, [sp, #32]
  4041d0:	f88d 0004 	strb.w	r0, [sp, #4]
  4041d4:	38c1      	subs	r0, #193	; 0xc1
  4041d6:	280e      	cmp	r0, #14
  4041d8:	f200 80a2 	bhi.w	404320 <spi_cmd+0x158>
  4041dc:	e8df f000 	tbb	[pc, r0]
  4041e0:	19664545 	.word	0x19664545
  4041e4:	5454332a 	.word	0x5454332a
  4041e8:	a0a0087f 	.word	0xa0a0087f
  4041ec:	a0a0      	.short	0xa0a0
  4041ee:	3c          	.byte	0x3c
  4041ef:	00          	.byte	0x00
  4041f0:	0c0b      	lsrs	r3, r1, #16
  4041f2:	f88d 3005 	strb.w	r3, [sp, #5]
  4041f6:	0a0b      	lsrs	r3, r1, #8
  4041f8:	f88d 3006 	strb.w	r3, [sp, #6]
  4041fc:	f88d 1007 	strb.w	r1, [sp, #7]
  404200:	2105      	movs	r1, #5
  404202:	4b55      	ldr	r3, [pc, #340]	; (404358 <spi_cmd+0x190>)
  404204:	781b      	ldrb	r3, [r3, #0]
  404206:	2b00      	cmp	r3, #0
  404208:	f000 808c 	beq.w	404324 <spi_cmd+0x15c>
  40420c:	3901      	subs	r1, #1
  40420e:	b2c9      	uxtb	r1, r1
  404210:	e09a      	b.n	404348 <spi_cmd+0x180>
  404212:	f3c1 2307 	ubfx	r3, r1, #8, #8
  404216:	b944      	cbnz	r4, 40422a <spi_cmd+0x62>
  404218:	f88d 3005 	strb.w	r3, [sp, #5]
  40421c:	f88d 1006 	strb.w	r1, [sp, #6]
  404220:	2300      	movs	r3, #0
  404222:	f88d 3007 	strb.w	r3, [sp, #7]
  404226:	2105      	movs	r1, #5
  404228:	e7eb      	b.n	404202 <spi_cmd+0x3a>
  40422a:	f063 037f 	orn	r3, r3, #127	; 0x7f
  40422e:	f88d 3005 	strb.w	r3, [sp, #5]
  404232:	e7f3      	b.n	40421c <spi_cmd+0x54>
  404234:	2300      	movs	r3, #0
  404236:	f88d 3005 	strb.w	r3, [sp, #5]
  40423a:	f88d 3006 	strb.w	r3, [sp, #6]
  40423e:	f88d 3007 	strb.w	r3, [sp, #7]
  404242:	2105      	movs	r1, #5
  404244:	e7dd      	b.n	404202 <spi_cmd+0x3a>
  404246:	2300      	movs	r3, #0
  404248:	f88d 3005 	strb.w	r3, [sp, #5]
  40424c:	f88d 3006 	strb.w	r3, [sp, #6]
  404250:	f88d 3007 	strb.w	r3, [sp, #7]
  404254:	2105      	movs	r1, #5
  404256:	e7d4      	b.n	404202 <spi_cmd+0x3a>
  404258:	23ff      	movs	r3, #255	; 0xff
  40425a:	f88d 3005 	strb.w	r3, [sp, #5]
  40425e:	f88d 3006 	strb.w	r3, [sp, #6]
  404262:	f88d 3007 	strb.w	r3, [sp, #7]
  404266:	2105      	movs	r1, #5
  404268:	e7cb      	b.n	404202 <spi_cmd+0x3a>
  40426a:	0c0a      	lsrs	r2, r1, #16
  40426c:	f88d 2005 	strb.w	r2, [sp, #5]
  404270:	0a0a      	lsrs	r2, r1, #8
  404272:	f88d 2006 	strb.w	r2, [sp, #6]
  404276:	f88d 1007 	strb.w	r1, [sp, #7]
  40427a:	0a1a      	lsrs	r2, r3, #8
  40427c:	f88d 2008 	strb.w	r2, [sp, #8]
  404280:	f88d 3009 	strb.w	r3, [sp, #9]
  404284:	2107      	movs	r1, #7
  404286:	e7bc      	b.n	404202 <spi_cmd+0x3a>
  404288:	0c0a      	lsrs	r2, r1, #16
  40428a:	f88d 2005 	strb.w	r2, [sp, #5]
  40428e:	0a0a      	lsrs	r2, r1, #8
  404290:	f88d 2006 	strb.w	r2, [sp, #6]
  404294:	f88d 1007 	strb.w	r1, [sp, #7]
  404298:	0c1a      	lsrs	r2, r3, #16
  40429a:	f88d 2008 	strb.w	r2, [sp, #8]
  40429e:	0a1a      	lsrs	r2, r3, #8
  4042a0:	f88d 2009 	strb.w	r2, [sp, #9]
  4042a4:	f88d 300a 	strb.w	r3, [sp, #10]
  4042a8:	2108      	movs	r1, #8
  4042aa:	e7aa      	b.n	404202 <spi_cmd+0x3a>
  4042ac:	f3c1 2307 	ubfx	r3, r1, #8, #8
  4042b0:	b984      	cbnz	r4, 4042d4 <spi_cmd+0x10c>
  4042b2:	f88d 3005 	strb.w	r3, [sp, #5]
  4042b6:	f88d 1006 	strb.w	r1, [sp, #6]
  4042ba:	0e13      	lsrs	r3, r2, #24
  4042bc:	f88d 3007 	strb.w	r3, [sp, #7]
  4042c0:	0c13      	lsrs	r3, r2, #16
  4042c2:	f88d 3008 	strb.w	r3, [sp, #8]
  4042c6:	0a13      	lsrs	r3, r2, #8
  4042c8:	f88d 3009 	strb.w	r3, [sp, #9]
  4042cc:	f88d 200a 	strb.w	r2, [sp, #10]
  4042d0:	2108      	movs	r1, #8
  4042d2:	e796      	b.n	404202 <spi_cmd+0x3a>
  4042d4:	f063 037f 	orn	r3, r3, #127	; 0x7f
  4042d8:	f88d 3005 	strb.w	r3, [sp, #5]
  4042dc:	e7eb      	b.n	4042b6 <spi_cmd+0xee>
  4042de:	0c0b      	lsrs	r3, r1, #16
  4042e0:	f88d 3005 	strb.w	r3, [sp, #5]
  4042e4:	0a0b      	lsrs	r3, r1, #8
  4042e6:	f88d 3006 	strb.w	r3, [sp, #6]
  4042ea:	f88d 1007 	strb.w	r1, [sp, #7]
  4042ee:	0e13      	lsrs	r3, r2, #24
  4042f0:	f88d 3008 	strb.w	r3, [sp, #8]
  4042f4:	0c13      	lsrs	r3, r2, #16
  4042f6:	f88d 3009 	strb.w	r3, [sp, #9]
  4042fa:	0a13      	lsrs	r3, r2, #8
  4042fc:	f88d 300a 	strb.w	r3, [sp, #10]
  404300:	f88d 200b 	strb.w	r2, [sp, #11]
  404304:	2109      	movs	r1, #9
  404306:	e77c      	b.n	404202 <spi_cmd+0x3a>
  404308:	f44f 7284 	mov.w	r2, #264	; 0x108
  40430c:	4913      	ldr	r1, [pc, #76]	; (40435c <spi_cmd+0x194>)
  40430e:	4814      	ldr	r0, [pc, #80]	; (404360 <spi_cmd+0x198>)
  404310:	4c14      	ldr	r4, [pc, #80]	; (404364 <spi_cmd+0x19c>)
  404312:	47a0      	blx	r4
  404314:	4814      	ldr	r0, [pc, #80]	; (404368 <spi_cmd+0x1a0>)
  404316:	47a0      	blx	r4
  404318:	4814      	ldr	r0, [pc, #80]	; (40436c <spi_cmd+0x1a4>)
  40431a:	47a0      	blx	r4
  40431c:	2000      	movs	r0, #0
  40431e:	e019      	b.n	404354 <spi_cmd+0x18c>
  404320:	2000      	movs	r0, #0
  404322:	e017      	b.n	404354 <spi_cmd+0x18c>
  404324:	1e4e      	subs	r6, r1, #1
  404326:	ab01      	add	r3, sp, #4
  404328:	199d      	adds	r5, r3, r6
  40432a:	207f      	movs	r0, #127	; 0x7f
  40432c:	461a      	mov	r2, r3
  40432e:	4c10      	ldr	r4, [pc, #64]	; (404370 <spi_cmd+0x1a8>)
  404330:	f812 3b01 	ldrb.w	r3, [r2], #1
  404334:	ea83 0340 	eor.w	r3, r3, r0, lsl #1
  404338:	5ce0      	ldrb	r0, [r4, r3]
  40433a:	4295      	cmp	r5, r2
  40433c:	d1f8      	bne.n	404330 <spi_cmd+0x168>
  40433e:	ab04      	add	r3, sp, #16
  404340:	441e      	add	r6, r3
  404342:	0043      	lsls	r3, r0, #1
  404344:	f806 3c0c 	strb.w	r3, [r6, #-12]
  404348:	a801      	add	r0, sp, #4
  40434a:	4b0a      	ldr	r3, [pc, #40]	; (404374 <spi_cmd+0x1ac>)
  40434c:	4798      	blx	r3
  40434e:	2800      	cmp	r0, #0
  404350:	d1da      	bne.n	404308 <spi_cmd+0x140>
  404352:	2001      	movs	r0, #1
  404354:	b004      	add	sp, #16
  404356:	bd70      	pop	{r4, r5, r6, pc}
  404358:	2040db88 	.word	0x2040db88
  40435c:	0040d350 	.word	0x0040d350
  404360:	0040cd74 	.word	0x0040cd74
  404364:	004066e9 	.word	0x004066e9
  404368:	0040d76c 	.word	0x0040d76c
  40436c:	0040cda0 	.word	0x0040cda0
  404370:	0040d3cc 	.word	0x0040d3cc
  404374:	004041a9 	.word	0x004041a9

00404378 <spi_write_reg>:
  404378:	b570      	push	{r4, r5, r6, lr}
  40437a:	b082      	sub	sp, #8
  40437c:	4604      	mov	r4, r0
  40437e:	2831      	cmp	r0, #49	; 0x31
  404380:	bf35      	itete	cc
  404382:	2301      	movcc	r3, #1
  404384:	2300      	movcs	r3, #0
  404386:	25c3      	movcc	r5, #195	; 0xc3
  404388:	25c9      	movcs	r5, #201	; 0xc9
  40438a:	9300      	str	r3, [sp, #0]
  40438c:	2304      	movs	r3, #4
  40438e:	460a      	mov	r2, r1
  404390:	4601      	mov	r1, r0
  404392:	4628      	mov	r0, r5
  404394:	4e15      	ldr	r6, [pc, #84]	; (4043ec <spi_write_reg+0x74>)
  404396:	47b0      	blx	r6
  404398:	2801      	cmp	r0, #1
  40439a:	d00d      	beq.n	4043b8 <spi_write_reg+0x40>
  40439c:	f240 12eb 	movw	r2, #491	; 0x1eb
  4043a0:	4913      	ldr	r1, [pc, #76]	; (4043f0 <spi_write_reg+0x78>)
  4043a2:	4814      	ldr	r0, [pc, #80]	; (4043f4 <spi_write_reg+0x7c>)
  4043a4:	4d14      	ldr	r5, [pc, #80]	; (4043f8 <spi_write_reg+0x80>)
  4043a6:	47a8      	blx	r5
  4043a8:	4621      	mov	r1, r4
  4043aa:	4814      	ldr	r0, [pc, #80]	; (4043fc <spi_write_reg+0x84>)
  4043ac:	47a8      	blx	r5
  4043ae:	4814      	ldr	r0, [pc, #80]	; (404400 <spi_write_reg+0x88>)
  4043b0:	47a8      	blx	r5
  4043b2:	2000      	movs	r0, #0
  4043b4:	b002      	add	sp, #8
  4043b6:	bd70      	pop	{r4, r5, r6, pc}
  4043b8:	4628      	mov	r0, r5
  4043ba:	4b12      	ldr	r3, [pc, #72]	; (404404 <spi_write_reg+0x8c>)
  4043bc:	4798      	blx	r3
  4043be:	2801      	cmp	r0, #1
  4043c0:	d0f8      	beq.n	4043b4 <spi_write_reg+0x3c>
  4043c2:	f240 12f1 	movw	r2, #497	; 0x1f1
  4043c6:	490a      	ldr	r1, [pc, #40]	; (4043f0 <spi_write_reg+0x78>)
  4043c8:	480a      	ldr	r0, [pc, #40]	; (4043f4 <spi_write_reg+0x7c>)
  4043ca:	4d0b      	ldr	r5, [pc, #44]	; (4043f8 <spi_write_reg+0x80>)
  4043cc:	47a8      	blx	r5
  4043ce:	4621      	mov	r1, r4
  4043d0:	480d      	ldr	r0, [pc, #52]	; (404408 <spi_write_reg+0x90>)
  4043d2:	47a8      	blx	r5
  4043d4:	480a      	ldr	r0, [pc, #40]	; (404400 <spi_write_reg+0x88>)
  4043d6:	47a8      	blx	r5
  4043d8:	2400      	movs	r4, #0
  4043da:	9400      	str	r4, [sp, #0]
  4043dc:	4623      	mov	r3, r4
  4043de:	4622      	mov	r2, r4
  4043e0:	4621      	mov	r1, r4
  4043e2:	20cf      	movs	r0, #207	; 0xcf
  4043e4:	4d01      	ldr	r5, [pc, #4]	; (4043ec <spi_write_reg+0x74>)
  4043e6:	47a8      	blx	r5
  4043e8:	4620      	mov	r0, r4
  4043ea:	e7e3      	b.n	4043b4 <spi_write_reg+0x3c>
  4043ec:	004041c9 	.word	0x004041c9
  4043f0:	0040d384 	.word	0x0040d384
  4043f4:	0040cd74 	.word	0x0040cd74
  4043f8:	004066e9 	.word	0x004066e9
  4043fc:	0040d91c 	.word	0x0040d91c
  404400:	0040cda0 	.word	0x0040cda0
  404404:	00403fcd 	.word	0x00403fcd
  404408:	0040d948 	.word	0x0040d948

0040440c <spi_read_reg>:
  40440c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404410:	b084      	sub	sp, #16
  404412:	4604      	mov	r4, r0
  404414:	4688      	mov	r8, r1
  404416:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  40441a:	bf35      	itete	cc
  40441c:	2601      	movcc	r6, #1
  40441e:	2600      	movcs	r6, #0
  404420:	25c4      	movcc	r5, #196	; 0xc4
  404422:	25ca      	movcs	r5, #202	; 0xca
  404424:	9600      	str	r6, [sp, #0]
  404426:	2304      	movs	r3, #4
  404428:	2200      	movs	r2, #0
  40442a:	4601      	mov	r1, r0
  40442c:	4628      	mov	r0, r5
  40442e:	4f2c      	ldr	r7, [pc, #176]	; (4044e0 <spi_read_reg+0xd4>)
  404430:	47b8      	blx	r7
  404432:	2801      	cmp	r0, #1
  404434:	d00e      	beq.n	404454 <spi_read_reg+0x48>
  404436:	f240 2245 	movw	r2, #581	; 0x245
  40443a:	492a      	ldr	r1, [pc, #168]	; (4044e4 <spi_read_reg+0xd8>)
  40443c:	482a      	ldr	r0, [pc, #168]	; (4044e8 <spi_read_reg+0xdc>)
  40443e:	4d2b      	ldr	r5, [pc, #172]	; (4044ec <spi_read_reg+0xe0>)
  404440:	47a8      	blx	r5
  404442:	4621      	mov	r1, r4
  404444:	482a      	ldr	r0, [pc, #168]	; (4044f0 <spi_read_reg+0xe4>)
  404446:	47a8      	blx	r5
  404448:	482a      	ldr	r0, [pc, #168]	; (4044f4 <spi_read_reg+0xe8>)
  40444a:	47a8      	blx	r5
  40444c:	2000      	movs	r0, #0
  40444e:	b004      	add	sp, #16
  404450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404454:	4628      	mov	r0, r5
  404456:	4b28      	ldr	r3, [pc, #160]	; (4044f8 <spi_read_reg+0xec>)
  404458:	4798      	blx	r3
  40445a:	2801      	cmp	r0, #1
  40445c:	d014      	beq.n	404488 <spi_read_reg+0x7c>
  40445e:	f240 224b 	movw	r2, #587	; 0x24b
  404462:	4920      	ldr	r1, [pc, #128]	; (4044e4 <spi_read_reg+0xd8>)
  404464:	4820      	ldr	r0, [pc, #128]	; (4044e8 <spi_read_reg+0xdc>)
  404466:	4d21      	ldr	r5, [pc, #132]	; (4044ec <spi_read_reg+0xe0>)
  404468:	47a8      	blx	r5
  40446a:	4621      	mov	r1, r4
  40446c:	4823      	ldr	r0, [pc, #140]	; (4044fc <spi_read_reg+0xf0>)
  40446e:	47a8      	blx	r5
  404470:	4820      	ldr	r0, [pc, #128]	; (4044f4 <spi_read_reg+0xe8>)
  404472:	47a8      	blx	r5
  404474:	2400      	movs	r4, #0
  404476:	9400      	str	r4, [sp, #0]
  404478:	4623      	mov	r3, r4
  40447a:	4622      	mov	r2, r4
  40447c:	4621      	mov	r1, r4
  40447e:	20cf      	movs	r0, #207	; 0xcf
  404480:	4d17      	ldr	r5, [pc, #92]	; (4044e0 <spi_read_reg+0xd4>)
  404482:	47a8      	blx	r5
  404484:	4620      	mov	r0, r4
  404486:	e7e2      	b.n	40444e <spi_read_reg+0x42>
  404488:	4632      	mov	r2, r6
  40448a:	2104      	movs	r1, #4
  40448c:	a803      	add	r0, sp, #12
  40448e:	4b1c      	ldr	r3, [pc, #112]	; (404500 <spi_read_reg+0xf4>)
  404490:	4798      	blx	r3
  404492:	2801      	cmp	r0, #1
  404494:	d110      	bne.n	4044b8 <spi_read_reg+0xac>
  404496:	f89d 200d 	ldrb.w	r2, [sp, #13]
  40449a:	f89d 300e 	ldrb.w	r3, [sp, #14]
  40449e:	041b      	lsls	r3, r3, #16
  4044a0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  4044a4:	f89d 200c 	ldrb.w	r2, [sp, #12]
  4044a8:	4313      	orrs	r3, r2
  4044aa:	f89d 200f 	ldrb.w	r2, [sp, #15]
  4044ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  4044b2:	f8c8 3000 	str.w	r3, [r8]
  4044b6:	e7ca      	b.n	40444e <spi_read_reg+0x42>
  4044b8:	f240 2253 	movw	r2, #595	; 0x253
  4044bc:	4909      	ldr	r1, [pc, #36]	; (4044e4 <spi_read_reg+0xd8>)
  4044be:	480a      	ldr	r0, [pc, #40]	; (4044e8 <spi_read_reg+0xdc>)
  4044c0:	4c0a      	ldr	r4, [pc, #40]	; (4044ec <spi_read_reg+0xe0>)
  4044c2:	47a0      	blx	r4
  4044c4:	480f      	ldr	r0, [pc, #60]	; (404504 <spi_read_reg+0xf8>)
  4044c6:	47a0      	blx	r4
  4044c8:	480a      	ldr	r0, [pc, #40]	; (4044f4 <spi_read_reg+0xe8>)
  4044ca:	47a0      	blx	r4
  4044cc:	2400      	movs	r4, #0
  4044ce:	9400      	str	r4, [sp, #0]
  4044d0:	4623      	mov	r3, r4
  4044d2:	4622      	mov	r2, r4
  4044d4:	4621      	mov	r1, r4
  4044d6:	20cf      	movs	r0, #207	; 0xcf
  4044d8:	4d01      	ldr	r5, [pc, #4]	; (4044e0 <spi_read_reg+0xd4>)
  4044da:	47a8      	blx	r5
  4044dc:	4620      	mov	r0, r4
  4044de:	e7b6      	b.n	40444e <spi_read_reg+0x42>
  4044e0:	004041c9 	.word	0x004041c9
  4044e4:	0040d3a4 	.word	0x0040d3a4
  4044e8:	0040cd74 	.word	0x0040cd74
  4044ec:	004066e9 	.word	0x004066e9
  4044f0:	0040d89c 	.word	0x0040d89c
  4044f4:	0040cda0 	.word	0x0040cda0
  4044f8:	00403fcd 	.word	0x00403fcd
  4044fc:	0040d8c8 	.word	0x0040d8c8
  404500:	00404091 	.word	0x00404091
  404504:	0040d8fc 	.word	0x0040d8fc

00404508 <nm_spi_deinit>:
  404508:	2000      	movs	r0, #0
  40450a:	4b01      	ldr	r3, [pc, #4]	; (404510 <nm_spi_deinit+0x8>)
  40450c:	7018      	strb	r0, [r3, #0]
  40450e:	4770      	bx	lr
  404510:	2040db88 	.word	0x2040db88

00404514 <nm_spi_read_reg>:
  404514:	b500      	push	{lr}
  404516:	b083      	sub	sp, #12
  404518:	a901      	add	r1, sp, #4
  40451a:	4b03      	ldr	r3, [pc, #12]	; (404528 <nm_spi_read_reg+0x14>)
  40451c:	4798      	blx	r3
  40451e:	9801      	ldr	r0, [sp, #4]
  404520:	b003      	add	sp, #12
  404522:	f85d fb04 	ldr.w	pc, [sp], #4
  404526:	bf00      	nop
  404528:	0040440d 	.word	0x0040440d

0040452c <nm_spi_read_reg_with_ret>:
  40452c:	b508      	push	{r3, lr}
  40452e:	4b04      	ldr	r3, [pc, #16]	; (404540 <nm_spi_read_reg_with_ret+0x14>)
  404530:	4798      	blx	r3
  404532:	2801      	cmp	r0, #1
  404534:	bf0c      	ite	eq
  404536:	2000      	moveq	r0, #0
  404538:	f06f 0005 	mvnne.w	r0, #5
  40453c:	bd08      	pop	{r3, pc}
  40453e:	bf00      	nop
  404540:	0040440d 	.word	0x0040440d

00404544 <nm_spi_write_reg>:
  404544:	b508      	push	{r3, lr}
  404546:	4b04      	ldr	r3, [pc, #16]	; (404558 <nm_spi_write_reg+0x14>)
  404548:	4798      	blx	r3
  40454a:	2801      	cmp	r0, #1
  40454c:	bf0c      	ite	eq
  40454e:	2000      	moveq	r0, #0
  404550:	f06f 0005 	mvnne.w	r0, #5
  404554:	bd08      	pop	{r3, pc}
  404556:	bf00      	nop
  404558:	00404379 	.word	0x00404379

0040455c <nm_spi_init>:
  40455c:	b530      	push	{r4, r5, lr}
  40455e:	b083      	sub	sp, #12
  404560:	2300      	movs	r3, #0
  404562:	a902      	add	r1, sp, #8
  404564:	f841 3d08 	str.w	r3, [r1, #-8]!
  404568:	4a34      	ldr	r2, [pc, #208]	; (40463c <nm_spi_init+0xe0>)
  40456a:	7013      	strb	r3, [r2, #0]
  40456c:	f64e 0024 	movw	r0, #59428	; 0xe824
  404570:	4b33      	ldr	r3, [pc, #204]	; (404640 <nm_spi_init+0xe4>)
  404572:	4798      	blx	r3
  404574:	b348      	cbz	r0, 4045ca <nm_spi_init+0x6e>
  404576:	4b31      	ldr	r3, [pc, #196]	; (40463c <nm_spi_init+0xe0>)
  404578:	781b      	ldrb	r3, [r3, #0]
  40457a:	b97b      	cbnz	r3, 40459c <nm_spi_init+0x40>
  40457c:	9900      	ldr	r1, [sp, #0]
  40457e:	f021 017c 	bic.w	r1, r1, #124	; 0x7c
  404582:	f041 0150 	orr.w	r1, r1, #80	; 0x50
  404586:	9100      	str	r1, [sp, #0]
  404588:	f64e 0024 	movw	r0, #59428	; 0xe824
  40458c:	4b2d      	ldr	r3, [pc, #180]	; (404644 <nm_spi_init+0xe8>)
  40458e:	4798      	blx	r3
  404590:	4604      	mov	r4, r0
  404592:	2800      	cmp	r0, #0
  404594:	d039      	beq.n	40460a <nm_spi_init+0xae>
  404596:	2201      	movs	r2, #1
  404598:	4b28      	ldr	r3, [pc, #160]	; (40463c <nm_spi_init+0xe0>)
  40459a:	701a      	strb	r2, [r3, #0]
  40459c:	a901      	add	r1, sp, #4
  40459e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
  4045a2:	4b27      	ldr	r3, [pc, #156]	; (404640 <nm_spi_init+0xe4>)
  4045a4:	4798      	blx	r3
  4045a6:	2800      	cmp	r0, #0
  4045a8:	d03a      	beq.n	404620 <nm_spi_init+0xc4>
  4045aa:	f64e 0024 	movw	r0, #59428	; 0xe824
  4045ae:	4b26      	ldr	r3, [pc, #152]	; (404648 <nm_spi_init+0xec>)
  4045b0:	4798      	blx	r3
  4045b2:	f020 0170 	bic.w	r1, r0, #112	; 0x70
  4045b6:	f041 0150 	orr.w	r1, r1, #80	; 0x50
  4045ba:	f64e 0024 	movw	r0, #59428	; 0xe824
  4045be:	4b23      	ldr	r3, [pc, #140]	; (40464c <nm_spi_init+0xf0>)
  4045c0:	4798      	blx	r3
  4045c2:	2400      	movs	r4, #0
  4045c4:	4620      	mov	r0, r4
  4045c6:	b003      	add	sp, #12
  4045c8:	bd30      	pop	{r4, r5, pc}
  4045ca:	2201      	movs	r2, #1
  4045cc:	4b1b      	ldr	r3, [pc, #108]	; (40463c <nm_spi_init+0xe0>)
  4045ce:	701a      	strb	r2, [r3, #0]
  4045d0:	f240 22c5 	movw	r2, #709	; 0x2c5
  4045d4:	491e      	ldr	r1, [pc, #120]	; (404650 <nm_spi_init+0xf4>)
  4045d6:	481f      	ldr	r0, [pc, #124]	; (404654 <nm_spi_init+0xf8>)
  4045d8:	4c1f      	ldr	r4, [pc, #124]	; (404658 <nm_spi_init+0xfc>)
  4045da:	47a0      	blx	r4
  4045dc:	481f      	ldr	r0, [pc, #124]	; (40465c <nm_spi_init+0x100>)
  4045de:	47a0      	blx	r4
  4045e0:	481f      	ldr	r0, [pc, #124]	; (404660 <nm_spi_init+0x104>)
  4045e2:	47a0      	blx	r4
  4045e4:	4669      	mov	r1, sp
  4045e6:	f64e 0024 	movw	r0, #59428	; 0xe824
  4045ea:	4b15      	ldr	r3, [pc, #84]	; (404640 <nm_spi_init+0xe4>)
  4045ec:	4798      	blx	r3
  4045ee:	4604      	mov	r4, r0
  4045f0:	2800      	cmp	r0, #0
  4045f2:	d1c0      	bne.n	404576 <nm_spi_init+0x1a>
  4045f4:	f44f 7232 	mov.w	r2, #712	; 0x2c8
  4045f8:	4915      	ldr	r1, [pc, #84]	; (404650 <nm_spi_init+0xf4>)
  4045fa:	4816      	ldr	r0, [pc, #88]	; (404654 <nm_spi_init+0xf8>)
  4045fc:	4d16      	ldr	r5, [pc, #88]	; (404658 <nm_spi_init+0xfc>)
  4045fe:	47a8      	blx	r5
  404600:	4818      	ldr	r0, [pc, #96]	; (404664 <nm_spi_init+0x108>)
  404602:	47a8      	blx	r5
  404604:	4816      	ldr	r0, [pc, #88]	; (404660 <nm_spi_init+0x104>)
  404606:	47a8      	blx	r5
  404608:	e7dc      	b.n	4045c4 <nm_spi_init+0x68>
  40460a:	f240 22d2 	movw	r2, #722	; 0x2d2
  40460e:	4910      	ldr	r1, [pc, #64]	; (404650 <nm_spi_init+0xf4>)
  404610:	4810      	ldr	r0, [pc, #64]	; (404654 <nm_spi_init+0xf8>)
  404612:	4d11      	ldr	r5, [pc, #68]	; (404658 <nm_spi_init+0xfc>)
  404614:	47a8      	blx	r5
  404616:	4814      	ldr	r0, [pc, #80]	; (404668 <nm_spi_init+0x10c>)
  404618:	47a8      	blx	r5
  40461a:	4811      	ldr	r0, [pc, #68]	; (404660 <nm_spi_init+0x104>)
  40461c:	47a8      	blx	r5
  40461e:	e7d1      	b.n	4045c4 <nm_spi_init+0x68>
  404620:	f44f 7237 	mov.w	r2, #732	; 0x2dc
  404624:	490a      	ldr	r1, [pc, #40]	; (404650 <nm_spi_init+0xf4>)
  404626:	480b      	ldr	r0, [pc, #44]	; (404654 <nm_spi_init+0xf8>)
  404628:	4c0b      	ldr	r4, [pc, #44]	; (404658 <nm_spi_init+0xfc>)
  40462a:	47a0      	blx	r4
  40462c:	480f      	ldr	r0, [pc, #60]	; (40466c <nm_spi_init+0x110>)
  40462e:	47a0      	blx	r4
  404630:	480b      	ldr	r0, [pc, #44]	; (404660 <nm_spi_init+0x104>)
  404632:	47a0      	blx	r4
  404634:	f06f 0405 	mvn.w	r4, #5
  404638:	e7c4      	b.n	4045c4 <nm_spi_init+0x68>
  40463a:	bf00      	nop
  40463c:	2040db88 	.word	0x2040db88
  404640:	0040440d 	.word	0x0040440d
  404644:	00404379 	.word	0x00404379
  404648:	00404515 	.word	0x00404515
  40464c:	00404545 	.word	0x00404545
  404650:	0040d3c0 	.word	0x0040d3c0
  404654:	0040cd74 	.word	0x0040cd74
  404658:	004066e9 	.word	0x004066e9
  40465c:	0040d4cc 	.word	0x0040d4cc
  404660:	0040cda0 	.word	0x0040cda0
  404664:	0040d51c 	.word	0x0040d51c
  404668:	0040d54c 	.word	0x0040d54c
  40466c:	0040d580 	.word	0x0040d580

00404670 <nm_spi_read_block>:
  404670:	b5f0      	push	{r4, r5, r6, r7, lr}
  404672:	b083      	sub	sp, #12
  404674:	4604      	mov	r4, r0
  404676:	460f      	mov	r7, r1
  404678:	4615      	mov	r5, r2
  40467a:	2200      	movs	r2, #0
  40467c:	9200      	str	r2, [sp, #0]
  40467e:	462b      	mov	r3, r5
  404680:	4601      	mov	r1, r0
  404682:	20c8      	movs	r0, #200	; 0xc8
  404684:	4e22      	ldr	r6, [pc, #136]	; (404710 <nm_spi_read_block+0xa0>)
  404686:	47b0      	blx	r6
  404688:	2801      	cmp	r0, #1
  40468a:	d00e      	beq.n	4046aa <nm_spi_read_block+0x3a>
  40468c:	f44f 721d 	mov.w	r2, #628	; 0x274
  404690:	4920      	ldr	r1, [pc, #128]	; (404714 <nm_spi_read_block+0xa4>)
  404692:	4821      	ldr	r0, [pc, #132]	; (404718 <nm_spi_read_block+0xa8>)
  404694:	4d21      	ldr	r5, [pc, #132]	; (40471c <nm_spi_read_block+0xac>)
  404696:	47a8      	blx	r5
  404698:	4621      	mov	r1, r4
  40469a:	4821      	ldr	r0, [pc, #132]	; (404720 <nm_spi_read_block+0xb0>)
  40469c:	47a8      	blx	r5
  40469e:	4821      	ldr	r0, [pc, #132]	; (404724 <nm_spi_read_block+0xb4>)
  4046a0:	47a8      	blx	r5
  4046a2:	f06f 0005 	mvn.w	r0, #5
  4046a6:	b003      	add	sp, #12
  4046a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4046aa:	20c8      	movs	r0, #200	; 0xc8
  4046ac:	4b1e      	ldr	r3, [pc, #120]	; (404728 <nm_spi_read_block+0xb8>)
  4046ae:	4798      	blx	r3
  4046b0:	2801      	cmp	r0, #1
  4046b2:	d012      	beq.n	4046da <nm_spi_read_block+0x6a>
  4046b4:	f240 227a 	movw	r2, #634	; 0x27a
  4046b8:	4916      	ldr	r1, [pc, #88]	; (404714 <nm_spi_read_block+0xa4>)
  4046ba:	4817      	ldr	r0, [pc, #92]	; (404718 <nm_spi_read_block+0xa8>)
  4046bc:	4d17      	ldr	r5, [pc, #92]	; (40471c <nm_spi_read_block+0xac>)
  4046be:	47a8      	blx	r5
  4046c0:	4621      	mov	r1, r4
  4046c2:	481a      	ldr	r0, [pc, #104]	; (40472c <nm_spi_read_block+0xbc>)
  4046c4:	47a8      	blx	r5
  4046c6:	4817      	ldr	r0, [pc, #92]	; (404724 <nm_spi_read_block+0xb4>)
  4046c8:	47a8      	blx	r5
  4046ca:	2100      	movs	r1, #0
  4046cc:	9100      	str	r1, [sp, #0]
  4046ce:	460b      	mov	r3, r1
  4046d0:	460a      	mov	r2, r1
  4046d2:	20cf      	movs	r0, #207	; 0xcf
  4046d4:	4c0e      	ldr	r4, [pc, #56]	; (404710 <nm_spi_read_block+0xa0>)
  4046d6:	47a0      	blx	r4
  4046d8:	e7e3      	b.n	4046a2 <nm_spi_read_block+0x32>
  4046da:	2200      	movs	r2, #0
  4046dc:	4629      	mov	r1, r5
  4046de:	4638      	mov	r0, r7
  4046e0:	4b13      	ldr	r3, [pc, #76]	; (404730 <nm_spi_read_block+0xc0>)
  4046e2:	4798      	blx	r3
  4046e4:	2801      	cmp	r0, #1
  4046e6:	d011      	beq.n	40470c <nm_spi_read_block+0x9c>
  4046e8:	f44f 7221 	mov.w	r2, #644	; 0x284
  4046ec:	4909      	ldr	r1, [pc, #36]	; (404714 <nm_spi_read_block+0xa4>)
  4046ee:	480a      	ldr	r0, [pc, #40]	; (404718 <nm_spi_read_block+0xa8>)
  4046f0:	4c0a      	ldr	r4, [pc, #40]	; (40471c <nm_spi_read_block+0xac>)
  4046f2:	47a0      	blx	r4
  4046f4:	480f      	ldr	r0, [pc, #60]	; (404734 <nm_spi_read_block+0xc4>)
  4046f6:	47a0      	blx	r4
  4046f8:	480a      	ldr	r0, [pc, #40]	; (404724 <nm_spi_read_block+0xb4>)
  4046fa:	47a0      	blx	r4
  4046fc:	2100      	movs	r1, #0
  4046fe:	9100      	str	r1, [sp, #0]
  404700:	460b      	mov	r3, r1
  404702:	460a      	mov	r2, r1
  404704:	20cf      	movs	r0, #207	; 0xcf
  404706:	4c02      	ldr	r4, [pc, #8]	; (404710 <nm_spi_read_block+0xa0>)
  404708:	47a0      	blx	r4
  40470a:	e7ca      	b.n	4046a2 <nm_spi_read_block+0x32>
  40470c:	2000      	movs	r0, #0
  40470e:	e7ca      	b.n	4046a6 <nm_spi_read_block+0x36>
  404710:	004041c9 	.word	0x004041c9
  404714:	0040d3b4 	.word	0x0040d3b4
  404718:	0040cd74 	.word	0x0040cd74
  40471c:	004066e9 	.word	0x004066e9
  404720:	0040d5a8 	.word	0x0040d5a8
  404724:	0040cda0 	.word	0x0040cda0
  404728:	00403fcd 	.word	0x00403fcd
  40472c:	0040d5d8 	.word	0x0040d5d8
  404730:	00404091 	.word	0x00404091
  404734:	0040d610 	.word	0x0040d610

00404738 <nm_spi_write_block>:
  404738:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40473c:	b085      	sub	sp, #20
  40473e:	4604      	mov	r4, r0
  404740:	4688      	mov	r8, r1
  404742:	4615      	mov	r5, r2
  404744:	2200      	movs	r2, #0
  404746:	9200      	str	r2, [sp, #0]
  404748:	462b      	mov	r3, r5
  40474a:	4601      	mov	r1, r0
  40474c:	20c7      	movs	r0, #199	; 0xc7
  40474e:	4e4d      	ldr	r6, [pc, #308]	; (404884 <nm_spi_write_block+0x14c>)
  404750:	47b0      	blx	r6
  404752:	2801      	cmp	r0, #1
  404754:	d00f      	beq.n	404776 <nm_spi_write_block+0x3e>
  404756:	f240 220f 	movw	r2, #527	; 0x20f
  40475a:	494b      	ldr	r1, [pc, #300]	; (404888 <nm_spi_write_block+0x150>)
  40475c:	484b      	ldr	r0, [pc, #300]	; (40488c <nm_spi_write_block+0x154>)
  40475e:	4d4c      	ldr	r5, [pc, #304]	; (404890 <nm_spi_write_block+0x158>)
  404760:	47a8      	blx	r5
  404762:	4621      	mov	r1, r4
  404764:	484b      	ldr	r0, [pc, #300]	; (404894 <nm_spi_write_block+0x15c>)
  404766:	47a8      	blx	r5
  404768:	484b      	ldr	r0, [pc, #300]	; (404898 <nm_spi_write_block+0x160>)
  40476a:	47a8      	blx	r5
  40476c:	f06f 0005 	mvn.w	r0, #5
  404770:	b005      	add	sp, #20
  404772:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  404776:	20c7      	movs	r0, #199	; 0xc7
  404778:	4b48      	ldr	r3, [pc, #288]	; (40489c <nm_spi_write_block+0x164>)
  40477a:	4798      	blx	r3
  40477c:	2801      	cmp	r0, #1
  40477e:	d012      	beq.n	4047a6 <nm_spi_write_block+0x6e>
  404780:	f240 2215 	movw	r2, #533	; 0x215
  404784:	4940      	ldr	r1, [pc, #256]	; (404888 <nm_spi_write_block+0x150>)
  404786:	4841      	ldr	r0, [pc, #260]	; (40488c <nm_spi_write_block+0x154>)
  404788:	4d41      	ldr	r5, [pc, #260]	; (404890 <nm_spi_write_block+0x158>)
  40478a:	47a8      	blx	r5
  40478c:	4621      	mov	r1, r4
  40478e:	4844      	ldr	r0, [pc, #272]	; (4048a0 <nm_spi_write_block+0x168>)
  404790:	47a8      	blx	r5
  404792:	4841      	ldr	r0, [pc, #260]	; (404898 <nm_spi_write_block+0x160>)
  404794:	47a8      	blx	r5
  404796:	2100      	movs	r1, #0
  404798:	9100      	str	r1, [sp, #0]
  40479a:	460b      	mov	r3, r1
  40479c:	460a      	mov	r2, r1
  40479e:	20cf      	movs	r0, #207	; 0xcf
  4047a0:	4c38      	ldr	r4, [pc, #224]	; (404884 <nm_spi_write_block+0x14c>)
  4047a2:	47a0      	blx	r4
  4047a4:	e7e2      	b.n	40476c <nm_spi_write_block+0x34>
  4047a6:	2400      	movs	r4, #0
  4047a8:	f8ad 400c 	strh.w	r4, [sp, #12]
  4047ac:	4f3d      	ldr	r7, [pc, #244]	; (4048a4 <nm_spi_write_block+0x16c>)
  4047ae:	f8df 910c 	ldr.w	r9, [pc, #268]	; 4048bc <nm_spi_write_block+0x184>
  4047b2:	e01d      	b.n	4047f0 <nm_spi_write_block+0xb8>
  4047b4:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
  4047b8:	bf94      	ite	ls
  4047ba:	2303      	movls	r3, #3
  4047bc:	2302      	movhi	r3, #2
  4047be:	f063 030f 	orn	r3, r3, #15
  4047c2:	f88d 300b 	strb.w	r3, [sp, #11]
  4047c6:	2101      	movs	r1, #1
  4047c8:	f10d 000b 	add.w	r0, sp, #11
  4047cc:	47b8      	blx	r7
  4047ce:	b9e8      	cbnz	r0, 40480c <nm_spi_write_block+0xd4>
  4047d0:	4631      	mov	r1, r6
  4047d2:	eb08 0004 	add.w	r0, r8, r4
  4047d6:	47b8      	blx	r7
  4047d8:	2800      	cmp	r0, #0
  4047da:	d135      	bne.n	404848 <nm_spi_write_block+0x110>
  4047dc:	f899 3000 	ldrb.w	r3, [r9]
  4047e0:	2b00      	cmp	r3, #0
  4047e2:	d03c      	beq.n	40485e <nm_spi_write_block+0x126>
  4047e4:	4434      	add	r4, r6
  4047e6:	b224      	sxth	r4, r4
  4047e8:	1bad      	subs	r5, r5, r6
  4047ea:	b2ad      	uxth	r5, r5
  4047ec:	2d00      	cmp	r5, #0
  4047ee:	d046      	beq.n	40487e <nm_spi_write_block+0x146>
  4047f0:	462e      	mov	r6, r5
  4047f2:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
  4047f6:	bf28      	it	cs
  4047f8:	f44f 5600 	movcs.w	r6, #8192	; 0x2000
  4047fc:	2c00      	cmp	r4, #0
  4047fe:	d1d9      	bne.n	4047b4 <nm_spi_write_block+0x7c>
  404800:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
  404804:	bf94      	ite	ls
  404806:	2303      	movls	r3, #3
  404808:	2301      	movhi	r3, #1
  40480a:	e7d8      	b.n	4047be <nm_spi_write_block+0x86>
  40480c:	f44f 72d4 	mov.w	r2, #424	; 0x1a8
  404810:	4925      	ldr	r1, [pc, #148]	; (4048a8 <nm_spi_write_block+0x170>)
  404812:	481e      	ldr	r0, [pc, #120]	; (40488c <nm_spi_write_block+0x154>)
  404814:	4c1e      	ldr	r4, [pc, #120]	; (404890 <nm_spi_write_block+0x158>)
  404816:	47a0      	blx	r4
  404818:	4824      	ldr	r0, [pc, #144]	; (4048ac <nm_spi_write_block+0x174>)
  40481a:	47a0      	blx	r4
  40481c:	481e      	ldr	r0, [pc, #120]	; (404898 <nm_spi_write_block+0x160>)
  40481e:	47a0      	blx	r4
  404820:	f240 2226 	movw	r2, #550	; 0x226
  404824:	4918      	ldr	r1, [pc, #96]	; (404888 <nm_spi_write_block+0x150>)
  404826:	4819      	ldr	r0, [pc, #100]	; (40488c <nm_spi_write_block+0x154>)
  404828:	4c19      	ldr	r4, [pc, #100]	; (404890 <nm_spi_write_block+0x158>)
  40482a:	47a0      	blx	r4
  40482c:	4820      	ldr	r0, [pc, #128]	; (4048b0 <nm_spi_write_block+0x178>)
  40482e:	47a0      	blx	r4
  404830:	4819      	ldr	r0, [pc, #100]	; (404898 <nm_spi_write_block+0x160>)
  404832:	47a0      	blx	r4
  404834:	2400      	movs	r4, #0
  404836:	9400      	str	r4, [sp, #0]
  404838:	4623      	mov	r3, r4
  40483a:	4622      	mov	r2, r4
  40483c:	4621      	mov	r1, r4
  40483e:	20cf      	movs	r0, #207	; 0xcf
  404840:	4d10      	ldr	r5, [pc, #64]	; (404884 <nm_spi_write_block+0x14c>)
  404842:	47a8      	blx	r5
  404844:	4620      	mov	r0, r4
  404846:	e793      	b.n	404770 <nm_spi_write_block+0x38>
  404848:	f240 12b1 	movw	r2, #433	; 0x1b1
  40484c:	4916      	ldr	r1, [pc, #88]	; (4048a8 <nm_spi_write_block+0x170>)
  40484e:	480f      	ldr	r0, [pc, #60]	; (40488c <nm_spi_write_block+0x154>)
  404850:	4c0f      	ldr	r4, [pc, #60]	; (404890 <nm_spi_write_block+0x158>)
  404852:	47a0      	blx	r4
  404854:	4817      	ldr	r0, [pc, #92]	; (4048b4 <nm_spi_write_block+0x17c>)
  404856:	47a0      	blx	r4
  404858:	480f      	ldr	r0, [pc, #60]	; (404898 <nm_spi_write_block+0x160>)
  40485a:	47a0      	blx	r4
  40485c:	e7e0      	b.n	404820 <nm_spi_write_block+0xe8>
  40485e:	2102      	movs	r1, #2
  404860:	a803      	add	r0, sp, #12
  404862:	47b8      	blx	r7
  404864:	2800      	cmp	r0, #0
  404866:	d0bd      	beq.n	4047e4 <nm_spi_write_block+0xac>
  404868:	f240 12bb 	movw	r2, #443	; 0x1bb
  40486c:	490e      	ldr	r1, [pc, #56]	; (4048a8 <nm_spi_write_block+0x170>)
  40486e:	4807      	ldr	r0, [pc, #28]	; (40488c <nm_spi_write_block+0x154>)
  404870:	4c07      	ldr	r4, [pc, #28]	; (404890 <nm_spi_write_block+0x158>)
  404872:	47a0      	blx	r4
  404874:	4810      	ldr	r0, [pc, #64]	; (4048b8 <nm_spi_write_block+0x180>)
  404876:	47a0      	blx	r4
  404878:	4807      	ldr	r0, [pc, #28]	; (404898 <nm_spi_write_block+0x160>)
  40487a:	47a0      	blx	r4
  40487c:	e7d0      	b.n	404820 <nm_spi_write_block+0xe8>
  40487e:	2000      	movs	r0, #0
  404880:	e776      	b.n	404770 <nm_spi_write_block+0x38>
  404882:	bf00      	nop
  404884:	004041c9 	.word	0x004041c9
  404888:	0040d394 	.word	0x0040d394
  40488c:	0040cd74 	.word	0x0040cd74
  404890:	004066e9 	.word	0x004066e9
  404894:	0040d638 	.word	0x0040d638
  404898:	0040cda0 	.word	0x0040cda0
  40489c:	00403fcd 	.word	0x00403fcd
  4048a0:	0040d668 	.word	0x0040d668
  4048a4:	004041a9 	.word	0x004041a9
  4048a8:	0040d374 	.word	0x0040d374
  4048ac:	0040d6a0 	.word	0x0040d6a0
  4048b0:	0040d744 	.word	0x0040d744
  4048b4:	0040d6d8 	.word	0x0040d6d8
  4048b8:	0040d70c 	.word	0x0040d70c
  4048bc:	2040db88 	.word	0x2040db88

004048c0 <Socket_ReadSocketData>:
  4048c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4048c4:	f8bd 4028 	ldrh.w	r4, [sp, #40]	; 0x28
  4048c8:	b194      	cbz	r4, 4048f0 <Socket_ReadSocketData+0x30>
  4048ca:	4681      	mov	r9, r0
  4048cc:	460e      	mov	r6, r1
  4048ce:	4692      	mov	sl, r2
  4048d0:	4698      	mov	r8, r3
  4048d2:	0103      	lsls	r3, r0, #4
  4048d4:	4922      	ldr	r1, [pc, #136]	; (404960 <Socket_ReadSocketData+0xa0>)
  4048d6:	58cb      	ldr	r3, [r1, r3]
  4048d8:	b153      	cbz	r3, 4048f0 <Socket_ReadSocketData+0x30>
  4048da:	eb01 1300 	add.w	r3, r1, r0, lsl #4
  4048de:	889b      	ldrh	r3, [r3, #4]
  4048e0:	b29b      	uxth	r3, r3
  4048e2:	b12b      	cbz	r3, 4048f0 <Socket_ReadSocketData+0x30>
  4048e4:	eb01 1300 	add.w	r3, r1, r0, lsl #4
  4048e8:	7a9b      	ldrb	r3, [r3, #10]
  4048ea:	b2db      	uxtb	r3, r3
  4048ec:	2b01      	cmp	r3, #1
  4048ee:	d001      	beq.n	4048f4 <Socket_ReadSocketData+0x34>
  4048f0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4048f4:	80f4      	strh	r4, [r6, #6]
  4048f6:	eb01 1700 	add.w	r7, r1, r0, lsl #4
  4048fa:	f8df b07c 	ldr.w	fp, [pc, #124]	; 404978 <Socket_ReadSocketData+0xb8>
  4048fe:	e006      	b.n	40490e <Socket_ReadSocketData+0x4e>
  404900:	4625      	mov	r5, r4
  404902:	2301      	movs	r3, #1
  404904:	e00b      	b.n	40491e <Socket_ReadSocketData+0x5e>
  404906:	1b64      	subs	r4, r4, r5
  404908:	b2a4      	uxth	r4, r4
  40490a:	44a8      	add	r8, r5
  40490c:	b1ec      	cbz	r4, 40494a <Socket_ReadSocketData+0x8a>
  40490e:	88bb      	ldrh	r3, [r7, #4]
  404910:	1ae3      	subs	r3, r4, r3
  404912:	b21b      	sxth	r3, r3
  404914:	2b00      	cmp	r3, #0
  404916:	ddf3      	ble.n	404900 <Socket_ReadSocketData+0x40>
  404918:	88bd      	ldrh	r5, [r7, #4]
  40491a:	b2ad      	uxth	r5, r5
  40491c:	2300      	movs	r3, #0
  40491e:	6839      	ldr	r1, [r7, #0]
  404920:	462a      	mov	r2, r5
  404922:	4640      	mov	r0, r8
  404924:	47d8      	blx	fp
  404926:	b990      	cbnz	r0, 40494e <Socket_ReadSocketData+0x8e>
  404928:	683b      	ldr	r3, [r7, #0]
  40492a:	6033      	str	r3, [r6, #0]
  40492c:	80b5      	strh	r5, [r6, #4]
  40492e:	88f3      	ldrh	r3, [r6, #6]
  404930:	1b5b      	subs	r3, r3, r5
  404932:	80f3      	strh	r3, [r6, #6]
  404934:	4b0b      	ldr	r3, [pc, #44]	; (404964 <Socket_ReadSocketData+0xa4>)
  404936:	681b      	ldr	r3, [r3, #0]
  404938:	2b00      	cmp	r3, #0
  40493a:	d0e4      	beq.n	404906 <Socket_ReadSocketData+0x46>
  40493c:	4b09      	ldr	r3, [pc, #36]	; (404964 <Socket_ReadSocketData+0xa4>)
  40493e:	681b      	ldr	r3, [r3, #0]
  404940:	4632      	mov	r2, r6
  404942:	4651      	mov	r1, sl
  404944:	4648      	mov	r0, r9
  404946:	4798      	blx	r3
  404948:	e7dd      	b.n	404906 <Socket_ReadSocketData+0x46>
  40494a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40494e:	4806      	ldr	r0, [pc, #24]	; (404968 <Socket_ReadSocketData+0xa8>)
  404950:	4d06      	ldr	r5, [pc, #24]	; (40496c <Socket_ReadSocketData+0xac>)
  404952:	47a8      	blx	r5
  404954:	4621      	mov	r1, r4
  404956:	4806      	ldr	r0, [pc, #24]	; (404970 <Socket_ReadSocketData+0xb0>)
  404958:	47a8      	blx	r5
  40495a:	4806      	ldr	r0, [pc, #24]	; (404974 <Socket_ReadSocketData+0xb4>)
  40495c:	47a8      	blx	r5
  40495e:	e7c7      	b.n	4048f0 <Socket_ReadSocketData+0x30>
  404960:	2040f3fc 	.word	0x2040f3fc
  404964:	2040f4ac 	.word	0x2040f4ac
  404968:	0040d048 	.word	0x0040d048
  40496c:	004066e9 	.word	0x004066e9
  404970:	0040d980 	.word	0x0040d980
  404974:	0040cda0 	.word	0x0040cda0
  404978:	00402ff9 	.word	0x00402ff9

0040497c <m2m_ip_cb>:
  40497c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40497e:	b099      	sub	sp, #100	; 0x64
  404980:	4614      	mov	r4, r2
  404982:	2841      	cmp	r0, #65	; 0x41
  404984:	d049      	beq.n	404a1a <m2m_ip_cb+0x9e>
  404986:	460d      	mov	r5, r1
  404988:	2842      	cmp	r0, #66	; 0x42
  40498a:	d05f      	beq.n	404a4c <m2m_ip_cb+0xd0>
  40498c:	2843      	cmp	r0, #67	; 0x43
  40498e:	d075      	beq.n	404a7c <m2m_ip_cb+0x100>
  404990:	2844      	cmp	r0, #68	; 0x44
  404992:	f000 80b0 	beq.w	404af6 <m2m_ip_cb+0x17a>
  404996:	284b      	cmp	r0, #75	; 0x4b
  404998:	f000 80ad 	beq.w	404af6 <m2m_ip_cb+0x17a>
  40499c:	284a      	cmp	r0, #74	; 0x4a
  40499e:	f000 80cc 	beq.w	404b3a <m2m_ip_cb+0x1be>
  4049a2:	f1a0 0346 	sub.w	r3, r0, #70	; 0x46
  4049a6:	b2db      	uxtb	r3, r3
  4049a8:	2b07      	cmp	r3, #7
  4049aa:	f200 80f4 	bhi.w	404b96 <m2m_ip_cb+0x21a>
  4049ae:	2285      	movs	r2, #133	; 0x85
  4049b0:	fa22 f303 	lsr.w	r3, r2, r3
  4049b4:	f013 0f01 	tst.w	r3, #1
  4049b8:	f000 80ed 	beq.w	404b96 <m2m_ip_cb+0x21a>
  4049bc:	2848      	cmp	r0, #72	; 0x48
  4049be:	bf14      	ite	ne
  4049c0:	2706      	movne	r7, #6
  4049c2:	2709      	moveq	r7, #9
  4049c4:	2300      	movs	r3, #0
  4049c6:	2210      	movs	r2, #16
  4049c8:	a903      	add	r1, sp, #12
  4049ca:	4620      	mov	r0, r4
  4049cc:	4e93      	ldr	r6, [pc, #588]	; (404c1c <m2m_ip_cb+0x2a0>)
  4049ce:	47b0      	blx	r6
  4049d0:	2800      	cmp	r0, #0
  4049d2:	f040 80b0 	bne.w	404b36 <m2m_ip_cb+0x1ba>
  4049d6:	f99d 0018 	ldrsb.w	r0, [sp, #24]
  4049da:	f8bd 101a 	ldrh.w	r1, [sp, #26]
  4049de:	4a90      	ldr	r2, [pc, #576]	; (404c20 <m2m_ip_cb+0x2a4>)
  4049e0:	eb02 1200 	add.w	r2, r2, r0, lsl #4
  4049e4:	2300      	movs	r3, #0
  4049e6:	7313      	strb	r3, [r2, #12]
  4049e8:	f9bd e014 	ldrsh.w	lr, [sp, #20]
  4049ec:	f8bd 3016 	ldrh.w	r3, [sp, #22]
  4049f0:	f8bd 600e 	ldrh.w	r6, [sp, #14]
  4049f4:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
  4049f8:	9e04      	ldr	r6, [sp, #16]
  4049fa:	960a      	str	r6, [sp, #40]	; 0x28
  4049fc:	88d2      	ldrh	r2, [r2, #6]
  4049fe:	b292      	uxth	r2, r2
  404a00:	4291      	cmp	r1, r2
  404a02:	f000 80ac 	beq.w	404b5e <m2m_ip_cb+0x1e2>
  404a06:	2d10      	cmp	r5, #16
  404a08:	f240 8095 	bls.w	404b36 <m2m_ip_cb+0x1ba>
  404a0c:	2301      	movs	r3, #1
  404a0e:	2200      	movs	r2, #0
  404a10:	4611      	mov	r1, r2
  404a12:	4610      	mov	r0, r2
  404a14:	4c81      	ldr	r4, [pc, #516]	; (404c1c <m2m_ip_cb+0x2a0>)
  404a16:	47a0      	blx	r4
  404a18:	e08d      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404a1a:	2300      	movs	r3, #0
  404a1c:	2204      	movs	r2, #4
  404a1e:	a907      	add	r1, sp, #28
  404a20:	4620      	mov	r0, r4
  404a22:	4c7e      	ldr	r4, [pc, #504]	; (404c1c <m2m_ip_cb+0x2a0>)
  404a24:	47a0      	blx	r4
  404a26:	2800      	cmp	r0, #0
  404a28:	f040 8085 	bne.w	404b36 <m2m_ip_cb+0x1ba>
  404a2c:	f89d 301d 	ldrb.w	r3, [sp, #29]
  404a30:	f88d 300c 	strb.w	r3, [sp, #12]
  404a34:	4b7b      	ldr	r3, [pc, #492]	; (404c24 <m2m_ip_cb+0x2a8>)
  404a36:	681b      	ldr	r3, [r3, #0]
  404a38:	2b00      	cmp	r3, #0
  404a3a:	d07c      	beq.n	404b36 <m2m_ip_cb+0x1ba>
  404a3c:	4b79      	ldr	r3, [pc, #484]	; (404c24 <m2m_ip_cb+0x2a8>)
  404a3e:	681b      	ldr	r3, [r3, #0]
  404a40:	aa03      	add	r2, sp, #12
  404a42:	2101      	movs	r1, #1
  404a44:	f99d 001c 	ldrsb.w	r0, [sp, #28]
  404a48:	4798      	blx	r3
  404a4a:	e074      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404a4c:	2300      	movs	r3, #0
  404a4e:	2204      	movs	r2, #4
  404a50:	a907      	add	r1, sp, #28
  404a52:	4620      	mov	r0, r4
  404a54:	4c71      	ldr	r4, [pc, #452]	; (404c1c <m2m_ip_cb+0x2a0>)
  404a56:	47a0      	blx	r4
  404a58:	2800      	cmp	r0, #0
  404a5a:	d16c      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404a5c:	f89d 301d 	ldrb.w	r3, [sp, #29]
  404a60:	f88d 300c 	strb.w	r3, [sp, #12]
  404a64:	4b6f      	ldr	r3, [pc, #444]	; (404c24 <m2m_ip_cb+0x2a8>)
  404a66:	681b      	ldr	r3, [r3, #0]
  404a68:	2b00      	cmp	r3, #0
  404a6a:	d064      	beq.n	404b36 <m2m_ip_cb+0x1ba>
  404a6c:	4b6d      	ldr	r3, [pc, #436]	; (404c24 <m2m_ip_cb+0x2a8>)
  404a6e:	681b      	ldr	r3, [r3, #0]
  404a70:	aa03      	add	r2, sp, #12
  404a72:	2102      	movs	r1, #2
  404a74:	f99d 001c 	ldrsb.w	r0, [sp, #28]
  404a78:	4798      	blx	r3
  404a7a:	e05c      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404a7c:	2300      	movs	r3, #0
  404a7e:	220c      	movs	r2, #12
  404a80:	eb0d 0102 	add.w	r1, sp, r2
  404a84:	4620      	mov	r0, r4
  404a86:	4c65      	ldr	r4, [pc, #404]	; (404c1c <m2m_ip_cb+0x2a0>)
  404a88:	47a0      	blx	r4
  404a8a:	2800      	cmp	r0, #0
  404a8c:	d153      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404a8e:	f99d 3015 	ldrsb.w	r3, [sp, #21]
  404a92:	2b00      	cmp	r3, #0
  404a94:	db19      	blt.n	404aca <m2m_ip_cb+0x14e>
  404a96:	4a62      	ldr	r2, [pc, #392]	; (404c20 <m2m_ip_cb+0x2a4>)
  404a98:	eb02 1203 	add.w	r2, r2, r3, lsl #4
  404a9c:	2100      	movs	r1, #0
  404a9e:	72d1      	strb	r1, [r2, #11]
  404aa0:	2101      	movs	r1, #1
  404aa2:	7291      	strb	r1, [r2, #10]
  404aa4:	4960      	ldr	r1, [pc, #384]	; (404c28 <m2m_ip_cb+0x2ac>)
  404aa6:	880a      	ldrh	r2, [r1, #0]
  404aa8:	3201      	adds	r2, #1
  404aaa:	b292      	uxth	r2, r2
  404aac:	800a      	strh	r2, [r1, #0]
  404aae:	880a      	ldrh	r2, [r1, #0]
  404ab0:	b292      	uxth	r2, r2
  404ab2:	b91a      	cbnz	r2, 404abc <m2m_ip_cb+0x140>
  404ab4:	880a      	ldrh	r2, [r1, #0]
  404ab6:	3201      	adds	r2, #1
  404ab8:	b292      	uxth	r2, r2
  404aba:	800a      	strh	r2, [r1, #0]
  404abc:	4a5a      	ldr	r2, [pc, #360]	; (404c28 <m2m_ip_cb+0x2ac>)
  404abe:	8811      	ldrh	r1, [r2, #0]
  404ac0:	b289      	uxth	r1, r1
  404ac2:	4a57      	ldr	r2, [pc, #348]	; (404c20 <m2m_ip_cb+0x2a4>)
  404ac4:	eb02 1203 	add.w	r2, r2, r3, lsl #4
  404ac8:	80d1      	strh	r1, [r2, #6]
  404aca:	f88d 301c 	strb.w	r3, [sp, #28]
  404ace:	2302      	movs	r3, #2
  404ad0:	f8ad 3020 	strh.w	r3, [sp, #32]
  404ad4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
  404ad8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
  404adc:	9b04      	ldr	r3, [sp, #16]
  404ade:	9309      	str	r3, [sp, #36]	; 0x24
  404ae0:	4b50      	ldr	r3, [pc, #320]	; (404c24 <m2m_ip_cb+0x2a8>)
  404ae2:	681b      	ldr	r3, [r3, #0]
  404ae4:	b33b      	cbz	r3, 404b36 <m2m_ip_cb+0x1ba>
  404ae6:	4b4f      	ldr	r3, [pc, #316]	; (404c24 <m2m_ip_cb+0x2a8>)
  404ae8:	681b      	ldr	r3, [r3, #0]
  404aea:	aa07      	add	r2, sp, #28
  404aec:	2104      	movs	r1, #4
  404aee:	f99d 0014 	ldrsb.w	r0, [sp, #20]
  404af2:	4798      	blx	r3
  404af4:	e01f      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404af6:	2300      	movs	r3, #0
  404af8:	2204      	movs	r2, #4
  404afa:	a907      	add	r1, sp, #28
  404afc:	4620      	mov	r0, r4
  404afe:	4c47      	ldr	r4, [pc, #284]	; (404c1c <m2m_ip_cb+0x2a0>)
  404b00:	47a0      	blx	r4
  404b02:	b9c0      	cbnz	r0, 404b36 <m2m_ip_cb+0x1ba>
  404b04:	f99d 001c 	ldrsb.w	r0, [sp, #28]
  404b08:	f88d 000c 	strb.w	r0, [sp, #12]
  404b0c:	f99d 301d 	ldrsb.w	r3, [sp, #29]
  404b10:	f88d 300d 	strb.w	r3, [sp, #13]
  404b14:	b93b      	cbnz	r3, 404b26 <m2m_ip_cb+0x1aa>
  404b16:	f8bd 301e 	ldrh.w	r3, [sp, #30]
  404b1a:	3b08      	subs	r3, #8
  404b1c:	b29b      	uxth	r3, r3
  404b1e:	4a40      	ldr	r2, [pc, #256]	; (404c20 <m2m_ip_cb+0x2a4>)
  404b20:	eb02 1200 	add.w	r2, r2, r0, lsl #4
  404b24:	8113      	strh	r3, [r2, #8]
  404b26:	4b3f      	ldr	r3, [pc, #252]	; (404c24 <m2m_ip_cb+0x2a8>)
  404b28:	681b      	ldr	r3, [r3, #0]
  404b2a:	b123      	cbz	r3, 404b36 <m2m_ip_cb+0x1ba>
  404b2c:	4b3d      	ldr	r3, [pc, #244]	; (404c24 <m2m_ip_cb+0x2a8>)
  404b2e:	681b      	ldr	r3, [r3, #0]
  404b30:	aa03      	add	r2, sp, #12
  404b32:	2105      	movs	r1, #5
  404b34:	4798      	blx	r3
  404b36:	b019      	add	sp, #100	; 0x64
  404b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404b3a:	2300      	movs	r3, #0
  404b3c:	2244      	movs	r2, #68	; 0x44
  404b3e:	a907      	add	r1, sp, #28
  404b40:	4620      	mov	r0, r4
  404b42:	4c36      	ldr	r4, [pc, #216]	; (404c1c <m2m_ip_cb+0x2a0>)
  404b44:	47a0      	blx	r4
  404b46:	2800      	cmp	r0, #0
  404b48:	d1f5      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404b4a:	4b38      	ldr	r3, [pc, #224]	; (404c2c <m2m_ip_cb+0x2b0>)
  404b4c:	681b      	ldr	r3, [r3, #0]
  404b4e:	2b00      	cmp	r3, #0
  404b50:	d0f1      	beq.n	404b36 <m2m_ip_cb+0x1ba>
  404b52:	4b36      	ldr	r3, [pc, #216]	; (404c2c <m2m_ip_cb+0x2b0>)
  404b54:	681b      	ldr	r3, [r3, #0]
  404b56:	9917      	ldr	r1, [sp, #92]	; 0x5c
  404b58:	a807      	add	r0, sp, #28
  404b5a:	4798      	blx	r3
  404b5c:	e7eb      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404b5e:	f1be 0f00 	cmp.w	lr, #0
  404b62:	dd01      	ble.n	404b68 <m2m_ip_cb+0x1ec>
  404b64:	45ae      	cmp	lr, r5
  404b66:	db0d      	blt.n	404b84 <m2m_ip_cb+0x208>
  404b68:	f8ad e020 	strh.w	lr, [sp, #32]
  404b6c:	2300      	movs	r3, #0
  404b6e:	9307      	str	r3, [sp, #28]
  404b70:	4b2c      	ldr	r3, [pc, #176]	; (404c24 <m2m_ip_cb+0x2a8>)
  404b72:	681b      	ldr	r3, [r3, #0]
  404b74:	2b00      	cmp	r3, #0
  404b76:	d0de      	beq.n	404b36 <m2m_ip_cb+0x1ba>
  404b78:	4b2a      	ldr	r3, [pc, #168]	; (404c24 <m2m_ip_cb+0x2a8>)
  404b7a:	681b      	ldr	r3, [r3, #0]
  404b7c:	aa07      	add	r2, sp, #28
  404b7e:	4639      	mov	r1, r7
  404b80:	4798      	blx	r3
  404b82:	e7d8      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404b84:	fa1f f28e 	uxth.w	r2, lr
  404b88:	9200      	str	r2, [sp, #0]
  404b8a:	4423      	add	r3, r4
  404b8c:	463a      	mov	r2, r7
  404b8e:	a907      	add	r1, sp, #28
  404b90:	4c27      	ldr	r4, [pc, #156]	; (404c30 <m2m_ip_cb+0x2b4>)
  404b92:	47a0      	blx	r4
  404b94:	e7cf      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404b96:	f000 03fd 	and.w	r3, r0, #253	; 0xfd
  404b9a:	2b45      	cmp	r3, #69	; 0x45
  404b9c:	d019      	beq.n	404bd2 <m2m_ip_cb+0x256>
  404b9e:	284c      	cmp	r0, #76	; 0x4c
  404ba0:	d017      	beq.n	404bd2 <m2m_ip_cb+0x256>
  404ba2:	2852      	cmp	r0, #82	; 0x52
  404ba4:	d1c7      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404ba6:	2301      	movs	r3, #1
  404ba8:	2214      	movs	r2, #20
  404baa:	a907      	add	r1, sp, #28
  404bac:	4620      	mov	r0, r4
  404bae:	4c1b      	ldr	r4, [pc, #108]	; (404c1c <m2m_ip_cb+0x2a0>)
  404bb0:	47a0      	blx	r4
  404bb2:	2800      	cmp	r0, #0
  404bb4:	d1bf      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404bb6:	4b1f      	ldr	r3, [pc, #124]	; (404c34 <m2m_ip_cb+0x2b8>)
  404bb8:	9a08      	ldr	r2, [sp, #32]
  404bba:	601a      	str	r2, [r3, #0]
  404bbc:	681b      	ldr	r3, [r3, #0]
  404bbe:	2b00      	cmp	r3, #0
  404bc0:	d0b9      	beq.n	404b36 <m2m_ip_cb+0x1ba>
  404bc2:	4b1c      	ldr	r3, [pc, #112]	; (404c34 <m2m_ip_cb+0x2b8>)
  404bc4:	681b      	ldr	r3, [r3, #0]
  404bc6:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
  404bca:	9909      	ldr	r1, [sp, #36]	; 0x24
  404bcc:	9807      	ldr	r0, [sp, #28]
  404bce:	4798      	blx	r3
  404bd0:	e7b1      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404bd2:	2847      	cmp	r0, #71	; 0x47
  404bd4:	bf14      	ite	ne
  404bd6:	2507      	movne	r5, #7
  404bd8:	2508      	moveq	r5, #8
  404bda:	2300      	movs	r3, #0
  404bdc:	2208      	movs	r2, #8
  404bde:	a907      	add	r1, sp, #28
  404be0:	4620      	mov	r0, r4
  404be2:	4c0e      	ldr	r4, [pc, #56]	; (404c1c <m2m_ip_cb+0x2a0>)
  404be4:	47a0      	blx	r4
  404be6:	2800      	cmp	r0, #0
  404be8:	d1a5      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404bea:	f99d 001c 	ldrsb.w	r0, [sp, #28]
  404bee:	f8bd 2020 	ldrh.w	r2, [sp, #32]
  404bf2:	f8bd 301e 	ldrh.w	r3, [sp, #30]
  404bf6:	f8ad 300c 	strh.w	r3, [sp, #12]
  404bfa:	4b09      	ldr	r3, [pc, #36]	; (404c20 <m2m_ip_cb+0x2a4>)
  404bfc:	eb03 1300 	add.w	r3, r3, r0, lsl #4
  404c00:	88db      	ldrh	r3, [r3, #6]
  404c02:	b29b      	uxth	r3, r3
  404c04:	429a      	cmp	r2, r3
  404c06:	d196      	bne.n	404b36 <m2m_ip_cb+0x1ba>
  404c08:	4b06      	ldr	r3, [pc, #24]	; (404c24 <m2m_ip_cb+0x2a8>)
  404c0a:	681b      	ldr	r3, [r3, #0]
  404c0c:	2b00      	cmp	r3, #0
  404c0e:	d092      	beq.n	404b36 <m2m_ip_cb+0x1ba>
  404c10:	4b04      	ldr	r3, [pc, #16]	; (404c24 <m2m_ip_cb+0x2a8>)
  404c12:	681b      	ldr	r3, [r3, #0]
  404c14:	aa03      	add	r2, sp, #12
  404c16:	4629      	mov	r1, r5
  404c18:	4798      	blx	r3
  404c1a:	e78c      	b.n	404b36 <m2m_ip_cb+0x1ba>
  404c1c:	00402ff9 	.word	0x00402ff9
  404c20:	2040f3fc 	.word	0x2040f3fc
  404c24:	2040f4ac 	.word	0x2040f4ac
  404c28:	2040db8a 	.word	0x2040db8a
  404c2c:	2040f4b4 	.word	0x2040f4b4
  404c30:	004048c1 	.word	0x004048c1
  404c34:	2040f4b0 	.word	0x2040f4b0

00404c38 <socketInit>:
  404c38:	b508      	push	{r3, lr}
  404c3a:	4b0a      	ldr	r3, [pc, #40]	; (404c64 <socketInit+0x2c>)
  404c3c:	781b      	ldrb	r3, [r3, #0]
  404c3e:	b103      	cbz	r3, 404c42 <socketInit+0xa>
  404c40:	bd08      	pop	{r3, pc}
  404c42:	22b0      	movs	r2, #176	; 0xb0
  404c44:	2100      	movs	r1, #0
  404c46:	4808      	ldr	r0, [pc, #32]	; (404c68 <socketInit+0x30>)
  404c48:	4b08      	ldr	r3, [pc, #32]	; (404c6c <socketInit+0x34>)
  404c4a:	4798      	blx	r3
  404c4c:	4908      	ldr	r1, [pc, #32]	; (404c70 <socketInit+0x38>)
  404c4e:	2002      	movs	r0, #2
  404c50:	4b08      	ldr	r3, [pc, #32]	; (404c74 <socketInit+0x3c>)
  404c52:	4798      	blx	r3
  404c54:	2201      	movs	r2, #1
  404c56:	4b03      	ldr	r3, [pc, #12]	; (404c64 <socketInit+0x2c>)
  404c58:	701a      	strb	r2, [r3, #0]
  404c5a:	2200      	movs	r2, #0
  404c5c:	4b06      	ldr	r3, [pc, #24]	; (404c78 <socketInit+0x40>)
  404c5e:	801a      	strh	r2, [r3, #0]
  404c60:	e7ee      	b.n	404c40 <socketInit+0x8>
  404c62:	bf00      	nop
  404c64:	2040db89 	.word	0x2040db89
  404c68:	2040f3fc 	.word	0x2040f3fc
  404c6c:	004029a5 	.word	0x004029a5
  404c70:	0040497d 	.word	0x0040497d
  404c74:	0040310d 	.word	0x0040310d
  404c78:	2040db8a 	.word	0x2040db8a

00404c7c <registerSocketCallback>:
  404c7c:	4b02      	ldr	r3, [pc, #8]	; (404c88 <registerSocketCallback+0xc>)
  404c7e:	6018      	str	r0, [r3, #0]
  404c80:	4b02      	ldr	r3, [pc, #8]	; (404c8c <registerSocketCallback+0x10>)
  404c82:	6019      	str	r1, [r3, #0]
  404c84:	4770      	bx	lr
  404c86:	bf00      	nop
  404c88:	2040f4ac 	.word	0x2040f4ac
  404c8c:	2040f4b4 	.word	0x2040f4b4

00404c90 <socket>:
  404c90:	b5f0      	push	{r4, r5, r6, r7, lr}
  404c92:	b087      	sub	sp, #28
  404c94:	2802      	cmp	r0, #2
  404c96:	d158      	bne.n	404d4a <socket+0xba>
  404c98:	2901      	cmp	r1, #1
  404c9a:	d059      	beq.n	404d50 <socket+0xc0>
  404c9c:	2902      	cmp	r1, #2
  404c9e:	d116      	bne.n	404cce <socket+0x3e>
  404ca0:	260b      	movs	r6, #11
  404ca2:	2407      	movs	r4, #7
  404ca4:	4625      	mov	r5, r4
  404ca6:	4b2e      	ldr	r3, [pc, #184]	; (404d60 <socket+0xd0>)
  404ca8:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  404cac:	7a9b      	ldrb	r3, [r3, #10]
  404cae:	2b00      	cmp	r3, #0
  404cb0:	d051      	beq.n	404d56 <socket+0xc6>
  404cb2:	1c63      	adds	r3, r4, #1
  404cb4:	b2db      	uxtb	r3, r3
  404cb6:	4f2a      	ldr	r7, [pc, #168]	; (404d60 <socket+0xd0>)
  404cb8:	b2dc      	uxtb	r4, r3
  404cba:	42b4      	cmp	r4, r6
  404cbc:	d240      	bcs.n	404d40 <socket+0xb0>
  404cbe:	461d      	mov	r5, r3
  404cc0:	eb07 1103 	add.w	r1, r7, r3, lsl #4
  404cc4:	7a89      	ldrb	r1, [r1, #10]
  404cc6:	1c58      	adds	r0, r3, #1
  404cc8:	b121      	cbz	r1, 404cd4 <socket+0x44>
  404cca:	4603      	mov	r3, r0
  404ccc:	e7f4      	b.n	404cb8 <socket+0x28>
  404cce:	f04f 34ff 	mov.w	r4, #4294967295
  404cd2:	e037      	b.n	404d44 <socket+0xb4>
  404cd4:	4822      	ldr	r0, [pc, #136]	; (404d60 <socket+0xd0>)
  404cd6:	eb00 1003 	add.w	r0, r0, r3, lsl #4
  404cda:	4616      	mov	r6, r2
  404cdc:	2210      	movs	r2, #16
  404cde:	2100      	movs	r1, #0
  404ce0:	4b20      	ldr	r3, [pc, #128]	; (404d64 <socket+0xd4>)
  404ce2:	4798      	blx	r3
  404ce4:	4b1e      	ldr	r3, [pc, #120]	; (404d60 <socket+0xd0>)
  404ce6:	eb03 1305 	add.w	r3, r3, r5, lsl #4
  404cea:	2201      	movs	r2, #1
  404cec:	729a      	strb	r2, [r3, #10]
  404cee:	4a1e      	ldr	r2, [pc, #120]	; (404d68 <socket+0xd8>)
  404cf0:	8813      	ldrh	r3, [r2, #0]
  404cf2:	3301      	adds	r3, #1
  404cf4:	b29b      	uxth	r3, r3
  404cf6:	8013      	strh	r3, [r2, #0]
  404cf8:	8813      	ldrh	r3, [r2, #0]
  404cfa:	b29b      	uxth	r3, r3
  404cfc:	b91b      	cbnz	r3, 404d06 <socket+0x76>
  404cfe:	8813      	ldrh	r3, [r2, #0]
  404d00:	3301      	adds	r3, #1
  404d02:	b29b      	uxth	r3, r3
  404d04:	8013      	strh	r3, [r2, #0]
  404d06:	4b18      	ldr	r3, [pc, #96]	; (404d68 <socket+0xd8>)
  404d08:	881a      	ldrh	r2, [r3, #0]
  404d0a:	b292      	uxth	r2, r2
  404d0c:	4b14      	ldr	r3, [pc, #80]	; (404d60 <socket+0xd0>)
  404d0e:	eb03 1305 	add.w	r3, r3, r5, lsl #4
  404d12:	80da      	strh	r2, [r3, #6]
  404d14:	b264      	sxtb	r4, r4
  404d16:	f016 0f01 	tst.w	r6, #1
  404d1a:	d013      	beq.n	404d44 <socket+0xb4>
  404d1c:	aa06      	add	r2, sp, #24
  404d1e:	f802 4d04 	strb.w	r4, [r2, #-4]!
  404d22:	4b0f      	ldr	r3, [pc, #60]	; (404d60 <socket+0xd0>)
  404d24:	eb03 1505 	add.w	r5, r3, r5, lsl #4
  404d28:	2321      	movs	r3, #33	; 0x21
  404d2a:	72eb      	strb	r3, [r5, #11]
  404d2c:	2300      	movs	r3, #0
  404d2e:	9302      	str	r3, [sp, #8]
  404d30:	9301      	str	r3, [sp, #4]
  404d32:	9300      	str	r3, [sp, #0]
  404d34:	2304      	movs	r3, #4
  404d36:	2150      	movs	r1, #80	; 0x50
  404d38:	2002      	movs	r0, #2
  404d3a:	4d0c      	ldr	r5, [pc, #48]	; (404d6c <socket+0xdc>)
  404d3c:	47a8      	blx	r5
  404d3e:	e001      	b.n	404d44 <socket+0xb4>
  404d40:	f04f 34ff 	mov.w	r4, #4294967295
  404d44:	4620      	mov	r0, r4
  404d46:	b007      	add	sp, #28
  404d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404d4a:	f04f 34ff 	mov.w	r4, #4294967295
  404d4e:	e7f9      	b.n	404d44 <socket+0xb4>
  404d50:	2607      	movs	r6, #7
  404d52:	2400      	movs	r4, #0
  404d54:	e7a6      	b.n	404ca4 <socket+0x14>
  404d56:	4802      	ldr	r0, [pc, #8]	; (404d60 <socket+0xd0>)
  404d58:	eb00 1004 	add.w	r0, r0, r4, lsl #4
  404d5c:	e7bd      	b.n	404cda <socket+0x4a>
  404d5e:	bf00      	nop
  404d60:	2040f3fc 	.word	0x2040f3fc
  404d64:	004029a5 	.word	0x004029a5
  404d68:	2040db8a 	.word	0x2040db8a
  404d6c:	00402b09 	.word	0x00402b09

00404d70 <connect>:
  404d70:	b530      	push	{r4, r5, lr}
  404d72:	b089      	sub	sp, #36	; 0x24
  404d74:	1e04      	subs	r4, r0, #0
  404d76:	db36      	blt.n	404de6 <connect+0x76>
  404d78:	2900      	cmp	r1, #0
  404d7a:	d034      	beq.n	404de6 <connect+0x76>
  404d7c:	4b1d      	ldr	r3, [pc, #116]	; (404df4 <connect+0x84>)
  404d7e:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  404d82:	7a9b      	ldrb	r3, [r3, #10]
  404d84:	b2db      	uxtb	r3, r3
  404d86:	2a00      	cmp	r2, #0
  404d88:	d030      	beq.n	404dec <connect+0x7c>
  404d8a:	2b01      	cmp	r3, #1
  404d8c:	d12e      	bne.n	404dec <connect+0x7c>
  404d8e:	4b19      	ldr	r3, [pc, #100]	; (404df4 <connect+0x84>)
  404d90:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  404d94:	7adb      	ldrb	r3, [r3, #11]
  404d96:	f013 0f01 	tst.w	r3, #1
  404d9a:	d022      	beq.n	404de2 <connect+0x72>
  404d9c:	4b15      	ldr	r3, [pc, #84]	; (404df4 <connect+0x84>)
  404d9e:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  404da2:	7adb      	ldrb	r3, [r3, #11]
  404da4:	f88d 301d 	strb.w	r3, [sp, #29]
  404da8:	254b      	movs	r5, #75	; 0x4b
  404daa:	f88d 401c 	strb.w	r4, [sp, #28]
  404dae:	2208      	movs	r2, #8
  404db0:	a805      	add	r0, sp, #20
  404db2:	4b11      	ldr	r3, [pc, #68]	; (404df8 <connect+0x88>)
  404db4:	4798      	blx	r3
  404db6:	480f      	ldr	r0, [pc, #60]	; (404df4 <connect+0x84>)
  404db8:	eb00 1004 	add.w	r0, r0, r4, lsl #4
  404dbc:	88c3      	ldrh	r3, [r0, #6]
  404dbe:	f8ad 301e 	strh.w	r3, [sp, #30]
  404dc2:	2300      	movs	r3, #0
  404dc4:	9302      	str	r3, [sp, #8]
  404dc6:	9301      	str	r3, [sp, #4]
  404dc8:	9300      	str	r3, [sp, #0]
  404dca:	230c      	movs	r3, #12
  404dcc:	aa05      	add	r2, sp, #20
  404dce:	4629      	mov	r1, r5
  404dd0:	2002      	movs	r0, #2
  404dd2:	4c0a      	ldr	r4, [pc, #40]	; (404dfc <connect+0x8c>)
  404dd4:	47a0      	blx	r4
  404dd6:	2800      	cmp	r0, #0
  404dd8:	bf18      	it	ne
  404dda:	f06f 0008 	mvnne.w	r0, #8
  404dde:	b009      	add	sp, #36	; 0x24
  404de0:	bd30      	pop	{r4, r5, pc}
  404de2:	2544      	movs	r5, #68	; 0x44
  404de4:	e7e1      	b.n	404daa <connect+0x3a>
  404de6:	f06f 0005 	mvn.w	r0, #5
  404dea:	e7f8      	b.n	404dde <connect+0x6e>
  404dec:	f06f 0005 	mvn.w	r0, #5
  404df0:	e7f5      	b.n	404dde <connect+0x6e>
  404df2:	bf00      	nop
  404df4:	2040f3fc 	.word	0x2040f3fc
  404df8:	00402991 	.word	0x00402991
  404dfc:	00402b09 	.word	0x00402b09

00404e00 <send>:
  404e00:	b530      	push	{r4, r5, lr}
  404e02:	b089      	sub	sp, #36	; 0x24
  404e04:	460c      	mov	r4, r1
  404e06:	3100      	adds	r1, #0
  404e08:	bf18      	it	ne
  404e0a:	2101      	movne	r1, #1
  404e0c:	f5b2 6faf 	cmp.w	r2, #1400	; 0x578
  404e10:	bf88      	it	hi
  404e12:	2100      	movhi	r1, #0
  404e14:	2900      	cmp	r1, #0
  404e16:	d037      	beq.n	404e88 <send+0x88>
  404e18:	2800      	cmp	r0, #0
  404e1a:	db35      	blt.n	404e88 <send+0x88>
  404e1c:	4b1d      	ldr	r3, [pc, #116]	; (404e94 <send+0x94>)
  404e1e:	eb03 1300 	add.w	r3, r3, r0, lsl #4
  404e22:	7a9b      	ldrb	r3, [r3, #10]
  404e24:	b2db      	uxtb	r3, r3
  404e26:	2b01      	cmp	r3, #1
  404e28:	d131      	bne.n	404e8e <send+0x8e>
  404e2a:	f88d 0010 	strb.w	r0, [sp, #16]
  404e2e:	f8ad 2012 	strh.w	r2, [sp, #18]
  404e32:	4b18      	ldr	r3, [pc, #96]	; (404e94 <send+0x94>)
  404e34:	eb03 1300 	add.w	r3, r3, r0, lsl #4
  404e38:	88db      	ldrh	r3, [r3, #6]
  404e3a:	f8ad 301c 	strh.w	r3, [sp, #28]
  404e3e:	2807      	cmp	r0, #7
  404e40:	bfb4      	ite	lt
  404e42:	2550      	movlt	r5, #80	; 0x50
  404e44:	2544      	movge	r5, #68	; 0x44
  404e46:	4b13      	ldr	r3, [pc, #76]	; (404e94 <send+0x94>)
  404e48:	eb03 1300 	add.w	r3, r3, r0, lsl #4
  404e4c:	7adb      	ldrb	r3, [r3, #11]
  404e4e:	f013 0f01 	tst.w	r3, #1
  404e52:	d017      	beq.n	404e84 <send+0x84>
  404e54:	4b0f      	ldr	r3, [pc, #60]	; (404e94 <send+0x94>)
  404e56:	eb03 1000 	add.w	r0, r3, r0, lsl #4
  404e5a:	8905      	ldrh	r5, [r0, #8]
  404e5c:	b2ad      	uxth	r5, r5
  404e5e:	214c      	movs	r1, #76	; 0x4c
  404e60:	9502      	str	r5, [sp, #8]
  404e62:	9201      	str	r2, [sp, #4]
  404e64:	9400      	str	r4, [sp, #0]
  404e66:	2310      	movs	r3, #16
  404e68:	eb0d 0203 	add.w	r2, sp, r3
  404e6c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
  404e70:	2002      	movs	r0, #2
  404e72:	4c09      	ldr	r4, [pc, #36]	; (404e98 <send+0x98>)
  404e74:	47a0      	blx	r4
  404e76:	2800      	cmp	r0, #0
  404e78:	bf0c      	ite	eq
  404e7a:	2000      	moveq	r0, #0
  404e7c:	f06f 000d 	mvnne.w	r0, #13
  404e80:	b009      	add	sp, #36	; 0x24
  404e82:	bd30      	pop	{r4, r5, pc}
  404e84:	2145      	movs	r1, #69	; 0x45
  404e86:	e7eb      	b.n	404e60 <send+0x60>
  404e88:	f06f 0005 	mvn.w	r0, #5
  404e8c:	e7f8      	b.n	404e80 <send+0x80>
  404e8e:	f06f 0005 	mvn.w	r0, #5
  404e92:	e7f5      	b.n	404e80 <send+0x80>
  404e94:	2040f3fc 	.word	0x2040f3fc
  404e98:	00402b09 	.word	0x00402b09

00404e9c <recv>:
  404e9c:	2900      	cmp	r1, #0
  404e9e:	bf18      	it	ne
  404ea0:	2a00      	cmpne	r2, #0
  404ea2:	d044      	beq.n	404f2e <recv+0x92>
  404ea4:	b570      	push	{r4, r5, r6, lr}
  404ea6:	b086      	sub	sp, #24
  404ea8:	460e      	mov	r6, r1
  404eaa:	4615      	mov	r5, r2
  404eac:	2800      	cmp	r0, #0
  404eae:	db36      	blt.n	404f1e <recv+0x82>
  404eb0:	4a20      	ldr	r2, [pc, #128]	; (404f34 <recv+0x98>)
  404eb2:	eb02 1200 	add.w	r2, r2, r0, lsl #4
  404eb6:	7a92      	ldrb	r2, [r2, #10]
  404eb8:	b2d2      	uxtb	r2, r2
  404eba:	2a01      	cmp	r2, #1
  404ebc:	d132      	bne.n	404f24 <recv+0x88>
  404ebe:	4c1d      	ldr	r4, [pc, #116]	; (404f34 <recv+0x98>)
  404ec0:	0101      	lsls	r1, r0, #4
  404ec2:	1862      	adds	r2, r4, r1
  404ec4:	5066      	str	r6, [r4, r1]
  404ec6:	8095      	strh	r5, [r2, #4]
  404ec8:	7b12      	ldrb	r2, [r2, #12]
  404eca:	2a00      	cmp	r2, #0
  404ecc:	d12d      	bne.n	404f2a <recv+0x8e>
  404ece:	eb04 1200 	add.w	r2, r4, r0, lsl #4
  404ed2:	2101      	movs	r1, #1
  404ed4:	7311      	strb	r1, [r2, #12]
  404ed6:	7ad2      	ldrb	r2, [r2, #11]
  404ed8:	400a      	ands	r2, r1
  404eda:	2a00      	cmp	r2, #0
  404edc:	bf0c      	ite	eq
  404ede:	2146      	moveq	r1, #70	; 0x46
  404ee0:	214d      	movne	r1, #77	; 0x4d
  404ee2:	b9d3      	cbnz	r3, 404f1a <recv+0x7e>
  404ee4:	f04f 33ff 	mov.w	r3, #4294967295
  404ee8:	9304      	str	r3, [sp, #16]
  404eea:	f88d 0014 	strb.w	r0, [sp, #20]
  404eee:	4b11      	ldr	r3, [pc, #68]	; (404f34 <recv+0x98>)
  404ef0:	eb03 1000 	add.w	r0, r3, r0, lsl #4
  404ef4:	88c3      	ldrh	r3, [r0, #6]
  404ef6:	f8ad 3016 	strh.w	r3, [sp, #22]
  404efa:	2300      	movs	r3, #0
  404efc:	9302      	str	r3, [sp, #8]
  404efe:	9301      	str	r3, [sp, #4]
  404f00:	9300      	str	r3, [sp, #0]
  404f02:	2308      	movs	r3, #8
  404f04:	aa04      	add	r2, sp, #16
  404f06:	2002      	movs	r0, #2
  404f08:	4c0b      	ldr	r4, [pc, #44]	; (404f38 <recv+0x9c>)
  404f0a:	47a0      	blx	r4
  404f0c:	2800      	cmp	r0, #0
  404f0e:	bf0c      	ite	eq
  404f10:	2000      	moveq	r0, #0
  404f12:	f06f 000d 	mvnne.w	r0, #13
  404f16:	b006      	add	sp, #24
  404f18:	bd70      	pop	{r4, r5, r6, pc}
  404f1a:	9304      	str	r3, [sp, #16]
  404f1c:	e7e5      	b.n	404eea <recv+0x4e>
  404f1e:	f06f 0005 	mvn.w	r0, #5
  404f22:	e7f8      	b.n	404f16 <recv+0x7a>
  404f24:	f06f 0005 	mvn.w	r0, #5
  404f28:	e7f5      	b.n	404f16 <recv+0x7a>
  404f2a:	2000      	movs	r0, #0
  404f2c:	e7f3      	b.n	404f16 <recv+0x7a>
  404f2e:	f06f 0005 	mvn.w	r0, #5
  404f32:	4770      	bx	lr
  404f34:	2040f3fc 	.word	0x2040f3fc
  404f38:	00402b09 	.word	0x00402b09

00404f3c <close>:
  404f3c:	b530      	push	{r4, r5, lr}
  404f3e:	b087      	sub	sp, #28
  404f40:	1e04      	subs	r4, r0, #0
  404f42:	db2f      	blt.n	404fa4 <close+0x68>
  404f44:	4b1a      	ldr	r3, [pc, #104]	; (404fb0 <close+0x74>)
  404f46:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  404f4a:	7a9b      	ldrb	r3, [r3, #10]
  404f4c:	b2db      	uxtb	r3, r3
  404f4e:	2b01      	cmp	r3, #1
  404f50:	d12b      	bne.n	404faa <close+0x6e>
  404f52:	f88d 4014 	strb.w	r4, [sp, #20]
  404f56:	4b16      	ldr	r3, [pc, #88]	; (404fb0 <close+0x74>)
  404f58:	eb03 1304 	add.w	r3, r3, r4, lsl #4
  404f5c:	88da      	ldrh	r2, [r3, #6]
  404f5e:	f8ad 2016 	strh.w	r2, [sp, #22]
  404f62:	2200      	movs	r2, #0
  404f64:	729a      	strb	r2, [r3, #10]
  404f66:	80da      	strh	r2, [r3, #6]
  404f68:	7adb      	ldrb	r3, [r3, #11]
  404f6a:	f003 0301 	and.w	r3, r3, #1
  404f6e:	4293      	cmp	r3, r2
  404f70:	9202      	str	r2, [sp, #8]
  404f72:	9201      	str	r2, [sp, #4]
  404f74:	9200      	str	r2, [sp, #0]
  404f76:	f04f 0304 	mov.w	r3, #4
  404f7a:	aa05      	add	r2, sp, #20
  404f7c:	bf0c      	ite	eq
  404f7e:	2149      	moveq	r1, #73	; 0x49
  404f80:	214e      	movne	r1, #78	; 0x4e
  404f82:	2002      	movs	r0, #2
  404f84:	4d0b      	ldr	r5, [pc, #44]	; (404fb4 <close+0x78>)
  404f86:	47a8      	blx	r5
  404f88:	1e05      	subs	r5, r0, #0
  404f8a:	bf18      	it	ne
  404f8c:	f06f 0508 	mvnne.w	r5, #8
  404f90:	2210      	movs	r2, #16
  404f92:	2100      	movs	r1, #0
  404f94:	4806      	ldr	r0, [pc, #24]	; (404fb0 <close+0x74>)
  404f96:	eb00 1004 	add.w	r0, r0, r4, lsl #4
  404f9a:	4b07      	ldr	r3, [pc, #28]	; (404fb8 <close+0x7c>)
  404f9c:	4798      	blx	r3
  404f9e:	4628      	mov	r0, r5
  404fa0:	b007      	add	sp, #28
  404fa2:	bd30      	pop	{r4, r5, pc}
  404fa4:	f06f 0505 	mvn.w	r5, #5
  404fa8:	e7f9      	b.n	404f9e <close+0x62>
  404faa:	f06f 0505 	mvn.w	r5, #5
  404fae:	e7f6      	b.n	404f9e <close+0x62>
  404fb0:	2040f3fc 	.word	0x2040f3fc
  404fb4:	00402b09 	.word	0x00402b09
  404fb8:	004029a5 	.word	0x004029a5

00404fbc <gethostbyname>:
  404fbc:	b510      	push	{r4, lr}
  404fbe:	b084      	sub	sp, #16
  404fc0:	4604      	mov	r4, r0
  404fc2:	4b0c      	ldr	r3, [pc, #48]	; (404ff4 <gethostbyname+0x38>)
  404fc4:	4798      	blx	r3
  404fc6:	b2c3      	uxtb	r3, r0
  404fc8:	2b40      	cmp	r3, #64	; 0x40
  404fca:	d80f      	bhi.n	404fec <gethostbyname+0x30>
  404fcc:	2200      	movs	r2, #0
  404fce:	9202      	str	r2, [sp, #8]
  404fd0:	9201      	str	r2, [sp, #4]
  404fd2:	9200      	str	r2, [sp, #0]
  404fd4:	3301      	adds	r3, #1
  404fd6:	4622      	mov	r2, r4
  404fd8:	21ca      	movs	r1, #202	; 0xca
  404fda:	2002      	movs	r0, #2
  404fdc:	4c06      	ldr	r4, [pc, #24]	; (404ff8 <gethostbyname+0x3c>)
  404fde:	47a0      	blx	r4
  404fe0:	2800      	cmp	r0, #0
  404fe2:	bf18      	it	ne
  404fe4:	f06f 0008 	mvnne.w	r0, #8
  404fe8:	b004      	add	sp, #16
  404fea:	bd10      	pop	{r4, pc}
  404fec:	f06f 0005 	mvn.w	r0, #5
  404ff0:	e7fa      	b.n	404fe8 <gethostbyname+0x2c>
  404ff2:	bf00      	nop
  404ff4:	004029b3 	.word	0x004029b3
  404ff8:	00402b09 	.word	0x00402b09

00404ffc <spi_flash_enable>:
  404ffc:	b570      	push	{r4, r5, r6, lr}
  404ffe:	b082      	sub	sp, #8
  405000:	4605      	mov	r5, r0
  405002:	4b2b      	ldr	r3, [pc, #172]	; (4050b0 <spi_flash_enable+0xb4>)
  405004:	4798      	blx	r3
  405006:	f3c0 000b 	ubfx	r0, r0, #0, #12
  40500a:	f5b0 7f68 	cmp.w	r0, #928	; 0x3a0
  40500e:	d203      	bcs.n	405018 <spi_flash_enable+0x1c>
  405010:	2400      	movs	r4, #0
  405012:	4620      	mov	r0, r4
  405014:	b002      	add	sp, #8
  405016:	bd70      	pop	{r4, r5, r6, pc}
  405018:	a901      	add	r1, sp, #4
  40501a:	f241 4010 	movw	r0, #5136	; 0x1410
  40501e:	4b25      	ldr	r3, [pc, #148]	; (4050b4 <spi_flash_enable+0xb8>)
  405020:	4798      	blx	r3
  405022:	4604      	mov	r4, r0
  405024:	2800      	cmp	r0, #0
  405026:	d1f4      	bne.n	405012 <spi_flash_enable+0x16>
  405028:	4b23      	ldr	r3, [pc, #140]	; (4050b8 <spi_flash_enable+0xbc>)
  40502a:	9a01      	ldr	r2, [sp, #4]
  40502c:	4013      	ands	r3, r2
  40502e:	4923      	ldr	r1, [pc, #140]	; (4050bc <spi_flash_enable+0xc0>)
  405030:	4319      	orrs	r1, r3
  405032:	9101      	str	r1, [sp, #4]
  405034:	f241 4010 	movw	r0, #5136	; 0x1410
  405038:	4b21      	ldr	r3, [pc, #132]	; (4050c0 <spi_flash_enable+0xc4>)
  40503a:	4798      	blx	r3
  40503c:	b305      	cbz	r5, 405080 <spi_flash_enable+0x84>
  40503e:	2100      	movs	r1, #0
  405040:	4820      	ldr	r0, [pc, #128]	; (4050c4 <spi_flash_enable+0xc8>)
  405042:	4d1f      	ldr	r5, [pc, #124]	; (4050c0 <spi_flash_enable+0xc4>)
  405044:	47a8      	blx	r5
  405046:	21ab      	movs	r1, #171	; 0xab
  405048:	481f      	ldr	r0, [pc, #124]	; (4050c8 <spi_flash_enable+0xcc>)
  40504a:	47a8      	blx	r5
  40504c:	2101      	movs	r1, #1
  40504e:	481f      	ldr	r0, [pc, #124]	; (4050cc <spi_flash_enable+0xd0>)
  405050:	47a8      	blx	r5
  405052:	2100      	movs	r1, #0
  405054:	481e      	ldr	r0, [pc, #120]	; (4050d0 <spi_flash_enable+0xd4>)
  405056:	47a8      	blx	r5
  405058:	2181      	movs	r1, #129	; 0x81
  40505a:	481e      	ldr	r0, [pc, #120]	; (4050d4 <spi_flash_enable+0xd8>)
  40505c:	47a8      	blx	r5
  40505e:	4e1e      	ldr	r6, [pc, #120]	; (4050d8 <spi_flash_enable+0xdc>)
  405060:	4d1e      	ldr	r5, [pc, #120]	; (4050dc <spi_flash_enable+0xe0>)
  405062:	4630      	mov	r0, r6
  405064:	47a8      	blx	r5
  405066:	2801      	cmp	r0, #1
  405068:	d1fb      	bne.n	405062 <spi_flash_enable+0x66>
  40506a:	4913      	ldr	r1, [pc, #76]	; (4050b8 <spi_flash_enable+0xbc>)
  40506c:	9b01      	ldr	r3, [sp, #4]
  40506e:	4019      	ands	r1, r3
  405070:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
  405074:	9101      	str	r1, [sp, #4]
  405076:	f241 4010 	movw	r0, #5136	; 0x1410
  40507a:	4b11      	ldr	r3, [pc, #68]	; (4050c0 <spi_flash_enable+0xc4>)
  40507c:	4798      	blx	r3
  40507e:	e7c8      	b.n	405012 <spi_flash_enable+0x16>
  405080:	2100      	movs	r1, #0
  405082:	4810      	ldr	r0, [pc, #64]	; (4050c4 <spi_flash_enable+0xc8>)
  405084:	4d0e      	ldr	r5, [pc, #56]	; (4050c0 <spi_flash_enable+0xc4>)
  405086:	47a8      	blx	r5
  405088:	21b9      	movs	r1, #185	; 0xb9
  40508a:	480f      	ldr	r0, [pc, #60]	; (4050c8 <spi_flash_enable+0xcc>)
  40508c:	47a8      	blx	r5
  40508e:	2101      	movs	r1, #1
  405090:	480e      	ldr	r0, [pc, #56]	; (4050cc <spi_flash_enable+0xd0>)
  405092:	47a8      	blx	r5
  405094:	2100      	movs	r1, #0
  405096:	480e      	ldr	r0, [pc, #56]	; (4050d0 <spi_flash_enable+0xd4>)
  405098:	47a8      	blx	r5
  40509a:	2181      	movs	r1, #129	; 0x81
  40509c:	480d      	ldr	r0, [pc, #52]	; (4050d4 <spi_flash_enable+0xd8>)
  40509e:	47a8      	blx	r5
  4050a0:	4e0d      	ldr	r6, [pc, #52]	; (4050d8 <spi_flash_enable+0xdc>)
  4050a2:	4d0e      	ldr	r5, [pc, #56]	; (4050dc <spi_flash_enable+0xe0>)
  4050a4:	4630      	mov	r0, r6
  4050a6:	47a8      	blx	r5
  4050a8:	2801      	cmp	r0, #1
  4050aa:	d1fb      	bne.n	4050a4 <spi_flash_enable+0xa8>
  4050ac:	e7dd      	b.n	40506a <spi_flash_enable+0x6e>
  4050ae:	bf00      	nop
  4050b0:	004039d1 	.word	0x004039d1
  4050b4:	00403ccd 	.word	0x00403ccd
  4050b8:	f8888fff 	.word	0xf8888fff
  4050bc:	01111000 	.word	0x01111000
  4050c0:	00403cd9 	.word	0x00403cd9
  4050c4:	00010208 	.word	0x00010208
  4050c8:	0001020c 	.word	0x0001020c
  4050cc:	00010214 	.word	0x00010214
  4050d0:	0001021c 	.word	0x0001021c
  4050d4:	00010204 	.word	0x00010204
  4050d8:	00010218 	.word	0x00010218
  4050dc:	00403cc1 	.word	0x00403cc1

004050e0 <sysclk_init>:
  4050e0:	b510      	push	{r4, lr}
  4050e2:	4810      	ldr	r0, [pc, #64]	; (405124 <sysclk_init+0x44>)
  4050e4:	4b10      	ldr	r3, [pc, #64]	; (405128 <sysclk_init+0x48>)
  4050e6:	4798      	blx	r3
  4050e8:	213e      	movs	r1, #62	; 0x3e
  4050ea:	2000      	movs	r0, #0
  4050ec:	4b0f      	ldr	r3, [pc, #60]	; (40512c <sysclk_init+0x4c>)
  4050ee:	4798      	blx	r3
  4050f0:	4c0f      	ldr	r4, [pc, #60]	; (405130 <sysclk_init+0x50>)
  4050f2:	47a0      	blx	r4
  4050f4:	2800      	cmp	r0, #0
  4050f6:	d0fc      	beq.n	4050f2 <sysclk_init+0x12>
  4050f8:	4b0e      	ldr	r3, [pc, #56]	; (405134 <sysclk_init+0x54>)
  4050fa:	4798      	blx	r3
  4050fc:	4a0e      	ldr	r2, [pc, #56]	; (405138 <sysclk_init+0x58>)
  4050fe:	4b0f      	ldr	r3, [pc, #60]	; (40513c <sysclk_init+0x5c>)
  405100:	629a      	str	r2, [r3, #40]	; 0x28
  405102:	4c0f      	ldr	r4, [pc, #60]	; (405140 <sysclk_init+0x60>)
  405104:	47a0      	blx	r4
  405106:	2800      	cmp	r0, #0
  405108:	d0fc      	beq.n	405104 <sysclk_init+0x24>
  40510a:	2002      	movs	r0, #2
  40510c:	4b0d      	ldr	r3, [pc, #52]	; (405144 <sysclk_init+0x64>)
  40510e:	4798      	blx	r3
  405110:	2000      	movs	r0, #0
  405112:	4b0d      	ldr	r3, [pc, #52]	; (405148 <sysclk_init+0x68>)
  405114:	4798      	blx	r3
  405116:	4b0d      	ldr	r3, [pc, #52]	; (40514c <sysclk_init+0x6c>)
  405118:	4798      	blx	r3
  40511a:	4802      	ldr	r0, [pc, #8]	; (405124 <sysclk_init+0x44>)
  40511c:	4b02      	ldr	r3, [pc, #8]	; (405128 <sysclk_init+0x48>)
  40511e:	4798      	blx	r3
  405120:	bd10      	pop	{r4, pc}
  405122:	bf00      	nop
  405124:	11e1a300 	.word	0x11e1a300
  405128:	00405d65 	.word	0x00405d65
  40512c:	0040582d 	.word	0x0040582d
  405130:	00405881 	.word	0x00405881
  405134:	00405891 	.word	0x00405891
  405138:	20183f01 	.word	0x20183f01
  40513c:	400e0600 	.word	0x400e0600
  405140:	004058a1 	.word	0x004058a1
  405144:	00405791 	.word	0x00405791
  405148:	004057c9 	.word	0x004057c9
  40514c:	00405c59 	.word	0x00405c59

00405150 <_read>:
  405150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405154:	b980      	cbnz	r0, 405178 <_read+0x28>
  405156:	460c      	mov	r4, r1
  405158:	4690      	mov	r8, r2
  40515a:	2a00      	cmp	r2, #0
  40515c:	dd0f      	ble.n	40517e <_read+0x2e>
  40515e:	188f      	adds	r7, r1, r2
  405160:	4e08      	ldr	r6, [pc, #32]	; (405184 <_read+0x34>)
  405162:	4d09      	ldr	r5, [pc, #36]	; (405188 <_read+0x38>)
  405164:	6830      	ldr	r0, [r6, #0]
  405166:	4621      	mov	r1, r4
  405168:	682b      	ldr	r3, [r5, #0]
  40516a:	4798      	blx	r3
  40516c:	3401      	adds	r4, #1
  40516e:	42bc      	cmp	r4, r7
  405170:	d1f8      	bne.n	405164 <_read+0x14>
  405172:	4640      	mov	r0, r8
  405174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405178:	f04f 38ff 	mov.w	r8, #4294967295
  40517c:	e7f9      	b.n	405172 <_read+0x22>
  40517e:	4680      	mov	r8, r0
  405180:	e7f7      	b.n	405172 <_read+0x22>
  405182:	bf00      	nop
  405184:	2040f4c0 	.word	0x2040f4c0
  405188:	2040f4b8 	.word	0x2040f4b8

0040518c <_write>:
  40518c:	3801      	subs	r0, #1
  40518e:	2802      	cmp	r0, #2
  405190:	d815      	bhi.n	4051be <_write+0x32>
  405192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405196:	460e      	mov	r6, r1
  405198:	4614      	mov	r4, r2
  40519a:	b19a      	cbz	r2, 4051c4 <_write+0x38>
  40519c:	460d      	mov	r5, r1
  40519e:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4051d8 <_write+0x4c>
  4051a2:	4f0c      	ldr	r7, [pc, #48]	; (4051d4 <_write+0x48>)
  4051a4:	f8d8 0000 	ldr.w	r0, [r8]
  4051a8:	f815 1b01 	ldrb.w	r1, [r5], #1
  4051ac:	683b      	ldr	r3, [r7, #0]
  4051ae:	4798      	blx	r3
  4051b0:	2800      	cmp	r0, #0
  4051b2:	db0a      	blt.n	4051ca <_write+0x3e>
  4051b4:	1ba8      	subs	r0, r5, r6
  4051b6:	3c01      	subs	r4, #1
  4051b8:	d1f4      	bne.n	4051a4 <_write+0x18>
  4051ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051be:	f04f 30ff 	mov.w	r0, #4294967295
  4051c2:	4770      	bx	lr
  4051c4:	4610      	mov	r0, r2
  4051c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051ca:	f04f 30ff 	mov.w	r0, #4294967295
  4051ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4051d2:	bf00      	nop
  4051d4:	2040f4bc 	.word	0x2040f4bc
  4051d8:	2040f4c0 	.word	0x2040f4c0

004051dc <board_init>:
  4051dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4051de:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4051e2:	4b5c      	ldr	r3, [pc, #368]	; (405354 <board_init+0x178>)
  4051e4:	605a      	str	r2, [r3, #4]
  4051e6:	f3bf 8f4f 	dsb	sy
  4051ea:	f3bf 8f6f 	isb	sy
  4051ee:	4b5a      	ldr	r3, [pc, #360]	; (405358 <board_init+0x17c>)
  4051f0:	2200      	movs	r2, #0
  4051f2:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  4051f6:	695a      	ldr	r2, [r3, #20]
  4051f8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4051fc:	615a      	str	r2, [r3, #20]
  4051fe:	f3bf 8f4f 	dsb	sy
  405202:	f3bf 8f6f 	isb	sy
  405206:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
  40520a:	f3c7 364e 	ubfx	r6, r7, #13, #15
  40520e:	f007 0007 	and.w	r0, r7, #7
  405212:	3004      	adds	r0, #4
  405214:	f3c7 07c9 	ubfx	r7, r7, #3, #10
  405218:	fab7 fe87 	clz	lr, r7
  40521c:	f00e 0e1f 	and.w	lr, lr, #31
  405220:	f3bf 8f4f 	dsb	sy
  405224:	f04f 34ff 	mov.w	r4, #4294967295
  405228:	fa04 fc00 	lsl.w	ip, r4, r0
  40522c:	fa06 f000 	lsl.w	r0, r6, r0
  405230:	fa04 f40e 	lsl.w	r4, r4, lr
  405234:	fa07 fe0e 	lsl.w	lr, r7, lr
  405238:	461d      	mov	r5, r3
  40523a:	463a      	mov	r2, r7
  40523c:	4673      	mov	r3, lr
  40523e:	ea40 0103 	orr.w	r1, r0, r3
  405242:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
  405246:	3a01      	subs	r2, #1
  405248:	4423      	add	r3, r4
  40524a:	f1b2 3fff 	cmp.w	r2, #4294967295
  40524e:	d1f6      	bne.n	40523e <board_init+0x62>
  405250:	3e01      	subs	r6, #1
  405252:	4460      	add	r0, ip
  405254:	f1b6 3fff 	cmp.w	r6, #4294967295
  405258:	d1ef      	bne.n	40523a <board_init+0x5e>
  40525a:	f3bf 8f4f 	dsb	sy
  40525e:	4b3e      	ldr	r3, [pc, #248]	; (405358 <board_init+0x17c>)
  405260:	695a      	ldr	r2, [r3, #20]
  405262:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  405266:	615a      	str	r2, [r3, #20]
  405268:	f3bf 8f4f 	dsb	sy
  40526c:	f3bf 8f6f 	isb	sy
  405270:	4a3a      	ldr	r2, [pc, #232]	; (40535c <board_init+0x180>)
  405272:	493b      	ldr	r1, [pc, #236]	; (405360 <board_init+0x184>)
  405274:	6051      	str	r1, [r2, #4]
  405276:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  40527a:	6051      	str	r1, [r2, #4]
  40527c:	f3bf 8f4f 	dsb	sy
  405280:	f3bf 8f6f 	isb	sy
  405284:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  405288:	f022 0201 	bic.w	r2, r2, #1
  40528c:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
  405290:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  405294:	f022 0201 	bic.w	r2, r2, #1
  405298:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  40529c:	f3bf 8f4f 	dsb	sy
  4052a0:	f3bf 8f6f 	isb	sy
  4052a4:	200a      	movs	r0, #10
  4052a6:	4c2f      	ldr	r4, [pc, #188]	; (405364 <board_init+0x188>)
  4052a8:	47a0      	blx	r4
  4052aa:	200b      	movs	r0, #11
  4052ac:	47a0      	blx	r4
  4052ae:	200c      	movs	r0, #12
  4052b0:	47a0      	blx	r4
  4052b2:	2010      	movs	r0, #16
  4052b4:	47a0      	blx	r4
  4052b6:	2011      	movs	r0, #17
  4052b8:	47a0      	blx	r4
  4052ba:	4b2b      	ldr	r3, [pc, #172]	; (405368 <board_init+0x18c>)
  4052bc:	f44f 7280 	mov.w	r2, #256	; 0x100
  4052c0:	611a      	str	r2, [r3, #16]
  4052c2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  4052c6:	631a      	str	r2, [r3, #48]	; 0x30
  4052c8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4052cc:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4052d0:	615a      	str	r2, [r3, #20]
  4052d2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  4052d6:	665a      	str	r2, [r3, #100]	; 0x64
  4052d8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  4052dc:	655a      	str	r2, [r3, #84]	; 0x54
  4052de:	621a      	str	r2, [r3, #32]
  4052e0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  4052e4:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4052e6:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4052ea:	6719      	str	r1, [r3, #112]	; 0x70
  4052ec:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4052ee:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  4052f2:	6759      	str	r1, [r3, #116]	; 0x74
  4052f4:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
  4052f8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
  4052fc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  405300:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  405304:	661a      	str	r2, [r3, #96]	; 0x60
  405306:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  40530a:	655a      	str	r2, [r3, #84]	; 0x54
  40530c:	625a      	str	r2, [r3, #36]	; 0x24
  40530e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  405312:	6f19      	ldr	r1, [r3, #112]	; 0x70
  405314:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  405318:	6719      	str	r1, [r3, #112]	; 0x70
  40531a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40531c:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
  405320:	6759      	str	r1, [r3, #116]	; 0x74
  405322:	605a      	str	r2, [r3, #4]
  405324:	4a11      	ldr	r2, [pc, #68]	; (40536c <board_init+0x190>)
  405326:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  40532a:	f043 0310 	orr.w	r3, r3, #16
  40532e:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
  405332:	4b0f      	ldr	r3, [pc, #60]	; (405370 <board_init+0x194>)
  405334:	2210      	movs	r2, #16
  405336:	661a      	str	r2, [r3, #96]	; 0x60
  405338:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
  40533c:	655a      	str	r2, [r3, #84]	; 0x54
  40533e:	625a      	str	r2, [r3, #36]	; 0x24
  405340:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  405344:	6f19      	ldr	r1, [r3, #112]	; 0x70
  405346:	4311      	orrs	r1, r2
  405348:	6719      	str	r1, [r3, #112]	; 0x70
  40534a:	6f59      	ldr	r1, [r3, #116]	; 0x74
  40534c:	4311      	orrs	r1, r2
  40534e:	6759      	str	r1, [r3, #116]	; 0x74
  405350:	605a      	str	r2, [r3, #4]
  405352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405354:	400e1850 	.word	0x400e1850
  405358:	e000ed00 	.word	0xe000ed00
  40535c:	400e0c00 	.word	0x400e0c00
  405360:	5a00080c 	.word	0x5a00080c
  405364:	004058b1 	.word	0x004058b1
  405368:	400e1200 	.word	0x400e1200
  40536c:	40088000 	.word	0x40088000
  405370:	400e1000 	.word	0x400e1000

00405374 <pio_pull_up>:
  405374:	b90a      	cbnz	r2, 40537a <pio_pull_up+0x6>
  405376:	6601      	str	r1, [r0, #96]	; 0x60
  405378:	4770      	bx	lr
  40537a:	6641      	str	r1, [r0, #100]	; 0x64
  40537c:	4770      	bx	lr

0040537e <pio_set>:
  40537e:	6301      	str	r1, [r0, #48]	; 0x30
  405380:	4770      	bx	lr

00405382 <pio_clear>:
  405382:	6341      	str	r1, [r0, #52]	; 0x34
  405384:	4770      	bx	lr

00405386 <pio_set_peripheral>:
  405386:	6442      	str	r2, [r0, #68]	; 0x44
  405388:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40538c:	d03a      	beq.n	405404 <pio_set_peripheral+0x7e>
  40538e:	d813      	bhi.n	4053b8 <pio_set_peripheral+0x32>
  405390:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  405394:	d025      	beq.n	4053e2 <pio_set_peripheral+0x5c>
  405396:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  40539a:	d10a      	bne.n	4053b2 <pio_set_peripheral+0x2c>
  40539c:	6f03      	ldr	r3, [r0, #112]	; 0x70
  40539e:	4313      	orrs	r3, r2
  4053a0:	6703      	str	r3, [r0, #112]	; 0x70
  4053a2:	6f43      	ldr	r3, [r0, #116]	; 0x74
  4053a4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4053a6:	400b      	ands	r3, r1
  4053a8:	ea23 0302 	bic.w	r3, r3, r2
  4053ac:	6743      	str	r3, [r0, #116]	; 0x74
  4053ae:	6042      	str	r2, [r0, #4]
  4053b0:	4770      	bx	lr
  4053b2:	2900      	cmp	r1, #0
  4053b4:	d1fb      	bne.n	4053ae <pio_set_peripheral+0x28>
  4053b6:	4770      	bx	lr
  4053b8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4053bc:	d021      	beq.n	405402 <pio_set_peripheral+0x7c>
  4053be:	d809      	bhi.n	4053d4 <pio_set_peripheral+0x4e>
  4053c0:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4053c4:	d1f3      	bne.n	4053ae <pio_set_peripheral+0x28>
  4053c6:	6f03      	ldr	r3, [r0, #112]	; 0x70
  4053c8:	4313      	orrs	r3, r2
  4053ca:	6703      	str	r3, [r0, #112]	; 0x70
  4053cc:	6f43      	ldr	r3, [r0, #116]	; 0x74
  4053ce:	4313      	orrs	r3, r2
  4053d0:	6743      	str	r3, [r0, #116]	; 0x74
  4053d2:	e7ec      	b.n	4053ae <pio_set_peripheral+0x28>
  4053d4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4053d8:	d013      	beq.n	405402 <pio_set_peripheral+0x7c>
  4053da:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4053de:	d010      	beq.n	405402 <pio_set_peripheral+0x7c>
  4053e0:	e7e5      	b.n	4053ae <pio_set_peripheral+0x28>
  4053e2:	b410      	push	{r4}
  4053e4:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4053e6:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4053e8:	43d3      	mvns	r3, r2
  4053ea:	4021      	ands	r1, r4
  4053ec:	461c      	mov	r4, r3
  4053ee:	4019      	ands	r1, r3
  4053f0:	6701      	str	r1, [r0, #112]	; 0x70
  4053f2:	6f43      	ldr	r3, [r0, #116]	; 0x74
  4053f4:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4053f6:	400b      	ands	r3, r1
  4053f8:	4023      	ands	r3, r4
  4053fa:	6743      	str	r3, [r0, #116]	; 0x74
  4053fc:	6042      	str	r2, [r0, #4]
  4053fe:	f85d 4b04 	ldr.w	r4, [sp], #4
  405402:	4770      	bx	lr
  405404:	6f03      	ldr	r3, [r0, #112]	; 0x70
  405406:	6f01      	ldr	r1, [r0, #112]	; 0x70
  405408:	400b      	ands	r3, r1
  40540a:	ea23 0302 	bic.w	r3, r3, r2
  40540e:	6703      	str	r3, [r0, #112]	; 0x70
  405410:	6f43      	ldr	r3, [r0, #116]	; 0x74
  405412:	4313      	orrs	r3, r2
  405414:	6743      	str	r3, [r0, #116]	; 0x74
  405416:	e7ca      	b.n	4053ae <pio_set_peripheral+0x28>

00405418 <pio_set_input>:
  405418:	6441      	str	r1, [r0, #68]	; 0x44
  40541a:	f012 0f01 	tst.w	r2, #1
  40541e:	d10d      	bne.n	40543c <pio_set_input+0x24>
  405420:	6601      	str	r1, [r0, #96]	; 0x60
  405422:	f012 0f0a 	tst.w	r2, #10
  405426:	d00b      	beq.n	405440 <pio_set_input+0x28>
  405428:	6201      	str	r1, [r0, #32]
  40542a:	f012 0f02 	tst.w	r2, #2
  40542e:	d109      	bne.n	405444 <pio_set_input+0x2c>
  405430:	f012 0f08 	tst.w	r2, #8
  405434:	d008      	beq.n	405448 <pio_set_input+0x30>
  405436:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  40543a:	e005      	b.n	405448 <pio_set_input+0x30>
  40543c:	6641      	str	r1, [r0, #100]	; 0x64
  40543e:	e7f0      	b.n	405422 <pio_set_input+0xa>
  405440:	6241      	str	r1, [r0, #36]	; 0x24
  405442:	e7f2      	b.n	40542a <pio_set_input+0x12>
  405444:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  405448:	6141      	str	r1, [r0, #20]
  40544a:	6001      	str	r1, [r0, #0]
  40544c:	4770      	bx	lr

0040544e <pio_set_output>:
  40544e:	b410      	push	{r4}
  405450:	9c01      	ldr	r4, [sp, #4]
  405452:	6441      	str	r1, [r0, #68]	; 0x44
  405454:	b94c      	cbnz	r4, 40546a <pio_set_output+0x1c>
  405456:	6601      	str	r1, [r0, #96]	; 0x60
  405458:	b14b      	cbz	r3, 40546e <pio_set_output+0x20>
  40545a:	6501      	str	r1, [r0, #80]	; 0x50
  40545c:	b94a      	cbnz	r2, 405472 <pio_set_output+0x24>
  40545e:	6341      	str	r1, [r0, #52]	; 0x34
  405460:	6101      	str	r1, [r0, #16]
  405462:	6001      	str	r1, [r0, #0]
  405464:	f85d 4b04 	ldr.w	r4, [sp], #4
  405468:	4770      	bx	lr
  40546a:	6641      	str	r1, [r0, #100]	; 0x64
  40546c:	e7f4      	b.n	405458 <pio_set_output+0xa>
  40546e:	6541      	str	r1, [r0, #84]	; 0x54
  405470:	e7f4      	b.n	40545c <pio_set_output+0xe>
  405472:	6301      	str	r1, [r0, #48]	; 0x30
  405474:	e7f4      	b.n	405460 <pio_set_output+0x12>

00405476 <pio_configure_interrupt>:
  405476:	f012 0f10 	tst.w	r2, #16
  40547a:	d012      	beq.n	4054a2 <pio_configure_interrupt+0x2c>
  40547c:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
  405480:	f012 0f20 	tst.w	r2, #32
  405484:	d007      	beq.n	405496 <pio_configure_interrupt+0x20>
  405486:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
  40548a:	f012 0f40 	tst.w	r2, #64	; 0x40
  40548e:	d005      	beq.n	40549c <pio_configure_interrupt+0x26>
  405490:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  405494:	4770      	bx	lr
  405496:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  40549a:	e7f6      	b.n	40548a <pio_configure_interrupt+0x14>
  40549c:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  4054a0:	4770      	bx	lr
  4054a2:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  4054a6:	4770      	bx	lr

004054a8 <pio_enable_interrupt>:
  4054a8:	6401      	str	r1, [r0, #64]	; 0x40
  4054aa:	4770      	bx	lr

004054ac <pio_disable_interrupt>:
  4054ac:	6441      	str	r1, [r0, #68]	; 0x44
  4054ae:	4770      	bx	lr

004054b0 <pio_get_interrupt_status>:
  4054b0:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
  4054b2:	4770      	bx	lr

004054b4 <pio_get_interrupt_mask>:
  4054b4:	6c80      	ldr	r0, [r0, #72]	; 0x48
  4054b6:	4770      	bx	lr

004054b8 <pio_configure_pin>:
  4054b8:	b570      	push	{r4, r5, r6, lr}
  4054ba:	b082      	sub	sp, #8
  4054bc:	460d      	mov	r5, r1
  4054be:	4c46      	ldr	r4, [pc, #280]	; (4055d8 <pio_configure_pin+0x120>)
  4054c0:	eb04 1450 	add.w	r4, r4, r0, lsr #5
  4054c4:	0264      	lsls	r4, r4, #9
  4054c6:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4054ca:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4054ce:	d059      	beq.n	405584 <pio_configure_pin+0xcc>
  4054d0:	d80a      	bhi.n	4054e8 <pio_configure_pin+0x30>
  4054d2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4054d6:	d02f      	beq.n	405538 <pio_configure_pin+0x80>
  4054d8:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4054dc:	d03f      	beq.n	40555e <pio_configure_pin+0xa6>
  4054de:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4054e2:	d016      	beq.n	405512 <pio_configure_pin+0x5a>
  4054e4:	2000      	movs	r0, #0
  4054e6:	e012      	b.n	40550e <pio_configure_pin+0x56>
  4054e8:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4054ec:	d05d      	beq.n	4055aa <pio_configure_pin+0xf2>
  4054ee:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4054f2:	d05a      	beq.n	4055aa <pio_configure_pin+0xf2>
  4054f4:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4054f8:	d1f4      	bne.n	4054e4 <pio_configure_pin+0x2c>
  4054fa:	f000 011f 	and.w	r1, r0, #31
  4054fe:	2601      	movs	r6, #1
  405500:	462a      	mov	r2, r5
  405502:	fa06 f101 	lsl.w	r1, r6, r1
  405506:	4620      	mov	r0, r4
  405508:	4b34      	ldr	r3, [pc, #208]	; (4055dc <pio_configure_pin+0x124>)
  40550a:	4798      	blx	r3
  40550c:	4630      	mov	r0, r6
  40550e:	b002      	add	sp, #8
  405510:	bd70      	pop	{r4, r5, r6, pc}
  405512:	f000 001f 	and.w	r0, r0, #31
  405516:	2601      	movs	r6, #1
  405518:	4086      	lsls	r6, r0
  40551a:	4632      	mov	r2, r6
  40551c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  405520:	4620      	mov	r0, r4
  405522:	4b2f      	ldr	r3, [pc, #188]	; (4055e0 <pio_configure_pin+0x128>)
  405524:	4798      	blx	r3
  405526:	f015 0f01 	tst.w	r5, #1
  40552a:	d102      	bne.n	405532 <pio_configure_pin+0x7a>
  40552c:	6626      	str	r6, [r4, #96]	; 0x60
  40552e:	2001      	movs	r0, #1
  405530:	e7ed      	b.n	40550e <pio_configure_pin+0x56>
  405532:	6666      	str	r6, [r4, #100]	; 0x64
  405534:	2001      	movs	r0, #1
  405536:	e7ea      	b.n	40550e <pio_configure_pin+0x56>
  405538:	f000 001f 	and.w	r0, r0, #31
  40553c:	2601      	movs	r6, #1
  40553e:	4086      	lsls	r6, r0
  405540:	4632      	mov	r2, r6
  405542:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  405546:	4620      	mov	r0, r4
  405548:	4b25      	ldr	r3, [pc, #148]	; (4055e0 <pio_configure_pin+0x128>)
  40554a:	4798      	blx	r3
  40554c:	f015 0f01 	tst.w	r5, #1
  405550:	d102      	bne.n	405558 <pio_configure_pin+0xa0>
  405552:	6626      	str	r6, [r4, #96]	; 0x60
  405554:	2001      	movs	r0, #1
  405556:	e7da      	b.n	40550e <pio_configure_pin+0x56>
  405558:	6666      	str	r6, [r4, #100]	; 0x64
  40555a:	2001      	movs	r0, #1
  40555c:	e7d7      	b.n	40550e <pio_configure_pin+0x56>
  40555e:	f000 001f 	and.w	r0, r0, #31
  405562:	2601      	movs	r6, #1
  405564:	4086      	lsls	r6, r0
  405566:	4632      	mov	r2, r6
  405568:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  40556c:	4620      	mov	r0, r4
  40556e:	4b1c      	ldr	r3, [pc, #112]	; (4055e0 <pio_configure_pin+0x128>)
  405570:	4798      	blx	r3
  405572:	f015 0f01 	tst.w	r5, #1
  405576:	d102      	bne.n	40557e <pio_configure_pin+0xc6>
  405578:	6626      	str	r6, [r4, #96]	; 0x60
  40557a:	2001      	movs	r0, #1
  40557c:	e7c7      	b.n	40550e <pio_configure_pin+0x56>
  40557e:	6666      	str	r6, [r4, #100]	; 0x64
  405580:	2001      	movs	r0, #1
  405582:	e7c4      	b.n	40550e <pio_configure_pin+0x56>
  405584:	f000 001f 	and.w	r0, r0, #31
  405588:	2601      	movs	r6, #1
  40558a:	4086      	lsls	r6, r0
  40558c:	4632      	mov	r2, r6
  40558e:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  405592:	4620      	mov	r0, r4
  405594:	4b12      	ldr	r3, [pc, #72]	; (4055e0 <pio_configure_pin+0x128>)
  405596:	4798      	blx	r3
  405598:	f015 0f01 	tst.w	r5, #1
  40559c:	d102      	bne.n	4055a4 <pio_configure_pin+0xec>
  40559e:	6626      	str	r6, [r4, #96]	; 0x60
  4055a0:	2001      	movs	r0, #1
  4055a2:	e7b4      	b.n	40550e <pio_configure_pin+0x56>
  4055a4:	6666      	str	r6, [r4, #100]	; 0x64
  4055a6:	2001      	movs	r0, #1
  4055a8:	e7b1      	b.n	40550e <pio_configure_pin+0x56>
  4055aa:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
  4055ae:	f000 011f 	and.w	r1, r0, #31
  4055b2:	2601      	movs	r6, #1
  4055b4:	ea05 0306 	and.w	r3, r5, r6
  4055b8:	9300      	str	r3, [sp, #0]
  4055ba:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4055be:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4055c2:	bf14      	ite	ne
  4055c4:	2200      	movne	r2, #0
  4055c6:	2201      	moveq	r2, #1
  4055c8:	fa06 f101 	lsl.w	r1, r6, r1
  4055cc:	4620      	mov	r0, r4
  4055ce:	4c05      	ldr	r4, [pc, #20]	; (4055e4 <pio_configure_pin+0x12c>)
  4055d0:	47a0      	blx	r4
  4055d2:	4630      	mov	r0, r6
  4055d4:	e79b      	b.n	40550e <pio_configure_pin+0x56>
  4055d6:	bf00      	nop
  4055d8:	00200707 	.word	0x00200707
  4055dc:	00405419 	.word	0x00405419
  4055e0:	00405387 	.word	0x00405387
  4055e4:	0040544f 	.word	0x0040544f

004055e8 <pio_handler_process>:
  4055e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4055ec:	4604      	mov	r4, r0
  4055ee:	4688      	mov	r8, r1
  4055f0:	4b0e      	ldr	r3, [pc, #56]	; (40562c <pio_handler_process+0x44>)
  4055f2:	4798      	blx	r3
  4055f4:	4605      	mov	r5, r0
  4055f6:	4620      	mov	r0, r4
  4055f8:	4b0d      	ldr	r3, [pc, #52]	; (405630 <pio_handler_process+0x48>)
  4055fa:	4798      	blx	r3
  4055fc:	4005      	ands	r5, r0
  4055fe:	d013      	beq.n	405628 <pio_handler_process+0x40>
  405600:	4c0c      	ldr	r4, [pc, #48]	; (405634 <pio_handler_process+0x4c>)
  405602:	f104 0660 	add.w	r6, r4, #96	; 0x60
  405606:	e003      	b.n	405610 <pio_handler_process+0x28>
  405608:	42b4      	cmp	r4, r6
  40560a:	d00d      	beq.n	405628 <pio_handler_process+0x40>
  40560c:	3410      	adds	r4, #16
  40560e:	b15d      	cbz	r5, 405628 <pio_handler_process+0x40>
  405610:	6820      	ldr	r0, [r4, #0]
  405612:	4540      	cmp	r0, r8
  405614:	d1f8      	bne.n	405608 <pio_handler_process+0x20>
  405616:	6861      	ldr	r1, [r4, #4]
  405618:	4229      	tst	r1, r5
  40561a:	d0f5      	beq.n	405608 <pio_handler_process+0x20>
  40561c:	68e3      	ldr	r3, [r4, #12]
  40561e:	4798      	blx	r3
  405620:	6863      	ldr	r3, [r4, #4]
  405622:	ea25 0503 	bic.w	r5, r5, r3
  405626:	e7ef      	b.n	405608 <pio_handler_process+0x20>
  405628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40562c:	004054b1 	.word	0x004054b1
  405630:	004054b5 	.word	0x004054b5
  405634:	2040db8c 	.word	0x2040db8c

00405638 <pio_handler_set>:
  405638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40563a:	4c18      	ldr	r4, [pc, #96]	; (40569c <pio_handler_set+0x64>)
  40563c:	6826      	ldr	r6, [r4, #0]
  40563e:	2e06      	cmp	r6, #6
  405640:	d82a      	bhi.n	405698 <pio_handler_set+0x60>
  405642:	f04f 0c00 	mov.w	ip, #0
  405646:	4664      	mov	r4, ip
  405648:	4f15      	ldr	r7, [pc, #84]	; (4056a0 <pio_handler_set+0x68>)
  40564a:	e004      	b.n	405656 <pio_handler_set+0x1e>
  40564c:	3401      	adds	r4, #1
  40564e:	b2e4      	uxtb	r4, r4
  405650:	46a4      	mov	ip, r4
  405652:	42a6      	cmp	r6, r4
  405654:	d309      	bcc.n	40566a <pio_handler_set+0x32>
  405656:	46a6      	mov	lr, r4
  405658:	0125      	lsls	r5, r4, #4
  40565a:	597d      	ldr	r5, [r7, r5]
  40565c:	428d      	cmp	r5, r1
  40565e:	d1f5      	bne.n	40564c <pio_handler_set+0x14>
  405660:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  405664:	686d      	ldr	r5, [r5, #4]
  405666:	4295      	cmp	r5, r2
  405668:	d1f0      	bne.n	40564c <pio_handler_set+0x14>
  40566a:	4d0d      	ldr	r5, [pc, #52]	; (4056a0 <pio_handler_set+0x68>)
  40566c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  405670:	eb05 040e 	add.w	r4, r5, lr
  405674:	f845 100e 	str.w	r1, [r5, lr]
  405678:	6062      	str	r2, [r4, #4]
  40567a:	60a3      	str	r3, [r4, #8]
  40567c:	9906      	ldr	r1, [sp, #24]
  40567e:	60e1      	str	r1, [r4, #12]
  405680:	3601      	adds	r6, #1
  405682:	4566      	cmp	r6, ip
  405684:	d005      	beq.n	405692 <pio_handler_set+0x5a>
  405686:	4611      	mov	r1, r2
  405688:	461a      	mov	r2, r3
  40568a:	4b06      	ldr	r3, [pc, #24]	; (4056a4 <pio_handler_set+0x6c>)
  40568c:	4798      	blx	r3
  40568e:	2000      	movs	r0, #0
  405690:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405692:	4902      	ldr	r1, [pc, #8]	; (40569c <pio_handler_set+0x64>)
  405694:	600e      	str	r6, [r1, #0]
  405696:	e7f6      	b.n	405686 <pio_handler_set+0x4e>
  405698:	2001      	movs	r0, #1
  40569a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40569c:	2040dbfc 	.word	0x2040dbfc
  4056a0:	2040db8c 	.word	0x2040db8c
  4056a4:	00405477 	.word	0x00405477

004056a8 <PIOA_Handler>:
  4056a8:	b508      	push	{r3, lr}
  4056aa:	210a      	movs	r1, #10
  4056ac:	4801      	ldr	r0, [pc, #4]	; (4056b4 <PIOA_Handler+0xc>)
  4056ae:	4b02      	ldr	r3, [pc, #8]	; (4056b8 <PIOA_Handler+0x10>)
  4056b0:	4798      	blx	r3
  4056b2:	bd08      	pop	{r3, pc}
  4056b4:	400e0e00 	.word	0x400e0e00
  4056b8:	004055e9 	.word	0x004055e9

004056bc <PIOB_Handler>:
  4056bc:	b508      	push	{r3, lr}
  4056be:	210b      	movs	r1, #11
  4056c0:	4801      	ldr	r0, [pc, #4]	; (4056c8 <PIOB_Handler+0xc>)
  4056c2:	4b02      	ldr	r3, [pc, #8]	; (4056cc <PIOB_Handler+0x10>)
  4056c4:	4798      	blx	r3
  4056c6:	bd08      	pop	{r3, pc}
  4056c8:	400e1000 	.word	0x400e1000
  4056cc:	004055e9 	.word	0x004055e9

004056d0 <PIOC_Handler>:
  4056d0:	b508      	push	{r3, lr}
  4056d2:	210c      	movs	r1, #12
  4056d4:	4801      	ldr	r0, [pc, #4]	; (4056dc <PIOC_Handler+0xc>)
  4056d6:	4b02      	ldr	r3, [pc, #8]	; (4056e0 <PIOC_Handler+0x10>)
  4056d8:	4798      	blx	r3
  4056da:	bd08      	pop	{r3, pc}
  4056dc:	400e1200 	.word	0x400e1200
  4056e0:	004055e9 	.word	0x004055e9

004056e4 <PIOD_Handler>:
  4056e4:	b508      	push	{r3, lr}
  4056e6:	2110      	movs	r1, #16
  4056e8:	4801      	ldr	r0, [pc, #4]	; (4056f0 <PIOD_Handler+0xc>)
  4056ea:	4b02      	ldr	r3, [pc, #8]	; (4056f4 <PIOD_Handler+0x10>)
  4056ec:	4798      	blx	r3
  4056ee:	bd08      	pop	{r3, pc}
  4056f0:	400e1400 	.word	0x400e1400
  4056f4:	004055e9 	.word	0x004055e9

004056f8 <PIOE_Handler>:
  4056f8:	b508      	push	{r3, lr}
  4056fa:	2111      	movs	r1, #17
  4056fc:	4801      	ldr	r0, [pc, #4]	; (405704 <PIOE_Handler+0xc>)
  4056fe:	4b02      	ldr	r3, [pc, #8]	; (405708 <PIOE_Handler+0x10>)
  405700:	4798      	blx	r3
  405702:	bd08      	pop	{r3, pc}
  405704:	400e1600 	.word	0x400e1600
  405708:	004055e9 	.word	0x004055e9

0040570c <pio_handler_set_priority>:
  40570c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40570e:	4606      	mov	r6, r0
  405710:	460d      	mov	r5, r1
  405712:	4614      	mov	r4, r2
  405714:	4b17      	ldr	r3, [pc, #92]	; (405774 <pio_handler_set_priority+0x68>)
  405716:	4798      	blx	r3
  405718:	4607      	mov	r7, r0
  40571a:	f04f 31ff 	mov.w	r1, #4294967295
  40571e:	4630      	mov	r0, r6
  405720:	4b15      	ldr	r3, [pc, #84]	; (405778 <pio_handler_set_priority+0x6c>)
  405722:	4798      	blx	r3
  405724:	4630      	mov	r0, r6
  405726:	4b15      	ldr	r3, [pc, #84]	; (40577c <pio_handler_set_priority+0x70>)
  405728:	4798      	blx	r3
  40572a:	fa5f fe85 	uxtb.w	lr, r5
  40572e:	f00e 031f 	and.w	r3, lr, #31
  405732:	2201      	movs	r2, #1
  405734:	fa02 f303 	lsl.w	r3, r2, r3
  405738:	0968      	lsrs	r0, r5, #5
  40573a:	4911      	ldr	r1, [pc, #68]	; (405780 <pio_handler_set_priority+0x74>)
  40573c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
  405740:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
  405744:	f8c2 3180 	str.w	r3, [r2, #384]	; 0x180
  405748:	2d00      	cmp	r5, #0
  40574a:	db0a      	blt.n	405762 <pio_handler_set_priority+0x56>
  40574c:	0164      	lsls	r4, r4, #5
  40574e:	b2e4      	uxtb	r4, r4
  405750:	4a0c      	ldr	r2, [pc, #48]	; (405784 <pio_handler_set_priority+0x78>)
  405752:	5554      	strb	r4, [r2, r5]
  405754:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
  405758:	4639      	mov	r1, r7
  40575a:	4630      	mov	r0, r6
  40575c:	4b0a      	ldr	r3, [pc, #40]	; (405788 <pio_handler_set_priority+0x7c>)
  40575e:	4798      	blx	r3
  405760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405762:	f00e 0e0f 	and.w	lr, lr, #15
  405766:	0164      	lsls	r4, r4, #5
  405768:	b2e4      	uxtb	r4, r4
  40576a:	4a08      	ldr	r2, [pc, #32]	; (40578c <pio_handler_set_priority+0x80>)
  40576c:	f802 400e 	strb.w	r4, [r2, lr]
  405770:	e7f0      	b.n	405754 <pio_handler_set_priority+0x48>
  405772:	bf00      	nop
  405774:	004054b5 	.word	0x004054b5
  405778:	004054ad 	.word	0x004054ad
  40577c:	004054b1 	.word	0x004054b1
  405780:	e000e100 	.word	0xe000e100
  405784:	e000e400 	.word	0xe000e400
  405788:	004054a9 	.word	0x004054a9
  40578c:	e000ed14 	.word	0xe000ed14

00405790 <pmc_mck_set_division>:
  405790:	2803      	cmp	r0, #3
  405792:	d011      	beq.n	4057b8 <pmc_mck_set_division+0x28>
  405794:	2804      	cmp	r0, #4
  405796:	d012      	beq.n	4057be <pmc_mck_set_division+0x2e>
  405798:	2802      	cmp	r0, #2
  40579a:	bf0c      	ite	eq
  40579c:	f44f 7180 	moveq.w	r1, #256	; 0x100
  4057a0:	2100      	movne	r1, #0
  4057a2:	4a08      	ldr	r2, [pc, #32]	; (4057c4 <pmc_mck_set_division+0x34>)
  4057a4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4057aa:	430b      	orrs	r3, r1
  4057ac:	6313      	str	r3, [r2, #48]	; 0x30
  4057ae:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4057b0:	f013 0f08 	tst.w	r3, #8
  4057b4:	d0fb      	beq.n	4057ae <pmc_mck_set_division+0x1e>
  4057b6:	4770      	bx	lr
  4057b8:	f44f 7140 	mov.w	r1, #768	; 0x300
  4057bc:	e7f1      	b.n	4057a2 <pmc_mck_set_division+0x12>
  4057be:	f44f 7100 	mov.w	r1, #512	; 0x200
  4057c2:	e7ee      	b.n	4057a2 <pmc_mck_set_division+0x12>
  4057c4:	400e0600 	.word	0x400e0600

004057c8 <pmc_switch_mck_to_pllack>:
  4057c8:	4a17      	ldr	r2, [pc, #92]	; (405828 <pmc_switch_mck_to_pllack+0x60>)
  4057ca:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4057d0:	4318      	orrs	r0, r3
  4057d2:	6310      	str	r0, [r2, #48]	; 0x30
  4057d4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4057d6:	f013 0f08 	tst.w	r3, #8
  4057da:	d10a      	bne.n	4057f2 <pmc_switch_mck_to_pllack+0x2a>
  4057dc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4057e0:	4911      	ldr	r1, [pc, #68]	; (405828 <pmc_switch_mck_to_pllack+0x60>)
  4057e2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4057e4:	f012 0f08 	tst.w	r2, #8
  4057e8:	d103      	bne.n	4057f2 <pmc_switch_mck_to_pllack+0x2a>
  4057ea:	3b01      	subs	r3, #1
  4057ec:	d1f9      	bne.n	4057e2 <pmc_switch_mck_to_pllack+0x1a>
  4057ee:	2001      	movs	r0, #1
  4057f0:	4770      	bx	lr
  4057f2:	4a0d      	ldr	r2, [pc, #52]	; (405828 <pmc_switch_mck_to_pllack+0x60>)
  4057f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4057f6:	f023 0303 	bic.w	r3, r3, #3
  4057fa:	f043 0302 	orr.w	r3, r3, #2
  4057fe:	6313      	str	r3, [r2, #48]	; 0x30
  405800:	6e93      	ldr	r3, [r2, #104]	; 0x68
  405802:	f013 0f08 	tst.w	r3, #8
  405806:	d10a      	bne.n	40581e <pmc_switch_mck_to_pllack+0x56>
  405808:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40580c:	4906      	ldr	r1, [pc, #24]	; (405828 <pmc_switch_mck_to_pllack+0x60>)
  40580e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  405810:	f012 0f08 	tst.w	r2, #8
  405814:	d105      	bne.n	405822 <pmc_switch_mck_to_pllack+0x5a>
  405816:	3b01      	subs	r3, #1
  405818:	d1f9      	bne.n	40580e <pmc_switch_mck_to_pllack+0x46>
  40581a:	2001      	movs	r0, #1
  40581c:	4770      	bx	lr
  40581e:	2000      	movs	r0, #0
  405820:	4770      	bx	lr
  405822:	2000      	movs	r0, #0
  405824:	4770      	bx	lr
  405826:	bf00      	nop
  405828:	400e0600 	.word	0x400e0600

0040582c <pmc_switch_mainck_to_xtal>:
  40582c:	b9a0      	cbnz	r0, 405858 <pmc_switch_mainck_to_xtal+0x2c>
  40582e:	480e      	ldr	r0, [pc, #56]	; (405868 <pmc_switch_mainck_to_xtal+0x3c>)
  405830:	6a03      	ldr	r3, [r0, #32]
  405832:	0209      	lsls	r1, r1, #8
  405834:	b289      	uxth	r1, r1
  405836:	4a0d      	ldr	r2, [pc, #52]	; (40586c <pmc_switch_mainck_to_xtal+0x40>)
  405838:	401a      	ands	r2, r3
  40583a:	4b0d      	ldr	r3, [pc, #52]	; (405870 <pmc_switch_mainck_to_xtal+0x44>)
  40583c:	4313      	orrs	r3, r2
  40583e:	4319      	orrs	r1, r3
  405840:	6201      	str	r1, [r0, #32]
  405842:	4602      	mov	r2, r0
  405844:	6e93      	ldr	r3, [r2, #104]	; 0x68
  405846:	f013 0f01 	tst.w	r3, #1
  40584a:	d0fb      	beq.n	405844 <pmc_switch_mainck_to_xtal+0x18>
  40584c:	4a06      	ldr	r2, [pc, #24]	; (405868 <pmc_switch_mainck_to_xtal+0x3c>)
  40584e:	6a11      	ldr	r1, [r2, #32]
  405850:	4b08      	ldr	r3, [pc, #32]	; (405874 <pmc_switch_mainck_to_xtal+0x48>)
  405852:	430b      	orrs	r3, r1
  405854:	6213      	str	r3, [r2, #32]
  405856:	4770      	bx	lr
  405858:	4903      	ldr	r1, [pc, #12]	; (405868 <pmc_switch_mainck_to_xtal+0x3c>)
  40585a:	6a0b      	ldr	r3, [r1, #32]
  40585c:	4a06      	ldr	r2, [pc, #24]	; (405878 <pmc_switch_mainck_to_xtal+0x4c>)
  40585e:	401a      	ands	r2, r3
  405860:	4b06      	ldr	r3, [pc, #24]	; (40587c <pmc_switch_mainck_to_xtal+0x50>)
  405862:	4313      	orrs	r3, r2
  405864:	620b      	str	r3, [r1, #32]
  405866:	4770      	bx	lr
  405868:	400e0600 	.word	0x400e0600
  40586c:	ffc8fffc 	.word	0xffc8fffc
  405870:	00370001 	.word	0x00370001
  405874:	01370000 	.word	0x01370000
  405878:	fec8fffc 	.word	0xfec8fffc
  40587c:	01370002 	.word	0x01370002

00405880 <pmc_osc_is_ready_mainck>:
  405880:	4b02      	ldr	r3, [pc, #8]	; (40588c <pmc_osc_is_ready_mainck+0xc>)
  405882:	6e98      	ldr	r0, [r3, #104]	; 0x68
  405884:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  405888:	4770      	bx	lr
  40588a:	bf00      	nop
  40588c:	400e0600 	.word	0x400e0600

00405890 <pmc_disable_pllack>:
  405890:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  405894:	4b01      	ldr	r3, [pc, #4]	; (40589c <pmc_disable_pllack+0xc>)
  405896:	629a      	str	r2, [r3, #40]	; 0x28
  405898:	4770      	bx	lr
  40589a:	bf00      	nop
  40589c:	400e0600 	.word	0x400e0600

004058a0 <pmc_is_locked_pllack>:
  4058a0:	4b02      	ldr	r3, [pc, #8]	; (4058ac <pmc_is_locked_pllack+0xc>)
  4058a2:	6e98      	ldr	r0, [r3, #104]	; 0x68
  4058a4:	f000 0002 	and.w	r0, r0, #2
  4058a8:	4770      	bx	lr
  4058aa:	bf00      	nop
  4058ac:	400e0600 	.word	0x400e0600

004058b0 <pmc_enable_periph_clk>:
  4058b0:	283f      	cmp	r0, #63	; 0x3f
  4058b2:	d81e      	bhi.n	4058f2 <pmc_enable_periph_clk+0x42>
  4058b4:	281f      	cmp	r0, #31
  4058b6:	d80c      	bhi.n	4058d2 <pmc_enable_periph_clk+0x22>
  4058b8:	4b11      	ldr	r3, [pc, #68]	; (405900 <pmc_enable_periph_clk+0x50>)
  4058ba:	699a      	ldr	r2, [r3, #24]
  4058bc:	2301      	movs	r3, #1
  4058be:	4083      	lsls	r3, r0
  4058c0:	4393      	bics	r3, r2
  4058c2:	d018      	beq.n	4058f6 <pmc_enable_periph_clk+0x46>
  4058c4:	2301      	movs	r3, #1
  4058c6:	fa03 f000 	lsl.w	r0, r3, r0
  4058ca:	4b0d      	ldr	r3, [pc, #52]	; (405900 <pmc_enable_periph_clk+0x50>)
  4058cc:	6118      	str	r0, [r3, #16]
  4058ce:	2000      	movs	r0, #0
  4058d0:	4770      	bx	lr
  4058d2:	3820      	subs	r0, #32
  4058d4:	4b0a      	ldr	r3, [pc, #40]	; (405900 <pmc_enable_periph_clk+0x50>)
  4058d6:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4058da:	2301      	movs	r3, #1
  4058dc:	4083      	lsls	r3, r0
  4058de:	4393      	bics	r3, r2
  4058e0:	d00b      	beq.n	4058fa <pmc_enable_periph_clk+0x4a>
  4058e2:	2301      	movs	r3, #1
  4058e4:	fa03 f000 	lsl.w	r0, r3, r0
  4058e8:	4b05      	ldr	r3, [pc, #20]	; (405900 <pmc_enable_periph_clk+0x50>)
  4058ea:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
  4058ee:	2000      	movs	r0, #0
  4058f0:	4770      	bx	lr
  4058f2:	2001      	movs	r0, #1
  4058f4:	4770      	bx	lr
  4058f6:	2000      	movs	r0, #0
  4058f8:	4770      	bx	lr
  4058fa:	2000      	movs	r0, #0
  4058fc:	4770      	bx	lr
  4058fe:	bf00      	nop
  405900:	400e0600 	.word	0x400e0600

00405904 <spi_enable_clock>:
  405904:	b508      	push	{r3, lr}
  405906:	4b07      	ldr	r3, [pc, #28]	; (405924 <spi_enable_clock+0x20>)
  405908:	4298      	cmp	r0, r3
  40590a:	d003      	beq.n	405914 <spi_enable_clock+0x10>
  40590c:	4b06      	ldr	r3, [pc, #24]	; (405928 <spi_enable_clock+0x24>)
  40590e:	4298      	cmp	r0, r3
  405910:	d004      	beq.n	40591c <spi_enable_clock+0x18>
  405912:	bd08      	pop	{r3, pc}
  405914:	2015      	movs	r0, #21
  405916:	4b05      	ldr	r3, [pc, #20]	; (40592c <spi_enable_clock+0x28>)
  405918:	4798      	blx	r3
  40591a:	bd08      	pop	{r3, pc}
  40591c:	202a      	movs	r0, #42	; 0x2a
  40591e:	4b03      	ldr	r3, [pc, #12]	; (40592c <spi_enable_clock+0x28>)
  405920:	4798      	blx	r3
  405922:	e7f6      	b.n	405912 <spi_enable_clock+0xe>
  405924:	40008000 	.word	0x40008000
  405928:	40058000 	.word	0x40058000
  40592c:	004058b1 	.word	0x004058b1

00405930 <spi_set_peripheral_chip_select_value>:
  405930:	6843      	ldr	r3, [r0, #4]
  405932:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  405936:	6043      	str	r3, [r0, #4]
  405938:	6843      	ldr	r3, [r0, #4]
  40593a:	0409      	lsls	r1, r1, #16
  40593c:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  405940:	4319      	orrs	r1, r3
  405942:	6041      	str	r1, [r0, #4]
  405944:	4770      	bx	lr

00405946 <spi_read>:
  405946:	b410      	push	{r4}
  405948:	f643 2399 	movw	r3, #15001	; 0x3a99
  40594c:	6904      	ldr	r4, [r0, #16]
  40594e:	f014 0f01 	tst.w	r4, #1
  405952:	d103      	bne.n	40595c <spi_read+0x16>
  405954:	3b01      	subs	r3, #1
  405956:	d1f9      	bne.n	40594c <spi_read+0x6>
  405958:	2001      	movs	r0, #1
  40595a:	e009      	b.n	405970 <spi_read+0x2a>
  40595c:	6883      	ldr	r3, [r0, #8]
  40595e:	6840      	ldr	r0, [r0, #4]
  405960:	f010 0f02 	tst.w	r0, #2
  405964:	d002      	beq.n	40596c <spi_read+0x26>
  405966:	f3c3 4003 	ubfx	r0, r3, #16, #4
  40596a:	7010      	strb	r0, [r2, #0]
  40596c:	800b      	strh	r3, [r1, #0]
  40596e:	2000      	movs	r0, #0
  405970:	f85d 4b04 	ldr.w	r4, [sp], #4
  405974:	4770      	bx	lr

00405976 <spi_write>:
  405976:	b430      	push	{r4, r5}
  405978:	f643 2499 	movw	r4, #15001	; 0x3a99
  40597c:	6905      	ldr	r5, [r0, #16]
  40597e:	f015 0f02 	tst.w	r5, #2
  405982:	d103      	bne.n	40598c <spi_write+0x16>
  405984:	3c01      	subs	r4, #1
  405986:	d1f9      	bne.n	40597c <spi_write+0x6>
  405988:	2001      	movs	r0, #1
  40598a:	e00c      	b.n	4059a6 <spi_write+0x30>
  40598c:	6844      	ldr	r4, [r0, #4]
  40598e:	f014 0f02 	tst.w	r4, #2
  405992:	d006      	beq.n	4059a2 <spi_write+0x2c>
  405994:	0412      	lsls	r2, r2, #16
  405996:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40599a:	4311      	orrs	r1, r2
  40599c:	b10b      	cbz	r3, 4059a2 <spi_write+0x2c>
  40599e:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
  4059a2:	60c1      	str	r1, [r0, #12]
  4059a4:	2000      	movs	r0, #0
  4059a6:	bc30      	pop	{r4, r5}
  4059a8:	4770      	bx	lr

004059aa <spi_set_clock_polarity>:
  4059aa:	b932      	cbnz	r2, 4059ba <spi_set_clock_polarity+0x10>
  4059ac:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  4059b0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4059b2:	f023 0301 	bic.w	r3, r3, #1
  4059b6:	6303      	str	r3, [r0, #48]	; 0x30
  4059b8:	4770      	bx	lr
  4059ba:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  4059be:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4059c0:	f043 0301 	orr.w	r3, r3, #1
  4059c4:	6303      	str	r3, [r0, #48]	; 0x30
  4059c6:	4770      	bx	lr

004059c8 <spi_set_clock_phase>:
  4059c8:	b932      	cbnz	r2, 4059d8 <spi_set_clock_phase+0x10>
  4059ca:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  4059ce:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4059d0:	f023 0302 	bic.w	r3, r3, #2
  4059d4:	6303      	str	r3, [r0, #48]	; 0x30
  4059d6:	4770      	bx	lr
  4059d8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
  4059dc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4059de:	f043 0302 	orr.w	r3, r3, #2
  4059e2:	6303      	str	r3, [r0, #48]	; 0x30
  4059e4:	4770      	bx	lr

004059e6 <spi_set_bits_per_transfer>:
  4059e6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  4059ea:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4059ec:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4059f0:	630b      	str	r3, [r1, #48]	; 0x30
  4059f2:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4059f4:	431a      	orrs	r2, r3
  4059f6:	630a      	str	r2, [r1, #48]	; 0x30
  4059f8:	4770      	bx	lr

004059fa <spi_calc_baudrate_div>:
  4059fa:	1e43      	subs	r3, r0, #1
  4059fc:	4419      	add	r1, r3
  4059fe:	fbb1 f0f0 	udiv	r0, r1, r0
  405a02:	1e43      	subs	r3, r0, #1
  405a04:	2bfe      	cmp	r3, #254	; 0xfe
  405a06:	bf94      	ite	ls
  405a08:	b200      	sxthls	r0, r0
  405a0a:	f04f 30ff 	movhi.w	r0, #4294967295
  405a0e:	4770      	bx	lr

00405a10 <spi_set_baudrate_div>:
  405a10:	b17a      	cbz	r2, 405a32 <spi_set_baudrate_div+0x22>
  405a12:	b410      	push	{r4}
  405a14:	4614      	mov	r4, r2
  405a16:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  405a1a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  405a1c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  405a20:	630b      	str	r3, [r1, #48]	; 0x30
  405a22:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  405a24:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  405a28:	630a      	str	r2, [r1, #48]	; 0x30
  405a2a:	2000      	movs	r0, #0
  405a2c:	f85d 4b04 	ldr.w	r4, [sp], #4
  405a30:	4770      	bx	lr
  405a32:	f04f 30ff 	mov.w	r0, #4294967295
  405a36:	4770      	bx	lr

00405a38 <spi_set_transfer_delay>:
  405a38:	b410      	push	{r4}
  405a3a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  405a3e:	6b08      	ldr	r0, [r1, #48]	; 0x30
  405a40:	b280      	uxth	r0, r0
  405a42:	6308      	str	r0, [r1, #48]	; 0x30
  405a44:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  405a46:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  405a4a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405a4e:	630b      	str	r3, [r1, #48]	; 0x30
  405a50:	f85d 4b04 	ldr.w	r4, [sp], #4
  405a54:	4770      	bx	lr

00405a56 <uart_write>:
  405a56:	6943      	ldr	r3, [r0, #20]
  405a58:	f013 0f02 	tst.w	r3, #2
  405a5c:	d002      	beq.n	405a64 <uart_write+0xe>
  405a5e:	61c1      	str	r1, [r0, #28]
  405a60:	2000      	movs	r0, #0
  405a62:	4770      	bx	lr
  405a64:	2001      	movs	r0, #1
  405a66:	4770      	bx	lr

00405a68 <uart_read>:
  405a68:	6943      	ldr	r3, [r0, #20]
  405a6a:	f013 0f01 	tst.w	r3, #1
  405a6e:	d003      	beq.n	405a78 <uart_read+0x10>
  405a70:	6983      	ldr	r3, [r0, #24]
  405a72:	700b      	strb	r3, [r1, #0]
  405a74:	2000      	movs	r0, #0
  405a76:	4770      	bx	lr
  405a78:	2001      	movs	r0, #1
  405a7a:	4770      	bx	lr

00405a7c <usart_set_async_baudrate>:
  405a7c:	b410      	push	{r4}
  405a7e:	010b      	lsls	r3, r1, #4
  405a80:	4293      	cmp	r3, r2
  405a82:	d914      	bls.n	405aae <usart_set_async_baudrate+0x32>
  405a84:	00c9      	lsls	r1, r1, #3
  405a86:	084b      	lsrs	r3, r1, #1
  405a88:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  405a8c:	fbb2 f2f1 	udiv	r2, r2, r1
  405a90:	08d3      	lsrs	r3, r2, #3
  405a92:	1e5c      	subs	r4, r3, #1
  405a94:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  405a98:	428c      	cmp	r4, r1
  405a9a:	d901      	bls.n	405aa0 <usart_set_async_baudrate+0x24>
  405a9c:	2001      	movs	r0, #1
  405a9e:	e017      	b.n	405ad0 <usart_set_async_baudrate+0x54>
  405aa0:	6841      	ldr	r1, [r0, #4]
  405aa2:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  405aa6:	6041      	str	r1, [r0, #4]
  405aa8:	e00c      	b.n	405ac4 <usart_set_async_baudrate+0x48>
  405aaa:	2001      	movs	r0, #1
  405aac:	e010      	b.n	405ad0 <usart_set_async_baudrate+0x54>
  405aae:	0859      	lsrs	r1, r3, #1
  405ab0:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  405ab4:	fbb2 f2f3 	udiv	r2, r2, r3
  405ab8:	08d3      	lsrs	r3, r2, #3
  405aba:	1e5c      	subs	r4, r3, #1
  405abc:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  405ac0:	428c      	cmp	r4, r1
  405ac2:	d8f2      	bhi.n	405aaa <usart_set_async_baudrate+0x2e>
  405ac4:	0412      	lsls	r2, r2, #16
  405ac6:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  405aca:	431a      	orrs	r2, r3
  405acc:	6202      	str	r2, [r0, #32]
  405ace:	2000      	movs	r0, #0
  405ad0:	f85d 4b04 	ldr.w	r4, [sp], #4
  405ad4:	4770      	bx	lr
	...

00405ad8 <usart_reset>:
  405ad8:	4b08      	ldr	r3, [pc, #32]	; (405afc <usart_reset+0x24>)
  405ada:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
  405ade:	2300      	movs	r3, #0
  405ae0:	6043      	str	r3, [r0, #4]
  405ae2:	6243      	str	r3, [r0, #36]	; 0x24
  405ae4:	6283      	str	r3, [r0, #40]	; 0x28
  405ae6:	2388      	movs	r3, #136	; 0x88
  405ae8:	6003      	str	r3, [r0, #0]
  405aea:	2324      	movs	r3, #36	; 0x24
  405aec:	6003      	str	r3, [r0, #0]
  405aee:	f44f 7380 	mov.w	r3, #256	; 0x100
  405af2:	6003      	str	r3, [r0, #0]
  405af4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  405af8:	6003      	str	r3, [r0, #0]
  405afa:	4770      	bx	lr
  405afc:	55534100 	.word	0x55534100

00405b00 <usart_init_rs232>:
  405b00:	b570      	push	{r4, r5, r6, lr}
  405b02:	4605      	mov	r5, r0
  405b04:	460c      	mov	r4, r1
  405b06:	4616      	mov	r6, r2
  405b08:	4b0f      	ldr	r3, [pc, #60]	; (405b48 <usart_init_rs232+0x48>)
  405b0a:	4798      	blx	r3
  405b0c:	2200      	movs	r2, #0
  405b0e:	4b0f      	ldr	r3, [pc, #60]	; (405b4c <usart_init_rs232+0x4c>)
  405b10:	601a      	str	r2, [r3, #0]
  405b12:	b1a4      	cbz	r4, 405b3e <usart_init_rs232+0x3e>
  405b14:	4632      	mov	r2, r6
  405b16:	6821      	ldr	r1, [r4, #0]
  405b18:	4628      	mov	r0, r5
  405b1a:	4b0d      	ldr	r3, [pc, #52]	; (405b50 <usart_init_rs232+0x50>)
  405b1c:	4798      	blx	r3
  405b1e:	4602      	mov	r2, r0
  405b20:	b978      	cbnz	r0, 405b42 <usart_init_rs232+0x42>
  405b22:	6863      	ldr	r3, [r4, #4]
  405b24:	68a1      	ldr	r1, [r4, #8]
  405b26:	430b      	orrs	r3, r1
  405b28:	6921      	ldr	r1, [r4, #16]
  405b2a:	430b      	orrs	r3, r1
  405b2c:	68e1      	ldr	r1, [r4, #12]
  405b2e:	430b      	orrs	r3, r1
  405b30:	4906      	ldr	r1, [pc, #24]	; (405b4c <usart_init_rs232+0x4c>)
  405b32:	600b      	str	r3, [r1, #0]
  405b34:	6869      	ldr	r1, [r5, #4]
  405b36:	430b      	orrs	r3, r1
  405b38:	606b      	str	r3, [r5, #4]
  405b3a:	4610      	mov	r0, r2
  405b3c:	bd70      	pop	{r4, r5, r6, pc}
  405b3e:	2201      	movs	r2, #1
  405b40:	e7fb      	b.n	405b3a <usart_init_rs232+0x3a>
  405b42:	2201      	movs	r2, #1
  405b44:	e7f9      	b.n	405b3a <usart_init_rs232+0x3a>
  405b46:	bf00      	nop
  405b48:	00405ad9 	.word	0x00405ad9
  405b4c:	2040dc00 	.word	0x2040dc00
  405b50:	00405a7d 	.word	0x00405a7d

00405b54 <usart_enable_tx>:
  405b54:	2340      	movs	r3, #64	; 0x40
  405b56:	6003      	str	r3, [r0, #0]
  405b58:	4770      	bx	lr

00405b5a <usart_enable_rx>:
  405b5a:	2310      	movs	r3, #16
  405b5c:	6003      	str	r3, [r0, #0]
  405b5e:	4770      	bx	lr

00405b60 <usart_write>:
  405b60:	6943      	ldr	r3, [r0, #20]
  405b62:	f013 0f02 	tst.w	r3, #2
  405b66:	d004      	beq.n	405b72 <usart_write+0x12>
  405b68:	f3c1 0108 	ubfx	r1, r1, #0, #9
  405b6c:	61c1      	str	r1, [r0, #28]
  405b6e:	2000      	movs	r0, #0
  405b70:	4770      	bx	lr
  405b72:	2001      	movs	r0, #1
  405b74:	4770      	bx	lr

00405b76 <usart_read>:
  405b76:	6943      	ldr	r3, [r0, #20]
  405b78:	f013 0f01 	tst.w	r3, #1
  405b7c:	d005      	beq.n	405b8a <usart_read+0x14>
  405b7e:	6983      	ldr	r3, [r0, #24]
  405b80:	f3c3 0308 	ubfx	r3, r3, #0, #9
  405b84:	600b      	str	r3, [r1, #0]
  405b86:	2000      	movs	r0, #0
  405b88:	4770      	bx	lr
  405b8a:	2001      	movs	r0, #1
  405b8c:	4770      	bx	lr

00405b8e <Dummy_Handler>:
  405b8e:	e7fe      	b.n	405b8e <Dummy_Handler>

00405b90 <Reset_Handler>:
  405b90:	b500      	push	{lr}
  405b92:	b083      	sub	sp, #12
  405b94:	4b25      	ldr	r3, [pc, #148]	; (405c2c <Reset_Handler+0x9c>)
  405b96:	4a26      	ldr	r2, [pc, #152]	; (405c30 <Reset_Handler+0xa0>)
  405b98:	429a      	cmp	r2, r3
  405b9a:	d010      	beq.n	405bbe <Reset_Handler+0x2e>
  405b9c:	4b25      	ldr	r3, [pc, #148]	; (405c34 <Reset_Handler+0xa4>)
  405b9e:	4a23      	ldr	r2, [pc, #140]	; (405c2c <Reset_Handler+0x9c>)
  405ba0:	429a      	cmp	r2, r3
  405ba2:	d20c      	bcs.n	405bbe <Reset_Handler+0x2e>
  405ba4:	3b01      	subs	r3, #1
  405ba6:	1a9b      	subs	r3, r3, r2
  405ba8:	f023 0303 	bic.w	r3, r3, #3
  405bac:	3304      	adds	r3, #4
  405bae:	4413      	add	r3, r2
  405bb0:	491f      	ldr	r1, [pc, #124]	; (405c30 <Reset_Handler+0xa0>)
  405bb2:	f851 0b04 	ldr.w	r0, [r1], #4
  405bb6:	f842 0b04 	str.w	r0, [r2], #4
  405bba:	429a      	cmp	r2, r3
  405bbc:	d1f9      	bne.n	405bb2 <Reset_Handler+0x22>
  405bbe:	4b1e      	ldr	r3, [pc, #120]	; (405c38 <Reset_Handler+0xa8>)
  405bc0:	4a1e      	ldr	r2, [pc, #120]	; (405c3c <Reset_Handler+0xac>)
  405bc2:	429a      	cmp	r2, r3
  405bc4:	d20a      	bcs.n	405bdc <Reset_Handler+0x4c>
  405bc6:	3b01      	subs	r3, #1
  405bc8:	1a9b      	subs	r3, r3, r2
  405bca:	f023 0303 	bic.w	r3, r3, #3
  405bce:	3304      	adds	r3, #4
  405bd0:	4413      	add	r3, r2
  405bd2:	2100      	movs	r1, #0
  405bd4:	f842 1b04 	str.w	r1, [r2], #4
  405bd8:	4293      	cmp	r3, r2
  405bda:	d1fb      	bne.n	405bd4 <Reset_Handler+0x44>
  405bdc:	4a18      	ldr	r2, [pc, #96]	; (405c40 <Reset_Handler+0xb0>)
  405bde:	4b19      	ldr	r3, [pc, #100]	; (405c44 <Reset_Handler+0xb4>)
  405be0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  405be4:	6093      	str	r3, [r2, #8]
  405be6:	f3ef 8310 	mrs	r3, PRIMASK
  405bea:	fab3 f383 	clz	r3, r3
  405bee:	095b      	lsrs	r3, r3, #5
  405bf0:	9301      	str	r3, [sp, #4]
  405bf2:	b672      	cpsid	i
  405bf4:	f3bf 8f5f 	dmb	sy
  405bf8:	2200      	movs	r2, #0
  405bfa:	4b13      	ldr	r3, [pc, #76]	; (405c48 <Reset_Handler+0xb8>)
  405bfc:	701a      	strb	r2, [r3, #0]
  405bfe:	9901      	ldr	r1, [sp, #4]
  405c00:	4a12      	ldr	r2, [pc, #72]	; (405c4c <Reset_Handler+0xbc>)
  405c02:	6813      	ldr	r3, [r2, #0]
  405c04:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  405c08:	6013      	str	r3, [r2, #0]
  405c0a:	f3bf 8f4f 	dsb	sy
  405c0e:	f3bf 8f6f 	isb	sy
  405c12:	b129      	cbz	r1, 405c20 <Reset_Handler+0x90>
  405c14:	2201      	movs	r2, #1
  405c16:	4b0c      	ldr	r3, [pc, #48]	; (405c48 <Reset_Handler+0xb8>)
  405c18:	701a      	strb	r2, [r3, #0]
  405c1a:	f3bf 8f5f 	dmb	sy
  405c1e:	b662      	cpsie	i
  405c20:	4b0b      	ldr	r3, [pc, #44]	; (405c50 <Reset_Handler+0xc0>)
  405c22:	4798      	blx	r3
  405c24:	4b0b      	ldr	r3, [pc, #44]	; (405c54 <Reset_Handler+0xc4>)
  405c26:	4798      	blx	r3
  405c28:	e7fe      	b.n	405c28 <Reset_Handler+0x98>
  405c2a:	bf00      	nop
  405c2c:	20400000 	.word	0x20400000
  405c30:	0040df9c 	.word	0x0040df9c
  405c34:	204009f8 	.word	0x204009f8
  405c38:	2040f4f8 	.word	0x2040f4f8
  405c3c:	204009f8 	.word	0x204009f8
  405c40:	e000ed00 	.word	0xe000ed00
  405c44:	00400000 	.word	0x00400000
  405c48:	20400018 	.word	0x20400018
  405c4c:	e000ed88 	.word	0xe000ed88
  405c50:	00406699 	.word	0x00406699
  405c54:	00406521 	.word	0x00406521

00405c58 <SystemCoreClockUpdate>:
  405c58:	4b3b      	ldr	r3, [pc, #236]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405c5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405c5c:	f003 0303 	and.w	r3, r3, #3
  405c60:	2b01      	cmp	r3, #1
  405c62:	d01d      	beq.n	405ca0 <SystemCoreClockUpdate+0x48>
  405c64:	b183      	cbz	r3, 405c88 <SystemCoreClockUpdate+0x30>
  405c66:	2b02      	cmp	r3, #2
  405c68:	d036      	beq.n	405cd8 <SystemCoreClockUpdate+0x80>
  405c6a:	4b37      	ldr	r3, [pc, #220]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405c6e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  405c72:	2b70      	cmp	r3, #112	; 0x70
  405c74:	d05f      	beq.n	405d36 <SystemCoreClockUpdate+0xde>
  405c76:	4b34      	ldr	r3, [pc, #208]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405c78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  405c7a:	4934      	ldr	r1, [pc, #208]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405c7c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  405c80:	680b      	ldr	r3, [r1, #0]
  405c82:	40d3      	lsrs	r3, r2
  405c84:	600b      	str	r3, [r1, #0]
  405c86:	4770      	bx	lr
  405c88:	4b31      	ldr	r3, [pc, #196]	; (405d50 <SystemCoreClockUpdate+0xf8>)
  405c8a:	695b      	ldr	r3, [r3, #20]
  405c8c:	f013 0f80 	tst.w	r3, #128	; 0x80
  405c90:	bf14      	ite	ne
  405c92:	f44f 4200 	movne.w	r2, #32768	; 0x8000
  405c96:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  405c9a:	4b2c      	ldr	r3, [pc, #176]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405c9c:	601a      	str	r2, [r3, #0]
  405c9e:	e7e4      	b.n	405c6a <SystemCoreClockUpdate+0x12>
  405ca0:	4b29      	ldr	r3, [pc, #164]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405ca2:	6a1b      	ldr	r3, [r3, #32]
  405ca4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  405ca8:	d003      	beq.n	405cb2 <SystemCoreClockUpdate+0x5a>
  405caa:	4a2a      	ldr	r2, [pc, #168]	; (405d54 <SystemCoreClockUpdate+0xfc>)
  405cac:	4b27      	ldr	r3, [pc, #156]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405cae:	601a      	str	r2, [r3, #0]
  405cb0:	e7db      	b.n	405c6a <SystemCoreClockUpdate+0x12>
  405cb2:	4a29      	ldr	r2, [pc, #164]	; (405d58 <SystemCoreClockUpdate+0x100>)
  405cb4:	4b25      	ldr	r3, [pc, #148]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405cb6:	601a      	str	r2, [r3, #0]
  405cb8:	4b23      	ldr	r3, [pc, #140]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405cba:	6a1b      	ldr	r3, [r3, #32]
  405cbc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  405cc0:	2b10      	cmp	r3, #16
  405cc2:	d005      	beq.n	405cd0 <SystemCoreClockUpdate+0x78>
  405cc4:	2b20      	cmp	r3, #32
  405cc6:	d1d0      	bne.n	405c6a <SystemCoreClockUpdate+0x12>
  405cc8:	4a22      	ldr	r2, [pc, #136]	; (405d54 <SystemCoreClockUpdate+0xfc>)
  405cca:	4b20      	ldr	r3, [pc, #128]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405ccc:	601a      	str	r2, [r3, #0]
  405cce:	e7cc      	b.n	405c6a <SystemCoreClockUpdate+0x12>
  405cd0:	4a22      	ldr	r2, [pc, #136]	; (405d5c <SystemCoreClockUpdate+0x104>)
  405cd2:	4b1e      	ldr	r3, [pc, #120]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405cd4:	601a      	str	r2, [r3, #0]
  405cd6:	e7c8      	b.n	405c6a <SystemCoreClockUpdate+0x12>
  405cd8:	4b1b      	ldr	r3, [pc, #108]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405cda:	6a1b      	ldr	r3, [r3, #32]
  405cdc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  405ce0:	d016      	beq.n	405d10 <SystemCoreClockUpdate+0xb8>
  405ce2:	4a1c      	ldr	r2, [pc, #112]	; (405d54 <SystemCoreClockUpdate+0xfc>)
  405ce4:	4b19      	ldr	r3, [pc, #100]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405ce6:	601a      	str	r2, [r3, #0]
  405ce8:	4b17      	ldr	r3, [pc, #92]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405cea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  405cec:	f003 0303 	and.w	r3, r3, #3
  405cf0:	2b02      	cmp	r3, #2
  405cf2:	d1ba      	bne.n	405c6a <SystemCoreClockUpdate+0x12>
  405cf4:	4a14      	ldr	r2, [pc, #80]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405cf6:	6a91      	ldr	r1, [r2, #40]	; 0x28
  405cf8:	6a92      	ldr	r2, [r2, #40]	; 0x28
  405cfa:	4814      	ldr	r0, [pc, #80]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405cfc:	f3c1 410a 	ubfx	r1, r1, #16, #11
  405d00:	6803      	ldr	r3, [r0, #0]
  405d02:	fb01 3303 	mla	r3, r1, r3, r3
  405d06:	b2d2      	uxtb	r2, r2
  405d08:	fbb3 f3f2 	udiv	r3, r3, r2
  405d0c:	6003      	str	r3, [r0, #0]
  405d0e:	e7ac      	b.n	405c6a <SystemCoreClockUpdate+0x12>
  405d10:	4a11      	ldr	r2, [pc, #68]	; (405d58 <SystemCoreClockUpdate+0x100>)
  405d12:	4b0e      	ldr	r3, [pc, #56]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405d14:	601a      	str	r2, [r3, #0]
  405d16:	4b0c      	ldr	r3, [pc, #48]	; (405d48 <SystemCoreClockUpdate+0xf0>)
  405d18:	6a1b      	ldr	r3, [r3, #32]
  405d1a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  405d1e:	2b10      	cmp	r3, #16
  405d20:	d005      	beq.n	405d2e <SystemCoreClockUpdate+0xd6>
  405d22:	2b20      	cmp	r3, #32
  405d24:	d1e0      	bne.n	405ce8 <SystemCoreClockUpdate+0x90>
  405d26:	4a0b      	ldr	r2, [pc, #44]	; (405d54 <SystemCoreClockUpdate+0xfc>)
  405d28:	4b08      	ldr	r3, [pc, #32]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405d2a:	601a      	str	r2, [r3, #0]
  405d2c:	e7dc      	b.n	405ce8 <SystemCoreClockUpdate+0x90>
  405d2e:	4a0b      	ldr	r2, [pc, #44]	; (405d5c <SystemCoreClockUpdate+0x104>)
  405d30:	4b06      	ldr	r3, [pc, #24]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405d32:	601a      	str	r2, [r3, #0]
  405d34:	e7d8      	b.n	405ce8 <SystemCoreClockUpdate+0x90>
  405d36:	4a05      	ldr	r2, [pc, #20]	; (405d4c <SystemCoreClockUpdate+0xf4>)
  405d38:	6813      	ldr	r3, [r2, #0]
  405d3a:	4909      	ldr	r1, [pc, #36]	; (405d60 <SystemCoreClockUpdate+0x108>)
  405d3c:	fba1 1303 	umull	r1, r3, r1, r3
  405d40:	085b      	lsrs	r3, r3, #1
  405d42:	6013      	str	r3, [r2, #0]
  405d44:	4770      	bx	lr
  405d46:	bf00      	nop
  405d48:	400e0600 	.word	0x400e0600
  405d4c:	2040001c 	.word	0x2040001c
  405d50:	400e1810 	.word	0x400e1810
  405d54:	00b71b00 	.word	0x00b71b00
  405d58:	003d0900 	.word	0x003d0900
  405d5c:	007a1200 	.word	0x007a1200
  405d60:	aaaaaaab 	.word	0xaaaaaaab

00405d64 <system_init_flash>:
  405d64:	4b12      	ldr	r3, [pc, #72]	; (405db0 <system_init_flash+0x4c>)
  405d66:	4298      	cmp	r0, r3
  405d68:	d911      	bls.n	405d8e <system_init_flash+0x2a>
  405d6a:	4b12      	ldr	r3, [pc, #72]	; (405db4 <system_init_flash+0x50>)
  405d6c:	4298      	cmp	r0, r3
  405d6e:	d913      	bls.n	405d98 <system_init_flash+0x34>
  405d70:	4b11      	ldr	r3, [pc, #68]	; (405db8 <system_init_flash+0x54>)
  405d72:	4298      	cmp	r0, r3
  405d74:	d914      	bls.n	405da0 <system_init_flash+0x3c>
  405d76:	4b11      	ldr	r3, [pc, #68]	; (405dbc <system_init_flash+0x58>)
  405d78:	4298      	cmp	r0, r3
  405d7a:	d915      	bls.n	405da8 <system_init_flash+0x44>
  405d7c:	4b10      	ldr	r3, [pc, #64]	; (405dc0 <system_init_flash+0x5c>)
  405d7e:	4298      	cmp	r0, r3
  405d80:	bf94      	ite	ls
  405d82:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
  405d86:	4a0f      	ldrhi	r2, [pc, #60]	; (405dc4 <system_init_flash+0x60>)
  405d88:	4b0f      	ldr	r3, [pc, #60]	; (405dc8 <system_init_flash+0x64>)
  405d8a:	601a      	str	r2, [r3, #0]
  405d8c:	4770      	bx	lr
  405d8e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  405d92:	4b0d      	ldr	r3, [pc, #52]	; (405dc8 <system_init_flash+0x64>)
  405d94:	601a      	str	r2, [r3, #0]
  405d96:	4770      	bx	lr
  405d98:	4a0c      	ldr	r2, [pc, #48]	; (405dcc <system_init_flash+0x68>)
  405d9a:	4b0b      	ldr	r3, [pc, #44]	; (405dc8 <system_init_flash+0x64>)
  405d9c:	601a      	str	r2, [r3, #0]
  405d9e:	4770      	bx	lr
  405da0:	4a0b      	ldr	r2, [pc, #44]	; (405dd0 <system_init_flash+0x6c>)
  405da2:	4b09      	ldr	r3, [pc, #36]	; (405dc8 <system_init_flash+0x64>)
  405da4:	601a      	str	r2, [r3, #0]
  405da6:	4770      	bx	lr
  405da8:	4a0a      	ldr	r2, [pc, #40]	; (405dd4 <system_init_flash+0x70>)
  405daa:	4b07      	ldr	r3, [pc, #28]	; (405dc8 <system_init_flash+0x64>)
  405dac:	601a      	str	r2, [r3, #0]
  405dae:	4770      	bx	lr
  405db0:	01312cff 	.word	0x01312cff
  405db4:	026259ff 	.word	0x026259ff
  405db8:	039386ff 	.word	0x039386ff
  405dbc:	04c4b3ff 	.word	0x04c4b3ff
  405dc0:	05f5e0ff 	.word	0x05f5e0ff
  405dc4:	04000500 	.word	0x04000500
  405dc8:	400e0c00 	.word	0x400e0c00
  405dcc:	04000100 	.word	0x04000100
  405dd0:	04000200 	.word	0x04000200
  405dd4:	04000300 	.word	0x04000300

00405dd8 <_sbrk>:
  405dd8:	4b0a      	ldr	r3, [pc, #40]	; (405e04 <_sbrk+0x2c>)
  405dda:	681b      	ldr	r3, [r3, #0]
  405ddc:	b153      	cbz	r3, 405df4 <_sbrk+0x1c>
  405dde:	4b09      	ldr	r3, [pc, #36]	; (405e04 <_sbrk+0x2c>)
  405de0:	681b      	ldr	r3, [r3, #0]
  405de2:	181a      	adds	r2, r3, r0
  405de4:	4908      	ldr	r1, [pc, #32]	; (405e08 <_sbrk+0x30>)
  405de6:	4291      	cmp	r1, r2
  405de8:	db08      	blt.n	405dfc <_sbrk+0x24>
  405dea:	4610      	mov	r0, r2
  405dec:	4a05      	ldr	r2, [pc, #20]	; (405e04 <_sbrk+0x2c>)
  405dee:	6010      	str	r0, [r2, #0]
  405df0:	4618      	mov	r0, r3
  405df2:	4770      	bx	lr
  405df4:	4a05      	ldr	r2, [pc, #20]	; (405e0c <_sbrk+0x34>)
  405df6:	4b03      	ldr	r3, [pc, #12]	; (405e04 <_sbrk+0x2c>)
  405df8:	601a      	str	r2, [r3, #0]
  405dfa:	e7f0      	b.n	405dde <_sbrk+0x6>
  405dfc:	f04f 30ff 	mov.w	r0, #4294967295
  405e00:	4770      	bx	lr
  405e02:	bf00      	nop
  405e04:	2040dc04 	.word	0x2040dc04
  405e08:	2045fffc 	.word	0x2045fffc
  405e0c:	204116f8 	.word	0x204116f8

00405e10 <_close>:
  405e10:	f04f 30ff 	mov.w	r0, #4294967295
  405e14:	4770      	bx	lr

00405e16 <_fstat>:
  405e16:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  405e1a:	604b      	str	r3, [r1, #4]
  405e1c:	2000      	movs	r0, #0
  405e1e:	4770      	bx	lr

00405e20 <_isatty>:
  405e20:	2001      	movs	r0, #1
  405e22:	4770      	bx	lr

00405e24 <_lseek>:
  405e24:	2000      	movs	r0, #0
  405e26:	4770      	bx	lr

00405e28 <resolve_cb>:
 * \param[in] hostIp Server IP.
 *
 * \return None.
 */
static void resolve_cb(uint8_t *hostName, uint32_t hostIp)
{
  405e28:	b510      	push	{r4, lr}
  405e2a:	b082      	sub	sp, #8
	gu32HostIp = hostIp;
  405e2c:	4b09      	ldr	r3, [pc, #36]	; (405e54 <resolve_cb+0x2c>)
  405e2e:	6019      	str	r1, [r3, #0]
	gbHostIpByName = true;
  405e30:	2201      	movs	r2, #1
  405e32:	4b09      	ldr	r3, [pc, #36]	; (405e58 <resolve_cb+0x30>)
  405e34:	701a      	strb	r2, [r3, #0]
	printf("resolve_cb: %s IP address is %d.%d.%d.%d\r\n\r\n", hostName,
			(int)IPV4_BYTE(hostIp, 0), (int)IPV4_BYTE(hostIp, 1),
			(int)IPV4_BYTE(hostIp, 2), (int)IPV4_BYTE(hostIp, 3));
  405e36:	0e0b      	lsrs	r3, r1, #24
	printf("resolve_cb: %s IP address is %d.%d.%d.%d\r\n\r\n", hostName,
  405e38:	9301      	str	r3, [sp, #4]
  405e3a:	f3c1 4307 	ubfx	r3, r1, #16, #8
  405e3e:	9300      	str	r3, [sp, #0]
  405e40:	f3c1 2307 	ubfx	r3, r1, #8, #8
  405e44:	b2ca      	uxtb	r2, r1
  405e46:	4601      	mov	r1, r0
  405e48:	4804      	ldr	r0, [pc, #16]	; (405e5c <resolve_cb+0x34>)
  405e4a:	4c05      	ldr	r4, [pc, #20]	; (405e60 <resolve_cb+0x38>)
  405e4c:	47a0      	blx	r4
}
  405e4e:	b002      	add	sp, #8
  405e50:	bd10      	pop	{r4, pc}
  405e52:	bf00      	nop
  405e54:	2040f37c 	.word	0x2040f37c
  405e58:	2040f378 	.word	0x2040f378
  405e5c:	0040da90 	.word	0x0040da90
  405e60:	004066e9 	.word	0x004066e9

00405e64 <task_alarme>:
      }
  vTaskDelay(100);
  }
}

static void task_alarme(void){
  405e64:	b5f0      	push	{r4, r5, r6, r7, lr}
  405e66:	b0ab      	sub	sp, #172	; 0xac
  
  xQueueCheck = xQueueCreate( 1, sizeof( data_g ) );
  405e68:	2200      	movs	r2, #0
  405e6a:	21a3      	movs	r1, #163	; 0xa3
  405e6c:	2001      	movs	r0, #1
  405e6e:	4b11      	ldr	r3, [pc, #68]	; (405eb4 <task_alarme+0x50>)
  405e70:	4798      	blx	r3
  405e72:	4b11      	ldr	r3, [pc, #68]	; (405eb8 <task_alarme+0x54>)
  405e74:	6018      	str	r0, [r3, #0]
  
  //TickType_t sleep = 100 ;
  
  while(1){

        if (xQueueReceive(xQueueCheck, &(data_check), 0)) {
  405e76:	461d      	mov	r5, r3
            pio_set(BLUE_PIO,BLUE_PIO_IDX_MASK);
            pio_clear(GREEN_PIO, GREEN_PIO_IDX_MASK);
            pio_set(RED_PIO,RED_PIO_IDX_MASK);
          }else if((glu>140 && glu<=180)||(glu<90 && glu>=70)){
            printf("\nyellow");
            pio_set(BLUE_PIO,BLUE_PIO_IDX_MASK);
  405e78:	4e10      	ldr	r6, [pc, #64]	; (405ebc <task_alarme+0x58>)
            pio_clear(GREEN_PIO, GREEN_PIO_IDX_MASK);
  405e7a:	4f11      	ldr	r7, [pc, #68]	; (405ec0 <task_alarme+0x5c>)
  405e7c:	e002      	b.n	405e84 <task_alarme+0x20>
             pio_set(GREEN_PIO, GREEN_PIO_IDX_MASK);
             pio_clear(RED_PIO, RED_PIO_IDX_MASK);
             printf("\nred");
           }        
        }
        vTaskDelay(100);  
  405e7e:	2064      	movs	r0, #100	; 0x64
  405e80:	4b10      	ldr	r3, [pc, #64]	; (405ec4 <task_alarme+0x60>)
  405e82:	4798      	blx	r3
        if (xQueueReceive(xQueueCheck, &(data_check), 0)) {
  405e84:	2300      	movs	r3, #0
  405e86:	461a      	mov	r2, r3
  405e88:	a901      	add	r1, sp, #4
  405e8a:	6828      	ldr	r0, [r5, #0]
  405e8c:	4c0e      	ldr	r4, [pc, #56]	; (405ec8 <task_alarme+0x64>)
  405e8e:	47a0      	blx	r4
  405e90:	2800      	cmp	r0, #0
  405e92:	d0f4      	beq.n	405e7e <task_alarme+0x1a>
            printf("\nyellow");
  405e94:	480d      	ldr	r0, [pc, #52]	; (405ecc <task_alarme+0x68>)
  405e96:	4b0e      	ldr	r3, [pc, #56]	; (405ed0 <task_alarme+0x6c>)
  405e98:	4798      	blx	r3
            pio_set(BLUE_PIO,BLUE_PIO_IDX_MASK);
  405e9a:	2140      	movs	r1, #64	; 0x40
  405e9c:	4630      	mov	r0, r6
  405e9e:	4b0d      	ldr	r3, [pc, #52]	; (405ed4 <task_alarme+0x70>)
  405ea0:	4798      	blx	r3
            pio_clear(GREEN_PIO, GREEN_PIO_IDX_MASK);
  405ea2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  405ea6:	4638      	mov	r0, r7
  405ea8:	4c0b      	ldr	r4, [pc, #44]	; (405ed8 <task_alarme+0x74>)
  405eaa:	47a0      	blx	r4
            pio_clear(RED_PIO, RED_PIO_IDX_MASK);
  405eac:	2104      	movs	r1, #4
  405eae:	4630      	mov	r0, r6
  405eb0:	47a0      	blx	r4
  405eb2:	e7e4      	b.n	405e7e <task_alarme+0x1a>
  405eb4:	00400fe9 	.word	0x00400fe9
  405eb8:	2040f4c4 	.word	0x2040f4c4
  405ebc:	400e0e00 	.word	0x400e0e00
  405ec0:	400e1200 	.word	0x400e1200
  405ec4:	00401b71 	.word	0x00401b71
  405ec8:	00401349 	.word	0x00401349
  405ecc:	0040db74 	.word	0x0040db74
  405ed0:	004066e9 	.word	0x004066e9
  405ed4:	0040537f 	.word	0x0040537f
  405ed8:	00405383 	.word	0x00405383

00405edc <task_lcd>:
static void task_lcd(void){
  405edc:	b500      	push	{lr}
  405ede:	b0ab      	sub	sp, #172	; 0xac
  xQueueDone = xQueueCreate( 1, sizeof( data_g ) );
  405ee0:	2200      	movs	r2, #0
  405ee2:	21a3      	movs	r1, #163	; 0xa3
  405ee4:	2001      	movs	r0, #1
  405ee6:	4b07      	ldr	r3, [pc, #28]	; (405f04 <task_lcd+0x28>)
  405ee8:	4798      	blx	r3
  405eea:	4b07      	ldr	r3, [pc, #28]	; (405f08 <task_lcd+0x2c>)
  405eec:	6018      	str	r0, [r3, #0]
    if (xQueueReceive(xQueueDone, &(data_received), 0)) {
  405eee:	461e      	mov	r6, r3
  405ef0:	4d06      	ldr	r5, [pc, #24]	; (405f0c <task_lcd+0x30>)
  vTaskDelay(100);
  405ef2:	4c07      	ldr	r4, [pc, #28]	; (405f10 <task_lcd+0x34>)
    if (xQueueReceive(xQueueDone, &(data_received), 0)) {
  405ef4:	2300      	movs	r3, #0
  405ef6:	461a      	mov	r2, r3
  405ef8:	a901      	add	r1, sp, #4
  405efa:	6830      	ldr	r0, [r6, #0]
  405efc:	47a8      	blx	r5
  vTaskDelay(100);
  405efe:	2064      	movs	r0, #100	; 0x64
  405f00:	47a0      	blx	r4
  405f02:	e7f7      	b.n	405ef4 <task_lcd+0x18>
  405f04:	00400fe9 	.word	0x00400fe9
  405f08:	2040f4cc 	.word	0x2040f4cc
  405f0c:	00401349 	.word	0x00401349
  405f10:	00401b71 	.word	0x00401b71

00405f14 <task_json>:
static void task_json(void){
  405f14:	b500      	push	{lr}
  405f16:	f5ad 5dc0 	sub.w	sp, sp, #6144	; 0x1800
  405f1a:	b087      	sub	sp, #28
  xQueueRaw = xQueueCreate( 1, sizeof( struct message_t ) );
  405f1c:	2200      	movs	r2, #0
  405f1e:	f241 7170 	movw	r1, #6000	; 0x1770
  405f22:	2001      	movs	r0, #1
  405f24:	4b11      	ldr	r3, [pc, #68]	; (405f6c <task_json+0x58>)
  405f26:	4798      	blx	r3
  405f28:	4b11      	ldr	r3, [pc, #68]	; (405f70 <task_json+0x5c>)
  405f2a:	6018      	str	r0, [r3, #0]
  405f2c:	e002      	b.n	405f34 <task_json+0x20>
    vTaskDelay(100);
  405f2e:	2064      	movs	r0, #100	; 0x64
  405f30:	4b10      	ldr	r3, [pc, #64]	; (405f74 <task_json+0x60>)
  405f32:	4798      	blx	r3
    if (xQueueReceive(xQueueRaw, &(mensagem), 0)) {
  405f34:	2300      	movs	r3, #0
  405f36:	461a      	mov	r2, r3
  405f38:	a92a      	add	r1, sp, #168	; 0xa8
  405f3a:	480d      	ldr	r0, [pc, #52]	; (405f70 <task_json+0x5c>)
  405f3c:	6800      	ldr	r0, [r0, #0]
  405f3e:	4c0e      	ldr	r4, [pc, #56]	; (405f78 <task_json+0x64>)
  405f40:	47a0      	blx	r4
  405f42:	2800      	cmp	r0, #0
  405f44:	d0f3      	beq.n	405f2e <task_json+0x1a>
      parseiro(mensagem.content,&get_atual);
  405f46:	a901      	add	r1, sp, #4
  405f48:	a82a      	add	r0, sp, #168	; 0xa8
  405f4a:	4b0c      	ldr	r3, [pc, #48]	; (405f7c <task_json+0x68>)
  405f4c:	4798      	blx	r3
      xQueueSend(xQueueDone, &get_atual, 0);
  405f4e:	2300      	movs	r3, #0
  405f50:	461a      	mov	r2, r3
  405f52:	a901      	add	r1, sp, #4
  405f54:	480a      	ldr	r0, [pc, #40]	; (405f80 <task_json+0x6c>)
  405f56:	6800      	ldr	r0, [r0, #0]
  405f58:	4c0a      	ldr	r4, [pc, #40]	; (405f84 <task_json+0x70>)
  405f5a:	47a0      	blx	r4
      xQueueSend(xQueueCheck, &get_atual, 0);
  405f5c:	2300      	movs	r3, #0
  405f5e:	461a      	mov	r2, r3
  405f60:	a901      	add	r1, sp, #4
  405f62:	4809      	ldr	r0, [pc, #36]	; (405f88 <task_json+0x74>)
  405f64:	6800      	ldr	r0, [r0, #0]
  405f66:	47a0      	blx	r4
  405f68:	e7e1      	b.n	405f2e <task_json+0x1a>
  405f6a:	bf00      	nop
  405f6c:	00400fe9 	.word	0x00400fe9
  405f70:	2040f4c8 	.word	0x2040f4c8
  405f74:	00401b71 	.word	0x00401b71
  405f78:	00401349 	.word	0x00401349
  405f7c:	00400749 	.word	0x00400749
  405f80:	2040f4cc 	.word	0x2040f4cc
  405f84:	00401065 	.word	0x00401065
  405f88:	2040f4c4 	.word	0x2040f4c4

00405f8c <task_wifi>:
static void task_wifi(void *pvParameters) {
  405f8c:	b5f0      	push	{r4, r5, r6, r7, lr}
  405f8e:	b08d      	sub	sp, #52	; 0x34
	nm_bsp_init();
  405f90:	4b37      	ldr	r3, [pc, #220]	; (406070 <task_wifi+0xe4>)
  405f92:	4798      	blx	r3
	memset((uint8_t *)&param, 0, sizeof(tstrWifiInitParam));
  405f94:	2300      	movs	r3, #0
  405f96:	9307      	str	r3, [sp, #28]
  405f98:	9308      	str	r3, [sp, #32]
  405f9a:	9309      	str	r3, [sp, #36]	; 0x24
  405f9c:	930a      	str	r3, [sp, #40]	; 0x28
  405f9e:	930b      	str	r3, [sp, #44]	; 0x2c
	param.pfAppWifiCb = wifi_cb;
  405fa0:	4b34      	ldr	r3, [pc, #208]	; (406074 <task_wifi+0xe8>)
  405fa2:	9306      	str	r3, [sp, #24]
	ret = m2m_wifi_init(&param);
  405fa4:	a806      	add	r0, sp, #24
  405fa6:	4b34      	ldr	r3, [pc, #208]	; (406078 <task_wifi+0xec>)
  405fa8:	4798      	blx	r3
	if (M2M_SUCCESS != ret) {
  405faa:	b120      	cbz	r0, 405fb6 <task_wifi+0x2a>
  405fac:	4601      	mov	r1, r0
		printf("main: m2m_wifi_init call error!(%d)\r\n", ret);
  405fae:	4833      	ldr	r0, [pc, #204]	; (40607c <task_wifi+0xf0>)
  405fb0:	4b33      	ldr	r3, [pc, #204]	; (406080 <task_wifi+0xf4>)
  405fb2:	4798      	blx	r3
  405fb4:	e7fe      	b.n	405fb4 <task_wifi+0x28>
	socketInit();
  405fb6:	4b33      	ldr	r3, [pc, #204]	; (406084 <task_wifi+0xf8>)
  405fb8:	4798      	blx	r3
	registerSocketCallback(socket_cb, resolve_cb);
  405fba:	4933      	ldr	r1, [pc, #204]	; (406088 <task_wifi+0xfc>)
  405fbc:	4833      	ldr	r0, [pc, #204]	; (40608c <task_wifi+0x100>)
  405fbe:	4b34      	ldr	r3, [pc, #208]	; (406090 <task_wifi+0x104>)
  405fc0:	4798      	blx	r3
	printf("main: connecting to WiFi AP %s...\r\n", (char *)MAIN_WLAN_SSID);
  405fc2:	4c34      	ldr	r4, [pc, #208]	; (406094 <task_wifi+0x108>)
  405fc4:	4621      	mov	r1, r4
  405fc6:	4834      	ldr	r0, [pc, #208]	; (406098 <task_wifi+0x10c>)
  405fc8:	4b2d      	ldr	r3, [pc, #180]	; (406080 <task_wifi+0xf4>)
  405fca:	4798      	blx	r3
	m2m_wifi_connect((char *)MAIN_WLAN_SSID, sizeof(MAIN_WLAN_SSID), MAIN_WLAN_AUTH, (char *)MAIN_WLAN_PSK, M2M_WIFI_CH_ALL);
  405fcc:	23ff      	movs	r3, #255	; 0xff
  405fce:	9300      	str	r3, [sp, #0]
  405fd0:	4b32      	ldr	r3, [pc, #200]	; (40609c <task_wifi+0x110>)
  405fd2:	2202      	movs	r2, #2
  405fd4:	210a      	movs	r1, #10
  405fd6:	4620      	mov	r0, r4
  405fd8:	4c31      	ldr	r4, [pc, #196]	; (4060a0 <task_wifi+0x114>)
  405fda:	47a0      	blx	r4
	  m2m_wifi_handle_events(NULL);
  405fdc:	4d31      	ldr	r5, [pc, #196]	; (4060a4 <task_wifi+0x118>)
	  if (wifi_connected == M2M_WIFI_CONNECTED) {
  405fde:	4c32      	ldr	r4, [pc, #200]	; (4060a8 <task_wifi+0x11c>)
		  if (gbHostIpByName) {
  405fe0:	4e32      	ldr	r6, [pc, #200]	; (4060ac <task_wifi+0x120>)
  405fe2:	e011      	b.n	406008 <task_wifi+0x7c>
						  printf("main: failed to create TCP client socket error!\r\n");
  405fe4:	4832      	ldr	r0, [pc, #200]	; (4060b0 <task_wifi+0x124>)
  405fe6:	4b26      	ldr	r3, [pc, #152]	; (406080 <task_wifi+0xf4>)
  405fe8:	4798      	blx	r3
					 	  continue;
  405fea:	e00d      	b.n	406008 <task_wifi+0x7c>
							close(tcp_client_socket);
  405fec:	4f31      	ldr	r7, [pc, #196]	; (4060b4 <task_wifi+0x128>)
  405fee:	f997 0000 	ldrsb.w	r0, [r7]
  405ff2:	4b31      	ldr	r3, [pc, #196]	; (4060b8 <task_wifi+0x12c>)
  405ff4:	4798      	blx	r3
							tcp_client_socket = -1;
  405ff6:	23ff      	movs	r3, #255	; 0xff
  405ff8:	703b      	strb	r3, [r7, #0]
							printf("error\n");
  405ffa:	4830      	ldr	r0, [pc, #192]	; (4060bc <task_wifi+0x130>)
  405ffc:	4b20      	ldr	r3, [pc, #128]	; (406080 <task_wifi+0xf4>)
  405ffe:	4798      	blx	r3
        vTaskDelay(5000);
  406000:	f241 3088 	movw	r0, #5000	; 0x1388
  406004:	4b2e      	ldr	r3, [pc, #184]	; (4060c0 <task_wifi+0x134>)
  406006:	4798      	blx	r3
	  m2m_wifi_handle_events(NULL);
  406008:	2000      	movs	r0, #0
  40600a:	47a8      	blx	r5
	  if (wifi_connected == M2M_WIFI_CONNECTED) {
  40600c:	7823      	ldrb	r3, [r4, #0]
  40600e:	2b01      	cmp	r3, #1
  406010:	d1fa      	bne.n	406008 <task_wifi+0x7c>
		  if (gbHostIpByName) {
  406012:	7833      	ldrb	r3, [r6, #0]
  406014:	2b00      	cmp	r3, #0
  406016:	d0f7      	beq.n	406008 <task_wifi+0x7c>
			   if (tcp_client_socket < 0) {
  406018:	4b26      	ldr	r3, [pc, #152]	; (4060b4 <task_wifi+0x128>)
  40601a:	f993 3000 	ldrsb.w	r3, [r3]
  40601e:	2b00      	cmp	r3, #0
  406020:	daee      	bge.n	406000 <task_wifi+0x74>
					  printf("socket init \n");
  406022:	4828      	ldr	r0, [pc, #160]	; (4060c4 <task_wifi+0x138>)
  406024:	4b16      	ldr	r3, [pc, #88]	; (406080 <task_wifi+0xf4>)
  406026:	4798      	blx	r3
					  if ((tcp_client_socket = socket(AF_INET, SOCK_STREAM, SOCKET_FLAGS_SSL)) < 0) {
  406028:	2201      	movs	r2, #1
  40602a:	4611      	mov	r1, r2
  40602c:	2002      	movs	r0, #2
  40602e:	4b26      	ldr	r3, [pc, #152]	; (4060c8 <task_wifi+0x13c>)
  406030:	4798      	blx	r3
  406032:	4b20      	ldr	r3, [pc, #128]	; (4060b4 <task_wifi+0x128>)
  406034:	7018      	strb	r0, [r3, #0]
  406036:	2800      	cmp	r0, #0
  406038:	dbd4      	blt.n	405fe4 <task_wifi+0x58>
				    printf("socket connecting\n");
  40603a:	4824      	ldr	r0, [pc, #144]	; (4060cc <task_wifi+0x140>)
  40603c:	4b10      	ldr	r3, [pc, #64]	; (406080 <task_wifi+0xf4>)
  40603e:	4798      	blx	r3
				    addr_in.sin_family = AF_INET;
  406040:	2302      	movs	r3, #2
  406042:	f8ad 3008 	strh.w	r3, [sp, #8]
				  	addr_in.sin_port = _htons(MAIN_SERVER_PORT);
  406046:	f64b 3301 	movw	r3, #47873	; 0xbb01
  40604a:	f8ad 300a 	strh.w	r3, [sp, #10]
				  	addr_in.sin_addr.s_addr = gu32HostIp;
  40604e:	4b20      	ldr	r3, [pc, #128]	; (4060d0 <task_wifi+0x144>)
  406050:	681b      	ldr	r3, [r3, #0]
  406052:	9303      	str	r3, [sp, #12]
						if (connect(tcp_client_socket, (struct sockaddr *)&addr_in, sizeof(struct sockaddr_in)) != SOCK_ERR_NO_ERROR) {
  406054:	2210      	movs	r2, #16
  406056:	a902      	add	r1, sp, #8
  406058:	4b16      	ldr	r3, [pc, #88]	; (4060b4 <task_wifi+0x128>)
  40605a:	f993 0000 	ldrsb.w	r0, [r3]
  40605e:	4b1d      	ldr	r3, [pc, #116]	; (4060d4 <task_wifi+0x148>)
  406060:	4798      	blx	r3
  406062:	2800      	cmp	r0, #0
  406064:	d1c2      	bne.n	405fec <task_wifi+0x60>
							  gbTcpConnection = true;
  406066:	2201      	movs	r2, #1
  406068:	4b1b      	ldr	r3, [pc, #108]	; (4060d8 <task_wifi+0x14c>)
  40606a:	701a      	strb	r2, [r3, #0]
  40606c:	e7c8      	b.n	406000 <task_wifi+0x74>
  40606e:	bf00      	nop
  406070:	00402649 	.word	0x00402649
  406074:	00406259 	.word	0x00406259
  406078:	00403489 	.word	0x00403489
  40607c:	0040db7c 	.word	0x0040db7c
  406080:	004066e9 	.word	0x004066e9
  406084:	00404c39 	.word	0x00404c39
  406088:	00405e29 	.word	0x00405e29
  40608c:	004060dd 	.word	0x004060dd
  406090:	00404c7d 	.word	0x00404c7d
  406094:	0040dba4 	.word	0x0040dba4
  406098:	0040dbb0 	.word	0x0040dbb0
  40609c:	0040dbd4 	.word	0x0040dbd4
  4060a0:	004037e1 	.word	0x004037e1
  4060a4:	00403585 	.word	0x00403585
  4060a8:	2040f380 	.word	0x2040f380
  4060ac:	2040f378 	.word	0x2040f378
  4060b0:	0040dbf0 	.word	0x0040dbf0
  4060b4:	20400045 	.word	0x20400045
  4060b8:	00404f3d 	.word	0x00404f3d
  4060bc:	0040dc38 	.word	0x0040dc38
  4060c0:	00401b71 	.word	0x00401b71
  4060c4:	0040dbe0 	.word	0x0040dbe0
  4060c8:	00404c91 	.word	0x00404c91
  4060cc:	0040dc24 	.word	0x0040dc24
  4060d0:	2040f37c 	.word	0x2040f37c
  4060d4:	00404d71 	.word	0x00404d71
  4060d8:	2040f379 	.word	0x2040f379

004060dc <socket_cb>:
	if (sock == tcp_client_socket) {
  4060dc:	4b4c      	ldr	r3, [pc, #304]	; (406210 <socket_cb+0x134>)
  4060de:	f993 3000 	ldrsb.w	r3, [r3]
  4060e2:	4283      	cmp	r3, r0
  4060e4:	d000      	beq.n	4060e8 <socket_cb+0xc>
  4060e6:	4770      	bx	lr
{
  4060e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4060ec:	f5ad 5dbb 	sub.w	sp, sp, #5984	; 0x1760
  4060f0:	b084      	sub	sp, #16
  4060f2:	4614      	mov	r4, r2
		switch (u8Msg) {
  4060f4:	2905      	cmp	r1, #5
  4060f6:	d006      	beq.n	406106 <socket_cb+0x2a>
  4060f8:	2906      	cmp	r1, #6
  4060fa:	d048      	beq.n	40618e <socket_cb+0xb2>
}
  4060fc:	f50d 5dbb 	add.w	sp, sp, #5984	; 0x1760
  406100:	b004      	add	sp, #16
  406102:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      printf("socket_msg_connect\n");
  406106:	4843      	ldr	r0, [pc, #268]	; (406214 <socket_cb+0x138>)
  406108:	4b43      	ldr	r3, [pc, #268]	; (406218 <socket_cb+0x13c>)
  40610a:	4798      	blx	r3
			if (gbTcpConnection) {
  40610c:	4b43      	ldr	r3, [pc, #268]	; (40621c <socket_cb+0x140>)
  40610e:	781b      	ldrb	r3, [r3, #0]
  406110:	2b00      	cmp	r3, #0
  406112:	d0f3      	beq.n	4060fc <socket_cb+0x20>
				memset(gau8ReceivedBuffer, 0, sizeof(gau8ReceivedBuffer));
  406114:	4d42      	ldr	r5, [pc, #264]	; (406220 <socket_cb+0x144>)
  406116:	f241 7270 	movw	r2, #6000	; 0x1770
  40611a:	2100      	movs	r1, #0
  40611c:	4628      	mov	r0, r5
  40611e:	4b41      	ldr	r3, [pc, #260]	; (406224 <socket_cb+0x148>)
  406120:	4798      	blx	r3
				sprintf((char *)gau8ReceivedBuffer, "%s", MAIN_PREFIX_BUFFER);
  406122:	2260      	movs	r2, #96	; 0x60
  406124:	4940      	ldr	r1, [pc, #256]	; (406228 <socket_cb+0x14c>)
  406126:	4628      	mov	r0, r5
  406128:	4b40      	ldr	r3, [pc, #256]	; (40622c <socket_cb+0x150>)
  40612a:	4798      	blx	r3
				if (pstrConnect && pstrConnect->s8Error >= SOCK_ERR_NO_ERROR) {
  40612c:	b30c      	cbz	r4, 406172 <socket_cb+0x96>
  40612e:	f994 3001 	ldrsb.w	r3, [r4, #1]
  406132:	2b00      	cmp	r3, #0
  406134:	db1d      	blt.n	406172 <socket_cb+0x96>
          printf("send \n");
  406136:	483e      	ldr	r0, [pc, #248]	; (406230 <socket_cb+0x154>)
  406138:	4b37      	ldr	r3, [pc, #220]	; (406218 <socket_cb+0x13c>)
  40613a:	4798      	blx	r3
					send(tcp_client_socket, gau8ReceivedBuffer, strlen((char *)gau8ReceivedBuffer), 0);
  40613c:	462c      	mov	r4, r5
  40613e:	4628      	mov	r0, r5
  406140:	4b3c      	ldr	r3, [pc, #240]	; (406234 <socket_cb+0x158>)
  406142:	4798      	blx	r3
  406144:	4d32      	ldr	r5, [pc, #200]	; (406210 <socket_cb+0x134>)
  406146:	2300      	movs	r3, #0
  406148:	b282      	uxth	r2, r0
  40614a:	4621      	mov	r1, r4
  40614c:	f995 0000 	ldrsb.w	r0, [r5]
  406150:	4e39      	ldr	r6, [pc, #228]	; (406238 <socket_cb+0x15c>)
  406152:	47b0      	blx	r6
					memset(gau8ReceivedBuffer, 0, MAIN_WIFI_M2M_BUFFER_SIZE);
  406154:	f241 7670 	movw	r6, #6000	; 0x1770
  406158:	4632      	mov	r2, r6
  40615a:	2100      	movs	r1, #0
  40615c:	4620      	mov	r0, r4
  40615e:	4b31      	ldr	r3, [pc, #196]	; (406224 <socket_cb+0x148>)
  406160:	4798      	blx	r3
					recv(tcp_client_socket, &gau8ReceivedBuffer[0], MAIN_WIFI_M2M_BUFFER_SIZE, 0);
  406162:	2300      	movs	r3, #0
  406164:	4632      	mov	r2, r6
  406166:	4621      	mov	r1, r4
  406168:	f995 0000 	ldrsb.w	r0, [r5]
  40616c:	4c33      	ldr	r4, [pc, #204]	; (40623c <socket_cb+0x160>)
  40616e:	47a0      	blx	r4
  406170:	e7c4      	b.n	4060fc <socket_cb+0x20>
					printf("socket_cb: connect error!\r\n");
  406172:	4833      	ldr	r0, [pc, #204]	; (406240 <socket_cb+0x164>)
  406174:	4b28      	ldr	r3, [pc, #160]	; (406218 <socket_cb+0x13c>)
  406176:	4798      	blx	r3
					gbTcpConnection = false;
  406178:	2200      	movs	r2, #0
  40617a:	4b28      	ldr	r3, [pc, #160]	; (40621c <socket_cb+0x140>)
  40617c:	701a      	strb	r2, [r3, #0]
					close(tcp_client_socket);
  40617e:	4c24      	ldr	r4, [pc, #144]	; (406210 <socket_cb+0x134>)
  406180:	f994 0000 	ldrsb.w	r0, [r4]
  406184:	4b2f      	ldr	r3, [pc, #188]	; (406244 <socket_cb+0x168>)
  406186:	4798      	blx	r3
					tcp_client_socket = -1;
  406188:	23ff      	movs	r3, #255	; 0xff
  40618a:	7023      	strb	r3, [r4, #0]
  40618c:	e7b6      	b.n	4060fc <socket_cb+0x20>
			if (pstrRecv && pstrRecv->s16BufferSize > 0) {
  40618e:	b11a      	cbz	r2, 406198 <socket_cb+0xbc>
  406190:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
  406194:	2b00      	cmp	r3, #0
  406196:	dc0a      	bgt.n	4061ae <socket_cb+0xd2>
				printf("socket_cb: recv error!\r\n");
  406198:	482b      	ldr	r0, [pc, #172]	; (406248 <socket_cb+0x16c>)
  40619a:	4b1f      	ldr	r3, [pc, #124]	; (406218 <socket_cb+0x13c>)
  40619c:	4798      	blx	r3
				close(tcp_client_socket);
  40619e:	4c1c      	ldr	r4, [pc, #112]	; (406210 <socket_cb+0x134>)
  4061a0:	f994 0000 	ldrsb.w	r0, [r4]
  4061a4:	4b27      	ldr	r3, [pc, #156]	; (406244 <socket_cb+0x168>)
  4061a6:	4798      	blx	r3
				tcp_client_socket = -1;
  4061a8:	23ff      	movs	r3, #255	; 0xff
  4061aa:	7023      	strb	r3, [r4, #0]
}
  4061ac:	e7a6      	b.n	4060fc <socket_cb+0x20>
        strcpy(&mensagem.content, pstrRecv->pu8Buffer);
  4061ae:	6811      	ldr	r1, [r2, #0]
  4061b0:	4668      	mov	r0, sp
  4061b2:	4b26      	ldr	r3, [pc, #152]	; (40624c <socket_cb+0x170>)
  4061b4:	4798      	blx	r3
        xQueueSend(xQueueRaw, &mensagem, 0);
  4061b6:	2300      	movs	r3, #0
  4061b8:	461a      	mov	r2, r3
  4061ba:	4669      	mov	r1, sp
  4061bc:	4824      	ldr	r0, [pc, #144]	; (406250 <socket_cb+0x174>)
  4061be:	6800      	ldr	r0, [r0, #0]
  4061c0:	4c24      	ldr	r4, [pc, #144]	; (406254 <socket_cb+0x178>)
  4061c2:	47a0      	blx	r4
				memset(gau8ReceivedBuffer, 0, sizeof(gau8ReceivedBuffer));
  4061c4:	4c16      	ldr	r4, [pc, #88]	; (406220 <socket_cb+0x144>)
  4061c6:	f241 7570 	movw	r5, #6000	; 0x1770
  4061ca:	462a      	mov	r2, r5
  4061cc:	2100      	movs	r1, #0
  4061ce:	4620      	mov	r0, r4
  4061d0:	4f14      	ldr	r7, [pc, #80]	; (406224 <socket_cb+0x148>)
  4061d2:	47b8      	blx	r7
				sprintf((char *)gau8ReceivedBuffer, "%s", MAIN_PREFIX_BUFFER);
  4061d4:	2260      	movs	r2, #96	; 0x60
  4061d6:	4914      	ldr	r1, [pc, #80]	; (406228 <socket_cb+0x14c>)
  4061d8:	4620      	mov	r0, r4
  4061da:	4b14      	ldr	r3, [pc, #80]	; (40622c <socket_cb+0x150>)
  4061dc:	4798      	blx	r3
				send(tcp_client_socket, gau8ReceivedBuffer, strlen((char *)gau8ReceivedBuffer), 0);
  4061de:	4620      	mov	r0, r4
  4061e0:	4b14      	ldr	r3, [pc, #80]	; (406234 <socket_cb+0x158>)
  4061e2:	4798      	blx	r3
  4061e4:	4e0a      	ldr	r6, [pc, #40]	; (406210 <socket_cb+0x134>)
  4061e6:	2300      	movs	r3, #0
  4061e8:	b282      	uxth	r2, r0
  4061ea:	4621      	mov	r1, r4
  4061ec:	f996 0000 	ldrsb.w	r0, [r6]
  4061f0:	f8df 8044 	ldr.w	r8, [pc, #68]	; 406238 <socket_cb+0x15c>
  4061f4:	47c0      	blx	r8
				memset(gau8ReceivedBuffer, 0, sizeof(gau8ReceivedBuffer));
  4061f6:	462a      	mov	r2, r5
  4061f8:	2100      	movs	r1, #0
  4061fa:	4620      	mov	r0, r4
  4061fc:	47b8      	blx	r7
				recv(tcp_client_socket, &gau8ReceivedBuffer[0], MAIN_WIFI_M2M_BUFFER_SIZE, 0);
  4061fe:	2300      	movs	r3, #0
  406200:	462a      	mov	r2, r5
  406202:	4621      	mov	r1, r4
  406204:	f996 0000 	ldrsb.w	r0, [r6]
  406208:	4c0c      	ldr	r4, [pc, #48]	; (40623c <socket_cb+0x160>)
  40620a:	47a0      	blx	r4
			if (pstrRecv && pstrRecv->s16BufferSize > 0) {
  40620c:	e776      	b.n	4060fc <socket_cb+0x20>
  40620e:	bf00      	nop
  406210:	20400045 	.word	0x20400045
  406214:	0040dac0 	.word	0x0040dac0
  406218:	004066e9 	.word	0x004066e9
  40621c:	2040f379 	.word	0x2040f379
  406220:	2040dc08 	.word	0x2040dc08
  406224:	00406845 	.word	0x00406845
  406228:	0040dad4 	.word	0x0040dad4
  40622c:	00406711 	.word	0x00406711
  406230:	0040db34 	.word	0x0040db34
  406234:	00406bc1 	.word	0x00406bc1
  406238:	00404e01 	.word	0x00404e01
  40623c:	00404e9d 	.word	0x00404e9d
  406240:	0040db3c 	.word	0x0040db3c
  406244:	00404f3d 	.word	0x00404f3d
  406248:	0040db58 	.word	0x0040db58
  40624c:	00406acd 	.word	0x00406acd
  406250:	2040f4c8 	.word	0x2040f4c8
  406254:	00401065 	.word	0x00401065

00406258 <wifi_cb>:
{
  406258:	b510      	push	{r4, lr}
  40625a:	b082      	sub	sp, #8
	switch (u8MsgType) {
  40625c:	282c      	cmp	r0, #44	; 0x2c
  40625e:	d003      	beq.n	406268 <wifi_cb+0x10>
  406260:	2832      	cmp	r0, #50	; 0x32
  406262:	d013      	beq.n	40628c <wifi_cb+0x34>
}
  406264:	b002      	add	sp, #8
  406266:	bd10      	pop	{r4, pc}
		if (pstrWifiState->u8CurrState == M2M_WIFI_CONNECTED) {
  406268:	780b      	ldrb	r3, [r1, #0]
  40626a:	2b01      	cmp	r3, #1
  40626c:	d008      	beq.n	406280 <wifi_cb+0x28>
		} else if (pstrWifiState->u8CurrState == M2M_WIFI_DISCONNECTED) {
  40626e:	2b00      	cmp	r3, #0
  406270:	d1f8      	bne.n	406264 <wifi_cb+0xc>
			printf("wifi_cb: M2M_WIFI_DISCONNECTED\r\n");
  406272:	480e      	ldr	r0, [pc, #56]	; (4062ac <wifi_cb+0x54>)
  406274:	4b0e      	ldr	r3, [pc, #56]	; (4062b0 <wifi_cb+0x58>)
  406276:	4798      	blx	r3
 			wifi_connected = 0;
  406278:	2200      	movs	r2, #0
  40627a:	4b0e      	ldr	r3, [pc, #56]	; (4062b4 <wifi_cb+0x5c>)
  40627c:	701a      	strb	r2, [r3, #0]
  40627e:	e7f1      	b.n	406264 <wifi_cb+0xc>
			printf("wifi_cb: M2M_WIFI_CONNECTED\r\n");
  406280:	480d      	ldr	r0, [pc, #52]	; (4062b8 <wifi_cb+0x60>)
  406282:	4b0b      	ldr	r3, [pc, #44]	; (4062b0 <wifi_cb+0x58>)
  406284:	4798      	blx	r3
			m2m_wifi_request_dhcp_client();
  406286:	4b0d      	ldr	r3, [pc, #52]	; (4062bc <wifi_cb+0x64>)
  406288:	4798      	blx	r3
  40628a:	e7eb      	b.n	406264 <wifi_cb+0xc>
		printf("wifi_cb: IP address is %u.%u.%u.%u\r\n",
  40628c:	788b      	ldrb	r3, [r1, #2]
  40628e:	784a      	ldrb	r2, [r1, #1]
  406290:	7808      	ldrb	r0, [r1, #0]
  406292:	78c9      	ldrb	r1, [r1, #3]
  406294:	9100      	str	r1, [sp, #0]
  406296:	4601      	mov	r1, r0
  406298:	4809      	ldr	r0, [pc, #36]	; (4062c0 <wifi_cb+0x68>)
  40629a:	4c05      	ldr	r4, [pc, #20]	; (4062b0 <wifi_cb+0x58>)
  40629c:	47a0      	blx	r4
		wifi_connected = M2M_WIFI_CONNECTED;
  40629e:	2201      	movs	r2, #1
  4062a0:	4b04      	ldr	r3, [pc, #16]	; (4062b4 <wifi_cb+0x5c>)
  4062a2:	701a      	strb	r2, [r3, #0]
		gethostbyname((uint8_t *)server_host_name);
  4062a4:	4807      	ldr	r0, [pc, #28]	; (4062c4 <wifi_cb+0x6c>)
  4062a6:	4b08      	ldr	r3, [pc, #32]	; (4062c8 <wifi_cb+0x70>)
  4062a8:	4798      	blx	r3
}
  4062aa:	e7db      	b.n	406264 <wifi_cb+0xc>
  4062ac:	0040dc78 	.word	0x0040dc78
  4062b0:	004066e9 	.word	0x004066e9
  4062b4:	2040f380 	.word	0x2040f380
  4062b8:	0040dc58 	.word	0x0040dc58
  4062bc:	004037fd 	.word	0x004037fd
  4062c0:	0040dc9c 	.word	0x0040dc9c
  4062c4:	20400020 	.word	0x20400020
  4062c8:	00404fbd 	.word	0x00404fbd

004062cc <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  4062cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4062ce:	b083      	sub	sp, #12
  4062d0:	4605      	mov	r5, r0
  4062d2:	460c      	mov	r4, r1
	uint32_t val = 0;
  4062d4:	2300      	movs	r3, #0
  4062d6:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4062d8:	4b2a      	ldr	r3, [pc, #168]	; (406384 <usart_serial_getchar+0xb8>)
  4062da:	4298      	cmp	r0, r3
  4062dc:	d013      	beq.n	406306 <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4062de:	4b2a      	ldr	r3, [pc, #168]	; (406388 <usart_serial_getchar+0xbc>)
  4062e0:	4298      	cmp	r0, r3
  4062e2:	d018      	beq.n	406316 <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  4062e4:	4b29      	ldr	r3, [pc, #164]	; (40638c <usart_serial_getchar+0xc0>)
  4062e6:	4298      	cmp	r0, r3
  4062e8:	d01d      	beq.n	406326 <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  4062ea:	4b29      	ldr	r3, [pc, #164]	; (406390 <usart_serial_getchar+0xc4>)
  4062ec:	429d      	cmp	r5, r3
  4062ee:	d022      	beq.n	406336 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  4062f0:	4b28      	ldr	r3, [pc, #160]	; (406394 <usart_serial_getchar+0xc8>)
  4062f2:	429d      	cmp	r5, r3
  4062f4:	d027      	beq.n	406346 <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  4062f6:	4b28      	ldr	r3, [pc, #160]	; (406398 <usart_serial_getchar+0xcc>)
  4062f8:	429d      	cmp	r5, r3
  4062fa:	d02e      	beq.n	40635a <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  4062fc:	4b27      	ldr	r3, [pc, #156]	; (40639c <usart_serial_getchar+0xd0>)
  4062fe:	429d      	cmp	r5, r3
  406300:	d035      	beq.n	40636e <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  406302:	b003      	add	sp, #12
  406304:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  406306:	461f      	mov	r7, r3
  406308:	4e25      	ldr	r6, [pc, #148]	; (4063a0 <usart_serial_getchar+0xd4>)
  40630a:	4621      	mov	r1, r4
  40630c:	4638      	mov	r0, r7
  40630e:	47b0      	blx	r6
  406310:	2800      	cmp	r0, #0
  406312:	d1fa      	bne.n	40630a <usart_serial_getchar+0x3e>
  406314:	e7e9      	b.n	4062ea <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  406316:	461f      	mov	r7, r3
  406318:	4e21      	ldr	r6, [pc, #132]	; (4063a0 <usart_serial_getchar+0xd4>)
  40631a:	4621      	mov	r1, r4
  40631c:	4638      	mov	r0, r7
  40631e:	47b0      	blx	r6
  406320:	2800      	cmp	r0, #0
  406322:	d1fa      	bne.n	40631a <usart_serial_getchar+0x4e>
  406324:	e7e4      	b.n	4062f0 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  406326:	461f      	mov	r7, r3
  406328:	4e1d      	ldr	r6, [pc, #116]	; (4063a0 <usart_serial_getchar+0xd4>)
  40632a:	4621      	mov	r1, r4
  40632c:	4638      	mov	r0, r7
  40632e:	47b0      	blx	r6
  406330:	2800      	cmp	r0, #0
  406332:	d1fa      	bne.n	40632a <usart_serial_getchar+0x5e>
  406334:	e7df      	b.n	4062f6 <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  406336:	461f      	mov	r7, r3
  406338:	4e19      	ldr	r6, [pc, #100]	; (4063a0 <usart_serial_getchar+0xd4>)
  40633a:	4621      	mov	r1, r4
  40633c:	4638      	mov	r0, r7
  40633e:	47b0      	blx	r6
  406340:	2800      	cmp	r0, #0
  406342:	d1fa      	bne.n	40633a <usart_serial_getchar+0x6e>
  406344:	e7da      	b.n	4062fc <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  406346:	461e      	mov	r6, r3
  406348:	4d16      	ldr	r5, [pc, #88]	; (4063a4 <usart_serial_getchar+0xd8>)
  40634a:	a901      	add	r1, sp, #4
  40634c:	4630      	mov	r0, r6
  40634e:	47a8      	blx	r5
  406350:	2800      	cmp	r0, #0
  406352:	d1fa      	bne.n	40634a <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  406354:	9b01      	ldr	r3, [sp, #4]
  406356:	7023      	strb	r3, [r4, #0]
  406358:	e7d3      	b.n	406302 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  40635a:	461e      	mov	r6, r3
  40635c:	4d11      	ldr	r5, [pc, #68]	; (4063a4 <usart_serial_getchar+0xd8>)
  40635e:	a901      	add	r1, sp, #4
  406360:	4630      	mov	r0, r6
  406362:	47a8      	blx	r5
  406364:	2800      	cmp	r0, #0
  406366:	d1fa      	bne.n	40635e <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  406368:	9b01      	ldr	r3, [sp, #4]
  40636a:	7023      	strb	r3, [r4, #0]
  40636c:	e7c9      	b.n	406302 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  40636e:	461e      	mov	r6, r3
  406370:	4d0c      	ldr	r5, [pc, #48]	; (4063a4 <usart_serial_getchar+0xd8>)
  406372:	a901      	add	r1, sp, #4
  406374:	4630      	mov	r0, r6
  406376:	47a8      	blx	r5
  406378:	2800      	cmp	r0, #0
  40637a:	d1fa      	bne.n	406372 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  40637c:	9b01      	ldr	r3, [sp, #4]
  40637e:	7023      	strb	r3, [r4, #0]
}
  406380:	e7bf      	b.n	406302 <usart_serial_getchar+0x36>
  406382:	bf00      	nop
  406384:	400e0800 	.word	0x400e0800
  406388:	400e0a00 	.word	0x400e0a00
  40638c:	400e1a00 	.word	0x400e1a00
  406390:	400e1c00 	.word	0x400e1c00
  406394:	40024000 	.word	0x40024000
  406398:	40028000 	.word	0x40028000
  40639c:	4002c000 	.word	0x4002c000
  4063a0:	00405a69 	.word	0x00405a69
  4063a4:	00405b77 	.word	0x00405b77

004063a8 <usart_serial_putchar>:
{
  4063a8:	b570      	push	{r4, r5, r6, lr}
  4063aa:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4063ac:	4b2a      	ldr	r3, [pc, #168]	; (406458 <usart_serial_putchar+0xb0>)
  4063ae:	4298      	cmp	r0, r3
  4063b0:	d013      	beq.n	4063da <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  4063b2:	4b2a      	ldr	r3, [pc, #168]	; (40645c <usart_serial_putchar+0xb4>)
  4063b4:	4298      	cmp	r0, r3
  4063b6:	d019      	beq.n	4063ec <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  4063b8:	4b29      	ldr	r3, [pc, #164]	; (406460 <usart_serial_putchar+0xb8>)
  4063ba:	4298      	cmp	r0, r3
  4063bc:	d01f      	beq.n	4063fe <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  4063be:	4b29      	ldr	r3, [pc, #164]	; (406464 <usart_serial_putchar+0xbc>)
  4063c0:	4298      	cmp	r0, r3
  4063c2:	d025      	beq.n	406410 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  4063c4:	4b28      	ldr	r3, [pc, #160]	; (406468 <usart_serial_putchar+0xc0>)
  4063c6:	4298      	cmp	r0, r3
  4063c8:	d02b      	beq.n	406422 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  4063ca:	4b28      	ldr	r3, [pc, #160]	; (40646c <usart_serial_putchar+0xc4>)
  4063cc:	4298      	cmp	r0, r3
  4063ce:	d031      	beq.n	406434 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  4063d0:	4b27      	ldr	r3, [pc, #156]	; (406470 <usart_serial_putchar+0xc8>)
  4063d2:	4298      	cmp	r0, r3
  4063d4:	d037      	beq.n	406446 <usart_serial_putchar+0x9e>
	return 0;
  4063d6:	2000      	movs	r0, #0
}
  4063d8:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4063da:	461e      	mov	r6, r3
  4063dc:	4d25      	ldr	r5, [pc, #148]	; (406474 <usart_serial_putchar+0xcc>)
  4063de:	4621      	mov	r1, r4
  4063e0:	4630      	mov	r0, r6
  4063e2:	47a8      	blx	r5
  4063e4:	2800      	cmp	r0, #0
  4063e6:	d1fa      	bne.n	4063de <usart_serial_putchar+0x36>
		return 1;
  4063e8:	2001      	movs	r0, #1
  4063ea:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4063ec:	461e      	mov	r6, r3
  4063ee:	4d21      	ldr	r5, [pc, #132]	; (406474 <usart_serial_putchar+0xcc>)
  4063f0:	4621      	mov	r1, r4
  4063f2:	4630      	mov	r0, r6
  4063f4:	47a8      	blx	r5
  4063f6:	2800      	cmp	r0, #0
  4063f8:	d1fa      	bne.n	4063f0 <usart_serial_putchar+0x48>
		return 1;
  4063fa:	2001      	movs	r0, #1
  4063fc:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4063fe:	461e      	mov	r6, r3
  406400:	4d1c      	ldr	r5, [pc, #112]	; (406474 <usart_serial_putchar+0xcc>)
  406402:	4621      	mov	r1, r4
  406404:	4630      	mov	r0, r6
  406406:	47a8      	blx	r5
  406408:	2800      	cmp	r0, #0
  40640a:	d1fa      	bne.n	406402 <usart_serial_putchar+0x5a>
		return 1;
  40640c:	2001      	movs	r0, #1
  40640e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  406410:	461e      	mov	r6, r3
  406412:	4d18      	ldr	r5, [pc, #96]	; (406474 <usart_serial_putchar+0xcc>)
  406414:	4621      	mov	r1, r4
  406416:	4630      	mov	r0, r6
  406418:	47a8      	blx	r5
  40641a:	2800      	cmp	r0, #0
  40641c:	d1fa      	bne.n	406414 <usart_serial_putchar+0x6c>
		return 1;
  40641e:	2001      	movs	r0, #1
  406420:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  406422:	461e      	mov	r6, r3
  406424:	4d14      	ldr	r5, [pc, #80]	; (406478 <usart_serial_putchar+0xd0>)
  406426:	4621      	mov	r1, r4
  406428:	4630      	mov	r0, r6
  40642a:	47a8      	blx	r5
  40642c:	2800      	cmp	r0, #0
  40642e:	d1fa      	bne.n	406426 <usart_serial_putchar+0x7e>
		return 1;
  406430:	2001      	movs	r0, #1
  406432:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  406434:	461e      	mov	r6, r3
  406436:	4d10      	ldr	r5, [pc, #64]	; (406478 <usart_serial_putchar+0xd0>)
  406438:	4621      	mov	r1, r4
  40643a:	4630      	mov	r0, r6
  40643c:	47a8      	blx	r5
  40643e:	2800      	cmp	r0, #0
  406440:	d1fa      	bne.n	406438 <usart_serial_putchar+0x90>
		return 1;
  406442:	2001      	movs	r0, #1
  406444:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  406446:	461e      	mov	r6, r3
  406448:	4d0b      	ldr	r5, [pc, #44]	; (406478 <usart_serial_putchar+0xd0>)
  40644a:	4621      	mov	r1, r4
  40644c:	4630      	mov	r0, r6
  40644e:	47a8      	blx	r5
  406450:	2800      	cmp	r0, #0
  406452:	d1fa      	bne.n	40644a <usart_serial_putchar+0xa2>
		return 1;
  406454:	2001      	movs	r0, #1
  406456:	bd70      	pop	{r4, r5, r6, pc}
  406458:	400e0800 	.word	0x400e0800
  40645c:	400e0a00 	.word	0x400e0a00
  406460:	400e1a00 	.word	0x400e1a00
  406464:	400e1c00 	.word	0x400e1c00
  406468:	40024000 	.word	0x40024000
  40646c:	40028000 	.word	0x40028000
  406470:	4002c000 	.word	0x4002c000
  406474:	00405a57 	.word	0x00405a57
  406478:	00405b61 	.word	0x00405b61

0040647c <vApplicationStackOverflowHook>:
{
  40647c:	b508      	push	{r3, lr}
	printf("stack overflow %x %s\r\n", pxTask, (portCHAR *)pcTaskName);
  40647e:	460a      	mov	r2, r1
  406480:	4601      	mov	r1, r0
  406482:	4802      	ldr	r0, [pc, #8]	; (40648c <vApplicationStackOverflowHook+0x10>)
  406484:	4b02      	ldr	r3, [pc, #8]	; (406490 <vApplicationStackOverflowHook+0x14>)
  406486:	4798      	blx	r3
  406488:	e7fe      	b.n	406488 <vApplicationStackOverflowHook+0xc>
  40648a:	bf00      	nop
  40648c:	0040dc40 	.word	0x0040dc40
  406490:	004066e9 	.word	0x004066e9

00406494 <vApplicationTickHook>:
{
  406494:	4770      	bx	lr

00406496 <vApplicationMallocFailedHook>:
  406496:	f04f 0380 	mov.w	r3, #128	; 0x80
  40649a:	b672      	cpsid	i
  40649c:	f383 8811 	msr	BASEPRI, r3
  4064a0:	f3bf 8f6f 	isb	sy
  4064a4:	f3bf 8f4f 	dsb	sy
  4064a8:	b662      	cpsie	i
  4064aa:	e7fe      	b.n	4064aa <vApplicationMallocFailedHook+0x14>

004064ac <io_init>:
  }
  
}

void io_init(void){
  4064ac:	b570      	push	{r4, r5, r6, lr}
  4064ae:	b082      	sub	sp, #8
   // Desativa WatchDog Timer
   WDT->WDT_MR = WDT_MR_WDDIS;
  4064b0:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4064b4:	4b14      	ldr	r3, [pc, #80]	; (406508 <io_init+0x5c>)
  4064b6:	605a      	str	r2, [r3, #4]

   // Ativa o PIO na qual o BUZZ foi conectado
   // para que possamos controlar o BUZZ.
   pmc_enable_periph_clk(BUZZ_PIO_ID);
  4064b8:	2010      	movs	r0, #16
  4064ba:	4c14      	ldr	r4, [pc, #80]	; (40650c <io_init+0x60>)
  4064bc:	47a0      	blx	r4
   pmc_enable_periph_clk(BLUE_PIO_ID);
  4064be:	200a      	movs	r0, #10
  4064c0:	47a0      	blx	r4
   pmc_enable_periph_clk(GREEN_PIO_ID);
  4064c2:	200c      	movs	r0, #12
  4064c4:	47a0      	blx	r4
   pmc_enable_periph_clk(RED_PIO_ID);
  4064c6:	200a      	movs	r0, #10
  4064c8:	47a0      	blx	r4
   //Inicializa PA19 como sa?da
   pio_set_output(BUZZ_PIO, BUZZ_PIO_IDX_MASK, 0, 0, 0);
  4064ca:	2400      	movs	r4, #0
  4064cc:	9400      	str	r4, [sp, #0]
  4064ce:	4623      	mov	r3, r4
  4064d0:	4622      	mov	r2, r4
  4064d2:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  4064d6:	480e      	ldr	r0, [pc, #56]	; (406510 <io_init+0x64>)
  4064d8:	4d0e      	ldr	r5, [pc, #56]	; (406514 <io_init+0x68>)
  4064da:	47a8      	blx	r5
   pio_set_output(BLUE_PIO, BLUE_PIO_IDX_MASK, 1, 0, 0);
  4064dc:	4e0e      	ldr	r6, [pc, #56]	; (406518 <io_init+0x6c>)
  4064de:	9400      	str	r4, [sp, #0]
  4064e0:	4623      	mov	r3, r4
  4064e2:	2201      	movs	r2, #1
  4064e4:	2140      	movs	r1, #64	; 0x40
  4064e6:	4630      	mov	r0, r6
  4064e8:	47a8      	blx	r5
   pio_set_output(GREEN_PIO, GREEN_PIO_IDX_MASK, 1, 0, 0);
  4064ea:	9400      	str	r4, [sp, #0]
  4064ec:	4623      	mov	r3, r4
  4064ee:	2201      	movs	r2, #1
  4064f0:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4064f4:	4809      	ldr	r0, [pc, #36]	; (40651c <io_init+0x70>)
  4064f6:	47a8      	blx	r5
   pio_set_output(RED_PIO, RED_PIO_IDX_MASK, 1, 0, 0);
  4064f8:	9400      	str	r4, [sp, #0]
  4064fa:	4623      	mov	r3, r4
  4064fc:	2201      	movs	r2, #1
  4064fe:	2104      	movs	r1, #4
  406500:	4630      	mov	r0, r6
  406502:	47a8      	blx	r5

}
  406504:	b002      	add	sp, #8
  406506:	bd70      	pop	{r4, r5, r6, pc}
  406508:	400e1850 	.word	0x400e1850
  40650c:	004058b1 	.word	0x004058b1
  406510:	400e1400 	.word	0x400e1400
  406514:	0040544f 	.word	0x0040544f
  406518:	400e0e00 	.word	0x400e0e00
  40651c:	400e1200 	.word	0x400e1200

00406520 <main>:
 * Initialize system, UART console, network then start weather client.
 *
 * \return Program return value.
 */
int main(void)
{
  406520:	b500      	push	{lr}
  406522:	b08b      	sub	sp, #44	; 0x2c
	/* Initialize the board. */
	sysclk_init();
  406524:	4b3c      	ldr	r3, [pc, #240]	; (406618 <main+0xf8>)
  406526:	4798      	blx	r3
	board_init();
  406528:	4b3c      	ldr	r3, [pc, #240]	; (40661c <main+0xfc>)
  40652a:	4798      	blx	r3
  io_init();
  40652c:	4b3c      	ldr	r3, [pc, #240]	; (406620 <main+0x100>)
  40652e:	4798      	blx	r3
  406530:	200e      	movs	r0, #14
  406532:	4e3c      	ldr	r6, [pc, #240]	; (406624 <main+0x104>)
  406534:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  406536:	4d3c      	ldr	r5, [pc, #240]	; (406628 <main+0x108>)
  406538:	4b3c      	ldr	r3, [pc, #240]	; (40662c <main+0x10c>)
  40653a:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  40653c:	4a3c      	ldr	r2, [pc, #240]	; (406630 <main+0x110>)
  40653e:	4b3d      	ldr	r3, [pc, #244]	; (406634 <main+0x114>)
  406540:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  406542:	4a3d      	ldr	r2, [pc, #244]	; (406638 <main+0x118>)
  406544:	4b3d      	ldr	r3, [pc, #244]	; (40663c <main+0x11c>)
  406546:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  406548:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  40654c:	9304      	str	r3, [sp, #16]
	usart_settings.char_length = opt->charlength;
  40654e:	23c0      	movs	r3, #192	; 0xc0
  406550:	9305      	str	r3, [sp, #20]
	usart_settings.parity_type = opt->paritytype;
  406552:	f44f 6300 	mov.w	r3, #2048	; 0x800
  406556:	9306      	str	r3, [sp, #24]
	usart_settings.stop_bits= opt->stopbits;
  406558:	2400      	movs	r4, #0
  40655a:	9407      	str	r4, [sp, #28]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  40655c:	9408      	str	r4, [sp, #32]
  40655e:	200e      	movs	r0, #14
  406560:	47b0      	blx	r6
		usart_init_rs232(p_usart, &usart_settings,
  406562:	4a37      	ldr	r2, [pc, #220]	; (406640 <main+0x120>)
  406564:	a904      	add	r1, sp, #16
  406566:	4628      	mov	r0, r5
  406568:	4b36      	ldr	r3, [pc, #216]	; (406644 <main+0x124>)
  40656a:	4798      	blx	r3
		usart_enable_tx(p_usart);
  40656c:	4628      	mov	r0, r5
  40656e:	4b36      	ldr	r3, [pc, #216]	; (406648 <main+0x128>)
  406570:	4798      	blx	r3
		usart_enable_rx(p_usart);
  406572:	4628      	mov	r0, r5
  406574:	4b35      	ldr	r3, [pc, #212]	; (40664c <main+0x12c>)
  406576:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  406578:	4e35      	ldr	r6, [pc, #212]	; (406650 <main+0x130>)
  40657a:	6833      	ldr	r3, [r6, #0]
  40657c:	4621      	mov	r1, r4
  40657e:	6898      	ldr	r0, [r3, #8]
  406580:	4d34      	ldr	r5, [pc, #208]	; (406654 <main+0x134>)
  406582:	47a8      	blx	r5
	setbuf(stdin, NULL);
  406584:	6833      	ldr	r3, [r6, #0]
  406586:	4621      	mov	r1, r4
  406588:	6858      	ldr	r0, [r3, #4]
  40658a:	47a8      	blx	r5

	/* Initialize the UART console. */
	configure_console();
	printf(STRING_HEADER);
  40658c:	4832      	ldr	r0, [pc, #200]	; (406658 <main+0x138>)
  40658e:	4b33      	ldr	r3, [pc, #204]	; (40665c <main+0x13c>)
  406590:	4798      	blx	r3
//     pio_clear(BLUE_PIO, BLUE_PIO_IDX_MASK);
//     pio_clear(GREEN_PIO, GREEN_PIO_IDX_MASK);
//     pio_clear(RED_PIO, RED_PIO_IDX_MASK);
    //while(1){}

	if (xTaskCreate(task_wifi, "Wifi", TASK_WIFI_STACK_SIZE, NULL,
  406592:	9403      	str	r4, [sp, #12]
  406594:	9402      	str	r4, [sp, #8]
  406596:	9401      	str	r4, [sp, #4]
  406598:	9400      	str	r4, [sp, #0]
  40659a:	4623      	mov	r3, r4
  40659c:	f44f 6240 	mov.w	r2, #3072	; 0xc00
  4065a0:	492f      	ldr	r1, [pc, #188]	; (406660 <main+0x140>)
  4065a2:	4830      	ldr	r0, [pc, #192]	; (406664 <main+0x144>)
  4065a4:	4c30      	ldr	r4, [pc, #192]	; (406668 <main+0x148>)
  4065a6:	47a0      	blx	r4
  4065a8:	2801      	cmp	r0, #1
  4065aa:	d002      	beq.n	4065b2 <main+0x92>
	TASK_WIFI_STACK_PRIORITY, NULL) != pdPASS) {
		printf("Failed to create Wifi task\r\n");
  4065ac:	482f      	ldr	r0, [pc, #188]	; (40666c <main+0x14c>)
  4065ae:	4b2b      	ldr	r3, [pc, #172]	; (40665c <main+0x13c>)
  4065b0:	4798      	blx	r3
	}
  if (xTaskCreate(task_json, "JSON", TASK_JSON_STACK_SIZE, NULL,
  4065b2:	2300      	movs	r3, #0
  4065b4:	9303      	str	r3, [sp, #12]
  4065b6:	9302      	str	r3, [sp, #8]
  4065b8:	9301      	str	r3, [sp, #4]
  4065ba:	9300      	str	r3, [sp, #0]
  4065bc:	f44f 6240 	mov.w	r2, #3072	; 0xc00
  4065c0:	492b      	ldr	r1, [pc, #172]	; (406670 <main+0x150>)
  4065c2:	482c      	ldr	r0, [pc, #176]	; (406674 <main+0x154>)
  4065c4:	4c28      	ldr	r4, [pc, #160]	; (406668 <main+0x148>)
  4065c6:	47a0      	blx	r4
  4065c8:	2801      	cmp	r0, #1
  4065ca:	d002      	beq.n	4065d2 <main+0xb2>
  TASK_JSON_STACK_PRIORITY, NULL) != pdPASS) {
    printf("Failed to create JSON task\r\n");
  4065cc:	482a      	ldr	r0, [pc, #168]	; (406678 <main+0x158>)
  4065ce:	4b23      	ldr	r3, [pc, #140]	; (40665c <main+0x13c>)
  4065d0:	4798      	blx	r3
  }
  if (xTaskCreate(task_lcd, "LCD", TASK_LCD_STACK_SIZE, NULL,
  4065d2:	2300      	movs	r3, #0
  4065d4:	9303      	str	r3, [sp, #12]
  4065d6:	9302      	str	r3, [sp, #8]
  4065d8:	9301      	str	r3, [sp, #4]
  4065da:	9300      	str	r3, [sp, #0]
  4065dc:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4065e0:	4926      	ldr	r1, [pc, #152]	; (40667c <main+0x15c>)
  4065e2:	4827      	ldr	r0, [pc, #156]	; (406680 <main+0x160>)
  4065e4:	4c20      	ldr	r4, [pc, #128]	; (406668 <main+0x148>)
  4065e6:	47a0      	blx	r4
  4065e8:	2801      	cmp	r0, #1
  4065ea:	d002      	beq.n	4065f2 <main+0xd2>
  TASK_LCD_STACK_PRIORITY, NULL) != pdPASS) {
    printf("Failed to create LCD task\r\n");
  4065ec:	4825      	ldr	r0, [pc, #148]	; (406684 <main+0x164>)
  4065ee:	4b1b      	ldr	r3, [pc, #108]	; (40665c <main+0x13c>)
  4065f0:	4798      	blx	r3
  }
  if (xTaskCreate(task_alarme, "ALARME", TASK_ALARME_STACK_SIZE, NULL,
  4065f2:	2300      	movs	r3, #0
  4065f4:	9303      	str	r3, [sp, #12]
  4065f6:	9302      	str	r3, [sp, #8]
  4065f8:	9301      	str	r3, [sp, #4]
  4065fa:	9300      	str	r3, [sp, #0]
  4065fc:	f44f 6280 	mov.w	r2, #1024	; 0x400
  406600:	4921      	ldr	r1, [pc, #132]	; (406688 <main+0x168>)
  406602:	4822      	ldr	r0, [pc, #136]	; (40668c <main+0x16c>)
  406604:	4c18      	ldr	r4, [pc, #96]	; (406668 <main+0x148>)
  406606:	47a0      	blx	r4
  406608:	2801      	cmp	r0, #1
  40660a:	d002      	beq.n	406612 <main+0xf2>
  TASK_ALARME_STACK_PRIORITY, NULL) != pdPASS) {
    printf("Failed to create ALARME task\r\n");
  40660c:	4820      	ldr	r0, [pc, #128]	; (406690 <main+0x170>)
  40660e:	4b13      	ldr	r3, [pc, #76]	; (40665c <main+0x13c>)
  406610:	4798      	blx	r3
  }

	vTaskStartScheduler();
  406612:	4b20      	ldr	r3, [pc, #128]	; (406694 <main+0x174>)
  406614:	4798      	blx	r3
  406616:	e7fe      	b.n	406616 <main+0xf6>
  406618:	004050e1 	.word	0x004050e1
  40661c:	004051dd 	.word	0x004051dd
  406620:	004064ad 	.word	0x004064ad
  406624:	004058b1 	.word	0x004058b1
  406628:	40028000 	.word	0x40028000
  40662c:	2040f4c0 	.word	0x2040f4c0
  406630:	004063a9 	.word	0x004063a9
  406634:	2040f4bc 	.word	0x2040f4bc
  406638:	004062cd 	.word	0x004062cd
  40663c:	2040f4b8 	.word	0x2040f4b8
  406640:	08f0d180 	.word	0x08f0d180
  406644:	00405b01 	.word	0x00405b01
  406648:	00405b55 	.word	0x00405b55
  40664c:	00405b5b 	.word	0x00405b5b
  406650:	20400048 	.word	0x20400048
  406654:	004068e1 	.word	0x004068e1
  406658:	0040d994 	.word	0x0040d994
  40665c:	004066e9 	.word	0x004066e9
  406660:	0040d9f8 	.word	0x0040d9f8
  406664:	00405f8d 	.word	0x00405f8d
  406668:	00401629 	.word	0x00401629
  40666c:	0040da00 	.word	0x0040da00
  406670:	0040da20 	.word	0x0040da20
  406674:	00405f15 	.word	0x00405f15
  406678:	0040da28 	.word	0x0040da28
  40667c:	0040da48 	.word	0x0040da48
  406680:	00405edd 	.word	0x00405edd
  406684:	0040da4c 	.word	0x0040da4c
  406688:	0040da68 	.word	0x0040da68
  40668c:	00405e65 	.word	0x00405e65
  406690:	0040da70 	.word	0x0040da70
  406694:	0040185d 	.word	0x0040185d

00406698 <__libc_init_array>:
  406698:	b570      	push	{r4, r5, r6, lr}
  40669a:	4e0f      	ldr	r6, [pc, #60]	; (4066d8 <__libc_init_array+0x40>)
  40669c:	4d0f      	ldr	r5, [pc, #60]	; (4066dc <__libc_init_array+0x44>)
  40669e:	1b76      	subs	r6, r6, r5
  4066a0:	10b6      	asrs	r6, r6, #2
  4066a2:	bf18      	it	ne
  4066a4:	2400      	movne	r4, #0
  4066a6:	d005      	beq.n	4066b4 <__libc_init_array+0x1c>
  4066a8:	3401      	adds	r4, #1
  4066aa:	f855 3b04 	ldr.w	r3, [r5], #4
  4066ae:	4798      	blx	r3
  4066b0:	42a6      	cmp	r6, r4
  4066b2:	d1f9      	bne.n	4066a8 <__libc_init_array+0x10>
  4066b4:	4e0a      	ldr	r6, [pc, #40]	; (4066e0 <__libc_init_array+0x48>)
  4066b6:	4d0b      	ldr	r5, [pc, #44]	; (4066e4 <__libc_init_array+0x4c>)
  4066b8:	1b76      	subs	r6, r6, r5
  4066ba:	f007 fc59 	bl	40df70 <_init>
  4066be:	10b6      	asrs	r6, r6, #2
  4066c0:	bf18      	it	ne
  4066c2:	2400      	movne	r4, #0
  4066c4:	d006      	beq.n	4066d4 <__libc_init_array+0x3c>
  4066c6:	3401      	adds	r4, #1
  4066c8:	f855 3b04 	ldr.w	r3, [r5], #4
  4066cc:	4798      	blx	r3
  4066ce:	42a6      	cmp	r6, r4
  4066d0:	d1f9      	bne.n	4066c6 <__libc_init_array+0x2e>
  4066d2:	bd70      	pop	{r4, r5, r6, pc}
  4066d4:	bd70      	pop	{r4, r5, r6, pc}
  4066d6:	bf00      	nop
  4066d8:	0040df7c 	.word	0x0040df7c
  4066dc:	0040df7c 	.word	0x0040df7c
  4066e0:	0040df84 	.word	0x0040df84
  4066e4:	0040df7c 	.word	0x0040df7c

004066e8 <iprintf>:
  4066e8:	b40f      	push	{r0, r1, r2, r3}
  4066ea:	b500      	push	{lr}
  4066ec:	4907      	ldr	r1, [pc, #28]	; (40670c <iprintf+0x24>)
  4066ee:	b083      	sub	sp, #12
  4066f0:	ab04      	add	r3, sp, #16
  4066f2:	6808      	ldr	r0, [r1, #0]
  4066f4:	f853 2b04 	ldr.w	r2, [r3], #4
  4066f8:	6881      	ldr	r1, [r0, #8]
  4066fa:	9301      	str	r3, [sp, #4]
  4066fc:	f001 fdb6 	bl	40826c <_vfiprintf_r>
  406700:	b003      	add	sp, #12
  406702:	f85d eb04 	ldr.w	lr, [sp], #4
  406706:	b004      	add	sp, #16
  406708:	4770      	bx	lr
  40670a:	bf00      	nop
  40670c:	20400048 	.word	0x20400048

00406710 <memcpy>:
  406710:	4684      	mov	ip, r0
  406712:	ea41 0300 	orr.w	r3, r1, r0
  406716:	f013 0303 	ands.w	r3, r3, #3
  40671a:	d16d      	bne.n	4067f8 <memcpy+0xe8>
  40671c:	3a40      	subs	r2, #64	; 0x40
  40671e:	d341      	bcc.n	4067a4 <memcpy+0x94>
  406720:	f851 3b04 	ldr.w	r3, [r1], #4
  406724:	f840 3b04 	str.w	r3, [r0], #4
  406728:	f851 3b04 	ldr.w	r3, [r1], #4
  40672c:	f840 3b04 	str.w	r3, [r0], #4
  406730:	f851 3b04 	ldr.w	r3, [r1], #4
  406734:	f840 3b04 	str.w	r3, [r0], #4
  406738:	f851 3b04 	ldr.w	r3, [r1], #4
  40673c:	f840 3b04 	str.w	r3, [r0], #4
  406740:	f851 3b04 	ldr.w	r3, [r1], #4
  406744:	f840 3b04 	str.w	r3, [r0], #4
  406748:	f851 3b04 	ldr.w	r3, [r1], #4
  40674c:	f840 3b04 	str.w	r3, [r0], #4
  406750:	f851 3b04 	ldr.w	r3, [r1], #4
  406754:	f840 3b04 	str.w	r3, [r0], #4
  406758:	f851 3b04 	ldr.w	r3, [r1], #4
  40675c:	f840 3b04 	str.w	r3, [r0], #4
  406760:	f851 3b04 	ldr.w	r3, [r1], #4
  406764:	f840 3b04 	str.w	r3, [r0], #4
  406768:	f851 3b04 	ldr.w	r3, [r1], #4
  40676c:	f840 3b04 	str.w	r3, [r0], #4
  406770:	f851 3b04 	ldr.w	r3, [r1], #4
  406774:	f840 3b04 	str.w	r3, [r0], #4
  406778:	f851 3b04 	ldr.w	r3, [r1], #4
  40677c:	f840 3b04 	str.w	r3, [r0], #4
  406780:	f851 3b04 	ldr.w	r3, [r1], #4
  406784:	f840 3b04 	str.w	r3, [r0], #4
  406788:	f851 3b04 	ldr.w	r3, [r1], #4
  40678c:	f840 3b04 	str.w	r3, [r0], #4
  406790:	f851 3b04 	ldr.w	r3, [r1], #4
  406794:	f840 3b04 	str.w	r3, [r0], #4
  406798:	f851 3b04 	ldr.w	r3, [r1], #4
  40679c:	f840 3b04 	str.w	r3, [r0], #4
  4067a0:	3a40      	subs	r2, #64	; 0x40
  4067a2:	d2bd      	bcs.n	406720 <memcpy+0x10>
  4067a4:	3230      	adds	r2, #48	; 0x30
  4067a6:	d311      	bcc.n	4067cc <memcpy+0xbc>
  4067a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4067ac:	f840 3b04 	str.w	r3, [r0], #4
  4067b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4067b4:	f840 3b04 	str.w	r3, [r0], #4
  4067b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4067bc:	f840 3b04 	str.w	r3, [r0], #4
  4067c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4067c4:	f840 3b04 	str.w	r3, [r0], #4
  4067c8:	3a10      	subs	r2, #16
  4067ca:	d2ed      	bcs.n	4067a8 <memcpy+0x98>
  4067cc:	320c      	adds	r2, #12
  4067ce:	d305      	bcc.n	4067dc <memcpy+0xcc>
  4067d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4067d4:	f840 3b04 	str.w	r3, [r0], #4
  4067d8:	3a04      	subs	r2, #4
  4067da:	d2f9      	bcs.n	4067d0 <memcpy+0xc0>
  4067dc:	3204      	adds	r2, #4
  4067de:	d008      	beq.n	4067f2 <memcpy+0xe2>
  4067e0:	07d2      	lsls	r2, r2, #31
  4067e2:	bf1c      	itt	ne
  4067e4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4067e8:	f800 3b01 	strbne.w	r3, [r0], #1
  4067ec:	d301      	bcc.n	4067f2 <memcpy+0xe2>
  4067ee:	880b      	ldrh	r3, [r1, #0]
  4067f0:	8003      	strh	r3, [r0, #0]
  4067f2:	4660      	mov	r0, ip
  4067f4:	4770      	bx	lr
  4067f6:	bf00      	nop
  4067f8:	2a08      	cmp	r2, #8
  4067fa:	d313      	bcc.n	406824 <memcpy+0x114>
  4067fc:	078b      	lsls	r3, r1, #30
  4067fe:	d08d      	beq.n	40671c <memcpy+0xc>
  406800:	f010 0303 	ands.w	r3, r0, #3
  406804:	d08a      	beq.n	40671c <memcpy+0xc>
  406806:	f1c3 0304 	rsb	r3, r3, #4
  40680a:	1ad2      	subs	r2, r2, r3
  40680c:	07db      	lsls	r3, r3, #31
  40680e:	bf1c      	itt	ne
  406810:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406814:	f800 3b01 	strbne.w	r3, [r0], #1
  406818:	d380      	bcc.n	40671c <memcpy+0xc>
  40681a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40681e:	f820 3b02 	strh.w	r3, [r0], #2
  406822:	e77b      	b.n	40671c <memcpy+0xc>
  406824:	3a04      	subs	r2, #4
  406826:	d3d9      	bcc.n	4067dc <memcpy+0xcc>
  406828:	3a01      	subs	r2, #1
  40682a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40682e:	f800 3b01 	strb.w	r3, [r0], #1
  406832:	d2f9      	bcs.n	406828 <memcpy+0x118>
  406834:	780b      	ldrb	r3, [r1, #0]
  406836:	7003      	strb	r3, [r0, #0]
  406838:	784b      	ldrb	r3, [r1, #1]
  40683a:	7043      	strb	r3, [r0, #1]
  40683c:	788b      	ldrb	r3, [r1, #2]
  40683e:	7083      	strb	r3, [r0, #2]
  406840:	4660      	mov	r0, ip
  406842:	4770      	bx	lr

00406844 <memset>:
  406844:	b470      	push	{r4, r5, r6}
  406846:	0786      	lsls	r6, r0, #30
  406848:	d046      	beq.n	4068d8 <memset+0x94>
  40684a:	1e54      	subs	r4, r2, #1
  40684c:	2a00      	cmp	r2, #0
  40684e:	d041      	beq.n	4068d4 <memset+0x90>
  406850:	b2ca      	uxtb	r2, r1
  406852:	4603      	mov	r3, r0
  406854:	e002      	b.n	40685c <memset+0x18>
  406856:	f114 34ff 	adds.w	r4, r4, #4294967295
  40685a:	d33b      	bcc.n	4068d4 <memset+0x90>
  40685c:	f803 2b01 	strb.w	r2, [r3], #1
  406860:	079d      	lsls	r5, r3, #30
  406862:	d1f8      	bne.n	406856 <memset+0x12>
  406864:	2c03      	cmp	r4, #3
  406866:	d92e      	bls.n	4068c6 <memset+0x82>
  406868:	b2cd      	uxtb	r5, r1
  40686a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40686e:	2c0f      	cmp	r4, #15
  406870:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  406874:	d919      	bls.n	4068aa <memset+0x66>
  406876:	f103 0210 	add.w	r2, r3, #16
  40687a:	4626      	mov	r6, r4
  40687c:	3e10      	subs	r6, #16
  40687e:	2e0f      	cmp	r6, #15
  406880:	f842 5c10 	str.w	r5, [r2, #-16]
  406884:	f842 5c0c 	str.w	r5, [r2, #-12]
  406888:	f842 5c08 	str.w	r5, [r2, #-8]
  40688c:	f842 5c04 	str.w	r5, [r2, #-4]
  406890:	f102 0210 	add.w	r2, r2, #16
  406894:	d8f2      	bhi.n	40687c <memset+0x38>
  406896:	f1a4 0210 	sub.w	r2, r4, #16
  40689a:	f022 020f 	bic.w	r2, r2, #15
  40689e:	f004 040f 	and.w	r4, r4, #15
  4068a2:	3210      	adds	r2, #16
  4068a4:	2c03      	cmp	r4, #3
  4068a6:	4413      	add	r3, r2
  4068a8:	d90d      	bls.n	4068c6 <memset+0x82>
  4068aa:	461e      	mov	r6, r3
  4068ac:	4622      	mov	r2, r4
  4068ae:	3a04      	subs	r2, #4
  4068b0:	2a03      	cmp	r2, #3
  4068b2:	f846 5b04 	str.w	r5, [r6], #4
  4068b6:	d8fa      	bhi.n	4068ae <memset+0x6a>
  4068b8:	1f22      	subs	r2, r4, #4
  4068ba:	f022 0203 	bic.w	r2, r2, #3
  4068be:	3204      	adds	r2, #4
  4068c0:	4413      	add	r3, r2
  4068c2:	f004 0403 	and.w	r4, r4, #3
  4068c6:	b12c      	cbz	r4, 4068d4 <memset+0x90>
  4068c8:	b2c9      	uxtb	r1, r1
  4068ca:	441c      	add	r4, r3
  4068cc:	f803 1b01 	strb.w	r1, [r3], #1
  4068d0:	429c      	cmp	r4, r3
  4068d2:	d1fb      	bne.n	4068cc <memset+0x88>
  4068d4:	bc70      	pop	{r4, r5, r6}
  4068d6:	4770      	bx	lr
  4068d8:	4614      	mov	r4, r2
  4068da:	4603      	mov	r3, r0
  4068dc:	e7c2      	b.n	406864 <memset+0x20>
  4068de:	bf00      	nop

004068e0 <setbuf>:
  4068e0:	2900      	cmp	r1, #0
  4068e2:	bf0c      	ite	eq
  4068e4:	2202      	moveq	r2, #2
  4068e6:	2200      	movne	r2, #0
  4068e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4068ec:	f000 b800 	b.w	4068f0 <setvbuf>

004068f0 <setvbuf>:
  4068f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4068f4:	4c61      	ldr	r4, [pc, #388]	; (406a7c <setvbuf+0x18c>)
  4068f6:	6825      	ldr	r5, [r4, #0]
  4068f8:	b083      	sub	sp, #12
  4068fa:	4604      	mov	r4, r0
  4068fc:	460f      	mov	r7, r1
  4068fe:	4690      	mov	r8, r2
  406900:	461e      	mov	r6, r3
  406902:	b115      	cbz	r5, 40690a <setvbuf+0x1a>
  406904:	6bab      	ldr	r3, [r5, #56]	; 0x38
  406906:	2b00      	cmp	r3, #0
  406908:	d064      	beq.n	4069d4 <setvbuf+0xe4>
  40690a:	f1b8 0f02 	cmp.w	r8, #2
  40690e:	d006      	beq.n	40691e <setvbuf+0x2e>
  406910:	f1b8 0f01 	cmp.w	r8, #1
  406914:	f200 809f 	bhi.w	406a56 <setvbuf+0x166>
  406918:	2e00      	cmp	r6, #0
  40691a:	f2c0 809c 	blt.w	406a56 <setvbuf+0x166>
  40691e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  406920:	07d8      	lsls	r0, r3, #31
  406922:	d534      	bpl.n	40698e <setvbuf+0x9e>
  406924:	4621      	mov	r1, r4
  406926:	4628      	mov	r0, r5
  406928:	f003 fbfc 	bl	40a124 <_fflush_r>
  40692c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40692e:	b141      	cbz	r1, 406942 <setvbuf+0x52>
  406930:	f104 0340 	add.w	r3, r4, #64	; 0x40
  406934:	4299      	cmp	r1, r3
  406936:	d002      	beq.n	40693e <setvbuf+0x4e>
  406938:	4628      	mov	r0, r5
  40693a:	f003 fd71 	bl	40a420 <_free_r>
  40693e:	2300      	movs	r3, #0
  406940:	6323      	str	r3, [r4, #48]	; 0x30
  406942:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406946:	2200      	movs	r2, #0
  406948:	61a2      	str	r2, [r4, #24]
  40694a:	6062      	str	r2, [r4, #4]
  40694c:	061a      	lsls	r2, r3, #24
  40694e:	d43a      	bmi.n	4069c6 <setvbuf+0xd6>
  406950:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  406954:	f023 0303 	bic.w	r3, r3, #3
  406958:	f1b8 0f02 	cmp.w	r8, #2
  40695c:	81a3      	strh	r3, [r4, #12]
  40695e:	d01d      	beq.n	40699c <setvbuf+0xac>
  406960:	ab01      	add	r3, sp, #4
  406962:	466a      	mov	r2, sp
  406964:	4621      	mov	r1, r4
  406966:	4628      	mov	r0, r5
  406968:	f004 f806 	bl	40a978 <__swhatbuf_r>
  40696c:	89a3      	ldrh	r3, [r4, #12]
  40696e:	4318      	orrs	r0, r3
  406970:	81a0      	strh	r0, [r4, #12]
  406972:	2e00      	cmp	r6, #0
  406974:	d132      	bne.n	4069dc <setvbuf+0xec>
  406976:	9e00      	ldr	r6, [sp, #0]
  406978:	4630      	mov	r0, r6
  40697a:	f004 f875 	bl	40aa68 <malloc>
  40697e:	4607      	mov	r7, r0
  406980:	2800      	cmp	r0, #0
  406982:	d06b      	beq.n	406a5c <setvbuf+0x16c>
  406984:	89a3      	ldrh	r3, [r4, #12]
  406986:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40698a:	81a3      	strh	r3, [r4, #12]
  40698c:	e028      	b.n	4069e0 <setvbuf+0xf0>
  40698e:	89a3      	ldrh	r3, [r4, #12]
  406990:	0599      	lsls	r1, r3, #22
  406992:	d4c7      	bmi.n	406924 <setvbuf+0x34>
  406994:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406996:	f003 ffeb 	bl	40a970 <__retarget_lock_acquire_recursive>
  40699a:	e7c3      	b.n	406924 <setvbuf+0x34>
  40699c:	2500      	movs	r5, #0
  40699e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  4069a0:	2600      	movs	r6, #0
  4069a2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4069a6:	f043 0302 	orr.w	r3, r3, #2
  4069aa:	2001      	movs	r0, #1
  4069ac:	60a6      	str	r6, [r4, #8]
  4069ae:	07ce      	lsls	r6, r1, #31
  4069b0:	81a3      	strh	r3, [r4, #12]
  4069b2:	6022      	str	r2, [r4, #0]
  4069b4:	6122      	str	r2, [r4, #16]
  4069b6:	6160      	str	r0, [r4, #20]
  4069b8:	d401      	bmi.n	4069be <setvbuf+0xce>
  4069ba:	0598      	lsls	r0, r3, #22
  4069bc:	d53e      	bpl.n	406a3c <setvbuf+0x14c>
  4069be:	4628      	mov	r0, r5
  4069c0:	b003      	add	sp, #12
  4069c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4069c6:	6921      	ldr	r1, [r4, #16]
  4069c8:	4628      	mov	r0, r5
  4069ca:	f003 fd29 	bl	40a420 <_free_r>
  4069ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4069d2:	e7bd      	b.n	406950 <setvbuf+0x60>
  4069d4:	4628      	mov	r0, r5
  4069d6:	f003 fbfd 	bl	40a1d4 <__sinit>
  4069da:	e796      	b.n	40690a <setvbuf+0x1a>
  4069dc:	2f00      	cmp	r7, #0
  4069de:	d0cb      	beq.n	406978 <setvbuf+0x88>
  4069e0:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4069e2:	2b00      	cmp	r3, #0
  4069e4:	d033      	beq.n	406a4e <setvbuf+0x15e>
  4069e6:	9b00      	ldr	r3, [sp, #0]
  4069e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4069ec:	6027      	str	r7, [r4, #0]
  4069ee:	429e      	cmp	r6, r3
  4069f0:	bf1c      	itt	ne
  4069f2:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  4069f6:	81a2      	strhne	r2, [r4, #12]
  4069f8:	f1b8 0f01 	cmp.w	r8, #1
  4069fc:	bf04      	itt	eq
  4069fe:	f042 0201 	orreq.w	r2, r2, #1
  406a02:	81a2      	strheq	r2, [r4, #12]
  406a04:	b292      	uxth	r2, r2
  406a06:	f012 0308 	ands.w	r3, r2, #8
  406a0a:	6127      	str	r7, [r4, #16]
  406a0c:	6166      	str	r6, [r4, #20]
  406a0e:	d00e      	beq.n	406a2e <setvbuf+0x13e>
  406a10:	07d1      	lsls	r1, r2, #31
  406a12:	d51a      	bpl.n	406a4a <setvbuf+0x15a>
  406a14:	6e65      	ldr	r5, [r4, #100]	; 0x64
  406a16:	4276      	negs	r6, r6
  406a18:	2300      	movs	r3, #0
  406a1a:	f015 0501 	ands.w	r5, r5, #1
  406a1e:	61a6      	str	r6, [r4, #24]
  406a20:	60a3      	str	r3, [r4, #8]
  406a22:	d009      	beq.n	406a38 <setvbuf+0x148>
  406a24:	2500      	movs	r5, #0
  406a26:	4628      	mov	r0, r5
  406a28:	b003      	add	sp, #12
  406a2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  406a2e:	60a3      	str	r3, [r4, #8]
  406a30:	6e65      	ldr	r5, [r4, #100]	; 0x64
  406a32:	f015 0501 	ands.w	r5, r5, #1
  406a36:	d1f5      	bne.n	406a24 <setvbuf+0x134>
  406a38:	0593      	lsls	r3, r2, #22
  406a3a:	d4c0      	bmi.n	4069be <setvbuf+0xce>
  406a3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  406a3e:	f003 ff99 	bl	40a974 <__retarget_lock_release_recursive>
  406a42:	4628      	mov	r0, r5
  406a44:	b003      	add	sp, #12
  406a46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  406a4a:	60a6      	str	r6, [r4, #8]
  406a4c:	e7f0      	b.n	406a30 <setvbuf+0x140>
  406a4e:	4628      	mov	r0, r5
  406a50:	f003 fbc0 	bl	40a1d4 <__sinit>
  406a54:	e7c7      	b.n	4069e6 <setvbuf+0xf6>
  406a56:	f04f 35ff 	mov.w	r5, #4294967295
  406a5a:	e7b0      	b.n	4069be <setvbuf+0xce>
  406a5c:	f8dd 9000 	ldr.w	r9, [sp]
  406a60:	45b1      	cmp	r9, r6
  406a62:	d004      	beq.n	406a6e <setvbuf+0x17e>
  406a64:	4648      	mov	r0, r9
  406a66:	f003 ffff 	bl	40aa68 <malloc>
  406a6a:	4607      	mov	r7, r0
  406a6c:	b920      	cbnz	r0, 406a78 <setvbuf+0x188>
  406a6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406a72:	f04f 35ff 	mov.w	r5, #4294967295
  406a76:	e792      	b.n	40699e <setvbuf+0xae>
  406a78:	464e      	mov	r6, r9
  406a7a:	e783      	b.n	406984 <setvbuf+0x94>
  406a7c:	20400048 	.word	0x20400048

00406a80 <sprintf>:
  406a80:	b40e      	push	{r1, r2, r3}
  406a82:	b5f0      	push	{r4, r5, r6, r7, lr}
  406a84:	b09c      	sub	sp, #112	; 0x70
  406a86:	ab21      	add	r3, sp, #132	; 0x84
  406a88:	490f      	ldr	r1, [pc, #60]	; (406ac8 <sprintf+0x48>)
  406a8a:	f853 2b04 	ldr.w	r2, [r3], #4
  406a8e:	9301      	str	r3, [sp, #4]
  406a90:	4605      	mov	r5, r0
  406a92:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  406a96:	6808      	ldr	r0, [r1, #0]
  406a98:	9502      	str	r5, [sp, #8]
  406a9a:	f44f 7702 	mov.w	r7, #520	; 0x208
  406a9e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  406aa2:	a902      	add	r1, sp, #8
  406aa4:	9506      	str	r5, [sp, #24]
  406aa6:	f8ad 7014 	strh.w	r7, [sp, #20]
  406aaa:	9404      	str	r4, [sp, #16]
  406aac:	9407      	str	r4, [sp, #28]
  406aae:	f8ad 6016 	strh.w	r6, [sp, #22]
  406ab2:	f000 f96d 	bl	406d90 <_svfprintf_r>
  406ab6:	9b02      	ldr	r3, [sp, #8]
  406ab8:	2200      	movs	r2, #0
  406aba:	701a      	strb	r2, [r3, #0]
  406abc:	b01c      	add	sp, #112	; 0x70
  406abe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  406ac2:	b003      	add	sp, #12
  406ac4:	4770      	bx	lr
  406ac6:	bf00      	nop
  406ac8:	20400048 	.word	0x20400048

00406acc <strcpy>:
  406acc:	ea80 0201 	eor.w	r2, r0, r1
  406ad0:	4684      	mov	ip, r0
  406ad2:	f012 0f03 	tst.w	r2, #3
  406ad6:	d14f      	bne.n	406b78 <strcpy+0xac>
  406ad8:	f011 0f03 	tst.w	r1, #3
  406adc:	d132      	bne.n	406b44 <strcpy+0x78>
  406ade:	f84d 4d04 	str.w	r4, [sp, #-4]!
  406ae2:	f011 0f04 	tst.w	r1, #4
  406ae6:	f851 3b04 	ldr.w	r3, [r1], #4
  406aea:	d00b      	beq.n	406b04 <strcpy+0x38>
  406aec:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  406af0:	439a      	bics	r2, r3
  406af2:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  406af6:	bf04      	itt	eq
  406af8:	f84c 3b04 	streq.w	r3, [ip], #4
  406afc:	f851 3b04 	ldreq.w	r3, [r1], #4
  406b00:	d116      	bne.n	406b30 <strcpy+0x64>
  406b02:	bf00      	nop
  406b04:	f851 4b04 	ldr.w	r4, [r1], #4
  406b08:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  406b0c:	439a      	bics	r2, r3
  406b0e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  406b12:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  406b16:	d10b      	bne.n	406b30 <strcpy+0x64>
  406b18:	f84c 3b04 	str.w	r3, [ip], #4
  406b1c:	43a2      	bics	r2, r4
  406b1e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  406b22:	bf04      	itt	eq
  406b24:	f851 3b04 	ldreq.w	r3, [r1], #4
  406b28:	f84c 4b04 	streq.w	r4, [ip], #4
  406b2c:	d0ea      	beq.n	406b04 <strcpy+0x38>
  406b2e:	4623      	mov	r3, r4
  406b30:	f80c 3b01 	strb.w	r3, [ip], #1
  406b34:	f013 0fff 	tst.w	r3, #255	; 0xff
  406b38:	ea4f 2333 	mov.w	r3, r3, ror #8
  406b3c:	d1f8      	bne.n	406b30 <strcpy+0x64>
  406b3e:	f85d 4b04 	ldr.w	r4, [sp], #4
  406b42:	4770      	bx	lr
  406b44:	f011 0f01 	tst.w	r1, #1
  406b48:	d006      	beq.n	406b58 <strcpy+0x8c>
  406b4a:	f811 2b01 	ldrb.w	r2, [r1], #1
  406b4e:	f80c 2b01 	strb.w	r2, [ip], #1
  406b52:	2a00      	cmp	r2, #0
  406b54:	bf08      	it	eq
  406b56:	4770      	bxeq	lr
  406b58:	f011 0f02 	tst.w	r1, #2
  406b5c:	d0bf      	beq.n	406ade <strcpy+0x12>
  406b5e:	f831 2b02 	ldrh.w	r2, [r1], #2
  406b62:	f012 0fff 	tst.w	r2, #255	; 0xff
  406b66:	bf16      	itet	ne
  406b68:	f82c 2b02 	strhne.w	r2, [ip], #2
  406b6c:	f88c 2000 	strbeq.w	r2, [ip]
  406b70:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  406b74:	d1b3      	bne.n	406ade <strcpy+0x12>
  406b76:	4770      	bx	lr
  406b78:	f811 2b01 	ldrb.w	r2, [r1], #1
  406b7c:	f80c 2b01 	strb.w	r2, [ip], #1
  406b80:	2a00      	cmp	r2, #0
  406b82:	d1f9      	bne.n	406b78 <strcpy+0xac>
  406b84:	4770      	bx	lr
  406b86:	bf00      	nop
	...

00406bc0 <strlen>:
  406bc0:	f890 f000 	pld	[r0]
  406bc4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  406bc8:	f020 0107 	bic.w	r1, r0, #7
  406bcc:	f06f 0c00 	mvn.w	ip, #0
  406bd0:	f010 0407 	ands.w	r4, r0, #7
  406bd4:	f891 f020 	pld	[r1, #32]
  406bd8:	f040 8049 	bne.w	406c6e <strlen+0xae>
  406bdc:	f04f 0400 	mov.w	r4, #0
  406be0:	f06f 0007 	mvn.w	r0, #7
  406be4:	e9d1 2300 	ldrd	r2, r3, [r1]
  406be8:	f891 f040 	pld	[r1, #64]	; 0x40
  406bec:	f100 0008 	add.w	r0, r0, #8
  406bf0:	fa82 f24c 	uadd8	r2, r2, ip
  406bf4:	faa4 f28c 	sel	r2, r4, ip
  406bf8:	fa83 f34c 	uadd8	r3, r3, ip
  406bfc:	faa2 f38c 	sel	r3, r2, ip
  406c00:	bb4b      	cbnz	r3, 406c56 <strlen+0x96>
  406c02:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  406c06:	fa82 f24c 	uadd8	r2, r2, ip
  406c0a:	f100 0008 	add.w	r0, r0, #8
  406c0e:	faa4 f28c 	sel	r2, r4, ip
  406c12:	fa83 f34c 	uadd8	r3, r3, ip
  406c16:	faa2 f38c 	sel	r3, r2, ip
  406c1a:	b9e3      	cbnz	r3, 406c56 <strlen+0x96>
  406c1c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  406c20:	fa82 f24c 	uadd8	r2, r2, ip
  406c24:	f100 0008 	add.w	r0, r0, #8
  406c28:	faa4 f28c 	sel	r2, r4, ip
  406c2c:	fa83 f34c 	uadd8	r3, r3, ip
  406c30:	faa2 f38c 	sel	r3, r2, ip
  406c34:	b97b      	cbnz	r3, 406c56 <strlen+0x96>
  406c36:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  406c3a:	f101 0120 	add.w	r1, r1, #32
  406c3e:	fa82 f24c 	uadd8	r2, r2, ip
  406c42:	f100 0008 	add.w	r0, r0, #8
  406c46:	faa4 f28c 	sel	r2, r4, ip
  406c4a:	fa83 f34c 	uadd8	r3, r3, ip
  406c4e:	faa2 f38c 	sel	r3, r2, ip
  406c52:	2b00      	cmp	r3, #0
  406c54:	d0c6      	beq.n	406be4 <strlen+0x24>
  406c56:	2a00      	cmp	r2, #0
  406c58:	bf04      	itt	eq
  406c5a:	3004      	addeq	r0, #4
  406c5c:	461a      	moveq	r2, r3
  406c5e:	ba12      	rev	r2, r2
  406c60:	fab2 f282 	clz	r2, r2
  406c64:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  406c68:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  406c6c:	4770      	bx	lr
  406c6e:	e9d1 2300 	ldrd	r2, r3, [r1]
  406c72:	f004 0503 	and.w	r5, r4, #3
  406c76:	f1c4 0000 	rsb	r0, r4, #0
  406c7a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  406c7e:	f014 0f04 	tst.w	r4, #4
  406c82:	f891 f040 	pld	[r1, #64]	; 0x40
  406c86:	fa0c f505 	lsl.w	r5, ip, r5
  406c8a:	ea62 0205 	orn	r2, r2, r5
  406c8e:	bf1c      	itt	ne
  406c90:	ea63 0305 	ornne	r3, r3, r5
  406c94:	4662      	movne	r2, ip
  406c96:	f04f 0400 	mov.w	r4, #0
  406c9a:	e7a9      	b.n	406bf0 <strlen+0x30>

00406c9c <strncmp>:
  406c9c:	2a00      	cmp	r2, #0
  406c9e:	d041      	beq.n	406d24 <strncmp+0x88>
  406ca0:	ea40 0301 	orr.w	r3, r0, r1
  406ca4:	f013 0303 	ands.w	r3, r3, #3
  406ca8:	b4f0      	push	{r4, r5, r6, r7}
  406caa:	d125      	bne.n	406cf8 <strncmp+0x5c>
  406cac:	2a03      	cmp	r2, #3
  406cae:	d923      	bls.n	406cf8 <strncmp+0x5c>
  406cb0:	6804      	ldr	r4, [r0, #0]
  406cb2:	680d      	ldr	r5, [r1, #0]
  406cb4:	42ac      	cmp	r4, r5
  406cb6:	d11f      	bne.n	406cf8 <strncmp+0x5c>
  406cb8:	3a04      	subs	r2, #4
  406cba:	d038      	beq.n	406d2e <strncmp+0x92>
  406cbc:	f1a4 3501 	sub.w	r5, r4, #16843009	; 0x1010101
  406cc0:	ea25 0404 	bic.w	r4, r5, r4
  406cc4:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  406cc8:	d12e      	bne.n	406d28 <strncmp+0x8c>
  406cca:	3004      	adds	r0, #4
  406ccc:	3104      	adds	r1, #4
  406cce:	e00f      	b.n	406cf0 <strncmp+0x54>
  406cd0:	f850 3b04 	ldr.w	r3, [r0], #4
  406cd4:	680e      	ldr	r6, [r1, #0]
  406cd6:	f1a3 3401 	sub.w	r4, r3, #16843009	; 0x1010101
  406cda:	42b3      	cmp	r3, r6
  406cdc:	ea24 0403 	bic.w	r4, r4, r3
  406ce0:	f101 0104 	add.w	r1, r1, #4
  406ce4:	d126      	bne.n	406d34 <strncmp+0x98>
  406ce6:	3a04      	subs	r2, #4
  406ce8:	d021      	beq.n	406d2e <strncmp+0x92>
  406cea:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
  406cee:	d11b      	bne.n	406d28 <strncmp+0x8c>
  406cf0:	2a03      	cmp	r2, #3
  406cf2:	4607      	mov	r7, r0
  406cf4:	460d      	mov	r5, r1
  406cf6:	d8eb      	bhi.n	406cd0 <strncmp+0x34>
  406cf8:	7805      	ldrb	r5, [r0, #0]
  406cfa:	780c      	ldrb	r4, [r1, #0]
  406cfc:	42ac      	cmp	r4, r5
  406cfe:	f102 33ff 	add.w	r3, r2, #4294967295
  406d02:	d11a      	bne.n	406d3a <strncmp+0x9e>
  406d04:	b183      	cbz	r3, 406d28 <strncmp+0x8c>
  406d06:	b914      	cbnz	r4, 406d0e <strncmp+0x72>
  406d08:	e00e      	b.n	406d28 <strncmp+0x8c>
  406d0a:	b16b      	cbz	r3, 406d28 <strncmp+0x8c>
  406d0c:	b17a      	cbz	r2, 406d2e <strncmp+0x92>
  406d0e:	f810 2f01 	ldrb.w	r2, [r0, #1]!
  406d12:	f811 4f01 	ldrb.w	r4, [r1, #1]!
  406d16:	42a2      	cmp	r2, r4
  406d18:	f103 33ff 	add.w	r3, r3, #4294967295
  406d1c:	d0f5      	beq.n	406d0a <strncmp+0x6e>
  406d1e:	1b10      	subs	r0, r2, r4
  406d20:	bcf0      	pop	{r4, r5, r6, r7}
  406d22:	4770      	bx	lr
  406d24:	4610      	mov	r0, r2
  406d26:	4770      	bx	lr
  406d28:	2000      	movs	r0, #0
  406d2a:	bcf0      	pop	{r4, r5, r6, r7}
  406d2c:	4770      	bx	lr
  406d2e:	4610      	mov	r0, r2
  406d30:	bcf0      	pop	{r4, r5, r6, r7}
  406d32:	4770      	bx	lr
  406d34:	4629      	mov	r1, r5
  406d36:	4638      	mov	r0, r7
  406d38:	e7de      	b.n	406cf8 <strncmp+0x5c>
  406d3a:	462a      	mov	r2, r5
  406d3c:	e7ef      	b.n	406d1e <strncmp+0x82>
  406d3e:	bf00      	nop

00406d40 <strndup>:
  406d40:	4b02      	ldr	r3, [pc, #8]	; (406d4c <strndup+0xc>)
  406d42:	460a      	mov	r2, r1
  406d44:	4601      	mov	r1, r0
  406d46:	6818      	ldr	r0, [r3, #0]
  406d48:	f000 b802 	b.w	406d50 <_strndup_r>
  406d4c:	20400048 	.word	0x20400048

00406d50 <_strndup_r>:
  406d50:	b570      	push	{r4, r5, r6, lr}
  406d52:	460d      	mov	r5, r1
  406d54:	4614      	mov	r4, r2
  406d56:	b1ca      	cbz	r2, 406d8c <_strndup_r+0x3c>
  406d58:	780b      	ldrb	r3, [r1, #0]
  406d5a:	b1b3      	cbz	r3, 406d8a <_strndup_r+0x3a>
  406d5c:	188a      	adds	r2, r1, r2
  406d5e:	1c4b      	adds	r3, r1, #1
  406d60:	e003      	b.n	406d6a <_strndup_r+0x1a>
  406d62:	7819      	ldrb	r1, [r3, #0]
  406d64:	1c5c      	adds	r4, r3, #1
  406d66:	b111      	cbz	r1, 406d6e <_strndup_r+0x1e>
  406d68:	4623      	mov	r3, r4
  406d6a:	4293      	cmp	r3, r2
  406d6c:	d1f9      	bne.n	406d62 <_strndup_r+0x12>
  406d6e:	1b5c      	subs	r4, r3, r5
  406d70:	1c61      	adds	r1, r4, #1
  406d72:	f003 fe81 	bl	40aa78 <_malloc_r>
  406d76:	4606      	mov	r6, r0
  406d78:	b128      	cbz	r0, 406d86 <_strndup_r+0x36>
  406d7a:	4629      	mov	r1, r5
  406d7c:	4622      	mov	r2, r4
  406d7e:	f7ff fcc7 	bl	406710 <memcpy>
  406d82:	2300      	movs	r3, #0
  406d84:	5533      	strb	r3, [r6, r4]
  406d86:	4630      	mov	r0, r6
  406d88:	bd70      	pop	{r4, r5, r6, pc}
  406d8a:	461c      	mov	r4, r3
  406d8c:	2101      	movs	r1, #1
  406d8e:	e7f0      	b.n	406d72 <_strndup_r+0x22>

00406d90 <_svfprintf_r>:
  406d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406d94:	b0c3      	sub	sp, #268	; 0x10c
  406d96:	460c      	mov	r4, r1
  406d98:	910b      	str	r1, [sp, #44]	; 0x2c
  406d9a:	4692      	mov	sl, r2
  406d9c:	930f      	str	r3, [sp, #60]	; 0x3c
  406d9e:	900c      	str	r0, [sp, #48]	; 0x30
  406da0:	f003 fdd4 	bl	40a94c <_localeconv_r>
  406da4:	6803      	ldr	r3, [r0, #0]
  406da6:	931a      	str	r3, [sp, #104]	; 0x68
  406da8:	4618      	mov	r0, r3
  406daa:	f7ff ff09 	bl	406bc0 <strlen>
  406dae:	89a3      	ldrh	r3, [r4, #12]
  406db0:	9019      	str	r0, [sp, #100]	; 0x64
  406db2:	0619      	lsls	r1, r3, #24
  406db4:	d503      	bpl.n	406dbe <_svfprintf_r+0x2e>
  406db6:	6923      	ldr	r3, [r4, #16]
  406db8:	2b00      	cmp	r3, #0
  406dba:	f001 8003 	beq.w	407dc4 <_svfprintf_r+0x1034>
  406dbe:	2300      	movs	r3, #0
  406dc0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  406dc4:	9313      	str	r3, [sp, #76]	; 0x4c
  406dc6:	9315      	str	r3, [sp, #84]	; 0x54
  406dc8:	9314      	str	r3, [sp, #80]	; 0x50
  406dca:	9327      	str	r3, [sp, #156]	; 0x9c
  406dcc:	9326      	str	r3, [sp, #152]	; 0x98
  406dce:	9318      	str	r3, [sp, #96]	; 0x60
  406dd0:	931b      	str	r3, [sp, #108]	; 0x6c
  406dd2:	9309      	str	r3, [sp, #36]	; 0x24
  406dd4:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  406dd8:	46c8      	mov	r8, r9
  406dda:	9316      	str	r3, [sp, #88]	; 0x58
  406ddc:	9317      	str	r3, [sp, #92]	; 0x5c
  406dde:	f89a 3000 	ldrb.w	r3, [sl]
  406de2:	4654      	mov	r4, sl
  406de4:	b1e3      	cbz	r3, 406e20 <_svfprintf_r+0x90>
  406de6:	2b25      	cmp	r3, #37	; 0x25
  406de8:	d102      	bne.n	406df0 <_svfprintf_r+0x60>
  406dea:	e019      	b.n	406e20 <_svfprintf_r+0x90>
  406dec:	2b25      	cmp	r3, #37	; 0x25
  406dee:	d003      	beq.n	406df8 <_svfprintf_r+0x68>
  406df0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  406df4:	2b00      	cmp	r3, #0
  406df6:	d1f9      	bne.n	406dec <_svfprintf_r+0x5c>
  406df8:	eba4 050a 	sub.w	r5, r4, sl
  406dfc:	b185      	cbz	r5, 406e20 <_svfprintf_r+0x90>
  406dfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  406e00:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  406e02:	f8c8 a000 	str.w	sl, [r8]
  406e06:	3301      	adds	r3, #1
  406e08:	442a      	add	r2, r5
  406e0a:	2b07      	cmp	r3, #7
  406e0c:	f8c8 5004 	str.w	r5, [r8, #4]
  406e10:	9227      	str	r2, [sp, #156]	; 0x9c
  406e12:	9326      	str	r3, [sp, #152]	; 0x98
  406e14:	dc7f      	bgt.n	406f16 <_svfprintf_r+0x186>
  406e16:	f108 0808 	add.w	r8, r8, #8
  406e1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406e1c:	442b      	add	r3, r5
  406e1e:	9309      	str	r3, [sp, #36]	; 0x24
  406e20:	7823      	ldrb	r3, [r4, #0]
  406e22:	2b00      	cmp	r3, #0
  406e24:	d07f      	beq.n	406f26 <_svfprintf_r+0x196>
  406e26:	2300      	movs	r3, #0
  406e28:	461a      	mov	r2, r3
  406e2a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  406e2e:	4619      	mov	r1, r3
  406e30:	930d      	str	r3, [sp, #52]	; 0x34
  406e32:	469b      	mov	fp, r3
  406e34:	f04f 30ff 	mov.w	r0, #4294967295
  406e38:	7863      	ldrb	r3, [r4, #1]
  406e3a:	900a      	str	r0, [sp, #40]	; 0x28
  406e3c:	f104 0a01 	add.w	sl, r4, #1
  406e40:	f10a 0a01 	add.w	sl, sl, #1
  406e44:	f1a3 0020 	sub.w	r0, r3, #32
  406e48:	2858      	cmp	r0, #88	; 0x58
  406e4a:	f200 83c1 	bhi.w	4075d0 <_svfprintf_r+0x840>
  406e4e:	e8df f010 	tbh	[pc, r0, lsl #1]
  406e52:	0238      	.short	0x0238
  406e54:	03bf03bf 	.word	0x03bf03bf
  406e58:	03bf0240 	.word	0x03bf0240
  406e5c:	03bf03bf 	.word	0x03bf03bf
  406e60:	03bf03bf 	.word	0x03bf03bf
  406e64:	024503bf 	.word	0x024503bf
  406e68:	03bf0203 	.word	0x03bf0203
  406e6c:	026b005d 	.word	0x026b005d
  406e70:	028603bf 	.word	0x028603bf
  406e74:	039d039d 	.word	0x039d039d
  406e78:	039d039d 	.word	0x039d039d
  406e7c:	039d039d 	.word	0x039d039d
  406e80:	039d039d 	.word	0x039d039d
  406e84:	03bf039d 	.word	0x03bf039d
  406e88:	03bf03bf 	.word	0x03bf03bf
  406e8c:	03bf03bf 	.word	0x03bf03bf
  406e90:	03bf03bf 	.word	0x03bf03bf
  406e94:	03bf03bf 	.word	0x03bf03bf
  406e98:	033703bf 	.word	0x033703bf
  406e9c:	03bf0357 	.word	0x03bf0357
  406ea0:	03bf0357 	.word	0x03bf0357
  406ea4:	03bf03bf 	.word	0x03bf03bf
  406ea8:	039803bf 	.word	0x039803bf
  406eac:	03bf03bf 	.word	0x03bf03bf
  406eb0:	03bf03ad 	.word	0x03bf03ad
  406eb4:	03bf03bf 	.word	0x03bf03bf
  406eb8:	03bf03bf 	.word	0x03bf03bf
  406ebc:	03bf0259 	.word	0x03bf0259
  406ec0:	031e03bf 	.word	0x031e03bf
  406ec4:	03bf03bf 	.word	0x03bf03bf
  406ec8:	03bf03bf 	.word	0x03bf03bf
  406ecc:	03bf03bf 	.word	0x03bf03bf
  406ed0:	03bf03bf 	.word	0x03bf03bf
  406ed4:	03bf03bf 	.word	0x03bf03bf
  406ed8:	02db02c6 	.word	0x02db02c6
  406edc:	03570357 	.word	0x03570357
  406ee0:	028b0357 	.word	0x028b0357
  406ee4:	03bf02db 	.word	0x03bf02db
  406ee8:	029003bf 	.word	0x029003bf
  406eec:	029d03bf 	.word	0x029d03bf
  406ef0:	02b401cc 	.word	0x02b401cc
  406ef4:	03bf0208 	.word	0x03bf0208
  406ef8:	03bf01e1 	.word	0x03bf01e1
  406efc:	03bf007e 	.word	0x03bf007e
  406f00:	020d03bf 	.word	0x020d03bf
  406f04:	980d      	ldr	r0, [sp, #52]	; 0x34
  406f06:	930f      	str	r3, [sp, #60]	; 0x3c
  406f08:	4240      	negs	r0, r0
  406f0a:	900d      	str	r0, [sp, #52]	; 0x34
  406f0c:	f04b 0b04 	orr.w	fp, fp, #4
  406f10:	f89a 3000 	ldrb.w	r3, [sl]
  406f14:	e794      	b.n	406e40 <_svfprintf_r+0xb0>
  406f16:	aa25      	add	r2, sp, #148	; 0x94
  406f18:	990b      	ldr	r1, [sp, #44]	; 0x2c
  406f1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  406f1c:	f004 fe2e 	bl	40bb7c <__ssprint_r>
  406f20:	b940      	cbnz	r0, 406f34 <_svfprintf_r+0x1a4>
  406f22:	46c8      	mov	r8, r9
  406f24:	e779      	b.n	406e1a <_svfprintf_r+0x8a>
  406f26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  406f28:	b123      	cbz	r3, 406f34 <_svfprintf_r+0x1a4>
  406f2a:	980c      	ldr	r0, [sp, #48]	; 0x30
  406f2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  406f2e:	aa25      	add	r2, sp, #148	; 0x94
  406f30:	f004 fe24 	bl	40bb7c <__ssprint_r>
  406f34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  406f36:	899b      	ldrh	r3, [r3, #12]
  406f38:	f013 0f40 	tst.w	r3, #64	; 0x40
  406f3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406f3e:	bf18      	it	ne
  406f40:	f04f 33ff 	movne.w	r3, #4294967295
  406f44:	9309      	str	r3, [sp, #36]	; 0x24
  406f46:	9809      	ldr	r0, [sp, #36]	; 0x24
  406f48:	b043      	add	sp, #268	; 0x10c
  406f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406f4e:	f01b 0f20 	tst.w	fp, #32
  406f52:	9311      	str	r3, [sp, #68]	; 0x44
  406f54:	f040 81dd 	bne.w	407312 <_svfprintf_r+0x582>
  406f58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  406f5a:	f01b 0f10 	tst.w	fp, #16
  406f5e:	4613      	mov	r3, r2
  406f60:	f040 856e 	bne.w	407a40 <_svfprintf_r+0xcb0>
  406f64:	f01b 0f40 	tst.w	fp, #64	; 0x40
  406f68:	f000 856a 	beq.w	407a40 <_svfprintf_r+0xcb0>
  406f6c:	8814      	ldrh	r4, [r2, #0]
  406f6e:	3204      	adds	r2, #4
  406f70:	2500      	movs	r5, #0
  406f72:	2301      	movs	r3, #1
  406f74:	920f      	str	r2, [sp, #60]	; 0x3c
  406f76:	2700      	movs	r7, #0
  406f78:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  406f7c:	990a      	ldr	r1, [sp, #40]	; 0x28
  406f7e:	1c4a      	adds	r2, r1, #1
  406f80:	f000 8265 	beq.w	40744e <_svfprintf_r+0x6be>
  406f84:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  406f88:	9207      	str	r2, [sp, #28]
  406f8a:	ea54 0205 	orrs.w	r2, r4, r5
  406f8e:	f040 8264 	bne.w	40745a <_svfprintf_r+0x6ca>
  406f92:	2900      	cmp	r1, #0
  406f94:	f040 843c 	bne.w	407810 <_svfprintf_r+0xa80>
  406f98:	2b00      	cmp	r3, #0
  406f9a:	f040 84d7 	bne.w	40794c <_svfprintf_r+0xbbc>
  406f9e:	f01b 0301 	ands.w	r3, fp, #1
  406fa2:	930e      	str	r3, [sp, #56]	; 0x38
  406fa4:	f000 8604 	beq.w	407bb0 <_svfprintf_r+0xe20>
  406fa8:	ae42      	add	r6, sp, #264	; 0x108
  406faa:	2330      	movs	r3, #48	; 0x30
  406fac:	f806 3d41 	strb.w	r3, [r6, #-65]!
  406fb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406fb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  406fb4:	4293      	cmp	r3, r2
  406fb6:	bfb8      	it	lt
  406fb8:	4613      	movlt	r3, r2
  406fba:	9308      	str	r3, [sp, #32]
  406fbc:	2300      	movs	r3, #0
  406fbe:	9312      	str	r3, [sp, #72]	; 0x48
  406fc0:	b117      	cbz	r7, 406fc8 <_svfprintf_r+0x238>
  406fc2:	9b08      	ldr	r3, [sp, #32]
  406fc4:	3301      	adds	r3, #1
  406fc6:	9308      	str	r3, [sp, #32]
  406fc8:	9b07      	ldr	r3, [sp, #28]
  406fca:	f013 0302 	ands.w	r3, r3, #2
  406fce:	9310      	str	r3, [sp, #64]	; 0x40
  406fd0:	d002      	beq.n	406fd8 <_svfprintf_r+0x248>
  406fd2:	9b08      	ldr	r3, [sp, #32]
  406fd4:	3302      	adds	r3, #2
  406fd6:	9308      	str	r3, [sp, #32]
  406fd8:	9b07      	ldr	r3, [sp, #28]
  406fda:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  406fde:	f040 830e 	bne.w	4075fe <_svfprintf_r+0x86e>
  406fe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  406fe4:	9a08      	ldr	r2, [sp, #32]
  406fe6:	eba3 0b02 	sub.w	fp, r3, r2
  406fea:	f1bb 0f00 	cmp.w	fp, #0
  406fee:	f340 8306 	ble.w	4075fe <_svfprintf_r+0x86e>
  406ff2:	f1bb 0f10 	cmp.w	fp, #16
  406ff6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  406ff8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  406ffa:	dd29      	ble.n	407050 <_svfprintf_r+0x2c0>
  406ffc:	4643      	mov	r3, r8
  406ffe:	4621      	mov	r1, r4
  407000:	46a8      	mov	r8, r5
  407002:	2710      	movs	r7, #16
  407004:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  407006:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  407008:	e006      	b.n	407018 <_svfprintf_r+0x288>
  40700a:	f1ab 0b10 	sub.w	fp, fp, #16
  40700e:	f1bb 0f10 	cmp.w	fp, #16
  407012:	f103 0308 	add.w	r3, r3, #8
  407016:	dd18      	ble.n	40704a <_svfprintf_r+0x2ba>
  407018:	3201      	adds	r2, #1
  40701a:	48b7      	ldr	r0, [pc, #732]	; (4072f8 <_svfprintf_r+0x568>)
  40701c:	9226      	str	r2, [sp, #152]	; 0x98
  40701e:	3110      	adds	r1, #16
  407020:	2a07      	cmp	r2, #7
  407022:	9127      	str	r1, [sp, #156]	; 0x9c
  407024:	e883 0081 	stmia.w	r3, {r0, r7}
  407028:	ddef      	ble.n	40700a <_svfprintf_r+0x27a>
  40702a:	aa25      	add	r2, sp, #148	; 0x94
  40702c:	4629      	mov	r1, r5
  40702e:	4620      	mov	r0, r4
  407030:	f004 fda4 	bl	40bb7c <__ssprint_r>
  407034:	2800      	cmp	r0, #0
  407036:	f47f af7d 	bne.w	406f34 <_svfprintf_r+0x1a4>
  40703a:	f1ab 0b10 	sub.w	fp, fp, #16
  40703e:	f1bb 0f10 	cmp.w	fp, #16
  407042:	9927      	ldr	r1, [sp, #156]	; 0x9c
  407044:	9a26      	ldr	r2, [sp, #152]	; 0x98
  407046:	464b      	mov	r3, r9
  407048:	dce6      	bgt.n	407018 <_svfprintf_r+0x288>
  40704a:	4645      	mov	r5, r8
  40704c:	460c      	mov	r4, r1
  40704e:	4698      	mov	r8, r3
  407050:	3201      	adds	r2, #1
  407052:	4ba9      	ldr	r3, [pc, #676]	; (4072f8 <_svfprintf_r+0x568>)
  407054:	9226      	str	r2, [sp, #152]	; 0x98
  407056:	445c      	add	r4, fp
  407058:	2a07      	cmp	r2, #7
  40705a:	9427      	str	r4, [sp, #156]	; 0x9c
  40705c:	e888 0808 	stmia.w	r8, {r3, fp}
  407060:	f300 8498 	bgt.w	407994 <_svfprintf_r+0xc04>
  407064:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  407068:	f108 0808 	add.w	r8, r8, #8
  40706c:	b177      	cbz	r7, 40708c <_svfprintf_r+0x2fc>
  40706e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407070:	3301      	adds	r3, #1
  407072:	3401      	adds	r4, #1
  407074:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  407078:	2201      	movs	r2, #1
  40707a:	2b07      	cmp	r3, #7
  40707c:	9427      	str	r4, [sp, #156]	; 0x9c
  40707e:	9326      	str	r3, [sp, #152]	; 0x98
  407080:	e888 0006 	stmia.w	r8, {r1, r2}
  407084:	f300 83db 	bgt.w	40783e <_svfprintf_r+0xaae>
  407088:	f108 0808 	add.w	r8, r8, #8
  40708c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40708e:	b16b      	cbz	r3, 4070ac <_svfprintf_r+0x31c>
  407090:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407092:	3301      	adds	r3, #1
  407094:	3402      	adds	r4, #2
  407096:	a91e      	add	r1, sp, #120	; 0x78
  407098:	2202      	movs	r2, #2
  40709a:	2b07      	cmp	r3, #7
  40709c:	9427      	str	r4, [sp, #156]	; 0x9c
  40709e:	9326      	str	r3, [sp, #152]	; 0x98
  4070a0:	e888 0006 	stmia.w	r8, {r1, r2}
  4070a4:	f300 83d6 	bgt.w	407854 <_svfprintf_r+0xac4>
  4070a8:	f108 0808 	add.w	r8, r8, #8
  4070ac:	2d80      	cmp	r5, #128	; 0x80
  4070ae:	f000 8315 	beq.w	4076dc <_svfprintf_r+0x94c>
  4070b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4070b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4070b6:	1a9f      	subs	r7, r3, r2
  4070b8:	2f00      	cmp	r7, #0
  4070ba:	dd36      	ble.n	40712a <_svfprintf_r+0x39a>
  4070bc:	2f10      	cmp	r7, #16
  4070be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4070c0:	4d8e      	ldr	r5, [pc, #568]	; (4072fc <_svfprintf_r+0x56c>)
  4070c2:	dd27      	ble.n	407114 <_svfprintf_r+0x384>
  4070c4:	4642      	mov	r2, r8
  4070c6:	4621      	mov	r1, r4
  4070c8:	46b0      	mov	r8, r6
  4070ca:	f04f 0b10 	mov.w	fp, #16
  4070ce:	462e      	mov	r6, r5
  4070d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4070d2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4070d4:	e004      	b.n	4070e0 <_svfprintf_r+0x350>
  4070d6:	3f10      	subs	r7, #16
  4070d8:	2f10      	cmp	r7, #16
  4070da:	f102 0208 	add.w	r2, r2, #8
  4070de:	dd15      	ble.n	40710c <_svfprintf_r+0x37c>
  4070e0:	3301      	adds	r3, #1
  4070e2:	3110      	adds	r1, #16
  4070e4:	2b07      	cmp	r3, #7
  4070e6:	9127      	str	r1, [sp, #156]	; 0x9c
  4070e8:	9326      	str	r3, [sp, #152]	; 0x98
  4070ea:	e882 0840 	stmia.w	r2, {r6, fp}
  4070ee:	ddf2      	ble.n	4070d6 <_svfprintf_r+0x346>
  4070f0:	aa25      	add	r2, sp, #148	; 0x94
  4070f2:	4629      	mov	r1, r5
  4070f4:	4620      	mov	r0, r4
  4070f6:	f004 fd41 	bl	40bb7c <__ssprint_r>
  4070fa:	2800      	cmp	r0, #0
  4070fc:	f47f af1a 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407100:	3f10      	subs	r7, #16
  407102:	2f10      	cmp	r7, #16
  407104:	9927      	ldr	r1, [sp, #156]	; 0x9c
  407106:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407108:	464a      	mov	r2, r9
  40710a:	dce9      	bgt.n	4070e0 <_svfprintf_r+0x350>
  40710c:	4635      	mov	r5, r6
  40710e:	460c      	mov	r4, r1
  407110:	4646      	mov	r6, r8
  407112:	4690      	mov	r8, r2
  407114:	3301      	adds	r3, #1
  407116:	443c      	add	r4, r7
  407118:	2b07      	cmp	r3, #7
  40711a:	9427      	str	r4, [sp, #156]	; 0x9c
  40711c:	9326      	str	r3, [sp, #152]	; 0x98
  40711e:	e888 00a0 	stmia.w	r8, {r5, r7}
  407122:	f300 8381 	bgt.w	407828 <_svfprintf_r+0xa98>
  407126:	f108 0808 	add.w	r8, r8, #8
  40712a:	9b07      	ldr	r3, [sp, #28]
  40712c:	05df      	lsls	r7, r3, #23
  40712e:	f100 8268 	bmi.w	407602 <_svfprintf_r+0x872>
  407132:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407134:	990e      	ldr	r1, [sp, #56]	; 0x38
  407136:	f8c8 6000 	str.w	r6, [r8]
  40713a:	3301      	adds	r3, #1
  40713c:	440c      	add	r4, r1
  40713e:	2b07      	cmp	r3, #7
  407140:	9427      	str	r4, [sp, #156]	; 0x9c
  407142:	f8c8 1004 	str.w	r1, [r8, #4]
  407146:	9326      	str	r3, [sp, #152]	; 0x98
  407148:	f300 834d 	bgt.w	4077e6 <_svfprintf_r+0xa56>
  40714c:	f108 0808 	add.w	r8, r8, #8
  407150:	9b07      	ldr	r3, [sp, #28]
  407152:	075b      	lsls	r3, r3, #29
  407154:	d53a      	bpl.n	4071cc <_svfprintf_r+0x43c>
  407156:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  407158:	9a08      	ldr	r2, [sp, #32]
  40715a:	1a9d      	subs	r5, r3, r2
  40715c:	2d00      	cmp	r5, #0
  40715e:	dd35      	ble.n	4071cc <_svfprintf_r+0x43c>
  407160:	2d10      	cmp	r5, #16
  407162:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407164:	dd20      	ble.n	4071a8 <_svfprintf_r+0x418>
  407166:	2610      	movs	r6, #16
  407168:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40716a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40716e:	e004      	b.n	40717a <_svfprintf_r+0x3ea>
  407170:	3d10      	subs	r5, #16
  407172:	2d10      	cmp	r5, #16
  407174:	f108 0808 	add.w	r8, r8, #8
  407178:	dd16      	ble.n	4071a8 <_svfprintf_r+0x418>
  40717a:	3301      	adds	r3, #1
  40717c:	4a5e      	ldr	r2, [pc, #376]	; (4072f8 <_svfprintf_r+0x568>)
  40717e:	9326      	str	r3, [sp, #152]	; 0x98
  407180:	3410      	adds	r4, #16
  407182:	2b07      	cmp	r3, #7
  407184:	9427      	str	r4, [sp, #156]	; 0x9c
  407186:	e888 0044 	stmia.w	r8, {r2, r6}
  40718a:	ddf1      	ble.n	407170 <_svfprintf_r+0x3e0>
  40718c:	aa25      	add	r2, sp, #148	; 0x94
  40718e:	4659      	mov	r1, fp
  407190:	4638      	mov	r0, r7
  407192:	f004 fcf3 	bl	40bb7c <__ssprint_r>
  407196:	2800      	cmp	r0, #0
  407198:	f47f aecc 	bne.w	406f34 <_svfprintf_r+0x1a4>
  40719c:	3d10      	subs	r5, #16
  40719e:	2d10      	cmp	r5, #16
  4071a0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4071a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4071a4:	46c8      	mov	r8, r9
  4071a6:	dce8      	bgt.n	40717a <_svfprintf_r+0x3ea>
  4071a8:	3301      	adds	r3, #1
  4071aa:	4a53      	ldr	r2, [pc, #332]	; (4072f8 <_svfprintf_r+0x568>)
  4071ac:	9326      	str	r3, [sp, #152]	; 0x98
  4071ae:	442c      	add	r4, r5
  4071b0:	2b07      	cmp	r3, #7
  4071b2:	9427      	str	r4, [sp, #156]	; 0x9c
  4071b4:	e888 0024 	stmia.w	r8, {r2, r5}
  4071b8:	dd08      	ble.n	4071cc <_svfprintf_r+0x43c>
  4071ba:	aa25      	add	r2, sp, #148	; 0x94
  4071bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4071be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4071c0:	f004 fcdc 	bl	40bb7c <__ssprint_r>
  4071c4:	2800      	cmp	r0, #0
  4071c6:	f47f aeb5 	bne.w	406f34 <_svfprintf_r+0x1a4>
  4071ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4071cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4071ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4071d0:	9908      	ldr	r1, [sp, #32]
  4071d2:	428a      	cmp	r2, r1
  4071d4:	bfac      	ite	ge
  4071d6:	189b      	addge	r3, r3, r2
  4071d8:	185b      	addlt	r3, r3, r1
  4071da:	9309      	str	r3, [sp, #36]	; 0x24
  4071dc:	2c00      	cmp	r4, #0
  4071de:	f040 830d 	bne.w	4077fc <_svfprintf_r+0xa6c>
  4071e2:	2300      	movs	r3, #0
  4071e4:	9326      	str	r3, [sp, #152]	; 0x98
  4071e6:	46c8      	mov	r8, r9
  4071e8:	e5f9      	b.n	406dde <_svfprintf_r+0x4e>
  4071ea:	9311      	str	r3, [sp, #68]	; 0x44
  4071ec:	f01b 0320 	ands.w	r3, fp, #32
  4071f0:	f040 81e3 	bne.w	4075ba <_svfprintf_r+0x82a>
  4071f4:	f01b 0210 	ands.w	r2, fp, #16
  4071f8:	f040 842e 	bne.w	407a58 <_svfprintf_r+0xcc8>
  4071fc:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  407200:	f000 842a 	beq.w	407a58 <_svfprintf_r+0xcc8>
  407204:	990f      	ldr	r1, [sp, #60]	; 0x3c
  407206:	4613      	mov	r3, r2
  407208:	460a      	mov	r2, r1
  40720a:	3204      	adds	r2, #4
  40720c:	880c      	ldrh	r4, [r1, #0]
  40720e:	920f      	str	r2, [sp, #60]	; 0x3c
  407210:	2500      	movs	r5, #0
  407212:	e6b0      	b.n	406f76 <_svfprintf_r+0x1e6>
  407214:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  407216:	9311      	str	r3, [sp, #68]	; 0x44
  407218:	6816      	ldr	r6, [r2, #0]
  40721a:	2400      	movs	r4, #0
  40721c:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  407220:	1d15      	adds	r5, r2, #4
  407222:	2e00      	cmp	r6, #0
  407224:	f000 86a7 	beq.w	407f76 <_svfprintf_r+0x11e6>
  407228:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40722a:	1c53      	adds	r3, r2, #1
  40722c:	f000 8609 	beq.w	407e42 <_svfprintf_r+0x10b2>
  407230:	4621      	mov	r1, r4
  407232:	4630      	mov	r0, r6
  407234:	f003 feec 	bl	40b010 <memchr>
  407238:	2800      	cmp	r0, #0
  40723a:	f000 86e1 	beq.w	408000 <_svfprintf_r+0x1270>
  40723e:	1b83      	subs	r3, r0, r6
  407240:	930e      	str	r3, [sp, #56]	; 0x38
  407242:	940a      	str	r4, [sp, #40]	; 0x28
  407244:	950f      	str	r5, [sp, #60]	; 0x3c
  407246:	f8cd b01c 	str.w	fp, [sp, #28]
  40724a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40724e:	9308      	str	r3, [sp, #32]
  407250:	9412      	str	r4, [sp, #72]	; 0x48
  407252:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  407256:	e6b3      	b.n	406fc0 <_svfprintf_r+0x230>
  407258:	f89a 3000 	ldrb.w	r3, [sl]
  40725c:	2201      	movs	r2, #1
  40725e:	212b      	movs	r1, #43	; 0x2b
  407260:	e5ee      	b.n	406e40 <_svfprintf_r+0xb0>
  407262:	f04b 0b20 	orr.w	fp, fp, #32
  407266:	f89a 3000 	ldrb.w	r3, [sl]
  40726a:	e5e9      	b.n	406e40 <_svfprintf_r+0xb0>
  40726c:	9311      	str	r3, [sp, #68]	; 0x44
  40726e:	2a00      	cmp	r2, #0
  407270:	f040 8795 	bne.w	40819e <_svfprintf_r+0x140e>
  407274:	4b22      	ldr	r3, [pc, #136]	; (407300 <_svfprintf_r+0x570>)
  407276:	9318      	str	r3, [sp, #96]	; 0x60
  407278:	f01b 0f20 	tst.w	fp, #32
  40727c:	f040 8111 	bne.w	4074a2 <_svfprintf_r+0x712>
  407280:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  407282:	f01b 0f10 	tst.w	fp, #16
  407286:	4613      	mov	r3, r2
  407288:	f040 83e1 	bne.w	407a4e <_svfprintf_r+0xcbe>
  40728c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  407290:	f000 83dd 	beq.w	407a4e <_svfprintf_r+0xcbe>
  407294:	3304      	adds	r3, #4
  407296:	8814      	ldrh	r4, [r2, #0]
  407298:	930f      	str	r3, [sp, #60]	; 0x3c
  40729a:	2500      	movs	r5, #0
  40729c:	f01b 0f01 	tst.w	fp, #1
  4072a0:	f000 810c 	beq.w	4074bc <_svfprintf_r+0x72c>
  4072a4:	ea54 0305 	orrs.w	r3, r4, r5
  4072a8:	f000 8108 	beq.w	4074bc <_svfprintf_r+0x72c>
  4072ac:	2330      	movs	r3, #48	; 0x30
  4072ae:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4072b2:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4072b6:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4072ba:	f04b 0b02 	orr.w	fp, fp, #2
  4072be:	2302      	movs	r3, #2
  4072c0:	e659      	b.n	406f76 <_svfprintf_r+0x1e6>
  4072c2:	f89a 3000 	ldrb.w	r3, [sl]
  4072c6:	2900      	cmp	r1, #0
  4072c8:	f47f adba 	bne.w	406e40 <_svfprintf_r+0xb0>
  4072cc:	2201      	movs	r2, #1
  4072ce:	2120      	movs	r1, #32
  4072d0:	e5b6      	b.n	406e40 <_svfprintf_r+0xb0>
  4072d2:	f04b 0b01 	orr.w	fp, fp, #1
  4072d6:	f89a 3000 	ldrb.w	r3, [sl]
  4072da:	e5b1      	b.n	406e40 <_svfprintf_r+0xb0>
  4072dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4072de:	6823      	ldr	r3, [r4, #0]
  4072e0:	930d      	str	r3, [sp, #52]	; 0x34
  4072e2:	4618      	mov	r0, r3
  4072e4:	2800      	cmp	r0, #0
  4072e6:	4623      	mov	r3, r4
  4072e8:	f103 0304 	add.w	r3, r3, #4
  4072ec:	f6ff ae0a 	blt.w	406f04 <_svfprintf_r+0x174>
  4072f0:	930f      	str	r3, [sp, #60]	; 0x3c
  4072f2:	f89a 3000 	ldrb.w	r3, [sl]
  4072f6:	e5a3      	b.n	406e40 <_svfprintf_r+0xb0>
  4072f8:	0040dd0c 	.word	0x0040dd0c
  4072fc:	0040dd1c 	.word	0x0040dd1c
  407300:	0040dcec 	.word	0x0040dcec
  407304:	f04b 0b10 	orr.w	fp, fp, #16
  407308:	f01b 0f20 	tst.w	fp, #32
  40730c:	9311      	str	r3, [sp, #68]	; 0x44
  40730e:	f43f ae23 	beq.w	406f58 <_svfprintf_r+0x1c8>
  407312:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  407314:	3507      	adds	r5, #7
  407316:	f025 0307 	bic.w	r3, r5, #7
  40731a:	f103 0208 	add.w	r2, r3, #8
  40731e:	e9d3 4500 	ldrd	r4, r5, [r3]
  407322:	920f      	str	r2, [sp, #60]	; 0x3c
  407324:	2301      	movs	r3, #1
  407326:	e626      	b.n	406f76 <_svfprintf_r+0x1e6>
  407328:	f89a 3000 	ldrb.w	r3, [sl]
  40732c:	2b2a      	cmp	r3, #42	; 0x2a
  40732e:	f10a 0401 	add.w	r4, sl, #1
  407332:	f000 8727 	beq.w	408184 <_svfprintf_r+0x13f4>
  407336:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40733a:	2809      	cmp	r0, #9
  40733c:	46a2      	mov	sl, r4
  40733e:	f200 86ad 	bhi.w	40809c <_svfprintf_r+0x130c>
  407342:	2300      	movs	r3, #0
  407344:	461c      	mov	r4, r3
  407346:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40734a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40734e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  407352:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  407356:	2809      	cmp	r0, #9
  407358:	d9f5      	bls.n	407346 <_svfprintf_r+0x5b6>
  40735a:	940a      	str	r4, [sp, #40]	; 0x28
  40735c:	e572      	b.n	406e44 <_svfprintf_r+0xb4>
  40735e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  407362:	f89a 3000 	ldrb.w	r3, [sl]
  407366:	e56b      	b.n	406e40 <_svfprintf_r+0xb0>
  407368:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40736c:	f89a 3000 	ldrb.w	r3, [sl]
  407370:	e566      	b.n	406e40 <_svfprintf_r+0xb0>
  407372:	f89a 3000 	ldrb.w	r3, [sl]
  407376:	2b6c      	cmp	r3, #108	; 0x6c
  407378:	bf03      	ittte	eq
  40737a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40737e:	f04b 0b20 	orreq.w	fp, fp, #32
  407382:	f10a 0a01 	addeq.w	sl, sl, #1
  407386:	f04b 0b10 	orrne.w	fp, fp, #16
  40738a:	e559      	b.n	406e40 <_svfprintf_r+0xb0>
  40738c:	2a00      	cmp	r2, #0
  40738e:	f040 8711 	bne.w	4081b4 <_svfprintf_r+0x1424>
  407392:	f01b 0f20 	tst.w	fp, #32
  407396:	f040 84f9 	bne.w	407d8c <_svfprintf_r+0xffc>
  40739a:	f01b 0f10 	tst.w	fp, #16
  40739e:	f040 84ac 	bne.w	407cfa <_svfprintf_r+0xf6a>
  4073a2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4073a6:	f000 84a8 	beq.w	407cfa <_svfprintf_r+0xf6a>
  4073aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4073ac:	6813      	ldr	r3, [r2, #0]
  4073ae:	3204      	adds	r2, #4
  4073b0:	920f      	str	r2, [sp, #60]	; 0x3c
  4073b2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4073b6:	801a      	strh	r2, [r3, #0]
  4073b8:	e511      	b.n	406dde <_svfprintf_r+0x4e>
  4073ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4073bc:	4bb3      	ldr	r3, [pc, #716]	; (40768c <_svfprintf_r+0x8fc>)
  4073be:	680c      	ldr	r4, [r1, #0]
  4073c0:	9318      	str	r3, [sp, #96]	; 0x60
  4073c2:	2230      	movs	r2, #48	; 0x30
  4073c4:	2378      	movs	r3, #120	; 0x78
  4073c6:	3104      	adds	r1, #4
  4073c8:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4073cc:	9311      	str	r3, [sp, #68]	; 0x44
  4073ce:	f04b 0b02 	orr.w	fp, fp, #2
  4073d2:	910f      	str	r1, [sp, #60]	; 0x3c
  4073d4:	2500      	movs	r5, #0
  4073d6:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4073da:	2302      	movs	r3, #2
  4073dc:	e5cb      	b.n	406f76 <_svfprintf_r+0x1e6>
  4073de:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4073e0:	9311      	str	r3, [sp, #68]	; 0x44
  4073e2:	680a      	ldr	r2, [r1, #0]
  4073e4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4073e8:	2300      	movs	r3, #0
  4073ea:	460a      	mov	r2, r1
  4073ec:	461f      	mov	r7, r3
  4073ee:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4073f2:	3204      	adds	r2, #4
  4073f4:	2301      	movs	r3, #1
  4073f6:	9308      	str	r3, [sp, #32]
  4073f8:	f8cd b01c 	str.w	fp, [sp, #28]
  4073fc:	970a      	str	r7, [sp, #40]	; 0x28
  4073fe:	9712      	str	r7, [sp, #72]	; 0x48
  407400:	920f      	str	r2, [sp, #60]	; 0x3c
  407402:	930e      	str	r3, [sp, #56]	; 0x38
  407404:	ae28      	add	r6, sp, #160	; 0xa0
  407406:	e5df      	b.n	406fc8 <_svfprintf_r+0x238>
  407408:	9311      	str	r3, [sp, #68]	; 0x44
  40740a:	2a00      	cmp	r2, #0
  40740c:	f040 86ea 	bne.w	4081e4 <_svfprintf_r+0x1454>
  407410:	f01b 0f20 	tst.w	fp, #32
  407414:	d15d      	bne.n	4074d2 <_svfprintf_r+0x742>
  407416:	f01b 0f10 	tst.w	fp, #16
  40741a:	f040 8308 	bne.w	407a2e <_svfprintf_r+0xc9e>
  40741e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  407422:	f000 8304 	beq.w	407a2e <_svfprintf_r+0xc9e>
  407426:	990f      	ldr	r1, [sp, #60]	; 0x3c
  407428:	f9b1 4000 	ldrsh.w	r4, [r1]
  40742c:	3104      	adds	r1, #4
  40742e:	17e5      	asrs	r5, r4, #31
  407430:	4622      	mov	r2, r4
  407432:	462b      	mov	r3, r5
  407434:	910f      	str	r1, [sp, #60]	; 0x3c
  407436:	2a00      	cmp	r2, #0
  407438:	f173 0300 	sbcs.w	r3, r3, #0
  40743c:	db58      	blt.n	4074f0 <_svfprintf_r+0x760>
  40743e:	990a      	ldr	r1, [sp, #40]	; 0x28
  407440:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  407444:	1c4a      	adds	r2, r1, #1
  407446:	f04f 0301 	mov.w	r3, #1
  40744a:	f47f ad9b 	bne.w	406f84 <_svfprintf_r+0x1f4>
  40744e:	ea54 0205 	orrs.w	r2, r4, r5
  407452:	f000 81df 	beq.w	407814 <_svfprintf_r+0xa84>
  407456:	f8cd b01c 	str.w	fp, [sp, #28]
  40745a:	2b01      	cmp	r3, #1
  40745c:	f000 827b 	beq.w	407956 <_svfprintf_r+0xbc6>
  407460:	2b02      	cmp	r3, #2
  407462:	f040 8206 	bne.w	407872 <_svfprintf_r+0xae2>
  407466:	9818      	ldr	r0, [sp, #96]	; 0x60
  407468:	464e      	mov	r6, r9
  40746a:	0923      	lsrs	r3, r4, #4
  40746c:	f004 010f 	and.w	r1, r4, #15
  407470:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  407474:	092a      	lsrs	r2, r5, #4
  407476:	461c      	mov	r4, r3
  407478:	4615      	mov	r5, r2
  40747a:	5c43      	ldrb	r3, [r0, r1]
  40747c:	f806 3d01 	strb.w	r3, [r6, #-1]!
  407480:	ea54 0305 	orrs.w	r3, r4, r5
  407484:	d1f1      	bne.n	40746a <_svfprintf_r+0x6da>
  407486:	eba9 0306 	sub.w	r3, r9, r6
  40748a:	930e      	str	r3, [sp, #56]	; 0x38
  40748c:	e590      	b.n	406fb0 <_svfprintf_r+0x220>
  40748e:	9311      	str	r3, [sp, #68]	; 0x44
  407490:	2a00      	cmp	r2, #0
  407492:	f040 86a3 	bne.w	4081dc <_svfprintf_r+0x144c>
  407496:	4b7e      	ldr	r3, [pc, #504]	; (407690 <_svfprintf_r+0x900>)
  407498:	9318      	str	r3, [sp, #96]	; 0x60
  40749a:	f01b 0f20 	tst.w	fp, #32
  40749e:	f43f aeef 	beq.w	407280 <_svfprintf_r+0x4f0>
  4074a2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4074a4:	3507      	adds	r5, #7
  4074a6:	f025 0307 	bic.w	r3, r5, #7
  4074aa:	f103 0208 	add.w	r2, r3, #8
  4074ae:	f01b 0f01 	tst.w	fp, #1
  4074b2:	920f      	str	r2, [sp, #60]	; 0x3c
  4074b4:	e9d3 4500 	ldrd	r4, r5, [r3]
  4074b8:	f47f aef4 	bne.w	4072a4 <_svfprintf_r+0x514>
  4074bc:	2302      	movs	r3, #2
  4074be:	e55a      	b.n	406f76 <_svfprintf_r+0x1e6>
  4074c0:	9311      	str	r3, [sp, #68]	; 0x44
  4074c2:	2a00      	cmp	r2, #0
  4074c4:	f040 8686 	bne.w	4081d4 <_svfprintf_r+0x1444>
  4074c8:	f04b 0b10 	orr.w	fp, fp, #16
  4074cc:	f01b 0f20 	tst.w	fp, #32
  4074d0:	d0a1      	beq.n	407416 <_svfprintf_r+0x686>
  4074d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4074d4:	3507      	adds	r5, #7
  4074d6:	f025 0507 	bic.w	r5, r5, #7
  4074da:	e9d5 2300 	ldrd	r2, r3, [r5]
  4074de:	2a00      	cmp	r2, #0
  4074e0:	f105 0108 	add.w	r1, r5, #8
  4074e4:	461d      	mov	r5, r3
  4074e6:	f173 0300 	sbcs.w	r3, r3, #0
  4074ea:	910f      	str	r1, [sp, #60]	; 0x3c
  4074ec:	4614      	mov	r4, r2
  4074ee:	daa6      	bge.n	40743e <_svfprintf_r+0x6ae>
  4074f0:	272d      	movs	r7, #45	; 0x2d
  4074f2:	4264      	negs	r4, r4
  4074f4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4074f8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4074fc:	2301      	movs	r3, #1
  4074fe:	e53d      	b.n	406f7c <_svfprintf_r+0x1ec>
  407500:	9311      	str	r3, [sp, #68]	; 0x44
  407502:	2a00      	cmp	r2, #0
  407504:	f040 8662 	bne.w	4081cc <_svfprintf_r+0x143c>
  407508:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40750a:	3507      	adds	r5, #7
  40750c:	f025 0307 	bic.w	r3, r5, #7
  407510:	f103 0208 	add.w	r2, r3, #8
  407514:	920f      	str	r2, [sp, #60]	; 0x3c
  407516:	681a      	ldr	r2, [r3, #0]
  407518:	9215      	str	r2, [sp, #84]	; 0x54
  40751a:	685b      	ldr	r3, [r3, #4]
  40751c:	9314      	str	r3, [sp, #80]	; 0x50
  40751e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  407520:	9d15      	ldr	r5, [sp, #84]	; 0x54
  407522:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  407526:	4628      	mov	r0, r5
  407528:	4621      	mov	r1, r4
  40752a:	f04f 32ff 	mov.w	r2, #4294967295
  40752e:	4b59      	ldr	r3, [pc, #356]	; (407694 <_svfprintf_r+0x904>)
  407530:	f005 f9f2 	bl	40c918 <__aeabi_dcmpun>
  407534:	2800      	cmp	r0, #0
  407536:	f040 834a 	bne.w	407bce <_svfprintf_r+0xe3e>
  40753a:	4628      	mov	r0, r5
  40753c:	4621      	mov	r1, r4
  40753e:	f04f 32ff 	mov.w	r2, #4294967295
  407542:	4b54      	ldr	r3, [pc, #336]	; (407694 <_svfprintf_r+0x904>)
  407544:	f005 f9ca 	bl	40c8dc <__aeabi_dcmple>
  407548:	2800      	cmp	r0, #0
  40754a:	f040 8340 	bne.w	407bce <_svfprintf_r+0xe3e>
  40754e:	a815      	add	r0, sp, #84	; 0x54
  407550:	c80d      	ldmia	r0, {r0, r2, r3}
  407552:	9914      	ldr	r1, [sp, #80]	; 0x50
  407554:	f005 f9b8 	bl	40c8c8 <__aeabi_dcmplt>
  407558:	2800      	cmp	r0, #0
  40755a:	f040 8530 	bne.w	407fbe <_svfprintf_r+0x122e>
  40755e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  407562:	4e4d      	ldr	r6, [pc, #308]	; (407698 <_svfprintf_r+0x908>)
  407564:	4b4d      	ldr	r3, [pc, #308]	; (40769c <_svfprintf_r+0x90c>)
  407566:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  40756a:	9007      	str	r0, [sp, #28]
  40756c:	9811      	ldr	r0, [sp, #68]	; 0x44
  40756e:	2203      	movs	r2, #3
  407570:	2100      	movs	r1, #0
  407572:	9208      	str	r2, [sp, #32]
  407574:	910a      	str	r1, [sp, #40]	; 0x28
  407576:	2847      	cmp	r0, #71	; 0x47
  407578:	bfd8      	it	le
  40757a:	461e      	movle	r6, r3
  40757c:	920e      	str	r2, [sp, #56]	; 0x38
  40757e:	9112      	str	r1, [sp, #72]	; 0x48
  407580:	e51e      	b.n	406fc0 <_svfprintf_r+0x230>
  407582:	f04b 0b08 	orr.w	fp, fp, #8
  407586:	f89a 3000 	ldrb.w	r3, [sl]
  40758a:	e459      	b.n	406e40 <_svfprintf_r+0xb0>
  40758c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  407590:	2300      	movs	r3, #0
  407592:	461c      	mov	r4, r3
  407594:	f81a 3b01 	ldrb.w	r3, [sl], #1
  407598:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40759c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4075a0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4075a4:	2809      	cmp	r0, #9
  4075a6:	d9f5      	bls.n	407594 <_svfprintf_r+0x804>
  4075a8:	940d      	str	r4, [sp, #52]	; 0x34
  4075aa:	e44b      	b.n	406e44 <_svfprintf_r+0xb4>
  4075ac:	f04b 0b10 	orr.w	fp, fp, #16
  4075b0:	9311      	str	r3, [sp, #68]	; 0x44
  4075b2:	f01b 0320 	ands.w	r3, fp, #32
  4075b6:	f43f ae1d 	beq.w	4071f4 <_svfprintf_r+0x464>
  4075ba:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4075bc:	3507      	adds	r5, #7
  4075be:	f025 0307 	bic.w	r3, r5, #7
  4075c2:	f103 0208 	add.w	r2, r3, #8
  4075c6:	e9d3 4500 	ldrd	r4, r5, [r3]
  4075ca:	920f      	str	r2, [sp, #60]	; 0x3c
  4075cc:	2300      	movs	r3, #0
  4075ce:	e4d2      	b.n	406f76 <_svfprintf_r+0x1e6>
  4075d0:	9311      	str	r3, [sp, #68]	; 0x44
  4075d2:	2a00      	cmp	r2, #0
  4075d4:	f040 85e7 	bne.w	4081a6 <_svfprintf_r+0x1416>
  4075d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4075da:	2a00      	cmp	r2, #0
  4075dc:	f43f aca3 	beq.w	406f26 <_svfprintf_r+0x196>
  4075e0:	2300      	movs	r3, #0
  4075e2:	2101      	movs	r1, #1
  4075e4:	461f      	mov	r7, r3
  4075e6:	9108      	str	r1, [sp, #32]
  4075e8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4075ec:	f8cd b01c 	str.w	fp, [sp, #28]
  4075f0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4075f4:	930a      	str	r3, [sp, #40]	; 0x28
  4075f6:	9312      	str	r3, [sp, #72]	; 0x48
  4075f8:	910e      	str	r1, [sp, #56]	; 0x38
  4075fa:	ae28      	add	r6, sp, #160	; 0xa0
  4075fc:	e4e4      	b.n	406fc8 <_svfprintf_r+0x238>
  4075fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407600:	e534      	b.n	40706c <_svfprintf_r+0x2dc>
  407602:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407604:	2b65      	cmp	r3, #101	; 0x65
  407606:	f340 80a7 	ble.w	407758 <_svfprintf_r+0x9c8>
  40760a:	a815      	add	r0, sp, #84	; 0x54
  40760c:	c80d      	ldmia	r0, {r0, r2, r3}
  40760e:	9914      	ldr	r1, [sp, #80]	; 0x50
  407610:	f005 f950 	bl	40c8b4 <__aeabi_dcmpeq>
  407614:	2800      	cmp	r0, #0
  407616:	f000 8150 	beq.w	4078ba <_svfprintf_r+0xb2a>
  40761a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40761c:	4a20      	ldr	r2, [pc, #128]	; (4076a0 <_svfprintf_r+0x910>)
  40761e:	f8c8 2000 	str.w	r2, [r8]
  407622:	3301      	adds	r3, #1
  407624:	3401      	adds	r4, #1
  407626:	2201      	movs	r2, #1
  407628:	2b07      	cmp	r3, #7
  40762a:	9427      	str	r4, [sp, #156]	; 0x9c
  40762c:	9326      	str	r3, [sp, #152]	; 0x98
  40762e:	f8c8 2004 	str.w	r2, [r8, #4]
  407632:	f300 836a 	bgt.w	407d0a <_svfprintf_r+0xf7a>
  407636:	f108 0808 	add.w	r8, r8, #8
  40763a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40763c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40763e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407640:	4293      	cmp	r3, r2
  407642:	db03      	blt.n	40764c <_svfprintf_r+0x8bc>
  407644:	9b07      	ldr	r3, [sp, #28]
  407646:	07dd      	lsls	r5, r3, #31
  407648:	f57f ad82 	bpl.w	407150 <_svfprintf_r+0x3c0>
  40764c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40764e:	9919      	ldr	r1, [sp, #100]	; 0x64
  407650:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  407652:	f8c8 2000 	str.w	r2, [r8]
  407656:	3301      	adds	r3, #1
  407658:	440c      	add	r4, r1
  40765a:	2b07      	cmp	r3, #7
  40765c:	f8c8 1004 	str.w	r1, [r8, #4]
  407660:	9427      	str	r4, [sp, #156]	; 0x9c
  407662:	9326      	str	r3, [sp, #152]	; 0x98
  407664:	f300 839e 	bgt.w	407da4 <_svfprintf_r+0x1014>
  407668:	f108 0808 	add.w	r8, r8, #8
  40766c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40766e:	1e5e      	subs	r6, r3, #1
  407670:	2e00      	cmp	r6, #0
  407672:	f77f ad6d 	ble.w	407150 <_svfprintf_r+0x3c0>
  407676:	2e10      	cmp	r6, #16
  407678:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40767a:	4d0a      	ldr	r5, [pc, #40]	; (4076a4 <_svfprintf_r+0x914>)
  40767c:	f340 81f5 	ble.w	407a6a <_svfprintf_r+0xcda>
  407680:	4622      	mov	r2, r4
  407682:	2710      	movs	r7, #16
  407684:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  407688:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40768a:	e013      	b.n	4076b4 <_svfprintf_r+0x924>
  40768c:	0040dcec 	.word	0x0040dcec
  407690:	0040dcd8 	.word	0x0040dcd8
  407694:	7fefffff 	.word	0x7fefffff
  407698:	0040dccc 	.word	0x0040dccc
  40769c:	0040dcc8 	.word	0x0040dcc8
  4076a0:	0040dd08 	.word	0x0040dd08
  4076a4:	0040dd1c 	.word	0x0040dd1c
  4076a8:	f108 0808 	add.w	r8, r8, #8
  4076ac:	3e10      	subs	r6, #16
  4076ae:	2e10      	cmp	r6, #16
  4076b0:	f340 81da 	ble.w	407a68 <_svfprintf_r+0xcd8>
  4076b4:	3301      	adds	r3, #1
  4076b6:	3210      	adds	r2, #16
  4076b8:	2b07      	cmp	r3, #7
  4076ba:	9227      	str	r2, [sp, #156]	; 0x9c
  4076bc:	9326      	str	r3, [sp, #152]	; 0x98
  4076be:	e888 00a0 	stmia.w	r8, {r5, r7}
  4076c2:	ddf1      	ble.n	4076a8 <_svfprintf_r+0x918>
  4076c4:	aa25      	add	r2, sp, #148	; 0x94
  4076c6:	4621      	mov	r1, r4
  4076c8:	4658      	mov	r0, fp
  4076ca:	f004 fa57 	bl	40bb7c <__ssprint_r>
  4076ce:	2800      	cmp	r0, #0
  4076d0:	f47f ac30 	bne.w	406f34 <_svfprintf_r+0x1a4>
  4076d4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4076d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4076d8:	46c8      	mov	r8, r9
  4076da:	e7e7      	b.n	4076ac <_svfprintf_r+0x91c>
  4076dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4076de:	9a08      	ldr	r2, [sp, #32]
  4076e0:	1a9f      	subs	r7, r3, r2
  4076e2:	2f00      	cmp	r7, #0
  4076e4:	f77f ace5 	ble.w	4070b2 <_svfprintf_r+0x322>
  4076e8:	2f10      	cmp	r7, #16
  4076ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4076ec:	4db6      	ldr	r5, [pc, #728]	; (4079c8 <_svfprintf_r+0xc38>)
  4076ee:	dd27      	ble.n	407740 <_svfprintf_r+0x9b0>
  4076f0:	4642      	mov	r2, r8
  4076f2:	4621      	mov	r1, r4
  4076f4:	46b0      	mov	r8, r6
  4076f6:	f04f 0b10 	mov.w	fp, #16
  4076fa:	462e      	mov	r6, r5
  4076fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4076fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  407700:	e004      	b.n	40770c <_svfprintf_r+0x97c>
  407702:	3f10      	subs	r7, #16
  407704:	2f10      	cmp	r7, #16
  407706:	f102 0208 	add.w	r2, r2, #8
  40770a:	dd15      	ble.n	407738 <_svfprintf_r+0x9a8>
  40770c:	3301      	adds	r3, #1
  40770e:	3110      	adds	r1, #16
  407710:	2b07      	cmp	r3, #7
  407712:	9127      	str	r1, [sp, #156]	; 0x9c
  407714:	9326      	str	r3, [sp, #152]	; 0x98
  407716:	e882 0840 	stmia.w	r2, {r6, fp}
  40771a:	ddf2      	ble.n	407702 <_svfprintf_r+0x972>
  40771c:	aa25      	add	r2, sp, #148	; 0x94
  40771e:	4629      	mov	r1, r5
  407720:	4620      	mov	r0, r4
  407722:	f004 fa2b 	bl	40bb7c <__ssprint_r>
  407726:	2800      	cmp	r0, #0
  407728:	f47f ac04 	bne.w	406f34 <_svfprintf_r+0x1a4>
  40772c:	3f10      	subs	r7, #16
  40772e:	2f10      	cmp	r7, #16
  407730:	9927      	ldr	r1, [sp, #156]	; 0x9c
  407732:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407734:	464a      	mov	r2, r9
  407736:	dce9      	bgt.n	40770c <_svfprintf_r+0x97c>
  407738:	4635      	mov	r5, r6
  40773a:	460c      	mov	r4, r1
  40773c:	4646      	mov	r6, r8
  40773e:	4690      	mov	r8, r2
  407740:	3301      	adds	r3, #1
  407742:	443c      	add	r4, r7
  407744:	2b07      	cmp	r3, #7
  407746:	9427      	str	r4, [sp, #156]	; 0x9c
  407748:	9326      	str	r3, [sp, #152]	; 0x98
  40774a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40774e:	f300 8232 	bgt.w	407bb6 <_svfprintf_r+0xe26>
  407752:	f108 0808 	add.w	r8, r8, #8
  407756:	e4ac      	b.n	4070b2 <_svfprintf_r+0x322>
  407758:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40775a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40775c:	2b01      	cmp	r3, #1
  40775e:	f340 81fe 	ble.w	407b5e <_svfprintf_r+0xdce>
  407762:	3701      	adds	r7, #1
  407764:	3401      	adds	r4, #1
  407766:	2301      	movs	r3, #1
  407768:	2f07      	cmp	r7, #7
  40776a:	9427      	str	r4, [sp, #156]	; 0x9c
  40776c:	9726      	str	r7, [sp, #152]	; 0x98
  40776e:	f8c8 6000 	str.w	r6, [r8]
  407772:	f8c8 3004 	str.w	r3, [r8, #4]
  407776:	f300 8203 	bgt.w	407b80 <_svfprintf_r+0xdf0>
  40777a:	f108 0808 	add.w	r8, r8, #8
  40777e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  407780:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  407782:	f8c8 3000 	str.w	r3, [r8]
  407786:	3701      	adds	r7, #1
  407788:	4414      	add	r4, r2
  40778a:	2f07      	cmp	r7, #7
  40778c:	9427      	str	r4, [sp, #156]	; 0x9c
  40778e:	9726      	str	r7, [sp, #152]	; 0x98
  407790:	f8c8 2004 	str.w	r2, [r8, #4]
  407794:	f300 8200 	bgt.w	407b98 <_svfprintf_r+0xe08>
  407798:	f108 0808 	add.w	r8, r8, #8
  40779c:	a815      	add	r0, sp, #84	; 0x54
  40779e:	c80d      	ldmia	r0, {r0, r2, r3}
  4077a0:	9914      	ldr	r1, [sp, #80]	; 0x50
  4077a2:	f005 f887 	bl	40c8b4 <__aeabi_dcmpeq>
  4077a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4077a8:	2800      	cmp	r0, #0
  4077aa:	f040 8101 	bne.w	4079b0 <_svfprintf_r+0xc20>
  4077ae:	3b01      	subs	r3, #1
  4077b0:	3701      	adds	r7, #1
  4077b2:	3601      	adds	r6, #1
  4077b4:	441c      	add	r4, r3
  4077b6:	2f07      	cmp	r7, #7
  4077b8:	9726      	str	r7, [sp, #152]	; 0x98
  4077ba:	9427      	str	r4, [sp, #156]	; 0x9c
  4077bc:	f8c8 6000 	str.w	r6, [r8]
  4077c0:	f8c8 3004 	str.w	r3, [r8, #4]
  4077c4:	f300 8127 	bgt.w	407a16 <_svfprintf_r+0xc86>
  4077c8:	f108 0808 	add.w	r8, r8, #8
  4077cc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4077ce:	f8c8 2004 	str.w	r2, [r8, #4]
  4077d2:	3701      	adds	r7, #1
  4077d4:	4414      	add	r4, r2
  4077d6:	ab21      	add	r3, sp, #132	; 0x84
  4077d8:	2f07      	cmp	r7, #7
  4077da:	9427      	str	r4, [sp, #156]	; 0x9c
  4077dc:	9726      	str	r7, [sp, #152]	; 0x98
  4077de:	f8c8 3000 	str.w	r3, [r8]
  4077e2:	f77f acb3 	ble.w	40714c <_svfprintf_r+0x3bc>
  4077e6:	aa25      	add	r2, sp, #148	; 0x94
  4077e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4077ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4077ec:	f004 f9c6 	bl	40bb7c <__ssprint_r>
  4077f0:	2800      	cmp	r0, #0
  4077f2:	f47f ab9f 	bne.w	406f34 <_svfprintf_r+0x1a4>
  4077f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4077f8:	46c8      	mov	r8, r9
  4077fa:	e4a9      	b.n	407150 <_svfprintf_r+0x3c0>
  4077fc:	aa25      	add	r2, sp, #148	; 0x94
  4077fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407800:	980c      	ldr	r0, [sp, #48]	; 0x30
  407802:	f004 f9bb 	bl	40bb7c <__ssprint_r>
  407806:	2800      	cmp	r0, #0
  407808:	f43f aceb 	beq.w	4071e2 <_svfprintf_r+0x452>
  40780c:	f7ff bb92 	b.w	406f34 <_svfprintf_r+0x1a4>
  407810:	f8dd b01c 	ldr.w	fp, [sp, #28]
  407814:	2b01      	cmp	r3, #1
  407816:	f000 8134 	beq.w	407a82 <_svfprintf_r+0xcf2>
  40781a:	2b02      	cmp	r3, #2
  40781c:	d125      	bne.n	40786a <_svfprintf_r+0xada>
  40781e:	f8cd b01c 	str.w	fp, [sp, #28]
  407822:	2400      	movs	r4, #0
  407824:	2500      	movs	r5, #0
  407826:	e61e      	b.n	407466 <_svfprintf_r+0x6d6>
  407828:	aa25      	add	r2, sp, #148	; 0x94
  40782a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40782c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40782e:	f004 f9a5 	bl	40bb7c <__ssprint_r>
  407832:	2800      	cmp	r0, #0
  407834:	f47f ab7e 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407838:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40783a:	46c8      	mov	r8, r9
  40783c:	e475      	b.n	40712a <_svfprintf_r+0x39a>
  40783e:	aa25      	add	r2, sp, #148	; 0x94
  407840:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407842:	980c      	ldr	r0, [sp, #48]	; 0x30
  407844:	f004 f99a 	bl	40bb7c <__ssprint_r>
  407848:	2800      	cmp	r0, #0
  40784a:	f47f ab73 	bne.w	406f34 <_svfprintf_r+0x1a4>
  40784e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407850:	46c8      	mov	r8, r9
  407852:	e41b      	b.n	40708c <_svfprintf_r+0x2fc>
  407854:	aa25      	add	r2, sp, #148	; 0x94
  407856:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407858:	980c      	ldr	r0, [sp, #48]	; 0x30
  40785a:	f004 f98f 	bl	40bb7c <__ssprint_r>
  40785e:	2800      	cmp	r0, #0
  407860:	f47f ab68 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407864:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407866:	46c8      	mov	r8, r9
  407868:	e420      	b.n	4070ac <_svfprintf_r+0x31c>
  40786a:	f8cd b01c 	str.w	fp, [sp, #28]
  40786e:	2400      	movs	r4, #0
  407870:	2500      	movs	r5, #0
  407872:	4649      	mov	r1, r9
  407874:	e000      	b.n	407878 <_svfprintf_r+0xae8>
  407876:	4631      	mov	r1, r6
  407878:	08e2      	lsrs	r2, r4, #3
  40787a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40787e:	08e8      	lsrs	r0, r5, #3
  407880:	f004 0307 	and.w	r3, r4, #7
  407884:	4605      	mov	r5, r0
  407886:	4614      	mov	r4, r2
  407888:	3330      	adds	r3, #48	; 0x30
  40788a:	ea54 0205 	orrs.w	r2, r4, r5
  40788e:	f801 3c01 	strb.w	r3, [r1, #-1]
  407892:	f101 36ff 	add.w	r6, r1, #4294967295
  407896:	d1ee      	bne.n	407876 <_svfprintf_r+0xae6>
  407898:	9a07      	ldr	r2, [sp, #28]
  40789a:	07d2      	lsls	r2, r2, #31
  40789c:	f57f adf3 	bpl.w	407486 <_svfprintf_r+0x6f6>
  4078a0:	2b30      	cmp	r3, #48	; 0x30
  4078a2:	f43f adf0 	beq.w	407486 <_svfprintf_r+0x6f6>
  4078a6:	3902      	subs	r1, #2
  4078a8:	2330      	movs	r3, #48	; 0x30
  4078aa:	f806 3c01 	strb.w	r3, [r6, #-1]
  4078ae:	eba9 0301 	sub.w	r3, r9, r1
  4078b2:	930e      	str	r3, [sp, #56]	; 0x38
  4078b4:	460e      	mov	r6, r1
  4078b6:	f7ff bb7b 	b.w	406fb0 <_svfprintf_r+0x220>
  4078ba:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4078bc:	2900      	cmp	r1, #0
  4078be:	f340 822e 	ble.w	407d1e <_svfprintf_r+0xf8e>
  4078c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4078c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4078c6:	4293      	cmp	r3, r2
  4078c8:	bfa8      	it	ge
  4078ca:	4613      	movge	r3, r2
  4078cc:	2b00      	cmp	r3, #0
  4078ce:	461f      	mov	r7, r3
  4078d0:	dd0d      	ble.n	4078ee <_svfprintf_r+0xb5e>
  4078d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4078d4:	f8c8 6000 	str.w	r6, [r8]
  4078d8:	3301      	adds	r3, #1
  4078da:	443c      	add	r4, r7
  4078dc:	2b07      	cmp	r3, #7
  4078de:	9427      	str	r4, [sp, #156]	; 0x9c
  4078e0:	f8c8 7004 	str.w	r7, [r8, #4]
  4078e4:	9326      	str	r3, [sp, #152]	; 0x98
  4078e6:	f300 831f 	bgt.w	407f28 <_svfprintf_r+0x1198>
  4078ea:	f108 0808 	add.w	r8, r8, #8
  4078ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4078f0:	2f00      	cmp	r7, #0
  4078f2:	bfa8      	it	ge
  4078f4:	1bdb      	subge	r3, r3, r7
  4078f6:	2b00      	cmp	r3, #0
  4078f8:	461f      	mov	r7, r3
  4078fa:	f340 80d6 	ble.w	407aaa <_svfprintf_r+0xd1a>
  4078fe:	2f10      	cmp	r7, #16
  407900:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407902:	4d31      	ldr	r5, [pc, #196]	; (4079c8 <_svfprintf_r+0xc38>)
  407904:	f340 81ed 	ble.w	407ce2 <_svfprintf_r+0xf52>
  407908:	4642      	mov	r2, r8
  40790a:	4621      	mov	r1, r4
  40790c:	46b0      	mov	r8, r6
  40790e:	f04f 0b10 	mov.w	fp, #16
  407912:	462e      	mov	r6, r5
  407914:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  407916:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  407918:	e004      	b.n	407924 <_svfprintf_r+0xb94>
  40791a:	3208      	adds	r2, #8
  40791c:	3f10      	subs	r7, #16
  40791e:	2f10      	cmp	r7, #16
  407920:	f340 81db 	ble.w	407cda <_svfprintf_r+0xf4a>
  407924:	3301      	adds	r3, #1
  407926:	3110      	adds	r1, #16
  407928:	2b07      	cmp	r3, #7
  40792a:	9127      	str	r1, [sp, #156]	; 0x9c
  40792c:	9326      	str	r3, [sp, #152]	; 0x98
  40792e:	e882 0840 	stmia.w	r2, {r6, fp}
  407932:	ddf2      	ble.n	40791a <_svfprintf_r+0xb8a>
  407934:	aa25      	add	r2, sp, #148	; 0x94
  407936:	4629      	mov	r1, r5
  407938:	4620      	mov	r0, r4
  40793a:	f004 f91f 	bl	40bb7c <__ssprint_r>
  40793e:	2800      	cmp	r0, #0
  407940:	f47f aaf8 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407944:	9927      	ldr	r1, [sp, #156]	; 0x9c
  407946:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407948:	464a      	mov	r2, r9
  40794a:	e7e7      	b.n	40791c <_svfprintf_r+0xb8c>
  40794c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40794e:	930e      	str	r3, [sp, #56]	; 0x38
  407950:	464e      	mov	r6, r9
  407952:	f7ff bb2d 	b.w	406fb0 <_svfprintf_r+0x220>
  407956:	2d00      	cmp	r5, #0
  407958:	bf08      	it	eq
  40795a:	2c0a      	cmpeq	r4, #10
  40795c:	f0c0 808f 	bcc.w	407a7e <_svfprintf_r+0xcee>
  407960:	464e      	mov	r6, r9
  407962:	4620      	mov	r0, r4
  407964:	4629      	mov	r1, r5
  407966:	220a      	movs	r2, #10
  407968:	2300      	movs	r3, #0
  40796a:	f005 f813 	bl	40c994 <__aeabi_uldivmod>
  40796e:	3230      	adds	r2, #48	; 0x30
  407970:	f806 2d01 	strb.w	r2, [r6, #-1]!
  407974:	4620      	mov	r0, r4
  407976:	4629      	mov	r1, r5
  407978:	2300      	movs	r3, #0
  40797a:	220a      	movs	r2, #10
  40797c:	f005 f80a 	bl	40c994 <__aeabi_uldivmod>
  407980:	4604      	mov	r4, r0
  407982:	460d      	mov	r5, r1
  407984:	ea54 0305 	orrs.w	r3, r4, r5
  407988:	d1eb      	bne.n	407962 <_svfprintf_r+0xbd2>
  40798a:	eba9 0306 	sub.w	r3, r9, r6
  40798e:	930e      	str	r3, [sp, #56]	; 0x38
  407990:	f7ff bb0e 	b.w	406fb0 <_svfprintf_r+0x220>
  407994:	aa25      	add	r2, sp, #148	; 0x94
  407996:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407998:	980c      	ldr	r0, [sp, #48]	; 0x30
  40799a:	f004 f8ef 	bl	40bb7c <__ssprint_r>
  40799e:	2800      	cmp	r0, #0
  4079a0:	f47f aac8 	bne.w	406f34 <_svfprintf_r+0x1a4>
  4079a4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4079a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4079aa:	46c8      	mov	r8, r9
  4079ac:	f7ff bb5e 	b.w	40706c <_svfprintf_r+0x2dc>
  4079b0:	1e5e      	subs	r6, r3, #1
  4079b2:	2e00      	cmp	r6, #0
  4079b4:	f77f af0a 	ble.w	4077cc <_svfprintf_r+0xa3c>
  4079b8:	2e10      	cmp	r6, #16
  4079ba:	4d03      	ldr	r5, [pc, #12]	; (4079c8 <_svfprintf_r+0xc38>)
  4079bc:	dd22      	ble.n	407a04 <_svfprintf_r+0xc74>
  4079be:	4622      	mov	r2, r4
  4079c0:	f04f 0b10 	mov.w	fp, #16
  4079c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4079c6:	e006      	b.n	4079d6 <_svfprintf_r+0xc46>
  4079c8:	0040dd1c 	.word	0x0040dd1c
  4079cc:	3e10      	subs	r6, #16
  4079ce:	2e10      	cmp	r6, #16
  4079d0:	f108 0808 	add.w	r8, r8, #8
  4079d4:	dd15      	ble.n	407a02 <_svfprintf_r+0xc72>
  4079d6:	3701      	adds	r7, #1
  4079d8:	3210      	adds	r2, #16
  4079da:	2f07      	cmp	r7, #7
  4079dc:	9227      	str	r2, [sp, #156]	; 0x9c
  4079de:	9726      	str	r7, [sp, #152]	; 0x98
  4079e0:	e888 0820 	stmia.w	r8, {r5, fp}
  4079e4:	ddf2      	ble.n	4079cc <_svfprintf_r+0xc3c>
  4079e6:	aa25      	add	r2, sp, #148	; 0x94
  4079e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4079ea:	4620      	mov	r0, r4
  4079ec:	f004 f8c6 	bl	40bb7c <__ssprint_r>
  4079f0:	2800      	cmp	r0, #0
  4079f2:	f47f aa9f 	bne.w	406f34 <_svfprintf_r+0x1a4>
  4079f6:	3e10      	subs	r6, #16
  4079f8:	2e10      	cmp	r6, #16
  4079fa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4079fc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4079fe:	46c8      	mov	r8, r9
  407a00:	dce9      	bgt.n	4079d6 <_svfprintf_r+0xc46>
  407a02:	4614      	mov	r4, r2
  407a04:	3701      	adds	r7, #1
  407a06:	4434      	add	r4, r6
  407a08:	2f07      	cmp	r7, #7
  407a0a:	9427      	str	r4, [sp, #156]	; 0x9c
  407a0c:	9726      	str	r7, [sp, #152]	; 0x98
  407a0e:	e888 0060 	stmia.w	r8, {r5, r6}
  407a12:	f77f aed9 	ble.w	4077c8 <_svfprintf_r+0xa38>
  407a16:	aa25      	add	r2, sp, #148	; 0x94
  407a18:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407a1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  407a1c:	f004 f8ae 	bl	40bb7c <__ssprint_r>
  407a20:	2800      	cmp	r0, #0
  407a22:	f47f aa87 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407a26:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407a28:	9f26      	ldr	r7, [sp, #152]	; 0x98
  407a2a:	46c8      	mov	r8, r9
  407a2c:	e6ce      	b.n	4077cc <_svfprintf_r+0xa3c>
  407a2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  407a30:	6814      	ldr	r4, [r2, #0]
  407a32:	4613      	mov	r3, r2
  407a34:	3304      	adds	r3, #4
  407a36:	17e5      	asrs	r5, r4, #31
  407a38:	930f      	str	r3, [sp, #60]	; 0x3c
  407a3a:	4622      	mov	r2, r4
  407a3c:	462b      	mov	r3, r5
  407a3e:	e4fa      	b.n	407436 <_svfprintf_r+0x6a6>
  407a40:	3204      	adds	r2, #4
  407a42:	681c      	ldr	r4, [r3, #0]
  407a44:	920f      	str	r2, [sp, #60]	; 0x3c
  407a46:	2301      	movs	r3, #1
  407a48:	2500      	movs	r5, #0
  407a4a:	f7ff ba94 	b.w	406f76 <_svfprintf_r+0x1e6>
  407a4e:	681c      	ldr	r4, [r3, #0]
  407a50:	3304      	adds	r3, #4
  407a52:	930f      	str	r3, [sp, #60]	; 0x3c
  407a54:	2500      	movs	r5, #0
  407a56:	e421      	b.n	40729c <_svfprintf_r+0x50c>
  407a58:	990f      	ldr	r1, [sp, #60]	; 0x3c
  407a5a:	460a      	mov	r2, r1
  407a5c:	3204      	adds	r2, #4
  407a5e:	680c      	ldr	r4, [r1, #0]
  407a60:	920f      	str	r2, [sp, #60]	; 0x3c
  407a62:	2500      	movs	r5, #0
  407a64:	f7ff ba87 	b.w	406f76 <_svfprintf_r+0x1e6>
  407a68:	4614      	mov	r4, r2
  407a6a:	3301      	adds	r3, #1
  407a6c:	4434      	add	r4, r6
  407a6e:	2b07      	cmp	r3, #7
  407a70:	9427      	str	r4, [sp, #156]	; 0x9c
  407a72:	9326      	str	r3, [sp, #152]	; 0x98
  407a74:	e888 0060 	stmia.w	r8, {r5, r6}
  407a78:	f77f ab68 	ble.w	40714c <_svfprintf_r+0x3bc>
  407a7c:	e6b3      	b.n	4077e6 <_svfprintf_r+0xa56>
  407a7e:	f8dd b01c 	ldr.w	fp, [sp, #28]
  407a82:	f8cd b01c 	str.w	fp, [sp, #28]
  407a86:	ae42      	add	r6, sp, #264	; 0x108
  407a88:	3430      	adds	r4, #48	; 0x30
  407a8a:	2301      	movs	r3, #1
  407a8c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  407a90:	930e      	str	r3, [sp, #56]	; 0x38
  407a92:	f7ff ba8d 	b.w	406fb0 <_svfprintf_r+0x220>
  407a96:	aa25      	add	r2, sp, #148	; 0x94
  407a98:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407a9a:	980c      	ldr	r0, [sp, #48]	; 0x30
  407a9c:	f004 f86e 	bl	40bb7c <__ssprint_r>
  407aa0:	2800      	cmp	r0, #0
  407aa2:	f47f aa47 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407aa6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407aa8:	46c8      	mov	r8, r9
  407aaa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  407aac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  407aae:	429a      	cmp	r2, r3
  407ab0:	db44      	blt.n	407b3c <_svfprintf_r+0xdac>
  407ab2:	9b07      	ldr	r3, [sp, #28]
  407ab4:	07d9      	lsls	r1, r3, #31
  407ab6:	d441      	bmi.n	407b3c <_svfprintf_r+0xdac>
  407ab8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  407aba:	9812      	ldr	r0, [sp, #72]	; 0x48
  407abc:	1a9a      	subs	r2, r3, r2
  407abe:	1a1d      	subs	r5, r3, r0
  407ac0:	4295      	cmp	r5, r2
  407ac2:	bfa8      	it	ge
  407ac4:	4615      	movge	r5, r2
  407ac6:	2d00      	cmp	r5, #0
  407ac8:	dd0e      	ble.n	407ae8 <_svfprintf_r+0xd58>
  407aca:	9926      	ldr	r1, [sp, #152]	; 0x98
  407acc:	f8c8 5004 	str.w	r5, [r8, #4]
  407ad0:	3101      	adds	r1, #1
  407ad2:	4406      	add	r6, r0
  407ad4:	442c      	add	r4, r5
  407ad6:	2907      	cmp	r1, #7
  407ad8:	f8c8 6000 	str.w	r6, [r8]
  407adc:	9427      	str	r4, [sp, #156]	; 0x9c
  407ade:	9126      	str	r1, [sp, #152]	; 0x98
  407ae0:	f300 823b 	bgt.w	407f5a <_svfprintf_r+0x11ca>
  407ae4:	f108 0808 	add.w	r8, r8, #8
  407ae8:	2d00      	cmp	r5, #0
  407aea:	bfac      	ite	ge
  407aec:	1b56      	subge	r6, r2, r5
  407aee:	4616      	movlt	r6, r2
  407af0:	2e00      	cmp	r6, #0
  407af2:	f77f ab2d 	ble.w	407150 <_svfprintf_r+0x3c0>
  407af6:	2e10      	cmp	r6, #16
  407af8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407afa:	4db0      	ldr	r5, [pc, #704]	; (407dbc <_svfprintf_r+0x102c>)
  407afc:	ddb5      	ble.n	407a6a <_svfprintf_r+0xcda>
  407afe:	4622      	mov	r2, r4
  407b00:	2710      	movs	r7, #16
  407b02:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  407b06:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  407b08:	e004      	b.n	407b14 <_svfprintf_r+0xd84>
  407b0a:	f108 0808 	add.w	r8, r8, #8
  407b0e:	3e10      	subs	r6, #16
  407b10:	2e10      	cmp	r6, #16
  407b12:	dda9      	ble.n	407a68 <_svfprintf_r+0xcd8>
  407b14:	3301      	adds	r3, #1
  407b16:	3210      	adds	r2, #16
  407b18:	2b07      	cmp	r3, #7
  407b1a:	9227      	str	r2, [sp, #156]	; 0x9c
  407b1c:	9326      	str	r3, [sp, #152]	; 0x98
  407b1e:	e888 00a0 	stmia.w	r8, {r5, r7}
  407b22:	ddf2      	ble.n	407b0a <_svfprintf_r+0xd7a>
  407b24:	aa25      	add	r2, sp, #148	; 0x94
  407b26:	4621      	mov	r1, r4
  407b28:	4658      	mov	r0, fp
  407b2a:	f004 f827 	bl	40bb7c <__ssprint_r>
  407b2e:	2800      	cmp	r0, #0
  407b30:	f47f aa00 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407b34:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  407b36:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407b38:	46c8      	mov	r8, r9
  407b3a:	e7e8      	b.n	407b0e <_svfprintf_r+0xd7e>
  407b3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407b3e:	9819      	ldr	r0, [sp, #100]	; 0x64
  407b40:	991a      	ldr	r1, [sp, #104]	; 0x68
  407b42:	f8c8 1000 	str.w	r1, [r8]
  407b46:	3301      	adds	r3, #1
  407b48:	4404      	add	r4, r0
  407b4a:	2b07      	cmp	r3, #7
  407b4c:	9427      	str	r4, [sp, #156]	; 0x9c
  407b4e:	f8c8 0004 	str.w	r0, [r8, #4]
  407b52:	9326      	str	r3, [sp, #152]	; 0x98
  407b54:	f300 81f5 	bgt.w	407f42 <_svfprintf_r+0x11b2>
  407b58:	f108 0808 	add.w	r8, r8, #8
  407b5c:	e7ac      	b.n	407ab8 <_svfprintf_r+0xd28>
  407b5e:	9b07      	ldr	r3, [sp, #28]
  407b60:	07da      	lsls	r2, r3, #31
  407b62:	f53f adfe 	bmi.w	407762 <_svfprintf_r+0x9d2>
  407b66:	3701      	adds	r7, #1
  407b68:	3401      	adds	r4, #1
  407b6a:	2301      	movs	r3, #1
  407b6c:	2f07      	cmp	r7, #7
  407b6e:	9427      	str	r4, [sp, #156]	; 0x9c
  407b70:	9726      	str	r7, [sp, #152]	; 0x98
  407b72:	f8c8 6000 	str.w	r6, [r8]
  407b76:	f8c8 3004 	str.w	r3, [r8, #4]
  407b7a:	f77f ae25 	ble.w	4077c8 <_svfprintf_r+0xa38>
  407b7e:	e74a      	b.n	407a16 <_svfprintf_r+0xc86>
  407b80:	aa25      	add	r2, sp, #148	; 0x94
  407b82:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407b84:	980c      	ldr	r0, [sp, #48]	; 0x30
  407b86:	f003 fff9 	bl	40bb7c <__ssprint_r>
  407b8a:	2800      	cmp	r0, #0
  407b8c:	f47f a9d2 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407b90:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407b92:	9f26      	ldr	r7, [sp, #152]	; 0x98
  407b94:	46c8      	mov	r8, r9
  407b96:	e5f2      	b.n	40777e <_svfprintf_r+0x9ee>
  407b98:	aa25      	add	r2, sp, #148	; 0x94
  407b9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407b9c:	980c      	ldr	r0, [sp, #48]	; 0x30
  407b9e:	f003 ffed 	bl	40bb7c <__ssprint_r>
  407ba2:	2800      	cmp	r0, #0
  407ba4:	f47f a9c6 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407ba8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407baa:	9f26      	ldr	r7, [sp, #152]	; 0x98
  407bac:	46c8      	mov	r8, r9
  407bae:	e5f5      	b.n	40779c <_svfprintf_r+0xa0c>
  407bb0:	464e      	mov	r6, r9
  407bb2:	f7ff b9fd 	b.w	406fb0 <_svfprintf_r+0x220>
  407bb6:	aa25      	add	r2, sp, #148	; 0x94
  407bb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407bba:	980c      	ldr	r0, [sp, #48]	; 0x30
  407bbc:	f003 ffde 	bl	40bb7c <__ssprint_r>
  407bc0:	2800      	cmp	r0, #0
  407bc2:	f47f a9b7 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407bc6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407bc8:	46c8      	mov	r8, r9
  407bca:	f7ff ba72 	b.w	4070b2 <_svfprintf_r+0x322>
  407bce:	9c15      	ldr	r4, [sp, #84]	; 0x54
  407bd0:	4622      	mov	r2, r4
  407bd2:	4620      	mov	r0, r4
  407bd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
  407bd6:	4623      	mov	r3, r4
  407bd8:	4621      	mov	r1, r4
  407bda:	f004 fe9d 	bl	40c918 <__aeabi_dcmpun>
  407bde:	2800      	cmp	r0, #0
  407be0:	f040 8286 	bne.w	4080f0 <_svfprintf_r+0x1360>
  407be4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  407be6:	3301      	adds	r3, #1
  407be8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407bea:	f023 0320 	bic.w	r3, r3, #32
  407bee:	930e      	str	r3, [sp, #56]	; 0x38
  407bf0:	f000 81e2 	beq.w	407fb8 <_svfprintf_r+0x1228>
  407bf4:	2b47      	cmp	r3, #71	; 0x47
  407bf6:	f000 811e 	beq.w	407e36 <_svfprintf_r+0x10a6>
  407bfa:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  407bfe:	9307      	str	r3, [sp, #28]
  407c00:	9b14      	ldr	r3, [sp, #80]	; 0x50
  407c02:	1e1f      	subs	r7, r3, #0
  407c04:	9b15      	ldr	r3, [sp, #84]	; 0x54
  407c06:	9308      	str	r3, [sp, #32]
  407c08:	bfbb      	ittet	lt
  407c0a:	463b      	movlt	r3, r7
  407c0c:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  407c10:	2300      	movge	r3, #0
  407c12:	232d      	movlt	r3, #45	; 0x2d
  407c14:	9310      	str	r3, [sp, #64]	; 0x40
  407c16:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407c18:	2b66      	cmp	r3, #102	; 0x66
  407c1a:	f000 81bb 	beq.w	407f94 <_svfprintf_r+0x1204>
  407c1e:	2b46      	cmp	r3, #70	; 0x46
  407c20:	f000 80df 	beq.w	407de2 <_svfprintf_r+0x1052>
  407c24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  407c26:	9a08      	ldr	r2, [sp, #32]
  407c28:	2b45      	cmp	r3, #69	; 0x45
  407c2a:	bf0c      	ite	eq
  407c2c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  407c2e:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  407c30:	a823      	add	r0, sp, #140	; 0x8c
  407c32:	a920      	add	r1, sp, #128	; 0x80
  407c34:	bf08      	it	eq
  407c36:	1c5d      	addeq	r5, r3, #1
  407c38:	9004      	str	r0, [sp, #16]
  407c3a:	9103      	str	r1, [sp, #12]
  407c3c:	a81f      	add	r0, sp, #124	; 0x7c
  407c3e:	2102      	movs	r1, #2
  407c40:	463b      	mov	r3, r7
  407c42:	9002      	str	r0, [sp, #8]
  407c44:	9501      	str	r5, [sp, #4]
  407c46:	9100      	str	r1, [sp, #0]
  407c48:	980c      	ldr	r0, [sp, #48]	; 0x30
  407c4a:	f001 faa1 	bl	409190 <_dtoa_r>
  407c4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407c50:	2b67      	cmp	r3, #103	; 0x67
  407c52:	4606      	mov	r6, r0
  407c54:	f040 81e0 	bne.w	408018 <_svfprintf_r+0x1288>
  407c58:	f01b 0f01 	tst.w	fp, #1
  407c5c:	f000 8246 	beq.w	4080ec <_svfprintf_r+0x135c>
  407c60:	1974      	adds	r4, r6, r5
  407c62:	9a16      	ldr	r2, [sp, #88]	; 0x58
  407c64:	9808      	ldr	r0, [sp, #32]
  407c66:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  407c68:	4639      	mov	r1, r7
  407c6a:	f004 fe23 	bl	40c8b4 <__aeabi_dcmpeq>
  407c6e:	2800      	cmp	r0, #0
  407c70:	f040 8165 	bne.w	407f3e <_svfprintf_r+0x11ae>
  407c74:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  407c76:	42a3      	cmp	r3, r4
  407c78:	d206      	bcs.n	407c88 <_svfprintf_r+0xef8>
  407c7a:	2130      	movs	r1, #48	; 0x30
  407c7c:	1c5a      	adds	r2, r3, #1
  407c7e:	9223      	str	r2, [sp, #140]	; 0x8c
  407c80:	7019      	strb	r1, [r3, #0]
  407c82:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  407c84:	429c      	cmp	r4, r3
  407c86:	d8f9      	bhi.n	407c7c <_svfprintf_r+0xeec>
  407c88:	1b9b      	subs	r3, r3, r6
  407c8a:	9313      	str	r3, [sp, #76]	; 0x4c
  407c8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  407c8e:	2b47      	cmp	r3, #71	; 0x47
  407c90:	f000 80e9 	beq.w	407e66 <_svfprintf_r+0x10d6>
  407c94:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407c96:	2b65      	cmp	r3, #101	; 0x65
  407c98:	f340 81cd 	ble.w	408036 <_svfprintf_r+0x12a6>
  407c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407c9e:	2b66      	cmp	r3, #102	; 0x66
  407ca0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  407ca2:	9312      	str	r3, [sp, #72]	; 0x48
  407ca4:	f000 819e 	beq.w	407fe4 <_svfprintf_r+0x1254>
  407ca8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  407caa:	9a12      	ldr	r2, [sp, #72]	; 0x48
  407cac:	4619      	mov	r1, r3
  407cae:	4291      	cmp	r1, r2
  407cb0:	f300 818a 	bgt.w	407fc8 <_svfprintf_r+0x1238>
  407cb4:	f01b 0f01 	tst.w	fp, #1
  407cb8:	f040 8213 	bne.w	4080e2 <_svfprintf_r+0x1352>
  407cbc:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  407cc0:	9308      	str	r3, [sp, #32]
  407cc2:	2367      	movs	r3, #103	; 0x67
  407cc4:	920e      	str	r2, [sp, #56]	; 0x38
  407cc6:	9311      	str	r3, [sp, #68]	; 0x44
  407cc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  407cca:	2b00      	cmp	r3, #0
  407ccc:	f040 80c4 	bne.w	407e58 <_svfprintf_r+0x10c8>
  407cd0:	930a      	str	r3, [sp, #40]	; 0x28
  407cd2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  407cd6:	f7ff b973 	b.w	406fc0 <_svfprintf_r+0x230>
  407cda:	4635      	mov	r5, r6
  407cdc:	460c      	mov	r4, r1
  407cde:	4646      	mov	r6, r8
  407ce0:	4690      	mov	r8, r2
  407ce2:	3301      	adds	r3, #1
  407ce4:	443c      	add	r4, r7
  407ce6:	2b07      	cmp	r3, #7
  407ce8:	9427      	str	r4, [sp, #156]	; 0x9c
  407cea:	9326      	str	r3, [sp, #152]	; 0x98
  407cec:	e888 00a0 	stmia.w	r8, {r5, r7}
  407cf0:	f73f aed1 	bgt.w	407a96 <_svfprintf_r+0xd06>
  407cf4:	f108 0808 	add.w	r8, r8, #8
  407cf8:	e6d7      	b.n	407aaa <_svfprintf_r+0xd1a>
  407cfa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  407cfc:	6813      	ldr	r3, [r2, #0]
  407cfe:	3204      	adds	r2, #4
  407d00:	920f      	str	r2, [sp, #60]	; 0x3c
  407d02:	9a09      	ldr	r2, [sp, #36]	; 0x24
  407d04:	601a      	str	r2, [r3, #0]
  407d06:	f7ff b86a 	b.w	406dde <_svfprintf_r+0x4e>
  407d0a:	aa25      	add	r2, sp, #148	; 0x94
  407d0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407d0e:	980c      	ldr	r0, [sp, #48]	; 0x30
  407d10:	f003 ff34 	bl	40bb7c <__ssprint_r>
  407d14:	2800      	cmp	r0, #0
  407d16:	f47f a90d 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407d1a:	46c8      	mov	r8, r9
  407d1c:	e48d      	b.n	40763a <_svfprintf_r+0x8aa>
  407d1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407d20:	4a27      	ldr	r2, [pc, #156]	; (407dc0 <_svfprintf_r+0x1030>)
  407d22:	f8c8 2000 	str.w	r2, [r8]
  407d26:	3301      	adds	r3, #1
  407d28:	3401      	adds	r4, #1
  407d2a:	2201      	movs	r2, #1
  407d2c:	2b07      	cmp	r3, #7
  407d2e:	9427      	str	r4, [sp, #156]	; 0x9c
  407d30:	9326      	str	r3, [sp, #152]	; 0x98
  407d32:	f8c8 2004 	str.w	r2, [r8, #4]
  407d36:	dc72      	bgt.n	407e1e <_svfprintf_r+0x108e>
  407d38:	f108 0808 	add.w	r8, r8, #8
  407d3c:	b929      	cbnz	r1, 407d4a <_svfprintf_r+0xfba>
  407d3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  407d40:	b91b      	cbnz	r3, 407d4a <_svfprintf_r+0xfba>
  407d42:	9b07      	ldr	r3, [sp, #28]
  407d44:	07d8      	lsls	r0, r3, #31
  407d46:	f57f aa03 	bpl.w	407150 <_svfprintf_r+0x3c0>
  407d4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  407d4c:	9819      	ldr	r0, [sp, #100]	; 0x64
  407d4e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  407d50:	f8c8 2000 	str.w	r2, [r8]
  407d54:	3301      	adds	r3, #1
  407d56:	4602      	mov	r2, r0
  407d58:	4422      	add	r2, r4
  407d5a:	2b07      	cmp	r3, #7
  407d5c:	9227      	str	r2, [sp, #156]	; 0x9c
  407d5e:	f8c8 0004 	str.w	r0, [r8, #4]
  407d62:	9326      	str	r3, [sp, #152]	; 0x98
  407d64:	f300 818d 	bgt.w	408082 <_svfprintf_r+0x12f2>
  407d68:	f108 0808 	add.w	r8, r8, #8
  407d6c:	2900      	cmp	r1, #0
  407d6e:	f2c0 8165 	blt.w	40803c <_svfprintf_r+0x12ac>
  407d72:	9913      	ldr	r1, [sp, #76]	; 0x4c
  407d74:	f8c8 6000 	str.w	r6, [r8]
  407d78:	3301      	adds	r3, #1
  407d7a:	188c      	adds	r4, r1, r2
  407d7c:	2b07      	cmp	r3, #7
  407d7e:	9427      	str	r4, [sp, #156]	; 0x9c
  407d80:	9326      	str	r3, [sp, #152]	; 0x98
  407d82:	f8c8 1004 	str.w	r1, [r8, #4]
  407d86:	f77f a9e1 	ble.w	40714c <_svfprintf_r+0x3bc>
  407d8a:	e52c      	b.n	4077e6 <_svfprintf_r+0xa56>
  407d8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  407d8e:	9909      	ldr	r1, [sp, #36]	; 0x24
  407d90:	6813      	ldr	r3, [r2, #0]
  407d92:	17cd      	asrs	r5, r1, #31
  407d94:	4608      	mov	r0, r1
  407d96:	3204      	adds	r2, #4
  407d98:	4629      	mov	r1, r5
  407d9a:	920f      	str	r2, [sp, #60]	; 0x3c
  407d9c:	e9c3 0100 	strd	r0, r1, [r3]
  407da0:	f7ff b81d 	b.w	406dde <_svfprintf_r+0x4e>
  407da4:	aa25      	add	r2, sp, #148	; 0x94
  407da6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407da8:	980c      	ldr	r0, [sp, #48]	; 0x30
  407daa:	f003 fee7 	bl	40bb7c <__ssprint_r>
  407dae:	2800      	cmp	r0, #0
  407db0:	f47f a8c0 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407db4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407db6:	46c8      	mov	r8, r9
  407db8:	e458      	b.n	40766c <_svfprintf_r+0x8dc>
  407dba:	bf00      	nop
  407dbc:	0040dd1c 	.word	0x0040dd1c
  407dc0:	0040dd08 	.word	0x0040dd08
  407dc4:	2140      	movs	r1, #64	; 0x40
  407dc6:	980c      	ldr	r0, [sp, #48]	; 0x30
  407dc8:	f002 fe56 	bl	40aa78 <_malloc_r>
  407dcc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  407dce:	6010      	str	r0, [r2, #0]
  407dd0:	6110      	str	r0, [r2, #16]
  407dd2:	2800      	cmp	r0, #0
  407dd4:	f000 81f2 	beq.w	4081bc <_svfprintf_r+0x142c>
  407dd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  407dda:	2340      	movs	r3, #64	; 0x40
  407ddc:	6153      	str	r3, [r2, #20]
  407dde:	f7fe bfee 	b.w	406dbe <_svfprintf_r+0x2e>
  407de2:	a823      	add	r0, sp, #140	; 0x8c
  407de4:	a920      	add	r1, sp, #128	; 0x80
  407de6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  407de8:	9004      	str	r0, [sp, #16]
  407dea:	9103      	str	r1, [sp, #12]
  407dec:	a81f      	add	r0, sp, #124	; 0x7c
  407dee:	2103      	movs	r1, #3
  407df0:	9002      	str	r0, [sp, #8]
  407df2:	9a08      	ldr	r2, [sp, #32]
  407df4:	9401      	str	r4, [sp, #4]
  407df6:	463b      	mov	r3, r7
  407df8:	9100      	str	r1, [sp, #0]
  407dfa:	980c      	ldr	r0, [sp, #48]	; 0x30
  407dfc:	f001 f9c8 	bl	409190 <_dtoa_r>
  407e00:	4625      	mov	r5, r4
  407e02:	4606      	mov	r6, r0
  407e04:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407e06:	2b46      	cmp	r3, #70	; 0x46
  407e08:	eb06 0405 	add.w	r4, r6, r5
  407e0c:	f47f af29 	bne.w	407c62 <_svfprintf_r+0xed2>
  407e10:	7833      	ldrb	r3, [r6, #0]
  407e12:	2b30      	cmp	r3, #48	; 0x30
  407e14:	f000 8178 	beq.w	408108 <_svfprintf_r+0x1378>
  407e18:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  407e1a:	442c      	add	r4, r5
  407e1c:	e721      	b.n	407c62 <_svfprintf_r+0xed2>
  407e1e:	aa25      	add	r2, sp, #148	; 0x94
  407e20:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407e22:	980c      	ldr	r0, [sp, #48]	; 0x30
  407e24:	f003 feaa 	bl	40bb7c <__ssprint_r>
  407e28:	2800      	cmp	r0, #0
  407e2a:	f47f a883 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407e2e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  407e30:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407e32:	46c8      	mov	r8, r9
  407e34:	e782      	b.n	407d3c <_svfprintf_r+0xfac>
  407e36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  407e38:	2b00      	cmp	r3, #0
  407e3a:	bf08      	it	eq
  407e3c:	2301      	moveq	r3, #1
  407e3e:	930a      	str	r3, [sp, #40]	; 0x28
  407e40:	e6db      	b.n	407bfa <_svfprintf_r+0xe6a>
  407e42:	4630      	mov	r0, r6
  407e44:	940a      	str	r4, [sp, #40]	; 0x28
  407e46:	f7fe febb 	bl	406bc0 <strlen>
  407e4a:	950f      	str	r5, [sp, #60]	; 0x3c
  407e4c:	900e      	str	r0, [sp, #56]	; 0x38
  407e4e:	f8cd b01c 	str.w	fp, [sp, #28]
  407e52:	4603      	mov	r3, r0
  407e54:	f7ff b9f9 	b.w	40724a <_svfprintf_r+0x4ba>
  407e58:	272d      	movs	r7, #45	; 0x2d
  407e5a:	2300      	movs	r3, #0
  407e5c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  407e60:	930a      	str	r3, [sp, #40]	; 0x28
  407e62:	f7ff b8ae 	b.w	406fc2 <_svfprintf_r+0x232>
  407e66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  407e68:	9312      	str	r3, [sp, #72]	; 0x48
  407e6a:	461a      	mov	r2, r3
  407e6c:	3303      	adds	r3, #3
  407e6e:	db04      	blt.n	407e7a <_svfprintf_r+0x10ea>
  407e70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  407e72:	4619      	mov	r1, r3
  407e74:	4291      	cmp	r1, r2
  407e76:	f6bf af17 	bge.w	407ca8 <_svfprintf_r+0xf18>
  407e7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  407e7c:	3b02      	subs	r3, #2
  407e7e:	9311      	str	r3, [sp, #68]	; 0x44
  407e80:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  407e84:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  407e88:	9b12      	ldr	r3, [sp, #72]	; 0x48
  407e8a:	3b01      	subs	r3, #1
  407e8c:	2b00      	cmp	r3, #0
  407e8e:	931f      	str	r3, [sp, #124]	; 0x7c
  407e90:	bfbd      	ittte	lt
  407e92:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  407e94:	f1c3 0301 	rsblt	r3, r3, #1
  407e98:	222d      	movlt	r2, #45	; 0x2d
  407e9a:	222b      	movge	r2, #43	; 0x2b
  407e9c:	2b09      	cmp	r3, #9
  407e9e:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  407ea2:	f340 8116 	ble.w	4080d2 <_svfprintf_r+0x1342>
  407ea6:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  407eaa:	4620      	mov	r0, r4
  407eac:	4dab      	ldr	r5, [pc, #684]	; (40815c <_svfprintf_r+0x13cc>)
  407eae:	e000      	b.n	407eb2 <_svfprintf_r+0x1122>
  407eb0:	4610      	mov	r0, r2
  407eb2:	fb85 1203 	smull	r1, r2, r5, r3
  407eb6:	17d9      	asrs	r1, r3, #31
  407eb8:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  407ebc:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  407ec0:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  407ec4:	3230      	adds	r2, #48	; 0x30
  407ec6:	2909      	cmp	r1, #9
  407ec8:	f800 2c01 	strb.w	r2, [r0, #-1]
  407ecc:	460b      	mov	r3, r1
  407ece:	f100 32ff 	add.w	r2, r0, #4294967295
  407ed2:	dced      	bgt.n	407eb0 <_svfprintf_r+0x1120>
  407ed4:	3330      	adds	r3, #48	; 0x30
  407ed6:	3802      	subs	r0, #2
  407ed8:	b2d9      	uxtb	r1, r3
  407eda:	4284      	cmp	r4, r0
  407edc:	f802 1c01 	strb.w	r1, [r2, #-1]
  407ee0:	f240 8165 	bls.w	4081ae <_svfprintf_r+0x141e>
  407ee4:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  407ee8:	4613      	mov	r3, r2
  407eea:	e001      	b.n	407ef0 <_svfprintf_r+0x1160>
  407eec:	f813 1b01 	ldrb.w	r1, [r3], #1
  407ef0:	f800 1b01 	strb.w	r1, [r0], #1
  407ef4:	42a3      	cmp	r3, r4
  407ef6:	d1f9      	bne.n	407eec <_svfprintf_r+0x115c>
  407ef8:	3301      	adds	r3, #1
  407efa:	1a9b      	subs	r3, r3, r2
  407efc:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  407f00:	4413      	add	r3, r2
  407f02:	aa21      	add	r2, sp, #132	; 0x84
  407f04:	1a9b      	subs	r3, r3, r2
  407f06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  407f08:	931b      	str	r3, [sp, #108]	; 0x6c
  407f0a:	2a01      	cmp	r2, #1
  407f0c:	4413      	add	r3, r2
  407f0e:	930e      	str	r3, [sp, #56]	; 0x38
  407f10:	f340 8119 	ble.w	408146 <_svfprintf_r+0x13b6>
  407f14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  407f16:	9a19      	ldr	r2, [sp, #100]	; 0x64
  407f18:	4413      	add	r3, r2
  407f1a:	930e      	str	r3, [sp, #56]	; 0x38
  407f1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  407f20:	9308      	str	r3, [sp, #32]
  407f22:	2300      	movs	r3, #0
  407f24:	9312      	str	r3, [sp, #72]	; 0x48
  407f26:	e6cf      	b.n	407cc8 <_svfprintf_r+0xf38>
  407f28:	aa25      	add	r2, sp, #148	; 0x94
  407f2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407f2c:	980c      	ldr	r0, [sp, #48]	; 0x30
  407f2e:	f003 fe25 	bl	40bb7c <__ssprint_r>
  407f32:	2800      	cmp	r0, #0
  407f34:	f47e affe 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407f38:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407f3a:	46c8      	mov	r8, r9
  407f3c:	e4d7      	b.n	4078ee <_svfprintf_r+0xb5e>
  407f3e:	4623      	mov	r3, r4
  407f40:	e6a2      	b.n	407c88 <_svfprintf_r+0xef8>
  407f42:	aa25      	add	r2, sp, #148	; 0x94
  407f44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407f46:	980c      	ldr	r0, [sp, #48]	; 0x30
  407f48:	f003 fe18 	bl	40bb7c <__ssprint_r>
  407f4c:	2800      	cmp	r0, #0
  407f4e:	f47e aff1 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407f52:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  407f54:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407f56:	46c8      	mov	r8, r9
  407f58:	e5ae      	b.n	407ab8 <_svfprintf_r+0xd28>
  407f5a:	aa25      	add	r2, sp, #148	; 0x94
  407f5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  407f5e:	980c      	ldr	r0, [sp, #48]	; 0x30
  407f60:	f003 fe0c 	bl	40bb7c <__ssprint_r>
  407f64:	2800      	cmp	r0, #0
  407f66:	f47e afe5 	bne.w	406f34 <_svfprintf_r+0x1a4>
  407f6a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  407f6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  407f6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  407f70:	1a9a      	subs	r2, r3, r2
  407f72:	46c8      	mov	r8, r9
  407f74:	e5b8      	b.n	407ae8 <_svfprintf_r+0xd58>
  407f76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  407f78:	9612      	str	r6, [sp, #72]	; 0x48
  407f7a:	2b06      	cmp	r3, #6
  407f7c:	bf28      	it	cs
  407f7e:	2306      	movcs	r3, #6
  407f80:	960a      	str	r6, [sp, #40]	; 0x28
  407f82:	4637      	mov	r7, r6
  407f84:	9308      	str	r3, [sp, #32]
  407f86:	950f      	str	r5, [sp, #60]	; 0x3c
  407f88:	f8cd b01c 	str.w	fp, [sp, #28]
  407f8c:	930e      	str	r3, [sp, #56]	; 0x38
  407f8e:	4e74      	ldr	r6, [pc, #464]	; (408160 <_svfprintf_r+0x13d0>)
  407f90:	f7ff b816 	b.w	406fc0 <_svfprintf_r+0x230>
  407f94:	a823      	add	r0, sp, #140	; 0x8c
  407f96:	a920      	add	r1, sp, #128	; 0x80
  407f98:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  407f9a:	9004      	str	r0, [sp, #16]
  407f9c:	9103      	str	r1, [sp, #12]
  407f9e:	a81f      	add	r0, sp, #124	; 0x7c
  407fa0:	2103      	movs	r1, #3
  407fa2:	9002      	str	r0, [sp, #8]
  407fa4:	9a08      	ldr	r2, [sp, #32]
  407fa6:	9501      	str	r5, [sp, #4]
  407fa8:	463b      	mov	r3, r7
  407faa:	9100      	str	r1, [sp, #0]
  407fac:	980c      	ldr	r0, [sp, #48]	; 0x30
  407fae:	f001 f8ef 	bl	409190 <_dtoa_r>
  407fb2:	4606      	mov	r6, r0
  407fb4:	1944      	adds	r4, r0, r5
  407fb6:	e72b      	b.n	407e10 <_svfprintf_r+0x1080>
  407fb8:	2306      	movs	r3, #6
  407fba:	930a      	str	r3, [sp, #40]	; 0x28
  407fbc:	e61d      	b.n	407bfa <_svfprintf_r+0xe6a>
  407fbe:	272d      	movs	r7, #45	; 0x2d
  407fc0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  407fc4:	f7ff bacd 	b.w	407562 <_svfprintf_r+0x7d2>
  407fc8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  407fca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  407fcc:	4413      	add	r3, r2
  407fce:	9a12      	ldr	r2, [sp, #72]	; 0x48
  407fd0:	930e      	str	r3, [sp, #56]	; 0x38
  407fd2:	2a00      	cmp	r2, #0
  407fd4:	f340 80b0 	ble.w	408138 <_svfprintf_r+0x13a8>
  407fd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  407fdc:	9308      	str	r3, [sp, #32]
  407fde:	2367      	movs	r3, #103	; 0x67
  407fe0:	9311      	str	r3, [sp, #68]	; 0x44
  407fe2:	e671      	b.n	407cc8 <_svfprintf_r+0xf38>
  407fe4:	2b00      	cmp	r3, #0
  407fe6:	f340 80c3 	ble.w	408170 <_svfprintf_r+0x13e0>
  407fea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  407fec:	2a00      	cmp	r2, #0
  407fee:	f040 8099 	bne.w	408124 <_svfprintf_r+0x1394>
  407ff2:	f01b 0f01 	tst.w	fp, #1
  407ff6:	f040 8095 	bne.w	408124 <_svfprintf_r+0x1394>
  407ffa:	9308      	str	r3, [sp, #32]
  407ffc:	930e      	str	r3, [sp, #56]	; 0x38
  407ffe:	e663      	b.n	407cc8 <_svfprintf_r+0xf38>
  408000:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  408002:	9308      	str	r3, [sp, #32]
  408004:	930e      	str	r3, [sp, #56]	; 0x38
  408006:	900a      	str	r0, [sp, #40]	; 0x28
  408008:	950f      	str	r5, [sp, #60]	; 0x3c
  40800a:	f8cd b01c 	str.w	fp, [sp, #28]
  40800e:	9012      	str	r0, [sp, #72]	; 0x48
  408010:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  408014:	f7fe bfd4 	b.w	406fc0 <_svfprintf_r+0x230>
  408018:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40801a:	2b47      	cmp	r3, #71	; 0x47
  40801c:	f47f ae20 	bne.w	407c60 <_svfprintf_r+0xed0>
  408020:	f01b 0f01 	tst.w	fp, #1
  408024:	f47f aeee 	bne.w	407e04 <_svfprintf_r+0x1074>
  408028:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40802a:	1b9b      	subs	r3, r3, r6
  40802c:	9313      	str	r3, [sp, #76]	; 0x4c
  40802e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  408030:	2b47      	cmp	r3, #71	; 0x47
  408032:	f43f af18 	beq.w	407e66 <_svfprintf_r+0x10d6>
  408036:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  408038:	9312      	str	r3, [sp, #72]	; 0x48
  40803a:	e721      	b.n	407e80 <_svfprintf_r+0x10f0>
  40803c:	424f      	negs	r7, r1
  40803e:	3110      	adds	r1, #16
  408040:	4d48      	ldr	r5, [pc, #288]	; (408164 <_svfprintf_r+0x13d4>)
  408042:	da2f      	bge.n	4080a4 <_svfprintf_r+0x1314>
  408044:	2410      	movs	r4, #16
  408046:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40804a:	e004      	b.n	408056 <_svfprintf_r+0x12c6>
  40804c:	f108 0808 	add.w	r8, r8, #8
  408050:	3f10      	subs	r7, #16
  408052:	2f10      	cmp	r7, #16
  408054:	dd26      	ble.n	4080a4 <_svfprintf_r+0x1314>
  408056:	3301      	adds	r3, #1
  408058:	3210      	adds	r2, #16
  40805a:	2b07      	cmp	r3, #7
  40805c:	9227      	str	r2, [sp, #156]	; 0x9c
  40805e:	9326      	str	r3, [sp, #152]	; 0x98
  408060:	f8c8 5000 	str.w	r5, [r8]
  408064:	f8c8 4004 	str.w	r4, [r8, #4]
  408068:	ddf0      	ble.n	40804c <_svfprintf_r+0x12bc>
  40806a:	aa25      	add	r2, sp, #148	; 0x94
  40806c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40806e:	4658      	mov	r0, fp
  408070:	f003 fd84 	bl	40bb7c <__ssprint_r>
  408074:	2800      	cmp	r0, #0
  408076:	f47e af5d 	bne.w	406f34 <_svfprintf_r+0x1a4>
  40807a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40807c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40807e:	46c8      	mov	r8, r9
  408080:	e7e6      	b.n	408050 <_svfprintf_r+0x12c0>
  408082:	aa25      	add	r2, sp, #148	; 0x94
  408084:	990b      	ldr	r1, [sp, #44]	; 0x2c
  408086:	980c      	ldr	r0, [sp, #48]	; 0x30
  408088:	f003 fd78 	bl	40bb7c <__ssprint_r>
  40808c:	2800      	cmp	r0, #0
  40808e:	f47e af51 	bne.w	406f34 <_svfprintf_r+0x1a4>
  408092:	991f      	ldr	r1, [sp, #124]	; 0x7c
  408094:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  408096:	9b26      	ldr	r3, [sp, #152]	; 0x98
  408098:	46c8      	mov	r8, r9
  40809a:	e667      	b.n	407d6c <_svfprintf_r+0xfdc>
  40809c:	2000      	movs	r0, #0
  40809e:	900a      	str	r0, [sp, #40]	; 0x28
  4080a0:	f7fe bed0 	b.w	406e44 <_svfprintf_r+0xb4>
  4080a4:	3301      	adds	r3, #1
  4080a6:	443a      	add	r2, r7
  4080a8:	2b07      	cmp	r3, #7
  4080aa:	e888 00a0 	stmia.w	r8, {r5, r7}
  4080ae:	9227      	str	r2, [sp, #156]	; 0x9c
  4080b0:	9326      	str	r3, [sp, #152]	; 0x98
  4080b2:	f108 0808 	add.w	r8, r8, #8
  4080b6:	f77f ae5c 	ble.w	407d72 <_svfprintf_r+0xfe2>
  4080ba:	aa25      	add	r2, sp, #148	; 0x94
  4080bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4080be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4080c0:	f003 fd5c 	bl	40bb7c <__ssprint_r>
  4080c4:	2800      	cmp	r0, #0
  4080c6:	f47e af35 	bne.w	406f34 <_svfprintf_r+0x1a4>
  4080ca:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4080cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4080ce:	46c8      	mov	r8, r9
  4080d0:	e64f      	b.n	407d72 <_svfprintf_r+0xfe2>
  4080d2:	3330      	adds	r3, #48	; 0x30
  4080d4:	2230      	movs	r2, #48	; 0x30
  4080d6:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4080da:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4080de:	ab22      	add	r3, sp, #136	; 0x88
  4080e0:	e70f      	b.n	407f02 <_svfprintf_r+0x1172>
  4080e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4080e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4080e6:	4413      	add	r3, r2
  4080e8:	930e      	str	r3, [sp, #56]	; 0x38
  4080ea:	e775      	b.n	407fd8 <_svfprintf_r+0x1248>
  4080ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4080ee:	e5cb      	b.n	407c88 <_svfprintf_r+0xef8>
  4080f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4080f2:	4e1d      	ldr	r6, [pc, #116]	; (408168 <_svfprintf_r+0x13d8>)
  4080f4:	2b00      	cmp	r3, #0
  4080f6:	bfb6      	itet	lt
  4080f8:	272d      	movlt	r7, #45	; 0x2d
  4080fa:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4080fe:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  408102:	4b1a      	ldr	r3, [pc, #104]	; (40816c <_svfprintf_r+0x13dc>)
  408104:	f7ff ba2f 	b.w	407566 <_svfprintf_r+0x7d6>
  408108:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40810a:	9808      	ldr	r0, [sp, #32]
  40810c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40810e:	4639      	mov	r1, r7
  408110:	f004 fbd0 	bl	40c8b4 <__aeabi_dcmpeq>
  408114:	2800      	cmp	r0, #0
  408116:	f47f ae7f 	bne.w	407e18 <_svfprintf_r+0x1088>
  40811a:	f1c5 0501 	rsb	r5, r5, #1
  40811e:	951f      	str	r5, [sp, #124]	; 0x7c
  408120:	442c      	add	r4, r5
  408122:	e59e      	b.n	407c62 <_svfprintf_r+0xed2>
  408124:	9b12      	ldr	r3, [sp, #72]	; 0x48
  408126:	9a19      	ldr	r2, [sp, #100]	; 0x64
  408128:	4413      	add	r3, r2
  40812a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40812c:	441a      	add	r2, r3
  40812e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  408132:	920e      	str	r2, [sp, #56]	; 0x38
  408134:	9308      	str	r3, [sp, #32]
  408136:	e5c7      	b.n	407cc8 <_svfprintf_r+0xf38>
  408138:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40813a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40813c:	f1c3 0301 	rsb	r3, r3, #1
  408140:	441a      	add	r2, r3
  408142:	4613      	mov	r3, r2
  408144:	e7d0      	b.n	4080e8 <_svfprintf_r+0x1358>
  408146:	f01b 0301 	ands.w	r3, fp, #1
  40814a:	9312      	str	r3, [sp, #72]	; 0x48
  40814c:	f47f aee2 	bne.w	407f14 <_svfprintf_r+0x1184>
  408150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  408152:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  408156:	9308      	str	r3, [sp, #32]
  408158:	e5b6      	b.n	407cc8 <_svfprintf_r+0xf38>
  40815a:	bf00      	nop
  40815c:	66666667 	.word	0x66666667
  408160:	0040dd00 	.word	0x0040dd00
  408164:	0040dd1c 	.word	0x0040dd1c
  408168:	0040dcd4 	.word	0x0040dcd4
  40816c:	0040dcd0 	.word	0x0040dcd0
  408170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  408172:	b913      	cbnz	r3, 40817a <_svfprintf_r+0x13ea>
  408174:	f01b 0f01 	tst.w	fp, #1
  408178:	d002      	beq.n	408180 <_svfprintf_r+0x13f0>
  40817a:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40817c:	3301      	adds	r3, #1
  40817e:	e7d4      	b.n	40812a <_svfprintf_r+0x139a>
  408180:	2301      	movs	r3, #1
  408182:	e73a      	b.n	407ffa <_svfprintf_r+0x126a>
  408184:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  408186:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40818a:	6828      	ldr	r0, [r5, #0]
  40818c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  408190:	900a      	str	r0, [sp, #40]	; 0x28
  408192:	4628      	mov	r0, r5
  408194:	3004      	adds	r0, #4
  408196:	46a2      	mov	sl, r4
  408198:	900f      	str	r0, [sp, #60]	; 0x3c
  40819a:	f7fe be51 	b.w	406e40 <_svfprintf_r+0xb0>
  40819e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081a2:	f7ff b867 	b.w	407274 <_svfprintf_r+0x4e4>
  4081a6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081aa:	f7ff ba15 	b.w	4075d8 <_svfprintf_r+0x848>
  4081ae:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4081b2:	e6a6      	b.n	407f02 <_svfprintf_r+0x1172>
  4081b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081b8:	f7ff b8eb 	b.w	407392 <_svfprintf_r+0x602>
  4081bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4081be:	230c      	movs	r3, #12
  4081c0:	6013      	str	r3, [r2, #0]
  4081c2:	f04f 33ff 	mov.w	r3, #4294967295
  4081c6:	9309      	str	r3, [sp, #36]	; 0x24
  4081c8:	f7fe bebd 	b.w	406f46 <_svfprintf_r+0x1b6>
  4081cc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081d0:	f7ff b99a 	b.w	407508 <_svfprintf_r+0x778>
  4081d4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081d8:	f7ff b976 	b.w	4074c8 <_svfprintf_r+0x738>
  4081dc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081e0:	f7ff b959 	b.w	407496 <_svfprintf_r+0x706>
  4081e4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4081e8:	f7ff b912 	b.w	407410 <_svfprintf_r+0x680>

004081ec <__sprint_r.part.0>:
  4081ec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4081f0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  4081f2:	049c      	lsls	r4, r3, #18
  4081f4:	4693      	mov	fp, r2
  4081f6:	d52f      	bpl.n	408258 <__sprint_r.part.0+0x6c>
  4081f8:	6893      	ldr	r3, [r2, #8]
  4081fa:	6812      	ldr	r2, [r2, #0]
  4081fc:	b353      	cbz	r3, 408254 <__sprint_r.part.0+0x68>
  4081fe:	460e      	mov	r6, r1
  408200:	4607      	mov	r7, r0
  408202:	f102 0908 	add.w	r9, r2, #8
  408206:	e919 0420 	ldmdb	r9, {r5, sl}
  40820a:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40820e:	d017      	beq.n	408240 <__sprint_r.part.0+0x54>
  408210:	3d04      	subs	r5, #4
  408212:	2400      	movs	r4, #0
  408214:	e001      	b.n	40821a <__sprint_r.part.0+0x2e>
  408216:	45a0      	cmp	r8, r4
  408218:	d010      	beq.n	40823c <__sprint_r.part.0+0x50>
  40821a:	4632      	mov	r2, r6
  40821c:	f855 1f04 	ldr.w	r1, [r5, #4]!
  408220:	4638      	mov	r0, r7
  408222:	f002 f879 	bl	40a318 <_fputwc_r>
  408226:	1c43      	adds	r3, r0, #1
  408228:	f104 0401 	add.w	r4, r4, #1
  40822c:	d1f3      	bne.n	408216 <__sprint_r.part.0+0x2a>
  40822e:	2300      	movs	r3, #0
  408230:	f8cb 3008 	str.w	r3, [fp, #8]
  408234:	f8cb 3004 	str.w	r3, [fp, #4]
  408238:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40823c:	f8db 3008 	ldr.w	r3, [fp, #8]
  408240:	f02a 0a03 	bic.w	sl, sl, #3
  408244:	eba3 030a 	sub.w	r3, r3, sl
  408248:	f8cb 3008 	str.w	r3, [fp, #8]
  40824c:	f109 0908 	add.w	r9, r9, #8
  408250:	2b00      	cmp	r3, #0
  408252:	d1d8      	bne.n	408206 <__sprint_r.part.0+0x1a>
  408254:	2000      	movs	r0, #0
  408256:	e7ea      	b.n	40822e <__sprint_r.part.0+0x42>
  408258:	f002 f9c8 	bl	40a5ec <__sfvwrite_r>
  40825c:	2300      	movs	r3, #0
  40825e:	f8cb 3008 	str.w	r3, [fp, #8]
  408262:	f8cb 3004 	str.w	r3, [fp, #4]
  408266:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40826a:	bf00      	nop

0040826c <_vfiprintf_r>:
  40826c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408270:	b0ad      	sub	sp, #180	; 0xb4
  408272:	461d      	mov	r5, r3
  408274:	468b      	mov	fp, r1
  408276:	4690      	mov	r8, r2
  408278:	9307      	str	r3, [sp, #28]
  40827a:	9006      	str	r0, [sp, #24]
  40827c:	b118      	cbz	r0, 408286 <_vfiprintf_r+0x1a>
  40827e:	6b83      	ldr	r3, [r0, #56]	; 0x38
  408280:	2b00      	cmp	r3, #0
  408282:	f000 80f3 	beq.w	40846c <_vfiprintf_r+0x200>
  408286:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  40828a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40828e:	07df      	lsls	r7, r3, #31
  408290:	b281      	uxth	r1, r0
  408292:	d402      	bmi.n	40829a <_vfiprintf_r+0x2e>
  408294:	058e      	lsls	r6, r1, #22
  408296:	f140 80fc 	bpl.w	408492 <_vfiprintf_r+0x226>
  40829a:	048c      	lsls	r4, r1, #18
  40829c:	d40a      	bmi.n	4082b4 <_vfiprintf_r+0x48>
  40829e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4082a2:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4082a6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4082aa:	f8ab 100c 	strh.w	r1, [fp, #12]
  4082ae:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4082b2:	b289      	uxth	r1, r1
  4082b4:	0708      	lsls	r0, r1, #28
  4082b6:	f140 80b3 	bpl.w	408420 <_vfiprintf_r+0x1b4>
  4082ba:	f8db 3010 	ldr.w	r3, [fp, #16]
  4082be:	2b00      	cmp	r3, #0
  4082c0:	f000 80ae 	beq.w	408420 <_vfiprintf_r+0x1b4>
  4082c4:	f001 031a 	and.w	r3, r1, #26
  4082c8:	2b0a      	cmp	r3, #10
  4082ca:	f000 80b5 	beq.w	408438 <_vfiprintf_r+0x1cc>
  4082ce:	2300      	movs	r3, #0
  4082d0:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  4082d4:	930b      	str	r3, [sp, #44]	; 0x2c
  4082d6:	9311      	str	r3, [sp, #68]	; 0x44
  4082d8:	9310      	str	r3, [sp, #64]	; 0x40
  4082da:	9303      	str	r3, [sp, #12]
  4082dc:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4082e0:	46ca      	mov	sl, r9
  4082e2:	f8cd b010 	str.w	fp, [sp, #16]
  4082e6:	f898 3000 	ldrb.w	r3, [r8]
  4082ea:	4644      	mov	r4, r8
  4082ec:	b1fb      	cbz	r3, 40832e <_vfiprintf_r+0xc2>
  4082ee:	2b25      	cmp	r3, #37	; 0x25
  4082f0:	d102      	bne.n	4082f8 <_vfiprintf_r+0x8c>
  4082f2:	e01c      	b.n	40832e <_vfiprintf_r+0xc2>
  4082f4:	2b25      	cmp	r3, #37	; 0x25
  4082f6:	d003      	beq.n	408300 <_vfiprintf_r+0x94>
  4082f8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4082fc:	2b00      	cmp	r3, #0
  4082fe:	d1f9      	bne.n	4082f4 <_vfiprintf_r+0x88>
  408300:	eba4 0508 	sub.w	r5, r4, r8
  408304:	b19d      	cbz	r5, 40832e <_vfiprintf_r+0xc2>
  408306:	9b10      	ldr	r3, [sp, #64]	; 0x40
  408308:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40830a:	f8ca 8000 	str.w	r8, [sl]
  40830e:	3301      	adds	r3, #1
  408310:	442a      	add	r2, r5
  408312:	2b07      	cmp	r3, #7
  408314:	f8ca 5004 	str.w	r5, [sl, #4]
  408318:	9211      	str	r2, [sp, #68]	; 0x44
  40831a:	9310      	str	r3, [sp, #64]	; 0x40
  40831c:	dd7a      	ble.n	408414 <_vfiprintf_r+0x1a8>
  40831e:	2a00      	cmp	r2, #0
  408320:	f040 84b0 	bne.w	408c84 <_vfiprintf_r+0xa18>
  408324:	9b03      	ldr	r3, [sp, #12]
  408326:	9210      	str	r2, [sp, #64]	; 0x40
  408328:	442b      	add	r3, r5
  40832a:	46ca      	mov	sl, r9
  40832c:	9303      	str	r3, [sp, #12]
  40832e:	7823      	ldrb	r3, [r4, #0]
  408330:	2b00      	cmp	r3, #0
  408332:	f000 83e0 	beq.w	408af6 <_vfiprintf_r+0x88a>
  408336:	2000      	movs	r0, #0
  408338:	f04f 0300 	mov.w	r3, #0
  40833c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  408340:	f104 0801 	add.w	r8, r4, #1
  408344:	7862      	ldrb	r2, [r4, #1]
  408346:	4605      	mov	r5, r0
  408348:	4606      	mov	r6, r0
  40834a:	4603      	mov	r3, r0
  40834c:	f04f 34ff 	mov.w	r4, #4294967295
  408350:	f108 0801 	add.w	r8, r8, #1
  408354:	f1a2 0120 	sub.w	r1, r2, #32
  408358:	2958      	cmp	r1, #88	; 0x58
  40835a:	f200 82de 	bhi.w	40891a <_vfiprintf_r+0x6ae>
  40835e:	e8df f011 	tbh	[pc, r1, lsl #1]
  408362:	0221      	.short	0x0221
  408364:	02dc02dc 	.word	0x02dc02dc
  408368:	02dc0229 	.word	0x02dc0229
  40836c:	02dc02dc 	.word	0x02dc02dc
  408370:	02dc02dc 	.word	0x02dc02dc
  408374:	028902dc 	.word	0x028902dc
  408378:	02dc0295 	.word	0x02dc0295
  40837c:	02bd00a2 	.word	0x02bd00a2
  408380:	019f02dc 	.word	0x019f02dc
  408384:	01a401a4 	.word	0x01a401a4
  408388:	01a401a4 	.word	0x01a401a4
  40838c:	01a401a4 	.word	0x01a401a4
  408390:	01a401a4 	.word	0x01a401a4
  408394:	02dc01a4 	.word	0x02dc01a4
  408398:	02dc02dc 	.word	0x02dc02dc
  40839c:	02dc02dc 	.word	0x02dc02dc
  4083a0:	02dc02dc 	.word	0x02dc02dc
  4083a4:	02dc02dc 	.word	0x02dc02dc
  4083a8:	01b202dc 	.word	0x01b202dc
  4083ac:	02dc02dc 	.word	0x02dc02dc
  4083b0:	02dc02dc 	.word	0x02dc02dc
  4083b4:	02dc02dc 	.word	0x02dc02dc
  4083b8:	02dc02dc 	.word	0x02dc02dc
  4083bc:	02dc02dc 	.word	0x02dc02dc
  4083c0:	02dc0197 	.word	0x02dc0197
  4083c4:	02dc02dc 	.word	0x02dc02dc
  4083c8:	02dc02dc 	.word	0x02dc02dc
  4083cc:	02dc019b 	.word	0x02dc019b
  4083d0:	025302dc 	.word	0x025302dc
  4083d4:	02dc02dc 	.word	0x02dc02dc
  4083d8:	02dc02dc 	.word	0x02dc02dc
  4083dc:	02dc02dc 	.word	0x02dc02dc
  4083e0:	02dc02dc 	.word	0x02dc02dc
  4083e4:	02dc02dc 	.word	0x02dc02dc
  4083e8:	021b025a 	.word	0x021b025a
  4083ec:	02dc02dc 	.word	0x02dc02dc
  4083f0:	026e02dc 	.word	0x026e02dc
  4083f4:	02dc021b 	.word	0x02dc021b
  4083f8:	027302dc 	.word	0x027302dc
  4083fc:	01f502dc 	.word	0x01f502dc
  408400:	02090182 	.word	0x02090182
  408404:	02dc02d7 	.word	0x02dc02d7
  408408:	02dc029a 	.word	0x02dc029a
  40840c:	02dc00a7 	.word	0x02dc00a7
  408410:	022e02dc 	.word	0x022e02dc
  408414:	f10a 0a08 	add.w	sl, sl, #8
  408418:	9b03      	ldr	r3, [sp, #12]
  40841a:	442b      	add	r3, r5
  40841c:	9303      	str	r3, [sp, #12]
  40841e:	e786      	b.n	40832e <_vfiprintf_r+0xc2>
  408420:	4659      	mov	r1, fp
  408422:	9806      	ldr	r0, [sp, #24]
  408424:	f000 fdac 	bl	408f80 <__swsetup_r>
  408428:	bb18      	cbnz	r0, 408472 <_vfiprintf_r+0x206>
  40842a:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40842e:	f001 031a 	and.w	r3, r1, #26
  408432:	2b0a      	cmp	r3, #10
  408434:	f47f af4b 	bne.w	4082ce <_vfiprintf_r+0x62>
  408438:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  40843c:	2b00      	cmp	r3, #0
  40843e:	f6ff af46 	blt.w	4082ce <_vfiprintf_r+0x62>
  408442:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  408446:	07db      	lsls	r3, r3, #31
  408448:	d405      	bmi.n	408456 <_vfiprintf_r+0x1ea>
  40844a:	058f      	lsls	r7, r1, #22
  40844c:	d403      	bmi.n	408456 <_vfiprintf_r+0x1ea>
  40844e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  408452:	f002 fa8f 	bl	40a974 <__retarget_lock_release_recursive>
  408456:	462b      	mov	r3, r5
  408458:	4642      	mov	r2, r8
  40845a:	4659      	mov	r1, fp
  40845c:	9806      	ldr	r0, [sp, #24]
  40845e:	f000 fd4d 	bl	408efc <__sbprintf>
  408462:	9003      	str	r0, [sp, #12]
  408464:	9803      	ldr	r0, [sp, #12]
  408466:	b02d      	add	sp, #180	; 0xb4
  408468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40846c:	f001 feb2 	bl	40a1d4 <__sinit>
  408470:	e709      	b.n	408286 <_vfiprintf_r+0x1a>
  408472:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  408476:	07d9      	lsls	r1, r3, #31
  408478:	d404      	bmi.n	408484 <_vfiprintf_r+0x218>
  40847a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40847e:	059a      	lsls	r2, r3, #22
  408480:	f140 84aa 	bpl.w	408dd8 <_vfiprintf_r+0xb6c>
  408484:	f04f 33ff 	mov.w	r3, #4294967295
  408488:	9303      	str	r3, [sp, #12]
  40848a:	9803      	ldr	r0, [sp, #12]
  40848c:	b02d      	add	sp, #180	; 0xb4
  40848e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408492:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  408496:	f002 fa6b 	bl	40a970 <__retarget_lock_acquire_recursive>
  40849a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  40849e:	b281      	uxth	r1, r0
  4084a0:	e6fb      	b.n	40829a <_vfiprintf_r+0x2e>
  4084a2:	4276      	negs	r6, r6
  4084a4:	9207      	str	r2, [sp, #28]
  4084a6:	f043 0304 	orr.w	r3, r3, #4
  4084aa:	f898 2000 	ldrb.w	r2, [r8]
  4084ae:	e74f      	b.n	408350 <_vfiprintf_r+0xe4>
  4084b0:	9608      	str	r6, [sp, #32]
  4084b2:	069e      	lsls	r6, r3, #26
  4084b4:	f100 8450 	bmi.w	408d58 <_vfiprintf_r+0xaec>
  4084b8:	9907      	ldr	r1, [sp, #28]
  4084ba:	06dd      	lsls	r5, r3, #27
  4084bc:	460a      	mov	r2, r1
  4084be:	f100 83ef 	bmi.w	408ca0 <_vfiprintf_r+0xa34>
  4084c2:	0658      	lsls	r0, r3, #25
  4084c4:	f140 83ec 	bpl.w	408ca0 <_vfiprintf_r+0xa34>
  4084c8:	880e      	ldrh	r6, [r1, #0]
  4084ca:	3104      	adds	r1, #4
  4084cc:	2700      	movs	r7, #0
  4084ce:	2201      	movs	r2, #1
  4084d0:	9107      	str	r1, [sp, #28]
  4084d2:	f04f 0100 	mov.w	r1, #0
  4084d6:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  4084da:	2500      	movs	r5, #0
  4084dc:	1c61      	adds	r1, r4, #1
  4084de:	f000 8116 	beq.w	40870e <_vfiprintf_r+0x4a2>
  4084e2:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  4084e6:	9102      	str	r1, [sp, #8]
  4084e8:	ea56 0107 	orrs.w	r1, r6, r7
  4084ec:	f040 8114 	bne.w	408718 <_vfiprintf_r+0x4ac>
  4084f0:	2c00      	cmp	r4, #0
  4084f2:	f040 835c 	bne.w	408bae <_vfiprintf_r+0x942>
  4084f6:	2a00      	cmp	r2, #0
  4084f8:	f040 83b7 	bne.w	408c6a <_vfiprintf_r+0x9fe>
  4084fc:	f013 0301 	ands.w	r3, r3, #1
  408500:	9305      	str	r3, [sp, #20]
  408502:	f000 8457 	beq.w	408db4 <_vfiprintf_r+0xb48>
  408506:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  40850a:	2330      	movs	r3, #48	; 0x30
  40850c:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  408510:	9b05      	ldr	r3, [sp, #20]
  408512:	42a3      	cmp	r3, r4
  408514:	bfb8      	it	lt
  408516:	4623      	movlt	r3, r4
  408518:	9301      	str	r3, [sp, #4]
  40851a:	b10d      	cbz	r5, 408520 <_vfiprintf_r+0x2b4>
  40851c:	3301      	adds	r3, #1
  40851e:	9301      	str	r3, [sp, #4]
  408520:	9b02      	ldr	r3, [sp, #8]
  408522:	f013 0302 	ands.w	r3, r3, #2
  408526:	9309      	str	r3, [sp, #36]	; 0x24
  408528:	d002      	beq.n	408530 <_vfiprintf_r+0x2c4>
  40852a:	9b01      	ldr	r3, [sp, #4]
  40852c:	3302      	adds	r3, #2
  40852e:	9301      	str	r3, [sp, #4]
  408530:	9b02      	ldr	r3, [sp, #8]
  408532:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  408536:	930a      	str	r3, [sp, #40]	; 0x28
  408538:	f040 8217 	bne.w	40896a <_vfiprintf_r+0x6fe>
  40853c:	9b08      	ldr	r3, [sp, #32]
  40853e:	9a01      	ldr	r2, [sp, #4]
  408540:	1a9d      	subs	r5, r3, r2
  408542:	2d00      	cmp	r5, #0
  408544:	f340 8211 	ble.w	40896a <_vfiprintf_r+0x6fe>
  408548:	2d10      	cmp	r5, #16
  40854a:	f340 8490 	ble.w	408e6e <_vfiprintf_r+0xc02>
  40854e:	9b10      	ldr	r3, [sp, #64]	; 0x40
  408550:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408552:	4ec4      	ldr	r6, [pc, #784]	; (408864 <_vfiprintf_r+0x5f8>)
  408554:	46d6      	mov	lr, sl
  408556:	2710      	movs	r7, #16
  408558:	46a2      	mov	sl, r4
  40855a:	4619      	mov	r1, r3
  40855c:	9c06      	ldr	r4, [sp, #24]
  40855e:	e007      	b.n	408570 <_vfiprintf_r+0x304>
  408560:	f101 0c02 	add.w	ip, r1, #2
  408564:	f10e 0e08 	add.w	lr, lr, #8
  408568:	4601      	mov	r1, r0
  40856a:	3d10      	subs	r5, #16
  40856c:	2d10      	cmp	r5, #16
  40856e:	dd11      	ble.n	408594 <_vfiprintf_r+0x328>
  408570:	1c48      	adds	r0, r1, #1
  408572:	3210      	adds	r2, #16
  408574:	2807      	cmp	r0, #7
  408576:	9211      	str	r2, [sp, #68]	; 0x44
  408578:	e88e 00c0 	stmia.w	lr, {r6, r7}
  40857c:	9010      	str	r0, [sp, #64]	; 0x40
  40857e:	ddef      	ble.n	408560 <_vfiprintf_r+0x2f4>
  408580:	2a00      	cmp	r2, #0
  408582:	f040 81e4 	bne.w	40894e <_vfiprintf_r+0x6e2>
  408586:	3d10      	subs	r5, #16
  408588:	2d10      	cmp	r5, #16
  40858a:	4611      	mov	r1, r2
  40858c:	f04f 0c01 	mov.w	ip, #1
  408590:	46ce      	mov	lr, r9
  408592:	dced      	bgt.n	408570 <_vfiprintf_r+0x304>
  408594:	4654      	mov	r4, sl
  408596:	4661      	mov	r1, ip
  408598:	46f2      	mov	sl, lr
  40859a:	442a      	add	r2, r5
  40859c:	2907      	cmp	r1, #7
  40859e:	9211      	str	r2, [sp, #68]	; 0x44
  4085a0:	f8ca 6000 	str.w	r6, [sl]
  4085a4:	f8ca 5004 	str.w	r5, [sl, #4]
  4085a8:	9110      	str	r1, [sp, #64]	; 0x40
  4085aa:	f300 82ec 	bgt.w	408b86 <_vfiprintf_r+0x91a>
  4085ae:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4085b2:	f10a 0a08 	add.w	sl, sl, #8
  4085b6:	1c48      	adds	r0, r1, #1
  4085b8:	2d00      	cmp	r5, #0
  4085ba:	f040 81de 	bne.w	40897a <_vfiprintf_r+0x70e>
  4085be:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4085c0:	2b00      	cmp	r3, #0
  4085c2:	f000 81f8 	beq.w	4089b6 <_vfiprintf_r+0x74a>
  4085c6:	3202      	adds	r2, #2
  4085c8:	a90e      	add	r1, sp, #56	; 0x38
  4085ca:	2302      	movs	r3, #2
  4085cc:	2807      	cmp	r0, #7
  4085ce:	9211      	str	r2, [sp, #68]	; 0x44
  4085d0:	9010      	str	r0, [sp, #64]	; 0x40
  4085d2:	e88a 000a 	stmia.w	sl, {r1, r3}
  4085d6:	f340 81ea 	ble.w	4089ae <_vfiprintf_r+0x742>
  4085da:	2a00      	cmp	r2, #0
  4085dc:	f040 838c 	bne.w	408cf8 <_vfiprintf_r+0xa8c>
  4085e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4085e2:	2b80      	cmp	r3, #128	; 0x80
  4085e4:	f04f 0001 	mov.w	r0, #1
  4085e8:	4611      	mov	r1, r2
  4085ea:	46ca      	mov	sl, r9
  4085ec:	f040 81e7 	bne.w	4089be <_vfiprintf_r+0x752>
  4085f0:	9b08      	ldr	r3, [sp, #32]
  4085f2:	9d01      	ldr	r5, [sp, #4]
  4085f4:	1b5e      	subs	r6, r3, r5
  4085f6:	2e00      	cmp	r6, #0
  4085f8:	f340 81e1 	ble.w	4089be <_vfiprintf_r+0x752>
  4085fc:	2e10      	cmp	r6, #16
  4085fe:	4d9a      	ldr	r5, [pc, #616]	; (408868 <_vfiprintf_r+0x5fc>)
  408600:	f340 8450 	ble.w	408ea4 <_vfiprintf_r+0xc38>
  408604:	46d4      	mov	ip, sl
  408606:	2710      	movs	r7, #16
  408608:	46a2      	mov	sl, r4
  40860a:	9c06      	ldr	r4, [sp, #24]
  40860c:	e007      	b.n	40861e <_vfiprintf_r+0x3b2>
  40860e:	f101 0e02 	add.w	lr, r1, #2
  408612:	f10c 0c08 	add.w	ip, ip, #8
  408616:	4601      	mov	r1, r0
  408618:	3e10      	subs	r6, #16
  40861a:	2e10      	cmp	r6, #16
  40861c:	dd11      	ble.n	408642 <_vfiprintf_r+0x3d6>
  40861e:	1c48      	adds	r0, r1, #1
  408620:	3210      	adds	r2, #16
  408622:	2807      	cmp	r0, #7
  408624:	9211      	str	r2, [sp, #68]	; 0x44
  408626:	e88c 00a0 	stmia.w	ip, {r5, r7}
  40862a:	9010      	str	r0, [sp, #64]	; 0x40
  40862c:	ddef      	ble.n	40860e <_vfiprintf_r+0x3a2>
  40862e:	2a00      	cmp	r2, #0
  408630:	f040 829d 	bne.w	408b6e <_vfiprintf_r+0x902>
  408634:	3e10      	subs	r6, #16
  408636:	2e10      	cmp	r6, #16
  408638:	f04f 0e01 	mov.w	lr, #1
  40863c:	4611      	mov	r1, r2
  40863e:	46cc      	mov	ip, r9
  408640:	dced      	bgt.n	40861e <_vfiprintf_r+0x3b2>
  408642:	4654      	mov	r4, sl
  408644:	46e2      	mov	sl, ip
  408646:	4432      	add	r2, r6
  408648:	f1be 0f07 	cmp.w	lr, #7
  40864c:	9211      	str	r2, [sp, #68]	; 0x44
  40864e:	e88a 0060 	stmia.w	sl, {r5, r6}
  408652:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  408656:	f300 8369 	bgt.w	408d2c <_vfiprintf_r+0xac0>
  40865a:	f10a 0a08 	add.w	sl, sl, #8
  40865e:	f10e 0001 	add.w	r0, lr, #1
  408662:	4671      	mov	r1, lr
  408664:	e1ab      	b.n	4089be <_vfiprintf_r+0x752>
  408666:	9608      	str	r6, [sp, #32]
  408668:	f013 0220 	ands.w	r2, r3, #32
  40866c:	f040 838c 	bne.w	408d88 <_vfiprintf_r+0xb1c>
  408670:	f013 0110 	ands.w	r1, r3, #16
  408674:	f040 831a 	bne.w	408cac <_vfiprintf_r+0xa40>
  408678:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  40867c:	f000 8316 	beq.w	408cac <_vfiprintf_r+0xa40>
  408680:	9807      	ldr	r0, [sp, #28]
  408682:	460a      	mov	r2, r1
  408684:	4601      	mov	r1, r0
  408686:	3104      	adds	r1, #4
  408688:	8806      	ldrh	r6, [r0, #0]
  40868a:	9107      	str	r1, [sp, #28]
  40868c:	2700      	movs	r7, #0
  40868e:	e720      	b.n	4084d2 <_vfiprintf_r+0x266>
  408690:	9608      	str	r6, [sp, #32]
  408692:	f043 0310 	orr.w	r3, r3, #16
  408696:	e7e7      	b.n	408668 <_vfiprintf_r+0x3fc>
  408698:	9608      	str	r6, [sp, #32]
  40869a:	f043 0310 	orr.w	r3, r3, #16
  40869e:	e708      	b.n	4084b2 <_vfiprintf_r+0x246>
  4086a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4086a4:	f898 2000 	ldrb.w	r2, [r8]
  4086a8:	e652      	b.n	408350 <_vfiprintf_r+0xe4>
  4086aa:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4086ae:	2600      	movs	r6, #0
  4086b0:	f818 2b01 	ldrb.w	r2, [r8], #1
  4086b4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4086b8:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  4086bc:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4086c0:	2909      	cmp	r1, #9
  4086c2:	d9f5      	bls.n	4086b0 <_vfiprintf_r+0x444>
  4086c4:	e646      	b.n	408354 <_vfiprintf_r+0xe8>
  4086c6:	9608      	str	r6, [sp, #32]
  4086c8:	2800      	cmp	r0, #0
  4086ca:	f040 8408 	bne.w	408ede <_vfiprintf_r+0xc72>
  4086ce:	f043 0310 	orr.w	r3, r3, #16
  4086d2:	069e      	lsls	r6, r3, #26
  4086d4:	f100 834c 	bmi.w	408d70 <_vfiprintf_r+0xb04>
  4086d8:	06dd      	lsls	r5, r3, #27
  4086da:	f100 82f3 	bmi.w	408cc4 <_vfiprintf_r+0xa58>
  4086de:	0658      	lsls	r0, r3, #25
  4086e0:	f140 82f0 	bpl.w	408cc4 <_vfiprintf_r+0xa58>
  4086e4:	9d07      	ldr	r5, [sp, #28]
  4086e6:	f9b5 6000 	ldrsh.w	r6, [r5]
  4086ea:	462a      	mov	r2, r5
  4086ec:	17f7      	asrs	r7, r6, #31
  4086ee:	3204      	adds	r2, #4
  4086f0:	4630      	mov	r0, r6
  4086f2:	4639      	mov	r1, r7
  4086f4:	9207      	str	r2, [sp, #28]
  4086f6:	2800      	cmp	r0, #0
  4086f8:	f171 0200 	sbcs.w	r2, r1, #0
  4086fc:	f2c0 835d 	blt.w	408dba <_vfiprintf_r+0xb4e>
  408700:	1c61      	adds	r1, r4, #1
  408702:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408706:	f04f 0201 	mov.w	r2, #1
  40870a:	f47f aeea 	bne.w	4084e2 <_vfiprintf_r+0x276>
  40870e:	ea56 0107 	orrs.w	r1, r6, r7
  408712:	f000 824d 	beq.w	408bb0 <_vfiprintf_r+0x944>
  408716:	9302      	str	r3, [sp, #8]
  408718:	2a01      	cmp	r2, #1
  40871a:	f000 828c 	beq.w	408c36 <_vfiprintf_r+0x9ca>
  40871e:	2a02      	cmp	r2, #2
  408720:	f040 825c 	bne.w	408bdc <_vfiprintf_r+0x970>
  408724:	980b      	ldr	r0, [sp, #44]	; 0x2c
  408726:	46cb      	mov	fp, r9
  408728:	0933      	lsrs	r3, r6, #4
  40872a:	f006 010f 	and.w	r1, r6, #15
  40872e:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  408732:	093a      	lsrs	r2, r7, #4
  408734:	461e      	mov	r6, r3
  408736:	4617      	mov	r7, r2
  408738:	5c43      	ldrb	r3, [r0, r1]
  40873a:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  40873e:	ea56 0307 	orrs.w	r3, r6, r7
  408742:	d1f1      	bne.n	408728 <_vfiprintf_r+0x4bc>
  408744:	eba9 030b 	sub.w	r3, r9, fp
  408748:	9305      	str	r3, [sp, #20]
  40874a:	e6e1      	b.n	408510 <_vfiprintf_r+0x2a4>
  40874c:	2800      	cmp	r0, #0
  40874e:	f040 83c0 	bne.w	408ed2 <_vfiprintf_r+0xc66>
  408752:	0699      	lsls	r1, r3, #26
  408754:	f100 8367 	bmi.w	408e26 <_vfiprintf_r+0xbba>
  408758:	06da      	lsls	r2, r3, #27
  40875a:	f100 80f1 	bmi.w	408940 <_vfiprintf_r+0x6d4>
  40875e:	065b      	lsls	r3, r3, #25
  408760:	f140 80ee 	bpl.w	408940 <_vfiprintf_r+0x6d4>
  408764:	9a07      	ldr	r2, [sp, #28]
  408766:	6813      	ldr	r3, [r2, #0]
  408768:	3204      	adds	r2, #4
  40876a:	9207      	str	r2, [sp, #28]
  40876c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  408770:	801a      	strh	r2, [r3, #0]
  408772:	e5b8      	b.n	4082e6 <_vfiprintf_r+0x7a>
  408774:	9807      	ldr	r0, [sp, #28]
  408776:	4a3d      	ldr	r2, [pc, #244]	; (40886c <_vfiprintf_r+0x600>)
  408778:	9608      	str	r6, [sp, #32]
  40877a:	920b      	str	r2, [sp, #44]	; 0x2c
  40877c:	6806      	ldr	r6, [r0, #0]
  40877e:	2278      	movs	r2, #120	; 0x78
  408780:	2130      	movs	r1, #48	; 0x30
  408782:	3004      	adds	r0, #4
  408784:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  408788:	f043 0302 	orr.w	r3, r3, #2
  40878c:	9007      	str	r0, [sp, #28]
  40878e:	2700      	movs	r7, #0
  408790:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  408794:	2202      	movs	r2, #2
  408796:	e69c      	b.n	4084d2 <_vfiprintf_r+0x266>
  408798:	9608      	str	r6, [sp, #32]
  40879a:	2800      	cmp	r0, #0
  40879c:	d099      	beq.n	4086d2 <_vfiprintf_r+0x466>
  40879e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  4087a2:	e796      	b.n	4086d2 <_vfiprintf_r+0x466>
  4087a4:	f898 2000 	ldrb.w	r2, [r8]
  4087a8:	2d00      	cmp	r5, #0
  4087aa:	f47f add1 	bne.w	408350 <_vfiprintf_r+0xe4>
  4087ae:	2001      	movs	r0, #1
  4087b0:	2520      	movs	r5, #32
  4087b2:	e5cd      	b.n	408350 <_vfiprintf_r+0xe4>
  4087b4:	f043 0301 	orr.w	r3, r3, #1
  4087b8:	f898 2000 	ldrb.w	r2, [r8]
  4087bc:	e5c8      	b.n	408350 <_vfiprintf_r+0xe4>
  4087be:	9608      	str	r6, [sp, #32]
  4087c0:	2800      	cmp	r0, #0
  4087c2:	f040 8393 	bne.w	408eec <_vfiprintf_r+0xc80>
  4087c6:	4929      	ldr	r1, [pc, #164]	; (40886c <_vfiprintf_r+0x600>)
  4087c8:	910b      	str	r1, [sp, #44]	; 0x2c
  4087ca:	069f      	lsls	r7, r3, #26
  4087cc:	f100 82e8 	bmi.w	408da0 <_vfiprintf_r+0xb34>
  4087d0:	9807      	ldr	r0, [sp, #28]
  4087d2:	06de      	lsls	r6, r3, #27
  4087d4:	4601      	mov	r1, r0
  4087d6:	f100 8270 	bmi.w	408cba <_vfiprintf_r+0xa4e>
  4087da:	065d      	lsls	r5, r3, #25
  4087dc:	f140 826d 	bpl.w	408cba <_vfiprintf_r+0xa4e>
  4087e0:	3104      	adds	r1, #4
  4087e2:	8806      	ldrh	r6, [r0, #0]
  4087e4:	9107      	str	r1, [sp, #28]
  4087e6:	2700      	movs	r7, #0
  4087e8:	07d8      	lsls	r0, r3, #31
  4087ea:	f140 8222 	bpl.w	408c32 <_vfiprintf_r+0x9c6>
  4087ee:	ea56 0107 	orrs.w	r1, r6, r7
  4087f2:	f000 821e 	beq.w	408c32 <_vfiprintf_r+0x9c6>
  4087f6:	2130      	movs	r1, #48	; 0x30
  4087f8:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  4087fc:	f043 0302 	orr.w	r3, r3, #2
  408800:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  408804:	2202      	movs	r2, #2
  408806:	e664      	b.n	4084d2 <_vfiprintf_r+0x266>
  408808:	9608      	str	r6, [sp, #32]
  40880a:	2800      	cmp	r0, #0
  40880c:	f040 836b 	bne.w	408ee6 <_vfiprintf_r+0xc7a>
  408810:	4917      	ldr	r1, [pc, #92]	; (408870 <_vfiprintf_r+0x604>)
  408812:	910b      	str	r1, [sp, #44]	; 0x2c
  408814:	e7d9      	b.n	4087ca <_vfiprintf_r+0x55e>
  408816:	9907      	ldr	r1, [sp, #28]
  408818:	9608      	str	r6, [sp, #32]
  40881a:	680a      	ldr	r2, [r1, #0]
  40881c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  408820:	f04f 0000 	mov.w	r0, #0
  408824:	460a      	mov	r2, r1
  408826:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  40882a:	3204      	adds	r2, #4
  40882c:	2001      	movs	r0, #1
  40882e:	9001      	str	r0, [sp, #4]
  408830:	9207      	str	r2, [sp, #28]
  408832:	9005      	str	r0, [sp, #20]
  408834:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  408838:	9302      	str	r3, [sp, #8]
  40883a:	2400      	movs	r4, #0
  40883c:	e670      	b.n	408520 <_vfiprintf_r+0x2b4>
  40883e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408842:	f898 2000 	ldrb.w	r2, [r8]
  408846:	e583      	b.n	408350 <_vfiprintf_r+0xe4>
  408848:	f898 2000 	ldrb.w	r2, [r8]
  40884c:	2a6c      	cmp	r2, #108	; 0x6c
  40884e:	bf03      	ittte	eq
  408850:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  408854:	f043 0320 	orreq.w	r3, r3, #32
  408858:	f108 0801 	addeq.w	r8, r8, #1
  40885c:	f043 0310 	orrne.w	r3, r3, #16
  408860:	e576      	b.n	408350 <_vfiprintf_r+0xe4>
  408862:	bf00      	nop
  408864:	0040dd2c 	.word	0x0040dd2c
  408868:	0040dd3c 	.word	0x0040dd3c
  40886c:	0040dcec 	.word	0x0040dcec
  408870:	0040dcd8 	.word	0x0040dcd8
  408874:	9907      	ldr	r1, [sp, #28]
  408876:	680e      	ldr	r6, [r1, #0]
  408878:	460a      	mov	r2, r1
  40887a:	2e00      	cmp	r6, #0
  40887c:	f102 0204 	add.w	r2, r2, #4
  408880:	f6ff ae0f 	blt.w	4084a2 <_vfiprintf_r+0x236>
  408884:	9207      	str	r2, [sp, #28]
  408886:	f898 2000 	ldrb.w	r2, [r8]
  40888a:	e561      	b.n	408350 <_vfiprintf_r+0xe4>
  40888c:	f898 2000 	ldrb.w	r2, [r8]
  408890:	2001      	movs	r0, #1
  408892:	252b      	movs	r5, #43	; 0x2b
  408894:	e55c      	b.n	408350 <_vfiprintf_r+0xe4>
  408896:	9907      	ldr	r1, [sp, #28]
  408898:	9608      	str	r6, [sp, #32]
  40889a:	f8d1 b000 	ldr.w	fp, [r1]
  40889e:	f04f 0200 	mov.w	r2, #0
  4088a2:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  4088a6:	1d0e      	adds	r6, r1, #4
  4088a8:	f1bb 0f00 	cmp.w	fp, #0
  4088ac:	f000 82e5 	beq.w	408e7a <_vfiprintf_r+0xc0e>
  4088b0:	1c67      	adds	r7, r4, #1
  4088b2:	f000 82c4 	beq.w	408e3e <_vfiprintf_r+0xbd2>
  4088b6:	4622      	mov	r2, r4
  4088b8:	2100      	movs	r1, #0
  4088ba:	4658      	mov	r0, fp
  4088bc:	9301      	str	r3, [sp, #4]
  4088be:	f002 fba7 	bl	40b010 <memchr>
  4088c2:	9b01      	ldr	r3, [sp, #4]
  4088c4:	2800      	cmp	r0, #0
  4088c6:	f000 82e5 	beq.w	408e94 <_vfiprintf_r+0xc28>
  4088ca:	eba0 020b 	sub.w	r2, r0, fp
  4088ce:	9205      	str	r2, [sp, #20]
  4088d0:	9607      	str	r6, [sp, #28]
  4088d2:	9302      	str	r3, [sp, #8]
  4088d4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4088d8:	2400      	movs	r4, #0
  4088da:	e619      	b.n	408510 <_vfiprintf_r+0x2a4>
  4088dc:	f898 2000 	ldrb.w	r2, [r8]
  4088e0:	2a2a      	cmp	r2, #42	; 0x2a
  4088e2:	f108 0701 	add.w	r7, r8, #1
  4088e6:	f000 82e9 	beq.w	408ebc <_vfiprintf_r+0xc50>
  4088ea:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4088ee:	2909      	cmp	r1, #9
  4088f0:	46b8      	mov	r8, r7
  4088f2:	f04f 0400 	mov.w	r4, #0
  4088f6:	f63f ad2d 	bhi.w	408354 <_vfiprintf_r+0xe8>
  4088fa:	f818 2b01 	ldrb.w	r2, [r8], #1
  4088fe:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  408902:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  408906:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  40890a:	2909      	cmp	r1, #9
  40890c:	d9f5      	bls.n	4088fa <_vfiprintf_r+0x68e>
  40890e:	e521      	b.n	408354 <_vfiprintf_r+0xe8>
  408910:	f043 0320 	orr.w	r3, r3, #32
  408914:	f898 2000 	ldrb.w	r2, [r8]
  408918:	e51a      	b.n	408350 <_vfiprintf_r+0xe4>
  40891a:	9608      	str	r6, [sp, #32]
  40891c:	2800      	cmp	r0, #0
  40891e:	f040 82db 	bne.w	408ed8 <_vfiprintf_r+0xc6c>
  408922:	2a00      	cmp	r2, #0
  408924:	f000 80e7 	beq.w	408af6 <_vfiprintf_r+0x88a>
  408928:	2101      	movs	r1, #1
  40892a:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  40892e:	f04f 0200 	mov.w	r2, #0
  408932:	9101      	str	r1, [sp, #4]
  408934:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  408938:	9105      	str	r1, [sp, #20]
  40893a:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  40893e:	e77b      	b.n	408838 <_vfiprintf_r+0x5cc>
  408940:	9a07      	ldr	r2, [sp, #28]
  408942:	6813      	ldr	r3, [r2, #0]
  408944:	3204      	adds	r2, #4
  408946:	9207      	str	r2, [sp, #28]
  408948:	9a03      	ldr	r2, [sp, #12]
  40894a:	601a      	str	r2, [r3, #0]
  40894c:	e4cb      	b.n	4082e6 <_vfiprintf_r+0x7a>
  40894e:	aa0f      	add	r2, sp, #60	; 0x3c
  408950:	9904      	ldr	r1, [sp, #16]
  408952:	4620      	mov	r0, r4
  408954:	f7ff fc4a 	bl	4081ec <__sprint_r.part.0>
  408958:	2800      	cmp	r0, #0
  40895a:	f040 8139 	bne.w	408bd0 <_vfiprintf_r+0x964>
  40895e:	9910      	ldr	r1, [sp, #64]	; 0x40
  408960:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408962:	f101 0c01 	add.w	ip, r1, #1
  408966:	46ce      	mov	lr, r9
  408968:	e5ff      	b.n	40856a <_vfiprintf_r+0x2fe>
  40896a:	9910      	ldr	r1, [sp, #64]	; 0x40
  40896c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40896e:	1c48      	adds	r0, r1, #1
  408970:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408974:	2d00      	cmp	r5, #0
  408976:	f43f ae22 	beq.w	4085be <_vfiprintf_r+0x352>
  40897a:	3201      	adds	r2, #1
  40897c:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  408980:	2101      	movs	r1, #1
  408982:	2807      	cmp	r0, #7
  408984:	9211      	str	r2, [sp, #68]	; 0x44
  408986:	9010      	str	r0, [sp, #64]	; 0x40
  408988:	f8ca 5000 	str.w	r5, [sl]
  40898c:	f8ca 1004 	str.w	r1, [sl, #4]
  408990:	f340 8108 	ble.w	408ba4 <_vfiprintf_r+0x938>
  408994:	2a00      	cmp	r2, #0
  408996:	f040 81bc 	bne.w	408d12 <_vfiprintf_r+0xaa6>
  40899a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40899c:	2b00      	cmp	r3, #0
  40899e:	f43f ae1f 	beq.w	4085e0 <_vfiprintf_r+0x374>
  4089a2:	ab0e      	add	r3, sp, #56	; 0x38
  4089a4:	2202      	movs	r2, #2
  4089a6:	4608      	mov	r0, r1
  4089a8:	931c      	str	r3, [sp, #112]	; 0x70
  4089aa:	921d      	str	r2, [sp, #116]	; 0x74
  4089ac:	46ca      	mov	sl, r9
  4089ae:	4601      	mov	r1, r0
  4089b0:	f10a 0a08 	add.w	sl, sl, #8
  4089b4:	3001      	adds	r0, #1
  4089b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4089b8:	2b80      	cmp	r3, #128	; 0x80
  4089ba:	f43f ae19 	beq.w	4085f0 <_vfiprintf_r+0x384>
  4089be:	9b05      	ldr	r3, [sp, #20]
  4089c0:	1ae4      	subs	r4, r4, r3
  4089c2:	2c00      	cmp	r4, #0
  4089c4:	dd2e      	ble.n	408a24 <_vfiprintf_r+0x7b8>
  4089c6:	2c10      	cmp	r4, #16
  4089c8:	4db3      	ldr	r5, [pc, #716]	; (408c98 <_vfiprintf_r+0xa2c>)
  4089ca:	dd1e      	ble.n	408a0a <_vfiprintf_r+0x79e>
  4089cc:	46d6      	mov	lr, sl
  4089ce:	2610      	movs	r6, #16
  4089d0:	9f06      	ldr	r7, [sp, #24]
  4089d2:	f8dd a010 	ldr.w	sl, [sp, #16]
  4089d6:	e006      	b.n	4089e6 <_vfiprintf_r+0x77a>
  4089d8:	1c88      	adds	r0, r1, #2
  4089da:	f10e 0e08 	add.w	lr, lr, #8
  4089de:	4619      	mov	r1, r3
  4089e0:	3c10      	subs	r4, #16
  4089e2:	2c10      	cmp	r4, #16
  4089e4:	dd10      	ble.n	408a08 <_vfiprintf_r+0x79c>
  4089e6:	1c4b      	adds	r3, r1, #1
  4089e8:	3210      	adds	r2, #16
  4089ea:	2b07      	cmp	r3, #7
  4089ec:	9211      	str	r2, [sp, #68]	; 0x44
  4089ee:	e88e 0060 	stmia.w	lr, {r5, r6}
  4089f2:	9310      	str	r3, [sp, #64]	; 0x40
  4089f4:	ddf0      	ble.n	4089d8 <_vfiprintf_r+0x76c>
  4089f6:	2a00      	cmp	r2, #0
  4089f8:	d165      	bne.n	408ac6 <_vfiprintf_r+0x85a>
  4089fa:	3c10      	subs	r4, #16
  4089fc:	2c10      	cmp	r4, #16
  4089fe:	f04f 0001 	mov.w	r0, #1
  408a02:	4611      	mov	r1, r2
  408a04:	46ce      	mov	lr, r9
  408a06:	dcee      	bgt.n	4089e6 <_vfiprintf_r+0x77a>
  408a08:	46f2      	mov	sl, lr
  408a0a:	4422      	add	r2, r4
  408a0c:	2807      	cmp	r0, #7
  408a0e:	9211      	str	r2, [sp, #68]	; 0x44
  408a10:	f8ca 5000 	str.w	r5, [sl]
  408a14:	f8ca 4004 	str.w	r4, [sl, #4]
  408a18:	9010      	str	r0, [sp, #64]	; 0x40
  408a1a:	f300 8085 	bgt.w	408b28 <_vfiprintf_r+0x8bc>
  408a1e:	f10a 0a08 	add.w	sl, sl, #8
  408a22:	3001      	adds	r0, #1
  408a24:	9905      	ldr	r1, [sp, #20]
  408a26:	f8ca b000 	str.w	fp, [sl]
  408a2a:	440a      	add	r2, r1
  408a2c:	2807      	cmp	r0, #7
  408a2e:	9211      	str	r2, [sp, #68]	; 0x44
  408a30:	f8ca 1004 	str.w	r1, [sl, #4]
  408a34:	9010      	str	r0, [sp, #64]	; 0x40
  408a36:	f340 8082 	ble.w	408b3e <_vfiprintf_r+0x8d2>
  408a3a:	2a00      	cmp	r2, #0
  408a3c:	f040 8118 	bne.w	408c70 <_vfiprintf_r+0xa04>
  408a40:	9b02      	ldr	r3, [sp, #8]
  408a42:	9210      	str	r2, [sp, #64]	; 0x40
  408a44:	0758      	lsls	r0, r3, #29
  408a46:	d535      	bpl.n	408ab4 <_vfiprintf_r+0x848>
  408a48:	9b08      	ldr	r3, [sp, #32]
  408a4a:	9901      	ldr	r1, [sp, #4]
  408a4c:	1a5c      	subs	r4, r3, r1
  408a4e:	2c00      	cmp	r4, #0
  408a50:	f340 80e7 	ble.w	408c22 <_vfiprintf_r+0x9b6>
  408a54:	46ca      	mov	sl, r9
  408a56:	2c10      	cmp	r4, #16
  408a58:	f340 8218 	ble.w	408e8c <_vfiprintf_r+0xc20>
  408a5c:	9910      	ldr	r1, [sp, #64]	; 0x40
  408a5e:	4e8f      	ldr	r6, [pc, #572]	; (408c9c <_vfiprintf_r+0xa30>)
  408a60:	9f06      	ldr	r7, [sp, #24]
  408a62:	f8dd b010 	ldr.w	fp, [sp, #16]
  408a66:	2510      	movs	r5, #16
  408a68:	e006      	b.n	408a78 <_vfiprintf_r+0x80c>
  408a6a:	1c88      	adds	r0, r1, #2
  408a6c:	f10a 0a08 	add.w	sl, sl, #8
  408a70:	4619      	mov	r1, r3
  408a72:	3c10      	subs	r4, #16
  408a74:	2c10      	cmp	r4, #16
  408a76:	dd11      	ble.n	408a9c <_vfiprintf_r+0x830>
  408a78:	1c4b      	adds	r3, r1, #1
  408a7a:	3210      	adds	r2, #16
  408a7c:	2b07      	cmp	r3, #7
  408a7e:	9211      	str	r2, [sp, #68]	; 0x44
  408a80:	f8ca 6000 	str.w	r6, [sl]
  408a84:	f8ca 5004 	str.w	r5, [sl, #4]
  408a88:	9310      	str	r3, [sp, #64]	; 0x40
  408a8a:	ddee      	ble.n	408a6a <_vfiprintf_r+0x7fe>
  408a8c:	bb42      	cbnz	r2, 408ae0 <_vfiprintf_r+0x874>
  408a8e:	3c10      	subs	r4, #16
  408a90:	2c10      	cmp	r4, #16
  408a92:	f04f 0001 	mov.w	r0, #1
  408a96:	4611      	mov	r1, r2
  408a98:	46ca      	mov	sl, r9
  408a9a:	dced      	bgt.n	408a78 <_vfiprintf_r+0x80c>
  408a9c:	4422      	add	r2, r4
  408a9e:	2807      	cmp	r0, #7
  408aa0:	9211      	str	r2, [sp, #68]	; 0x44
  408aa2:	f8ca 6000 	str.w	r6, [sl]
  408aa6:	f8ca 4004 	str.w	r4, [sl, #4]
  408aaa:	9010      	str	r0, [sp, #64]	; 0x40
  408aac:	dd51      	ble.n	408b52 <_vfiprintf_r+0x8e6>
  408aae:	2a00      	cmp	r2, #0
  408ab0:	f040 819b 	bne.w	408dea <_vfiprintf_r+0xb7e>
  408ab4:	9b03      	ldr	r3, [sp, #12]
  408ab6:	9a08      	ldr	r2, [sp, #32]
  408ab8:	9901      	ldr	r1, [sp, #4]
  408aba:	428a      	cmp	r2, r1
  408abc:	bfac      	ite	ge
  408abe:	189b      	addge	r3, r3, r2
  408ac0:	185b      	addlt	r3, r3, r1
  408ac2:	9303      	str	r3, [sp, #12]
  408ac4:	e04e      	b.n	408b64 <_vfiprintf_r+0x8f8>
  408ac6:	aa0f      	add	r2, sp, #60	; 0x3c
  408ac8:	4651      	mov	r1, sl
  408aca:	4638      	mov	r0, r7
  408acc:	f7ff fb8e 	bl	4081ec <__sprint_r.part.0>
  408ad0:	2800      	cmp	r0, #0
  408ad2:	f040 813f 	bne.w	408d54 <_vfiprintf_r+0xae8>
  408ad6:	9910      	ldr	r1, [sp, #64]	; 0x40
  408ad8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408ada:	1c48      	adds	r0, r1, #1
  408adc:	46ce      	mov	lr, r9
  408ade:	e77f      	b.n	4089e0 <_vfiprintf_r+0x774>
  408ae0:	aa0f      	add	r2, sp, #60	; 0x3c
  408ae2:	4659      	mov	r1, fp
  408ae4:	4638      	mov	r0, r7
  408ae6:	f7ff fb81 	bl	4081ec <__sprint_r.part.0>
  408aea:	b960      	cbnz	r0, 408b06 <_vfiprintf_r+0x89a>
  408aec:	9910      	ldr	r1, [sp, #64]	; 0x40
  408aee:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408af0:	1c48      	adds	r0, r1, #1
  408af2:	46ca      	mov	sl, r9
  408af4:	e7bd      	b.n	408a72 <_vfiprintf_r+0x806>
  408af6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  408af8:	f8dd b010 	ldr.w	fp, [sp, #16]
  408afc:	2b00      	cmp	r3, #0
  408afe:	f040 81d4 	bne.w	408eaa <_vfiprintf_r+0xc3e>
  408b02:	2300      	movs	r3, #0
  408b04:	9310      	str	r3, [sp, #64]	; 0x40
  408b06:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  408b0a:	f013 0f01 	tst.w	r3, #1
  408b0e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  408b12:	d102      	bne.n	408b1a <_vfiprintf_r+0x8ae>
  408b14:	059a      	lsls	r2, r3, #22
  408b16:	f140 80de 	bpl.w	408cd6 <_vfiprintf_r+0xa6a>
  408b1a:	065b      	lsls	r3, r3, #25
  408b1c:	f53f acb2 	bmi.w	408484 <_vfiprintf_r+0x218>
  408b20:	9803      	ldr	r0, [sp, #12]
  408b22:	b02d      	add	sp, #180	; 0xb4
  408b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408b28:	2a00      	cmp	r2, #0
  408b2a:	f040 8106 	bne.w	408d3a <_vfiprintf_r+0xace>
  408b2e:	9a05      	ldr	r2, [sp, #20]
  408b30:	921d      	str	r2, [sp, #116]	; 0x74
  408b32:	2301      	movs	r3, #1
  408b34:	9211      	str	r2, [sp, #68]	; 0x44
  408b36:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  408b3a:	9310      	str	r3, [sp, #64]	; 0x40
  408b3c:	46ca      	mov	sl, r9
  408b3e:	f10a 0a08 	add.w	sl, sl, #8
  408b42:	9b02      	ldr	r3, [sp, #8]
  408b44:	0759      	lsls	r1, r3, #29
  408b46:	d504      	bpl.n	408b52 <_vfiprintf_r+0x8e6>
  408b48:	9b08      	ldr	r3, [sp, #32]
  408b4a:	9901      	ldr	r1, [sp, #4]
  408b4c:	1a5c      	subs	r4, r3, r1
  408b4e:	2c00      	cmp	r4, #0
  408b50:	dc81      	bgt.n	408a56 <_vfiprintf_r+0x7ea>
  408b52:	9b03      	ldr	r3, [sp, #12]
  408b54:	9908      	ldr	r1, [sp, #32]
  408b56:	9801      	ldr	r0, [sp, #4]
  408b58:	4281      	cmp	r1, r0
  408b5a:	bfac      	ite	ge
  408b5c:	185b      	addge	r3, r3, r1
  408b5e:	181b      	addlt	r3, r3, r0
  408b60:	9303      	str	r3, [sp, #12]
  408b62:	bb72      	cbnz	r2, 408bc2 <_vfiprintf_r+0x956>
  408b64:	2300      	movs	r3, #0
  408b66:	9310      	str	r3, [sp, #64]	; 0x40
  408b68:	46ca      	mov	sl, r9
  408b6a:	f7ff bbbc 	b.w	4082e6 <_vfiprintf_r+0x7a>
  408b6e:	aa0f      	add	r2, sp, #60	; 0x3c
  408b70:	9904      	ldr	r1, [sp, #16]
  408b72:	4620      	mov	r0, r4
  408b74:	f7ff fb3a 	bl	4081ec <__sprint_r.part.0>
  408b78:	bb50      	cbnz	r0, 408bd0 <_vfiprintf_r+0x964>
  408b7a:	9910      	ldr	r1, [sp, #64]	; 0x40
  408b7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408b7e:	f101 0e01 	add.w	lr, r1, #1
  408b82:	46cc      	mov	ip, r9
  408b84:	e548      	b.n	408618 <_vfiprintf_r+0x3ac>
  408b86:	2a00      	cmp	r2, #0
  408b88:	f040 8140 	bne.w	408e0c <_vfiprintf_r+0xba0>
  408b8c:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  408b90:	2900      	cmp	r1, #0
  408b92:	f000 811b 	beq.w	408dcc <_vfiprintf_r+0xb60>
  408b96:	2201      	movs	r2, #1
  408b98:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  408b9c:	4610      	mov	r0, r2
  408b9e:	921d      	str	r2, [sp, #116]	; 0x74
  408ba0:	911c      	str	r1, [sp, #112]	; 0x70
  408ba2:	46ca      	mov	sl, r9
  408ba4:	4601      	mov	r1, r0
  408ba6:	f10a 0a08 	add.w	sl, sl, #8
  408baa:	3001      	adds	r0, #1
  408bac:	e507      	b.n	4085be <_vfiprintf_r+0x352>
  408bae:	9b02      	ldr	r3, [sp, #8]
  408bb0:	2a01      	cmp	r2, #1
  408bb2:	f000 8098 	beq.w	408ce6 <_vfiprintf_r+0xa7a>
  408bb6:	2a02      	cmp	r2, #2
  408bb8:	d10d      	bne.n	408bd6 <_vfiprintf_r+0x96a>
  408bba:	9302      	str	r3, [sp, #8]
  408bbc:	2600      	movs	r6, #0
  408bbe:	2700      	movs	r7, #0
  408bc0:	e5b0      	b.n	408724 <_vfiprintf_r+0x4b8>
  408bc2:	aa0f      	add	r2, sp, #60	; 0x3c
  408bc4:	9904      	ldr	r1, [sp, #16]
  408bc6:	9806      	ldr	r0, [sp, #24]
  408bc8:	f7ff fb10 	bl	4081ec <__sprint_r.part.0>
  408bcc:	2800      	cmp	r0, #0
  408bce:	d0c9      	beq.n	408b64 <_vfiprintf_r+0x8f8>
  408bd0:	f8dd b010 	ldr.w	fp, [sp, #16]
  408bd4:	e797      	b.n	408b06 <_vfiprintf_r+0x89a>
  408bd6:	9302      	str	r3, [sp, #8]
  408bd8:	2600      	movs	r6, #0
  408bda:	2700      	movs	r7, #0
  408bdc:	4649      	mov	r1, r9
  408bde:	e000      	b.n	408be2 <_vfiprintf_r+0x976>
  408be0:	4659      	mov	r1, fp
  408be2:	08f2      	lsrs	r2, r6, #3
  408be4:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  408be8:	08f8      	lsrs	r0, r7, #3
  408bea:	f006 0307 	and.w	r3, r6, #7
  408bee:	4607      	mov	r7, r0
  408bf0:	4616      	mov	r6, r2
  408bf2:	3330      	adds	r3, #48	; 0x30
  408bf4:	ea56 0207 	orrs.w	r2, r6, r7
  408bf8:	f801 3c01 	strb.w	r3, [r1, #-1]
  408bfc:	f101 3bff 	add.w	fp, r1, #4294967295
  408c00:	d1ee      	bne.n	408be0 <_vfiprintf_r+0x974>
  408c02:	9a02      	ldr	r2, [sp, #8]
  408c04:	07d6      	lsls	r6, r2, #31
  408c06:	f57f ad9d 	bpl.w	408744 <_vfiprintf_r+0x4d8>
  408c0a:	2b30      	cmp	r3, #48	; 0x30
  408c0c:	f43f ad9a 	beq.w	408744 <_vfiprintf_r+0x4d8>
  408c10:	3902      	subs	r1, #2
  408c12:	2330      	movs	r3, #48	; 0x30
  408c14:	f80b 3c01 	strb.w	r3, [fp, #-1]
  408c18:	eba9 0301 	sub.w	r3, r9, r1
  408c1c:	9305      	str	r3, [sp, #20]
  408c1e:	468b      	mov	fp, r1
  408c20:	e476      	b.n	408510 <_vfiprintf_r+0x2a4>
  408c22:	9b03      	ldr	r3, [sp, #12]
  408c24:	9a08      	ldr	r2, [sp, #32]
  408c26:	428a      	cmp	r2, r1
  408c28:	bfac      	ite	ge
  408c2a:	189b      	addge	r3, r3, r2
  408c2c:	185b      	addlt	r3, r3, r1
  408c2e:	9303      	str	r3, [sp, #12]
  408c30:	e798      	b.n	408b64 <_vfiprintf_r+0x8f8>
  408c32:	2202      	movs	r2, #2
  408c34:	e44d      	b.n	4084d2 <_vfiprintf_r+0x266>
  408c36:	2f00      	cmp	r7, #0
  408c38:	bf08      	it	eq
  408c3a:	2e0a      	cmpeq	r6, #10
  408c3c:	d352      	bcc.n	408ce4 <_vfiprintf_r+0xa78>
  408c3e:	46cb      	mov	fp, r9
  408c40:	4630      	mov	r0, r6
  408c42:	4639      	mov	r1, r7
  408c44:	220a      	movs	r2, #10
  408c46:	2300      	movs	r3, #0
  408c48:	f003 fea4 	bl	40c994 <__aeabi_uldivmod>
  408c4c:	3230      	adds	r2, #48	; 0x30
  408c4e:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  408c52:	4630      	mov	r0, r6
  408c54:	4639      	mov	r1, r7
  408c56:	2300      	movs	r3, #0
  408c58:	220a      	movs	r2, #10
  408c5a:	f003 fe9b 	bl	40c994 <__aeabi_uldivmod>
  408c5e:	4606      	mov	r6, r0
  408c60:	460f      	mov	r7, r1
  408c62:	ea56 0307 	orrs.w	r3, r6, r7
  408c66:	d1eb      	bne.n	408c40 <_vfiprintf_r+0x9d4>
  408c68:	e56c      	b.n	408744 <_vfiprintf_r+0x4d8>
  408c6a:	9405      	str	r4, [sp, #20]
  408c6c:	46cb      	mov	fp, r9
  408c6e:	e44f      	b.n	408510 <_vfiprintf_r+0x2a4>
  408c70:	aa0f      	add	r2, sp, #60	; 0x3c
  408c72:	9904      	ldr	r1, [sp, #16]
  408c74:	9806      	ldr	r0, [sp, #24]
  408c76:	f7ff fab9 	bl	4081ec <__sprint_r.part.0>
  408c7a:	2800      	cmp	r0, #0
  408c7c:	d1a8      	bne.n	408bd0 <_vfiprintf_r+0x964>
  408c7e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408c80:	46ca      	mov	sl, r9
  408c82:	e75e      	b.n	408b42 <_vfiprintf_r+0x8d6>
  408c84:	aa0f      	add	r2, sp, #60	; 0x3c
  408c86:	9904      	ldr	r1, [sp, #16]
  408c88:	9806      	ldr	r0, [sp, #24]
  408c8a:	f7ff faaf 	bl	4081ec <__sprint_r.part.0>
  408c8e:	2800      	cmp	r0, #0
  408c90:	d19e      	bne.n	408bd0 <_vfiprintf_r+0x964>
  408c92:	46ca      	mov	sl, r9
  408c94:	f7ff bbc0 	b.w	408418 <_vfiprintf_r+0x1ac>
  408c98:	0040dd3c 	.word	0x0040dd3c
  408c9c:	0040dd2c 	.word	0x0040dd2c
  408ca0:	3104      	adds	r1, #4
  408ca2:	6816      	ldr	r6, [r2, #0]
  408ca4:	9107      	str	r1, [sp, #28]
  408ca6:	2201      	movs	r2, #1
  408ca8:	2700      	movs	r7, #0
  408caa:	e412      	b.n	4084d2 <_vfiprintf_r+0x266>
  408cac:	9807      	ldr	r0, [sp, #28]
  408cae:	4601      	mov	r1, r0
  408cb0:	3104      	adds	r1, #4
  408cb2:	6806      	ldr	r6, [r0, #0]
  408cb4:	9107      	str	r1, [sp, #28]
  408cb6:	2700      	movs	r7, #0
  408cb8:	e40b      	b.n	4084d2 <_vfiprintf_r+0x266>
  408cba:	680e      	ldr	r6, [r1, #0]
  408cbc:	3104      	adds	r1, #4
  408cbe:	9107      	str	r1, [sp, #28]
  408cc0:	2700      	movs	r7, #0
  408cc2:	e591      	b.n	4087e8 <_vfiprintf_r+0x57c>
  408cc4:	9907      	ldr	r1, [sp, #28]
  408cc6:	680e      	ldr	r6, [r1, #0]
  408cc8:	460a      	mov	r2, r1
  408cca:	17f7      	asrs	r7, r6, #31
  408ccc:	3204      	adds	r2, #4
  408cce:	9207      	str	r2, [sp, #28]
  408cd0:	4630      	mov	r0, r6
  408cd2:	4639      	mov	r1, r7
  408cd4:	e50f      	b.n	4086f6 <_vfiprintf_r+0x48a>
  408cd6:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  408cda:	f001 fe4b 	bl	40a974 <__retarget_lock_release_recursive>
  408cde:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  408ce2:	e71a      	b.n	408b1a <_vfiprintf_r+0x8ae>
  408ce4:	9b02      	ldr	r3, [sp, #8]
  408ce6:	9302      	str	r3, [sp, #8]
  408ce8:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  408cec:	3630      	adds	r6, #48	; 0x30
  408cee:	2301      	movs	r3, #1
  408cf0:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  408cf4:	9305      	str	r3, [sp, #20]
  408cf6:	e40b      	b.n	408510 <_vfiprintf_r+0x2a4>
  408cf8:	aa0f      	add	r2, sp, #60	; 0x3c
  408cfa:	9904      	ldr	r1, [sp, #16]
  408cfc:	9806      	ldr	r0, [sp, #24]
  408cfe:	f7ff fa75 	bl	4081ec <__sprint_r.part.0>
  408d02:	2800      	cmp	r0, #0
  408d04:	f47f af64 	bne.w	408bd0 <_vfiprintf_r+0x964>
  408d08:	9910      	ldr	r1, [sp, #64]	; 0x40
  408d0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408d0c:	1c48      	adds	r0, r1, #1
  408d0e:	46ca      	mov	sl, r9
  408d10:	e651      	b.n	4089b6 <_vfiprintf_r+0x74a>
  408d12:	aa0f      	add	r2, sp, #60	; 0x3c
  408d14:	9904      	ldr	r1, [sp, #16]
  408d16:	9806      	ldr	r0, [sp, #24]
  408d18:	f7ff fa68 	bl	4081ec <__sprint_r.part.0>
  408d1c:	2800      	cmp	r0, #0
  408d1e:	f47f af57 	bne.w	408bd0 <_vfiprintf_r+0x964>
  408d22:	9910      	ldr	r1, [sp, #64]	; 0x40
  408d24:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408d26:	1c48      	adds	r0, r1, #1
  408d28:	46ca      	mov	sl, r9
  408d2a:	e448      	b.n	4085be <_vfiprintf_r+0x352>
  408d2c:	2a00      	cmp	r2, #0
  408d2e:	f040 8091 	bne.w	408e54 <_vfiprintf_r+0xbe8>
  408d32:	2001      	movs	r0, #1
  408d34:	4611      	mov	r1, r2
  408d36:	46ca      	mov	sl, r9
  408d38:	e641      	b.n	4089be <_vfiprintf_r+0x752>
  408d3a:	aa0f      	add	r2, sp, #60	; 0x3c
  408d3c:	9904      	ldr	r1, [sp, #16]
  408d3e:	9806      	ldr	r0, [sp, #24]
  408d40:	f7ff fa54 	bl	4081ec <__sprint_r.part.0>
  408d44:	2800      	cmp	r0, #0
  408d46:	f47f af43 	bne.w	408bd0 <_vfiprintf_r+0x964>
  408d4a:	9810      	ldr	r0, [sp, #64]	; 0x40
  408d4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408d4e:	3001      	adds	r0, #1
  408d50:	46ca      	mov	sl, r9
  408d52:	e667      	b.n	408a24 <_vfiprintf_r+0x7b8>
  408d54:	46d3      	mov	fp, sl
  408d56:	e6d6      	b.n	408b06 <_vfiprintf_r+0x89a>
  408d58:	9e07      	ldr	r6, [sp, #28]
  408d5a:	3607      	adds	r6, #7
  408d5c:	f026 0207 	bic.w	r2, r6, #7
  408d60:	f102 0108 	add.w	r1, r2, #8
  408d64:	e9d2 6700 	ldrd	r6, r7, [r2]
  408d68:	9107      	str	r1, [sp, #28]
  408d6a:	2201      	movs	r2, #1
  408d6c:	f7ff bbb1 	b.w	4084d2 <_vfiprintf_r+0x266>
  408d70:	9e07      	ldr	r6, [sp, #28]
  408d72:	3607      	adds	r6, #7
  408d74:	f026 0607 	bic.w	r6, r6, #7
  408d78:	e9d6 0100 	ldrd	r0, r1, [r6]
  408d7c:	f106 0208 	add.w	r2, r6, #8
  408d80:	9207      	str	r2, [sp, #28]
  408d82:	4606      	mov	r6, r0
  408d84:	460f      	mov	r7, r1
  408d86:	e4b6      	b.n	4086f6 <_vfiprintf_r+0x48a>
  408d88:	9e07      	ldr	r6, [sp, #28]
  408d8a:	3607      	adds	r6, #7
  408d8c:	f026 0207 	bic.w	r2, r6, #7
  408d90:	f102 0108 	add.w	r1, r2, #8
  408d94:	e9d2 6700 	ldrd	r6, r7, [r2]
  408d98:	9107      	str	r1, [sp, #28]
  408d9a:	2200      	movs	r2, #0
  408d9c:	f7ff bb99 	b.w	4084d2 <_vfiprintf_r+0x266>
  408da0:	9e07      	ldr	r6, [sp, #28]
  408da2:	3607      	adds	r6, #7
  408da4:	f026 0107 	bic.w	r1, r6, #7
  408da8:	f101 0008 	add.w	r0, r1, #8
  408dac:	9007      	str	r0, [sp, #28]
  408dae:	e9d1 6700 	ldrd	r6, r7, [r1]
  408db2:	e519      	b.n	4087e8 <_vfiprintf_r+0x57c>
  408db4:	46cb      	mov	fp, r9
  408db6:	f7ff bbab 	b.w	408510 <_vfiprintf_r+0x2a4>
  408dba:	252d      	movs	r5, #45	; 0x2d
  408dbc:	4276      	negs	r6, r6
  408dbe:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  408dc2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408dc6:	2201      	movs	r2, #1
  408dc8:	f7ff bb88 	b.w	4084dc <_vfiprintf_r+0x270>
  408dcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  408dce:	b9b3      	cbnz	r3, 408dfe <_vfiprintf_r+0xb92>
  408dd0:	4611      	mov	r1, r2
  408dd2:	2001      	movs	r0, #1
  408dd4:	46ca      	mov	sl, r9
  408dd6:	e5f2      	b.n	4089be <_vfiprintf_r+0x752>
  408dd8:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  408ddc:	f001 fdca 	bl	40a974 <__retarget_lock_release_recursive>
  408de0:	f04f 33ff 	mov.w	r3, #4294967295
  408de4:	9303      	str	r3, [sp, #12]
  408de6:	f7ff bb50 	b.w	40848a <_vfiprintf_r+0x21e>
  408dea:	aa0f      	add	r2, sp, #60	; 0x3c
  408dec:	9904      	ldr	r1, [sp, #16]
  408dee:	9806      	ldr	r0, [sp, #24]
  408df0:	f7ff f9fc 	bl	4081ec <__sprint_r.part.0>
  408df4:	2800      	cmp	r0, #0
  408df6:	f47f aeeb 	bne.w	408bd0 <_vfiprintf_r+0x964>
  408dfa:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408dfc:	e6a9      	b.n	408b52 <_vfiprintf_r+0x8e6>
  408dfe:	ab0e      	add	r3, sp, #56	; 0x38
  408e00:	2202      	movs	r2, #2
  408e02:	931c      	str	r3, [sp, #112]	; 0x70
  408e04:	921d      	str	r2, [sp, #116]	; 0x74
  408e06:	2001      	movs	r0, #1
  408e08:	46ca      	mov	sl, r9
  408e0a:	e5d0      	b.n	4089ae <_vfiprintf_r+0x742>
  408e0c:	aa0f      	add	r2, sp, #60	; 0x3c
  408e0e:	9904      	ldr	r1, [sp, #16]
  408e10:	9806      	ldr	r0, [sp, #24]
  408e12:	f7ff f9eb 	bl	4081ec <__sprint_r.part.0>
  408e16:	2800      	cmp	r0, #0
  408e18:	f47f aeda 	bne.w	408bd0 <_vfiprintf_r+0x964>
  408e1c:	9910      	ldr	r1, [sp, #64]	; 0x40
  408e1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408e20:	1c48      	adds	r0, r1, #1
  408e22:	46ca      	mov	sl, r9
  408e24:	e5a4      	b.n	408970 <_vfiprintf_r+0x704>
  408e26:	9a07      	ldr	r2, [sp, #28]
  408e28:	9903      	ldr	r1, [sp, #12]
  408e2a:	6813      	ldr	r3, [r2, #0]
  408e2c:	17cd      	asrs	r5, r1, #31
  408e2e:	4608      	mov	r0, r1
  408e30:	3204      	adds	r2, #4
  408e32:	4629      	mov	r1, r5
  408e34:	9207      	str	r2, [sp, #28]
  408e36:	e9c3 0100 	strd	r0, r1, [r3]
  408e3a:	f7ff ba54 	b.w	4082e6 <_vfiprintf_r+0x7a>
  408e3e:	4658      	mov	r0, fp
  408e40:	9607      	str	r6, [sp, #28]
  408e42:	9302      	str	r3, [sp, #8]
  408e44:	f7fd febc 	bl	406bc0 <strlen>
  408e48:	2400      	movs	r4, #0
  408e4a:	9005      	str	r0, [sp, #20]
  408e4c:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408e50:	f7ff bb5e 	b.w	408510 <_vfiprintf_r+0x2a4>
  408e54:	aa0f      	add	r2, sp, #60	; 0x3c
  408e56:	9904      	ldr	r1, [sp, #16]
  408e58:	9806      	ldr	r0, [sp, #24]
  408e5a:	f7ff f9c7 	bl	4081ec <__sprint_r.part.0>
  408e5e:	2800      	cmp	r0, #0
  408e60:	f47f aeb6 	bne.w	408bd0 <_vfiprintf_r+0x964>
  408e64:	9910      	ldr	r1, [sp, #64]	; 0x40
  408e66:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408e68:	1c48      	adds	r0, r1, #1
  408e6a:	46ca      	mov	sl, r9
  408e6c:	e5a7      	b.n	4089be <_vfiprintf_r+0x752>
  408e6e:	9910      	ldr	r1, [sp, #64]	; 0x40
  408e70:	9a11      	ldr	r2, [sp, #68]	; 0x44
  408e72:	4e20      	ldr	r6, [pc, #128]	; (408ef4 <_vfiprintf_r+0xc88>)
  408e74:	3101      	adds	r1, #1
  408e76:	f7ff bb90 	b.w	40859a <_vfiprintf_r+0x32e>
  408e7a:	2c06      	cmp	r4, #6
  408e7c:	bf28      	it	cs
  408e7e:	2406      	movcs	r4, #6
  408e80:	9405      	str	r4, [sp, #20]
  408e82:	9607      	str	r6, [sp, #28]
  408e84:	9401      	str	r4, [sp, #4]
  408e86:	f8df b070 	ldr.w	fp, [pc, #112]	; 408ef8 <_vfiprintf_r+0xc8c>
  408e8a:	e4d5      	b.n	408838 <_vfiprintf_r+0x5cc>
  408e8c:	9810      	ldr	r0, [sp, #64]	; 0x40
  408e8e:	4e19      	ldr	r6, [pc, #100]	; (408ef4 <_vfiprintf_r+0xc88>)
  408e90:	3001      	adds	r0, #1
  408e92:	e603      	b.n	408a9c <_vfiprintf_r+0x830>
  408e94:	9405      	str	r4, [sp, #20]
  408e96:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  408e9a:	9607      	str	r6, [sp, #28]
  408e9c:	9302      	str	r3, [sp, #8]
  408e9e:	4604      	mov	r4, r0
  408ea0:	f7ff bb36 	b.w	408510 <_vfiprintf_r+0x2a4>
  408ea4:	4686      	mov	lr, r0
  408ea6:	f7ff bbce 	b.w	408646 <_vfiprintf_r+0x3da>
  408eaa:	9806      	ldr	r0, [sp, #24]
  408eac:	aa0f      	add	r2, sp, #60	; 0x3c
  408eae:	4659      	mov	r1, fp
  408eb0:	f7ff f99c 	bl	4081ec <__sprint_r.part.0>
  408eb4:	2800      	cmp	r0, #0
  408eb6:	f43f ae24 	beq.w	408b02 <_vfiprintf_r+0x896>
  408eba:	e624      	b.n	408b06 <_vfiprintf_r+0x89a>
  408ebc:	9907      	ldr	r1, [sp, #28]
  408ebe:	f898 2001 	ldrb.w	r2, [r8, #1]
  408ec2:	680c      	ldr	r4, [r1, #0]
  408ec4:	3104      	adds	r1, #4
  408ec6:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  408eca:	46b8      	mov	r8, r7
  408ecc:	9107      	str	r1, [sp, #28]
  408ece:	f7ff ba3f 	b.w	408350 <_vfiprintf_r+0xe4>
  408ed2:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408ed6:	e43c      	b.n	408752 <_vfiprintf_r+0x4e6>
  408ed8:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408edc:	e521      	b.n	408922 <_vfiprintf_r+0x6b6>
  408ede:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408ee2:	f7ff bbf4 	b.w	4086ce <_vfiprintf_r+0x462>
  408ee6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408eea:	e491      	b.n	408810 <_vfiprintf_r+0x5a4>
  408eec:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  408ef0:	e469      	b.n	4087c6 <_vfiprintf_r+0x55a>
  408ef2:	bf00      	nop
  408ef4:	0040dd2c 	.word	0x0040dd2c
  408ef8:	0040dd00 	.word	0x0040dd00

00408efc <__sbprintf>:
  408efc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  408f00:	460c      	mov	r4, r1
  408f02:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  408f06:	8989      	ldrh	r1, [r1, #12]
  408f08:	6e66      	ldr	r6, [r4, #100]	; 0x64
  408f0a:	89e5      	ldrh	r5, [r4, #14]
  408f0c:	9619      	str	r6, [sp, #100]	; 0x64
  408f0e:	f021 0102 	bic.w	r1, r1, #2
  408f12:	4606      	mov	r6, r0
  408f14:	69e0      	ldr	r0, [r4, #28]
  408f16:	f8ad 100c 	strh.w	r1, [sp, #12]
  408f1a:	4617      	mov	r7, r2
  408f1c:	f44f 6180 	mov.w	r1, #1024	; 0x400
  408f20:	6a62      	ldr	r2, [r4, #36]	; 0x24
  408f22:	f8ad 500e 	strh.w	r5, [sp, #14]
  408f26:	4698      	mov	r8, r3
  408f28:	ad1a      	add	r5, sp, #104	; 0x68
  408f2a:	2300      	movs	r3, #0
  408f2c:	9007      	str	r0, [sp, #28]
  408f2e:	a816      	add	r0, sp, #88	; 0x58
  408f30:	9209      	str	r2, [sp, #36]	; 0x24
  408f32:	9306      	str	r3, [sp, #24]
  408f34:	9500      	str	r5, [sp, #0]
  408f36:	9504      	str	r5, [sp, #16]
  408f38:	9102      	str	r1, [sp, #8]
  408f3a:	9105      	str	r1, [sp, #20]
  408f3c:	f001 fd14 	bl	40a968 <__retarget_lock_init_recursive>
  408f40:	4643      	mov	r3, r8
  408f42:	463a      	mov	r2, r7
  408f44:	4669      	mov	r1, sp
  408f46:	4630      	mov	r0, r6
  408f48:	f7ff f990 	bl	40826c <_vfiprintf_r>
  408f4c:	1e05      	subs	r5, r0, #0
  408f4e:	db07      	blt.n	408f60 <__sbprintf+0x64>
  408f50:	4630      	mov	r0, r6
  408f52:	4669      	mov	r1, sp
  408f54:	f001 f8e6 	bl	40a124 <_fflush_r>
  408f58:	2800      	cmp	r0, #0
  408f5a:	bf18      	it	ne
  408f5c:	f04f 35ff 	movne.w	r5, #4294967295
  408f60:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  408f64:	065b      	lsls	r3, r3, #25
  408f66:	d503      	bpl.n	408f70 <__sbprintf+0x74>
  408f68:	89a3      	ldrh	r3, [r4, #12]
  408f6a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408f6e:	81a3      	strh	r3, [r4, #12]
  408f70:	9816      	ldr	r0, [sp, #88]	; 0x58
  408f72:	f001 fcfb 	bl	40a96c <__retarget_lock_close_recursive>
  408f76:	4628      	mov	r0, r5
  408f78:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  408f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00408f80 <__swsetup_r>:
  408f80:	b538      	push	{r3, r4, r5, lr}
  408f82:	4b30      	ldr	r3, [pc, #192]	; (409044 <__swsetup_r+0xc4>)
  408f84:	681b      	ldr	r3, [r3, #0]
  408f86:	4605      	mov	r5, r0
  408f88:	460c      	mov	r4, r1
  408f8a:	b113      	cbz	r3, 408f92 <__swsetup_r+0x12>
  408f8c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  408f8e:	2a00      	cmp	r2, #0
  408f90:	d038      	beq.n	409004 <__swsetup_r+0x84>
  408f92:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  408f96:	b293      	uxth	r3, r2
  408f98:	0718      	lsls	r0, r3, #28
  408f9a:	d50c      	bpl.n	408fb6 <__swsetup_r+0x36>
  408f9c:	6920      	ldr	r0, [r4, #16]
  408f9e:	b1a8      	cbz	r0, 408fcc <__swsetup_r+0x4c>
  408fa0:	f013 0201 	ands.w	r2, r3, #1
  408fa4:	d01e      	beq.n	408fe4 <__swsetup_r+0x64>
  408fa6:	6963      	ldr	r3, [r4, #20]
  408fa8:	2200      	movs	r2, #0
  408faa:	425b      	negs	r3, r3
  408fac:	61a3      	str	r3, [r4, #24]
  408fae:	60a2      	str	r2, [r4, #8]
  408fb0:	b1f0      	cbz	r0, 408ff0 <__swsetup_r+0x70>
  408fb2:	2000      	movs	r0, #0
  408fb4:	bd38      	pop	{r3, r4, r5, pc}
  408fb6:	06d9      	lsls	r1, r3, #27
  408fb8:	d53c      	bpl.n	409034 <__swsetup_r+0xb4>
  408fba:	0758      	lsls	r0, r3, #29
  408fbc:	d426      	bmi.n	40900c <__swsetup_r+0x8c>
  408fbe:	6920      	ldr	r0, [r4, #16]
  408fc0:	f042 0308 	orr.w	r3, r2, #8
  408fc4:	81a3      	strh	r3, [r4, #12]
  408fc6:	b29b      	uxth	r3, r3
  408fc8:	2800      	cmp	r0, #0
  408fca:	d1e9      	bne.n	408fa0 <__swsetup_r+0x20>
  408fcc:	f403 7220 	and.w	r2, r3, #640	; 0x280
  408fd0:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  408fd4:	d0e4      	beq.n	408fa0 <__swsetup_r+0x20>
  408fd6:	4628      	mov	r0, r5
  408fd8:	4621      	mov	r1, r4
  408fda:	f001 fcfb 	bl	40a9d4 <__smakebuf_r>
  408fde:	89a3      	ldrh	r3, [r4, #12]
  408fe0:	6920      	ldr	r0, [r4, #16]
  408fe2:	e7dd      	b.n	408fa0 <__swsetup_r+0x20>
  408fe4:	0799      	lsls	r1, r3, #30
  408fe6:	bf58      	it	pl
  408fe8:	6962      	ldrpl	r2, [r4, #20]
  408fea:	60a2      	str	r2, [r4, #8]
  408fec:	2800      	cmp	r0, #0
  408fee:	d1e0      	bne.n	408fb2 <__swsetup_r+0x32>
  408ff0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  408ff4:	061a      	lsls	r2, r3, #24
  408ff6:	d5dd      	bpl.n	408fb4 <__swsetup_r+0x34>
  408ff8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408ffc:	81a3      	strh	r3, [r4, #12]
  408ffe:	f04f 30ff 	mov.w	r0, #4294967295
  409002:	bd38      	pop	{r3, r4, r5, pc}
  409004:	4618      	mov	r0, r3
  409006:	f001 f8e5 	bl	40a1d4 <__sinit>
  40900a:	e7c2      	b.n	408f92 <__swsetup_r+0x12>
  40900c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40900e:	b151      	cbz	r1, 409026 <__swsetup_r+0xa6>
  409010:	f104 0340 	add.w	r3, r4, #64	; 0x40
  409014:	4299      	cmp	r1, r3
  409016:	d004      	beq.n	409022 <__swsetup_r+0xa2>
  409018:	4628      	mov	r0, r5
  40901a:	f001 fa01 	bl	40a420 <_free_r>
  40901e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  409022:	2300      	movs	r3, #0
  409024:	6323      	str	r3, [r4, #48]	; 0x30
  409026:	2300      	movs	r3, #0
  409028:	6920      	ldr	r0, [r4, #16]
  40902a:	6063      	str	r3, [r4, #4]
  40902c:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  409030:	6020      	str	r0, [r4, #0]
  409032:	e7c5      	b.n	408fc0 <__swsetup_r+0x40>
  409034:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  409038:	2309      	movs	r3, #9
  40903a:	602b      	str	r3, [r5, #0]
  40903c:	f04f 30ff 	mov.w	r0, #4294967295
  409040:	81a2      	strh	r2, [r4, #12]
  409042:	bd38      	pop	{r3, r4, r5, pc}
  409044:	20400048 	.word	0x20400048

00409048 <register_fini>:
  409048:	4b02      	ldr	r3, [pc, #8]	; (409054 <register_fini+0xc>)
  40904a:	b113      	cbz	r3, 409052 <register_fini+0xa>
  40904c:	4802      	ldr	r0, [pc, #8]	; (409058 <register_fini+0x10>)
  40904e:	f000 b805 	b.w	40905c <atexit>
  409052:	4770      	bx	lr
  409054:	00000000 	.word	0x00000000
  409058:	0040a245 	.word	0x0040a245

0040905c <atexit>:
  40905c:	2300      	movs	r3, #0
  40905e:	4601      	mov	r1, r0
  409060:	461a      	mov	r2, r3
  409062:	4618      	mov	r0, r3
  409064:	f002 beae 	b.w	40bdc4 <__register_exitproc>

00409068 <quorem>:
  409068:	6902      	ldr	r2, [r0, #16]
  40906a:	690b      	ldr	r3, [r1, #16]
  40906c:	4293      	cmp	r3, r2
  40906e:	f300 808d 	bgt.w	40918c <quorem+0x124>
  409072:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  409076:	f103 38ff 	add.w	r8, r3, #4294967295
  40907a:	f101 0714 	add.w	r7, r1, #20
  40907e:	f100 0b14 	add.w	fp, r0, #20
  409082:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  409086:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40908a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40908e:	b083      	sub	sp, #12
  409090:	3201      	adds	r2, #1
  409092:	fbb3 f9f2 	udiv	r9, r3, r2
  409096:	eb0b 0304 	add.w	r3, fp, r4
  40909a:	9400      	str	r4, [sp, #0]
  40909c:	eb07 0a04 	add.w	sl, r7, r4
  4090a0:	9301      	str	r3, [sp, #4]
  4090a2:	f1b9 0f00 	cmp.w	r9, #0
  4090a6:	d039      	beq.n	40911c <quorem+0xb4>
  4090a8:	2500      	movs	r5, #0
  4090aa:	462e      	mov	r6, r5
  4090ac:	46bc      	mov	ip, r7
  4090ae:	46de      	mov	lr, fp
  4090b0:	f85c 4b04 	ldr.w	r4, [ip], #4
  4090b4:	f8de 3000 	ldr.w	r3, [lr]
  4090b8:	b2a2      	uxth	r2, r4
  4090ba:	fb09 5502 	mla	r5, r9, r2, r5
  4090be:	0c22      	lsrs	r2, r4, #16
  4090c0:	0c2c      	lsrs	r4, r5, #16
  4090c2:	fb09 4202 	mla	r2, r9, r2, r4
  4090c6:	b2ad      	uxth	r5, r5
  4090c8:	1b75      	subs	r5, r6, r5
  4090ca:	b296      	uxth	r6, r2
  4090cc:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4090d0:	fa15 f383 	uxtah	r3, r5, r3
  4090d4:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4090d8:	b29b      	uxth	r3, r3
  4090da:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4090de:	45e2      	cmp	sl, ip
  4090e0:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4090e4:	f84e 3b04 	str.w	r3, [lr], #4
  4090e8:	ea4f 4626 	mov.w	r6, r6, asr #16
  4090ec:	d2e0      	bcs.n	4090b0 <quorem+0x48>
  4090ee:	9b00      	ldr	r3, [sp, #0]
  4090f0:	f85b 3003 	ldr.w	r3, [fp, r3]
  4090f4:	b993      	cbnz	r3, 40911c <quorem+0xb4>
  4090f6:	9c01      	ldr	r4, [sp, #4]
  4090f8:	1f23      	subs	r3, r4, #4
  4090fa:	459b      	cmp	fp, r3
  4090fc:	d20c      	bcs.n	409118 <quorem+0xb0>
  4090fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
  409102:	b94b      	cbnz	r3, 409118 <quorem+0xb0>
  409104:	f1a4 0308 	sub.w	r3, r4, #8
  409108:	e002      	b.n	409110 <quorem+0xa8>
  40910a:	681a      	ldr	r2, [r3, #0]
  40910c:	3b04      	subs	r3, #4
  40910e:	b91a      	cbnz	r2, 409118 <quorem+0xb0>
  409110:	459b      	cmp	fp, r3
  409112:	f108 38ff 	add.w	r8, r8, #4294967295
  409116:	d3f8      	bcc.n	40910a <quorem+0xa2>
  409118:	f8c0 8010 	str.w	r8, [r0, #16]
  40911c:	4604      	mov	r4, r0
  40911e:	f002 fa35 	bl	40b58c <__mcmp>
  409122:	2800      	cmp	r0, #0
  409124:	db2e      	blt.n	409184 <quorem+0x11c>
  409126:	f109 0901 	add.w	r9, r9, #1
  40912a:	465d      	mov	r5, fp
  40912c:	2300      	movs	r3, #0
  40912e:	f857 1b04 	ldr.w	r1, [r7], #4
  409132:	6828      	ldr	r0, [r5, #0]
  409134:	b28a      	uxth	r2, r1
  409136:	1a9a      	subs	r2, r3, r2
  409138:	0c0b      	lsrs	r3, r1, #16
  40913a:	fa12 f280 	uxtah	r2, r2, r0
  40913e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  409142:	eb03 4322 	add.w	r3, r3, r2, asr #16
  409146:	b292      	uxth	r2, r2
  409148:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40914c:	45ba      	cmp	sl, r7
  40914e:	f845 2b04 	str.w	r2, [r5], #4
  409152:	ea4f 4323 	mov.w	r3, r3, asr #16
  409156:	d2ea      	bcs.n	40912e <quorem+0xc6>
  409158:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40915c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  409160:	b982      	cbnz	r2, 409184 <quorem+0x11c>
  409162:	1f1a      	subs	r2, r3, #4
  409164:	4593      	cmp	fp, r2
  409166:	d20b      	bcs.n	409180 <quorem+0x118>
  409168:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40916c:	b942      	cbnz	r2, 409180 <quorem+0x118>
  40916e:	3b08      	subs	r3, #8
  409170:	e002      	b.n	409178 <quorem+0x110>
  409172:	681a      	ldr	r2, [r3, #0]
  409174:	3b04      	subs	r3, #4
  409176:	b91a      	cbnz	r2, 409180 <quorem+0x118>
  409178:	459b      	cmp	fp, r3
  40917a:	f108 38ff 	add.w	r8, r8, #4294967295
  40917e:	d3f8      	bcc.n	409172 <quorem+0x10a>
  409180:	f8c4 8010 	str.w	r8, [r4, #16]
  409184:	4648      	mov	r0, r9
  409186:	b003      	add	sp, #12
  409188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40918c:	2000      	movs	r0, #0
  40918e:	4770      	bx	lr

00409190 <_dtoa_r>:
  409190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  409194:	6c01      	ldr	r1, [r0, #64]	; 0x40
  409196:	b09b      	sub	sp, #108	; 0x6c
  409198:	4604      	mov	r4, r0
  40919a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40919c:	4692      	mov	sl, r2
  40919e:	469b      	mov	fp, r3
  4091a0:	b141      	cbz	r1, 4091b4 <_dtoa_r+0x24>
  4091a2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4091a4:	604a      	str	r2, [r1, #4]
  4091a6:	2301      	movs	r3, #1
  4091a8:	4093      	lsls	r3, r2
  4091aa:	608b      	str	r3, [r1, #8]
  4091ac:	f002 f816 	bl	40b1dc <_Bfree>
  4091b0:	2300      	movs	r3, #0
  4091b2:	6423      	str	r3, [r4, #64]	; 0x40
  4091b4:	f1bb 0f00 	cmp.w	fp, #0
  4091b8:	465d      	mov	r5, fp
  4091ba:	db35      	blt.n	409228 <_dtoa_r+0x98>
  4091bc:	2300      	movs	r3, #0
  4091be:	6033      	str	r3, [r6, #0]
  4091c0:	4b9d      	ldr	r3, [pc, #628]	; (409438 <_dtoa_r+0x2a8>)
  4091c2:	43ab      	bics	r3, r5
  4091c4:	d015      	beq.n	4091f2 <_dtoa_r+0x62>
  4091c6:	4650      	mov	r0, sl
  4091c8:	4659      	mov	r1, fp
  4091ca:	2200      	movs	r2, #0
  4091cc:	2300      	movs	r3, #0
  4091ce:	f003 fb71 	bl	40c8b4 <__aeabi_dcmpeq>
  4091d2:	4680      	mov	r8, r0
  4091d4:	2800      	cmp	r0, #0
  4091d6:	d02d      	beq.n	409234 <_dtoa_r+0xa4>
  4091d8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4091da:	2301      	movs	r3, #1
  4091dc:	6013      	str	r3, [r2, #0]
  4091de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4091e0:	2b00      	cmp	r3, #0
  4091e2:	f000 80bd 	beq.w	409360 <_dtoa_r+0x1d0>
  4091e6:	4895      	ldr	r0, [pc, #596]	; (40943c <_dtoa_r+0x2ac>)
  4091e8:	6018      	str	r0, [r3, #0]
  4091ea:	3801      	subs	r0, #1
  4091ec:	b01b      	add	sp, #108	; 0x6c
  4091ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4091f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4091f4:	f242 730f 	movw	r3, #9999	; 0x270f
  4091f8:	6013      	str	r3, [r2, #0]
  4091fa:	f1ba 0f00 	cmp.w	sl, #0
  4091fe:	d10d      	bne.n	40921c <_dtoa_r+0x8c>
  409200:	f3c5 0513 	ubfx	r5, r5, #0, #20
  409204:	b955      	cbnz	r5, 40921c <_dtoa_r+0x8c>
  409206:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  409208:	488d      	ldr	r0, [pc, #564]	; (409440 <_dtoa_r+0x2b0>)
  40920a:	2b00      	cmp	r3, #0
  40920c:	d0ee      	beq.n	4091ec <_dtoa_r+0x5c>
  40920e:	f100 0308 	add.w	r3, r0, #8
  409212:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  409214:	6013      	str	r3, [r2, #0]
  409216:	b01b      	add	sp, #108	; 0x6c
  409218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40921c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40921e:	4889      	ldr	r0, [pc, #548]	; (409444 <_dtoa_r+0x2b4>)
  409220:	2b00      	cmp	r3, #0
  409222:	d0e3      	beq.n	4091ec <_dtoa_r+0x5c>
  409224:	1cc3      	adds	r3, r0, #3
  409226:	e7f4      	b.n	409212 <_dtoa_r+0x82>
  409228:	2301      	movs	r3, #1
  40922a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40922e:	6033      	str	r3, [r6, #0]
  409230:	46ab      	mov	fp, r5
  409232:	e7c5      	b.n	4091c0 <_dtoa_r+0x30>
  409234:	aa18      	add	r2, sp, #96	; 0x60
  409236:	ab19      	add	r3, sp, #100	; 0x64
  409238:	9201      	str	r2, [sp, #4]
  40923a:	9300      	str	r3, [sp, #0]
  40923c:	4652      	mov	r2, sl
  40923e:	465b      	mov	r3, fp
  409240:	4620      	mov	r0, r4
  409242:	f002 fa43 	bl	40b6cc <__d2b>
  409246:	0d2b      	lsrs	r3, r5, #20
  409248:	4681      	mov	r9, r0
  40924a:	d071      	beq.n	409330 <_dtoa_r+0x1a0>
  40924c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  409250:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  409254:	9f18      	ldr	r7, [sp, #96]	; 0x60
  409256:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40925a:	4650      	mov	r0, sl
  40925c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  409260:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  409264:	2200      	movs	r2, #0
  409266:	4b78      	ldr	r3, [pc, #480]	; (409448 <_dtoa_r+0x2b8>)
  409268:	f002 ff08 	bl	40c07c <__aeabi_dsub>
  40926c:	a36c      	add	r3, pc, #432	; (adr r3, 409420 <_dtoa_r+0x290>)
  40926e:	e9d3 2300 	ldrd	r2, r3, [r3]
  409272:	f003 f8b7 	bl	40c3e4 <__aeabi_dmul>
  409276:	a36c      	add	r3, pc, #432	; (adr r3, 409428 <_dtoa_r+0x298>)
  409278:	e9d3 2300 	ldrd	r2, r3, [r3]
  40927c:	f002 ff00 	bl	40c080 <__adddf3>
  409280:	e9cd 0102 	strd	r0, r1, [sp, #8]
  409284:	4630      	mov	r0, r6
  409286:	f003 f847 	bl	40c318 <__aeabi_i2d>
  40928a:	a369      	add	r3, pc, #420	; (adr r3, 409430 <_dtoa_r+0x2a0>)
  40928c:	e9d3 2300 	ldrd	r2, r3, [r3]
  409290:	f003 f8a8 	bl	40c3e4 <__aeabi_dmul>
  409294:	4602      	mov	r2, r0
  409296:	460b      	mov	r3, r1
  409298:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40929c:	f002 fef0 	bl	40c080 <__adddf3>
  4092a0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4092a4:	f003 fb4e 	bl	40c944 <__aeabi_d2iz>
  4092a8:	2200      	movs	r2, #0
  4092aa:	9002      	str	r0, [sp, #8]
  4092ac:	2300      	movs	r3, #0
  4092ae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4092b2:	f003 fb09 	bl	40c8c8 <__aeabi_dcmplt>
  4092b6:	2800      	cmp	r0, #0
  4092b8:	f040 8173 	bne.w	4095a2 <_dtoa_r+0x412>
  4092bc:	9d02      	ldr	r5, [sp, #8]
  4092be:	2d16      	cmp	r5, #22
  4092c0:	f200 815d 	bhi.w	40957e <_dtoa_r+0x3ee>
  4092c4:	4b61      	ldr	r3, [pc, #388]	; (40944c <_dtoa_r+0x2bc>)
  4092c6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4092ca:	e9d3 0100 	ldrd	r0, r1, [r3]
  4092ce:	4652      	mov	r2, sl
  4092d0:	465b      	mov	r3, fp
  4092d2:	f003 fb17 	bl	40c904 <__aeabi_dcmpgt>
  4092d6:	2800      	cmp	r0, #0
  4092d8:	f000 81c5 	beq.w	409666 <_dtoa_r+0x4d6>
  4092dc:	1e6b      	subs	r3, r5, #1
  4092de:	9302      	str	r3, [sp, #8]
  4092e0:	2300      	movs	r3, #0
  4092e2:	930e      	str	r3, [sp, #56]	; 0x38
  4092e4:	1bbf      	subs	r7, r7, r6
  4092e6:	1e7b      	subs	r3, r7, #1
  4092e8:	9306      	str	r3, [sp, #24]
  4092ea:	f100 8154 	bmi.w	409596 <_dtoa_r+0x406>
  4092ee:	2300      	movs	r3, #0
  4092f0:	9308      	str	r3, [sp, #32]
  4092f2:	9b02      	ldr	r3, [sp, #8]
  4092f4:	2b00      	cmp	r3, #0
  4092f6:	f2c0 8145 	blt.w	409584 <_dtoa_r+0x3f4>
  4092fa:	9a06      	ldr	r2, [sp, #24]
  4092fc:	930d      	str	r3, [sp, #52]	; 0x34
  4092fe:	4611      	mov	r1, r2
  409300:	4419      	add	r1, r3
  409302:	2300      	movs	r3, #0
  409304:	9106      	str	r1, [sp, #24]
  409306:	930c      	str	r3, [sp, #48]	; 0x30
  409308:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40930a:	2b09      	cmp	r3, #9
  40930c:	d82a      	bhi.n	409364 <_dtoa_r+0x1d4>
  40930e:	2b05      	cmp	r3, #5
  409310:	f340 865b 	ble.w	409fca <_dtoa_r+0xe3a>
  409314:	3b04      	subs	r3, #4
  409316:	9324      	str	r3, [sp, #144]	; 0x90
  409318:	2500      	movs	r5, #0
  40931a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40931c:	3b02      	subs	r3, #2
  40931e:	2b03      	cmp	r3, #3
  409320:	f200 8642 	bhi.w	409fa8 <_dtoa_r+0xe18>
  409324:	e8df f013 	tbh	[pc, r3, lsl #1]
  409328:	02c903d4 	.word	0x02c903d4
  40932c:	046103df 	.word	0x046103df
  409330:	9f18      	ldr	r7, [sp, #96]	; 0x60
  409332:	9e19      	ldr	r6, [sp, #100]	; 0x64
  409334:	443e      	add	r6, r7
  409336:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40933a:	2b20      	cmp	r3, #32
  40933c:	f340 818e 	ble.w	40965c <_dtoa_r+0x4cc>
  409340:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  409344:	f206 4012 	addw	r0, r6, #1042	; 0x412
  409348:	409d      	lsls	r5, r3
  40934a:	fa2a f000 	lsr.w	r0, sl, r0
  40934e:	4328      	orrs	r0, r5
  409350:	f002 ffd2 	bl	40c2f8 <__aeabi_ui2d>
  409354:	2301      	movs	r3, #1
  409356:	3e01      	subs	r6, #1
  409358:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40935c:	9314      	str	r3, [sp, #80]	; 0x50
  40935e:	e781      	b.n	409264 <_dtoa_r+0xd4>
  409360:	483b      	ldr	r0, [pc, #236]	; (409450 <_dtoa_r+0x2c0>)
  409362:	e743      	b.n	4091ec <_dtoa_r+0x5c>
  409364:	2100      	movs	r1, #0
  409366:	6461      	str	r1, [r4, #68]	; 0x44
  409368:	4620      	mov	r0, r4
  40936a:	9125      	str	r1, [sp, #148]	; 0x94
  40936c:	f001 ff10 	bl	40b190 <_Balloc>
  409370:	f04f 33ff 	mov.w	r3, #4294967295
  409374:	930a      	str	r3, [sp, #40]	; 0x28
  409376:	9a25      	ldr	r2, [sp, #148]	; 0x94
  409378:	930f      	str	r3, [sp, #60]	; 0x3c
  40937a:	2301      	movs	r3, #1
  40937c:	9004      	str	r0, [sp, #16]
  40937e:	6420      	str	r0, [r4, #64]	; 0x40
  409380:	9224      	str	r2, [sp, #144]	; 0x90
  409382:	930b      	str	r3, [sp, #44]	; 0x2c
  409384:	9b19      	ldr	r3, [sp, #100]	; 0x64
  409386:	2b00      	cmp	r3, #0
  409388:	f2c0 80d9 	blt.w	40953e <_dtoa_r+0x3ae>
  40938c:	9a02      	ldr	r2, [sp, #8]
  40938e:	2a0e      	cmp	r2, #14
  409390:	f300 80d5 	bgt.w	40953e <_dtoa_r+0x3ae>
  409394:	4b2d      	ldr	r3, [pc, #180]	; (40944c <_dtoa_r+0x2bc>)
  409396:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40939a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40939e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4093a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4093a4:	2b00      	cmp	r3, #0
  4093a6:	f2c0 83ba 	blt.w	409b1e <_dtoa_r+0x98e>
  4093aa:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4093ae:	4650      	mov	r0, sl
  4093b0:	462a      	mov	r2, r5
  4093b2:	4633      	mov	r3, r6
  4093b4:	4659      	mov	r1, fp
  4093b6:	f003 f93f 	bl	40c638 <__aeabi_ddiv>
  4093ba:	f003 fac3 	bl	40c944 <__aeabi_d2iz>
  4093be:	4680      	mov	r8, r0
  4093c0:	f002 ffaa 	bl	40c318 <__aeabi_i2d>
  4093c4:	462a      	mov	r2, r5
  4093c6:	4633      	mov	r3, r6
  4093c8:	f003 f80c 	bl	40c3e4 <__aeabi_dmul>
  4093cc:	460b      	mov	r3, r1
  4093ce:	4602      	mov	r2, r0
  4093d0:	4659      	mov	r1, fp
  4093d2:	4650      	mov	r0, sl
  4093d4:	f002 fe52 	bl	40c07c <__aeabi_dsub>
  4093d8:	9d04      	ldr	r5, [sp, #16]
  4093da:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4093de:	702b      	strb	r3, [r5, #0]
  4093e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4093e2:	2b01      	cmp	r3, #1
  4093e4:	4606      	mov	r6, r0
  4093e6:	460f      	mov	r7, r1
  4093e8:	f105 0501 	add.w	r5, r5, #1
  4093ec:	d068      	beq.n	4094c0 <_dtoa_r+0x330>
  4093ee:	2200      	movs	r2, #0
  4093f0:	4b18      	ldr	r3, [pc, #96]	; (409454 <_dtoa_r+0x2c4>)
  4093f2:	f002 fff7 	bl	40c3e4 <__aeabi_dmul>
  4093f6:	2200      	movs	r2, #0
  4093f8:	2300      	movs	r3, #0
  4093fa:	4606      	mov	r6, r0
  4093fc:	460f      	mov	r7, r1
  4093fe:	f003 fa59 	bl	40c8b4 <__aeabi_dcmpeq>
  409402:	2800      	cmp	r0, #0
  409404:	f040 8088 	bne.w	409518 <_dtoa_r+0x388>
  409408:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40940c:	f04f 0a00 	mov.w	sl, #0
  409410:	f8df b040 	ldr.w	fp, [pc, #64]	; 409454 <_dtoa_r+0x2c4>
  409414:	940c      	str	r4, [sp, #48]	; 0x30
  409416:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40941a:	e028      	b.n	40946e <_dtoa_r+0x2de>
  40941c:	f3af 8000 	nop.w
  409420:	636f4361 	.word	0x636f4361
  409424:	3fd287a7 	.word	0x3fd287a7
  409428:	8b60c8b3 	.word	0x8b60c8b3
  40942c:	3fc68a28 	.word	0x3fc68a28
  409430:	509f79fb 	.word	0x509f79fb
  409434:	3fd34413 	.word	0x3fd34413
  409438:	7ff00000 	.word	0x7ff00000
  40943c:	0040dd09 	.word	0x0040dd09
  409440:	0040dd4c 	.word	0x0040dd4c
  409444:	0040dd58 	.word	0x0040dd58
  409448:	3ff80000 	.word	0x3ff80000
  40944c:	0040dd98 	.word	0x0040dd98
  409450:	0040dd08 	.word	0x0040dd08
  409454:	40240000 	.word	0x40240000
  409458:	f002 ffc4 	bl	40c3e4 <__aeabi_dmul>
  40945c:	2200      	movs	r2, #0
  40945e:	2300      	movs	r3, #0
  409460:	4606      	mov	r6, r0
  409462:	460f      	mov	r7, r1
  409464:	f003 fa26 	bl	40c8b4 <__aeabi_dcmpeq>
  409468:	2800      	cmp	r0, #0
  40946a:	f040 83c1 	bne.w	409bf0 <_dtoa_r+0xa60>
  40946e:	4642      	mov	r2, r8
  409470:	464b      	mov	r3, r9
  409472:	4630      	mov	r0, r6
  409474:	4639      	mov	r1, r7
  409476:	f003 f8df 	bl	40c638 <__aeabi_ddiv>
  40947a:	f003 fa63 	bl	40c944 <__aeabi_d2iz>
  40947e:	4604      	mov	r4, r0
  409480:	f002 ff4a 	bl	40c318 <__aeabi_i2d>
  409484:	4642      	mov	r2, r8
  409486:	464b      	mov	r3, r9
  409488:	f002 ffac 	bl	40c3e4 <__aeabi_dmul>
  40948c:	4602      	mov	r2, r0
  40948e:	460b      	mov	r3, r1
  409490:	4630      	mov	r0, r6
  409492:	4639      	mov	r1, r7
  409494:	f002 fdf2 	bl	40c07c <__aeabi_dsub>
  409498:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40949c:	9e04      	ldr	r6, [sp, #16]
  40949e:	f805 eb01 	strb.w	lr, [r5], #1
  4094a2:	eba5 0e06 	sub.w	lr, r5, r6
  4094a6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4094a8:	45b6      	cmp	lr, r6
  4094aa:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4094ae:	4652      	mov	r2, sl
  4094b0:	465b      	mov	r3, fp
  4094b2:	d1d1      	bne.n	409458 <_dtoa_r+0x2c8>
  4094b4:	46a0      	mov	r8, r4
  4094b6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4094ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4094bc:	4606      	mov	r6, r0
  4094be:	460f      	mov	r7, r1
  4094c0:	4632      	mov	r2, r6
  4094c2:	463b      	mov	r3, r7
  4094c4:	4630      	mov	r0, r6
  4094c6:	4639      	mov	r1, r7
  4094c8:	f002 fdda 	bl	40c080 <__adddf3>
  4094cc:	4606      	mov	r6, r0
  4094ce:	460f      	mov	r7, r1
  4094d0:	4602      	mov	r2, r0
  4094d2:	460b      	mov	r3, r1
  4094d4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4094d8:	f003 f9f6 	bl	40c8c8 <__aeabi_dcmplt>
  4094dc:	b948      	cbnz	r0, 4094f2 <_dtoa_r+0x362>
  4094de:	4632      	mov	r2, r6
  4094e0:	463b      	mov	r3, r7
  4094e2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4094e6:	f003 f9e5 	bl	40c8b4 <__aeabi_dcmpeq>
  4094ea:	b1a8      	cbz	r0, 409518 <_dtoa_r+0x388>
  4094ec:	f018 0f01 	tst.w	r8, #1
  4094f0:	d012      	beq.n	409518 <_dtoa_r+0x388>
  4094f2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4094f6:	9a04      	ldr	r2, [sp, #16]
  4094f8:	1e6b      	subs	r3, r5, #1
  4094fa:	e004      	b.n	409506 <_dtoa_r+0x376>
  4094fc:	429a      	cmp	r2, r3
  4094fe:	f000 8401 	beq.w	409d04 <_dtoa_r+0xb74>
  409502:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  409506:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40950a:	f103 0501 	add.w	r5, r3, #1
  40950e:	d0f5      	beq.n	4094fc <_dtoa_r+0x36c>
  409510:	f108 0801 	add.w	r8, r8, #1
  409514:	f883 8000 	strb.w	r8, [r3]
  409518:	4649      	mov	r1, r9
  40951a:	4620      	mov	r0, r4
  40951c:	f001 fe5e 	bl	40b1dc <_Bfree>
  409520:	2200      	movs	r2, #0
  409522:	9b02      	ldr	r3, [sp, #8]
  409524:	702a      	strb	r2, [r5, #0]
  409526:	9a26      	ldr	r2, [sp, #152]	; 0x98
  409528:	3301      	adds	r3, #1
  40952a:	6013      	str	r3, [r2, #0]
  40952c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40952e:	2b00      	cmp	r3, #0
  409530:	f000 839e 	beq.w	409c70 <_dtoa_r+0xae0>
  409534:	9804      	ldr	r0, [sp, #16]
  409536:	601d      	str	r5, [r3, #0]
  409538:	b01b      	add	sp, #108	; 0x6c
  40953a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40953e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  409540:	2a00      	cmp	r2, #0
  409542:	d03e      	beq.n	4095c2 <_dtoa_r+0x432>
  409544:	9a24      	ldr	r2, [sp, #144]	; 0x90
  409546:	2a01      	cmp	r2, #1
  409548:	f340 8311 	ble.w	409b6e <_dtoa_r+0x9de>
  40954c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40954e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  409550:	1e5f      	subs	r7, r3, #1
  409552:	42ba      	cmp	r2, r7
  409554:	f2c0 838f 	blt.w	409c76 <_dtoa_r+0xae6>
  409558:	1bd7      	subs	r7, r2, r7
  40955a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40955c:	2b00      	cmp	r3, #0
  40955e:	f2c0 848b 	blt.w	409e78 <_dtoa_r+0xce8>
  409562:	9d08      	ldr	r5, [sp, #32]
  409564:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409566:	9a08      	ldr	r2, [sp, #32]
  409568:	441a      	add	r2, r3
  40956a:	9208      	str	r2, [sp, #32]
  40956c:	9a06      	ldr	r2, [sp, #24]
  40956e:	2101      	movs	r1, #1
  409570:	441a      	add	r2, r3
  409572:	4620      	mov	r0, r4
  409574:	9206      	str	r2, [sp, #24]
  409576:	f001 fecb 	bl	40b310 <__i2b>
  40957a:	4606      	mov	r6, r0
  40957c:	e024      	b.n	4095c8 <_dtoa_r+0x438>
  40957e:	2301      	movs	r3, #1
  409580:	930e      	str	r3, [sp, #56]	; 0x38
  409582:	e6af      	b.n	4092e4 <_dtoa_r+0x154>
  409584:	9a08      	ldr	r2, [sp, #32]
  409586:	9b02      	ldr	r3, [sp, #8]
  409588:	1ad2      	subs	r2, r2, r3
  40958a:	425b      	negs	r3, r3
  40958c:	930c      	str	r3, [sp, #48]	; 0x30
  40958e:	2300      	movs	r3, #0
  409590:	9208      	str	r2, [sp, #32]
  409592:	930d      	str	r3, [sp, #52]	; 0x34
  409594:	e6b8      	b.n	409308 <_dtoa_r+0x178>
  409596:	f1c7 0301 	rsb	r3, r7, #1
  40959a:	9308      	str	r3, [sp, #32]
  40959c:	2300      	movs	r3, #0
  40959e:	9306      	str	r3, [sp, #24]
  4095a0:	e6a7      	b.n	4092f2 <_dtoa_r+0x162>
  4095a2:	9d02      	ldr	r5, [sp, #8]
  4095a4:	4628      	mov	r0, r5
  4095a6:	f002 feb7 	bl	40c318 <__aeabi_i2d>
  4095aa:	4602      	mov	r2, r0
  4095ac:	460b      	mov	r3, r1
  4095ae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4095b2:	f003 f97f 	bl	40c8b4 <__aeabi_dcmpeq>
  4095b6:	2800      	cmp	r0, #0
  4095b8:	f47f ae80 	bne.w	4092bc <_dtoa_r+0x12c>
  4095bc:	1e6b      	subs	r3, r5, #1
  4095be:	9302      	str	r3, [sp, #8]
  4095c0:	e67c      	b.n	4092bc <_dtoa_r+0x12c>
  4095c2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4095c4:	9d08      	ldr	r5, [sp, #32]
  4095c6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4095c8:	2d00      	cmp	r5, #0
  4095ca:	dd0c      	ble.n	4095e6 <_dtoa_r+0x456>
  4095cc:	9906      	ldr	r1, [sp, #24]
  4095ce:	2900      	cmp	r1, #0
  4095d0:	460b      	mov	r3, r1
  4095d2:	dd08      	ble.n	4095e6 <_dtoa_r+0x456>
  4095d4:	42a9      	cmp	r1, r5
  4095d6:	9a08      	ldr	r2, [sp, #32]
  4095d8:	bfa8      	it	ge
  4095da:	462b      	movge	r3, r5
  4095dc:	1ad2      	subs	r2, r2, r3
  4095de:	1aed      	subs	r5, r5, r3
  4095e0:	1acb      	subs	r3, r1, r3
  4095e2:	9208      	str	r2, [sp, #32]
  4095e4:	9306      	str	r3, [sp, #24]
  4095e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4095e8:	b1d3      	cbz	r3, 409620 <_dtoa_r+0x490>
  4095ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4095ec:	2b00      	cmp	r3, #0
  4095ee:	f000 82b7 	beq.w	409b60 <_dtoa_r+0x9d0>
  4095f2:	2f00      	cmp	r7, #0
  4095f4:	dd10      	ble.n	409618 <_dtoa_r+0x488>
  4095f6:	4631      	mov	r1, r6
  4095f8:	463a      	mov	r2, r7
  4095fa:	4620      	mov	r0, r4
  4095fc:	f001 ff24 	bl	40b448 <__pow5mult>
  409600:	464a      	mov	r2, r9
  409602:	4601      	mov	r1, r0
  409604:	4606      	mov	r6, r0
  409606:	4620      	mov	r0, r4
  409608:	f001 fe8c 	bl	40b324 <__multiply>
  40960c:	4649      	mov	r1, r9
  40960e:	4680      	mov	r8, r0
  409610:	4620      	mov	r0, r4
  409612:	f001 fde3 	bl	40b1dc <_Bfree>
  409616:	46c1      	mov	r9, r8
  409618:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40961a:	1bda      	subs	r2, r3, r7
  40961c:	f040 82a1 	bne.w	409b62 <_dtoa_r+0x9d2>
  409620:	2101      	movs	r1, #1
  409622:	4620      	mov	r0, r4
  409624:	f001 fe74 	bl	40b310 <__i2b>
  409628:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40962a:	2b00      	cmp	r3, #0
  40962c:	4680      	mov	r8, r0
  40962e:	dd1c      	ble.n	40966a <_dtoa_r+0x4da>
  409630:	4601      	mov	r1, r0
  409632:	461a      	mov	r2, r3
  409634:	4620      	mov	r0, r4
  409636:	f001 ff07 	bl	40b448 <__pow5mult>
  40963a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40963c:	2b01      	cmp	r3, #1
  40963e:	4680      	mov	r8, r0
  409640:	f340 8254 	ble.w	409aec <_dtoa_r+0x95c>
  409644:	2300      	movs	r3, #0
  409646:	930c      	str	r3, [sp, #48]	; 0x30
  409648:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40964c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  409650:	6918      	ldr	r0, [r3, #16]
  409652:	f001 fe0d 	bl	40b270 <__hi0bits>
  409656:	f1c0 0020 	rsb	r0, r0, #32
  40965a:	e010      	b.n	40967e <_dtoa_r+0x4ee>
  40965c:	f1c3 0520 	rsb	r5, r3, #32
  409660:	fa0a f005 	lsl.w	r0, sl, r5
  409664:	e674      	b.n	409350 <_dtoa_r+0x1c0>
  409666:	900e      	str	r0, [sp, #56]	; 0x38
  409668:	e63c      	b.n	4092e4 <_dtoa_r+0x154>
  40966a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40966c:	2b01      	cmp	r3, #1
  40966e:	f340 8287 	ble.w	409b80 <_dtoa_r+0x9f0>
  409672:	2300      	movs	r3, #0
  409674:	930c      	str	r3, [sp, #48]	; 0x30
  409676:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  409678:	2001      	movs	r0, #1
  40967a:	2b00      	cmp	r3, #0
  40967c:	d1e4      	bne.n	409648 <_dtoa_r+0x4b8>
  40967e:	9a06      	ldr	r2, [sp, #24]
  409680:	4410      	add	r0, r2
  409682:	f010 001f 	ands.w	r0, r0, #31
  409686:	f000 80a1 	beq.w	4097cc <_dtoa_r+0x63c>
  40968a:	f1c0 0320 	rsb	r3, r0, #32
  40968e:	2b04      	cmp	r3, #4
  409690:	f340 849e 	ble.w	409fd0 <_dtoa_r+0xe40>
  409694:	9b08      	ldr	r3, [sp, #32]
  409696:	f1c0 001c 	rsb	r0, r0, #28
  40969a:	4403      	add	r3, r0
  40969c:	9308      	str	r3, [sp, #32]
  40969e:	4613      	mov	r3, r2
  4096a0:	4403      	add	r3, r0
  4096a2:	4405      	add	r5, r0
  4096a4:	9306      	str	r3, [sp, #24]
  4096a6:	9b08      	ldr	r3, [sp, #32]
  4096a8:	2b00      	cmp	r3, #0
  4096aa:	dd05      	ble.n	4096b8 <_dtoa_r+0x528>
  4096ac:	4649      	mov	r1, r9
  4096ae:	461a      	mov	r2, r3
  4096b0:	4620      	mov	r0, r4
  4096b2:	f001 ff19 	bl	40b4e8 <__lshift>
  4096b6:	4681      	mov	r9, r0
  4096b8:	9b06      	ldr	r3, [sp, #24]
  4096ba:	2b00      	cmp	r3, #0
  4096bc:	dd05      	ble.n	4096ca <_dtoa_r+0x53a>
  4096be:	4641      	mov	r1, r8
  4096c0:	461a      	mov	r2, r3
  4096c2:	4620      	mov	r0, r4
  4096c4:	f001 ff10 	bl	40b4e8 <__lshift>
  4096c8:	4680      	mov	r8, r0
  4096ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4096cc:	2b00      	cmp	r3, #0
  4096ce:	f040 8086 	bne.w	4097de <_dtoa_r+0x64e>
  4096d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4096d4:	2b00      	cmp	r3, #0
  4096d6:	f340 8266 	ble.w	409ba6 <_dtoa_r+0xa16>
  4096da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4096dc:	2b00      	cmp	r3, #0
  4096de:	f000 8098 	beq.w	409812 <_dtoa_r+0x682>
  4096e2:	2d00      	cmp	r5, #0
  4096e4:	dd05      	ble.n	4096f2 <_dtoa_r+0x562>
  4096e6:	4631      	mov	r1, r6
  4096e8:	462a      	mov	r2, r5
  4096ea:	4620      	mov	r0, r4
  4096ec:	f001 fefc 	bl	40b4e8 <__lshift>
  4096f0:	4606      	mov	r6, r0
  4096f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4096f4:	2b00      	cmp	r3, #0
  4096f6:	f040 8337 	bne.w	409d68 <_dtoa_r+0xbd8>
  4096fa:	9606      	str	r6, [sp, #24]
  4096fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4096fe:	9a04      	ldr	r2, [sp, #16]
  409700:	f8dd b018 	ldr.w	fp, [sp, #24]
  409704:	3b01      	subs	r3, #1
  409706:	18d3      	adds	r3, r2, r3
  409708:	930b      	str	r3, [sp, #44]	; 0x2c
  40970a:	f00a 0301 	and.w	r3, sl, #1
  40970e:	930c      	str	r3, [sp, #48]	; 0x30
  409710:	4617      	mov	r7, r2
  409712:	46c2      	mov	sl, r8
  409714:	4651      	mov	r1, sl
  409716:	4648      	mov	r0, r9
  409718:	f7ff fca6 	bl	409068 <quorem>
  40971c:	4631      	mov	r1, r6
  40971e:	4605      	mov	r5, r0
  409720:	4648      	mov	r0, r9
  409722:	f001 ff33 	bl	40b58c <__mcmp>
  409726:	465a      	mov	r2, fp
  409728:	900a      	str	r0, [sp, #40]	; 0x28
  40972a:	4651      	mov	r1, sl
  40972c:	4620      	mov	r0, r4
  40972e:	f001 ff49 	bl	40b5c4 <__mdiff>
  409732:	68c2      	ldr	r2, [r0, #12]
  409734:	4680      	mov	r8, r0
  409736:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40973a:	2a00      	cmp	r2, #0
  40973c:	f040 822b 	bne.w	409b96 <_dtoa_r+0xa06>
  409740:	4601      	mov	r1, r0
  409742:	4648      	mov	r0, r9
  409744:	9308      	str	r3, [sp, #32]
  409746:	f001 ff21 	bl	40b58c <__mcmp>
  40974a:	4641      	mov	r1, r8
  40974c:	9006      	str	r0, [sp, #24]
  40974e:	4620      	mov	r0, r4
  409750:	f001 fd44 	bl	40b1dc <_Bfree>
  409754:	9a06      	ldr	r2, [sp, #24]
  409756:	9b08      	ldr	r3, [sp, #32]
  409758:	b932      	cbnz	r2, 409768 <_dtoa_r+0x5d8>
  40975a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40975c:	b921      	cbnz	r1, 409768 <_dtoa_r+0x5d8>
  40975e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  409760:	2a00      	cmp	r2, #0
  409762:	f000 83ef 	beq.w	409f44 <_dtoa_r+0xdb4>
  409766:	9a24      	ldr	r2, [sp, #144]	; 0x90
  409768:	990a      	ldr	r1, [sp, #40]	; 0x28
  40976a:	2900      	cmp	r1, #0
  40976c:	f2c0 829f 	blt.w	409cae <_dtoa_r+0xb1e>
  409770:	d105      	bne.n	40977e <_dtoa_r+0x5ee>
  409772:	9924      	ldr	r1, [sp, #144]	; 0x90
  409774:	b919      	cbnz	r1, 40977e <_dtoa_r+0x5ee>
  409776:	990c      	ldr	r1, [sp, #48]	; 0x30
  409778:	2900      	cmp	r1, #0
  40977a:	f000 8298 	beq.w	409cae <_dtoa_r+0xb1e>
  40977e:	2a00      	cmp	r2, #0
  409780:	f300 8306 	bgt.w	409d90 <_dtoa_r+0xc00>
  409784:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  409786:	703b      	strb	r3, [r7, #0]
  409788:	f107 0801 	add.w	r8, r7, #1
  40978c:	4297      	cmp	r7, r2
  40978e:	4645      	mov	r5, r8
  409790:	f000 830c 	beq.w	409dac <_dtoa_r+0xc1c>
  409794:	4649      	mov	r1, r9
  409796:	2300      	movs	r3, #0
  409798:	220a      	movs	r2, #10
  40979a:	4620      	mov	r0, r4
  40979c:	f001 fd28 	bl	40b1f0 <__multadd>
  4097a0:	455e      	cmp	r6, fp
  4097a2:	4681      	mov	r9, r0
  4097a4:	4631      	mov	r1, r6
  4097a6:	f04f 0300 	mov.w	r3, #0
  4097aa:	f04f 020a 	mov.w	r2, #10
  4097ae:	4620      	mov	r0, r4
  4097b0:	f000 81eb 	beq.w	409b8a <_dtoa_r+0x9fa>
  4097b4:	f001 fd1c 	bl	40b1f0 <__multadd>
  4097b8:	4659      	mov	r1, fp
  4097ba:	4606      	mov	r6, r0
  4097bc:	2300      	movs	r3, #0
  4097be:	220a      	movs	r2, #10
  4097c0:	4620      	mov	r0, r4
  4097c2:	f001 fd15 	bl	40b1f0 <__multadd>
  4097c6:	4647      	mov	r7, r8
  4097c8:	4683      	mov	fp, r0
  4097ca:	e7a3      	b.n	409714 <_dtoa_r+0x584>
  4097cc:	201c      	movs	r0, #28
  4097ce:	9b08      	ldr	r3, [sp, #32]
  4097d0:	4403      	add	r3, r0
  4097d2:	9308      	str	r3, [sp, #32]
  4097d4:	9b06      	ldr	r3, [sp, #24]
  4097d6:	4403      	add	r3, r0
  4097d8:	4405      	add	r5, r0
  4097da:	9306      	str	r3, [sp, #24]
  4097dc:	e763      	b.n	4096a6 <_dtoa_r+0x516>
  4097de:	4641      	mov	r1, r8
  4097e0:	4648      	mov	r0, r9
  4097e2:	f001 fed3 	bl	40b58c <__mcmp>
  4097e6:	2800      	cmp	r0, #0
  4097e8:	f6bf af73 	bge.w	4096d2 <_dtoa_r+0x542>
  4097ec:	9f02      	ldr	r7, [sp, #8]
  4097ee:	4649      	mov	r1, r9
  4097f0:	2300      	movs	r3, #0
  4097f2:	220a      	movs	r2, #10
  4097f4:	4620      	mov	r0, r4
  4097f6:	3f01      	subs	r7, #1
  4097f8:	9702      	str	r7, [sp, #8]
  4097fa:	f001 fcf9 	bl	40b1f0 <__multadd>
  4097fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  409800:	4681      	mov	r9, r0
  409802:	2b00      	cmp	r3, #0
  409804:	f040 83b6 	bne.w	409f74 <_dtoa_r+0xde4>
  409808:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40980a:	2b00      	cmp	r3, #0
  40980c:	f340 83bf 	ble.w	409f8e <_dtoa_r+0xdfe>
  409810:	930a      	str	r3, [sp, #40]	; 0x28
  409812:	f8dd b010 	ldr.w	fp, [sp, #16]
  409816:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  409818:	465d      	mov	r5, fp
  40981a:	e002      	b.n	409822 <_dtoa_r+0x692>
  40981c:	f001 fce8 	bl	40b1f0 <__multadd>
  409820:	4681      	mov	r9, r0
  409822:	4641      	mov	r1, r8
  409824:	4648      	mov	r0, r9
  409826:	f7ff fc1f 	bl	409068 <quorem>
  40982a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40982e:	f805 ab01 	strb.w	sl, [r5], #1
  409832:	eba5 030b 	sub.w	r3, r5, fp
  409836:	42bb      	cmp	r3, r7
  409838:	f04f 020a 	mov.w	r2, #10
  40983c:	f04f 0300 	mov.w	r3, #0
  409840:	4649      	mov	r1, r9
  409842:	4620      	mov	r0, r4
  409844:	dbea      	blt.n	40981c <_dtoa_r+0x68c>
  409846:	9b04      	ldr	r3, [sp, #16]
  409848:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40984a:	2a01      	cmp	r2, #1
  40984c:	bfac      	ite	ge
  40984e:	189b      	addge	r3, r3, r2
  409850:	3301      	addlt	r3, #1
  409852:	461d      	mov	r5, r3
  409854:	f04f 0b00 	mov.w	fp, #0
  409858:	4649      	mov	r1, r9
  40985a:	2201      	movs	r2, #1
  40985c:	4620      	mov	r0, r4
  40985e:	f001 fe43 	bl	40b4e8 <__lshift>
  409862:	4641      	mov	r1, r8
  409864:	4681      	mov	r9, r0
  409866:	f001 fe91 	bl	40b58c <__mcmp>
  40986a:	2800      	cmp	r0, #0
  40986c:	f340 823d 	ble.w	409cea <_dtoa_r+0xb5a>
  409870:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  409874:	9904      	ldr	r1, [sp, #16]
  409876:	1e6b      	subs	r3, r5, #1
  409878:	e004      	b.n	409884 <_dtoa_r+0x6f4>
  40987a:	428b      	cmp	r3, r1
  40987c:	f000 81ae 	beq.w	409bdc <_dtoa_r+0xa4c>
  409880:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  409884:	2a39      	cmp	r2, #57	; 0x39
  409886:	f103 0501 	add.w	r5, r3, #1
  40988a:	d0f6      	beq.n	40987a <_dtoa_r+0x6ea>
  40988c:	3201      	adds	r2, #1
  40988e:	701a      	strb	r2, [r3, #0]
  409890:	4641      	mov	r1, r8
  409892:	4620      	mov	r0, r4
  409894:	f001 fca2 	bl	40b1dc <_Bfree>
  409898:	2e00      	cmp	r6, #0
  40989a:	f43f ae3d 	beq.w	409518 <_dtoa_r+0x388>
  40989e:	f1bb 0f00 	cmp.w	fp, #0
  4098a2:	d005      	beq.n	4098b0 <_dtoa_r+0x720>
  4098a4:	45b3      	cmp	fp, r6
  4098a6:	d003      	beq.n	4098b0 <_dtoa_r+0x720>
  4098a8:	4659      	mov	r1, fp
  4098aa:	4620      	mov	r0, r4
  4098ac:	f001 fc96 	bl	40b1dc <_Bfree>
  4098b0:	4631      	mov	r1, r6
  4098b2:	4620      	mov	r0, r4
  4098b4:	f001 fc92 	bl	40b1dc <_Bfree>
  4098b8:	e62e      	b.n	409518 <_dtoa_r+0x388>
  4098ba:	2300      	movs	r3, #0
  4098bc:	930b      	str	r3, [sp, #44]	; 0x2c
  4098be:	9b02      	ldr	r3, [sp, #8]
  4098c0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4098c2:	4413      	add	r3, r2
  4098c4:	930f      	str	r3, [sp, #60]	; 0x3c
  4098c6:	3301      	adds	r3, #1
  4098c8:	2b01      	cmp	r3, #1
  4098ca:	461f      	mov	r7, r3
  4098cc:	461e      	mov	r6, r3
  4098ce:	930a      	str	r3, [sp, #40]	; 0x28
  4098d0:	bfb8      	it	lt
  4098d2:	2701      	movlt	r7, #1
  4098d4:	2100      	movs	r1, #0
  4098d6:	2f17      	cmp	r7, #23
  4098d8:	6461      	str	r1, [r4, #68]	; 0x44
  4098da:	d90a      	bls.n	4098f2 <_dtoa_r+0x762>
  4098dc:	2201      	movs	r2, #1
  4098de:	2304      	movs	r3, #4
  4098e0:	005b      	lsls	r3, r3, #1
  4098e2:	f103 0014 	add.w	r0, r3, #20
  4098e6:	4287      	cmp	r7, r0
  4098e8:	4611      	mov	r1, r2
  4098ea:	f102 0201 	add.w	r2, r2, #1
  4098ee:	d2f7      	bcs.n	4098e0 <_dtoa_r+0x750>
  4098f0:	6461      	str	r1, [r4, #68]	; 0x44
  4098f2:	4620      	mov	r0, r4
  4098f4:	f001 fc4c 	bl	40b190 <_Balloc>
  4098f8:	2e0e      	cmp	r6, #14
  4098fa:	9004      	str	r0, [sp, #16]
  4098fc:	6420      	str	r0, [r4, #64]	; 0x40
  4098fe:	f63f ad41 	bhi.w	409384 <_dtoa_r+0x1f4>
  409902:	2d00      	cmp	r5, #0
  409904:	f43f ad3e 	beq.w	409384 <_dtoa_r+0x1f4>
  409908:	9902      	ldr	r1, [sp, #8]
  40990a:	2900      	cmp	r1, #0
  40990c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  409910:	f340 8202 	ble.w	409d18 <_dtoa_r+0xb88>
  409914:	4bb8      	ldr	r3, [pc, #736]	; (409bf8 <_dtoa_r+0xa68>)
  409916:	f001 020f 	and.w	r2, r1, #15
  40991a:	110d      	asrs	r5, r1, #4
  40991c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  409920:	06e9      	lsls	r1, r5, #27
  409922:	e9d3 6700 	ldrd	r6, r7, [r3]
  409926:	f140 81ae 	bpl.w	409c86 <_dtoa_r+0xaf6>
  40992a:	4bb4      	ldr	r3, [pc, #720]	; (409bfc <_dtoa_r+0xa6c>)
  40992c:	4650      	mov	r0, sl
  40992e:	4659      	mov	r1, fp
  409930:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  409934:	f002 fe80 	bl	40c638 <__aeabi_ddiv>
  409938:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40993c:	f005 050f 	and.w	r5, r5, #15
  409940:	f04f 0a03 	mov.w	sl, #3
  409944:	b18d      	cbz	r5, 40996a <_dtoa_r+0x7da>
  409946:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 409bfc <_dtoa_r+0xa6c>
  40994a:	07ea      	lsls	r2, r5, #31
  40994c:	d509      	bpl.n	409962 <_dtoa_r+0x7d2>
  40994e:	4630      	mov	r0, r6
  409950:	4639      	mov	r1, r7
  409952:	e9d8 2300 	ldrd	r2, r3, [r8]
  409956:	f002 fd45 	bl	40c3e4 <__aeabi_dmul>
  40995a:	f10a 0a01 	add.w	sl, sl, #1
  40995e:	4606      	mov	r6, r0
  409960:	460f      	mov	r7, r1
  409962:	106d      	asrs	r5, r5, #1
  409964:	f108 0808 	add.w	r8, r8, #8
  409968:	d1ef      	bne.n	40994a <_dtoa_r+0x7ba>
  40996a:	463b      	mov	r3, r7
  40996c:	4632      	mov	r2, r6
  40996e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  409972:	f002 fe61 	bl	40c638 <__aeabi_ddiv>
  409976:	4607      	mov	r7, r0
  409978:	4688      	mov	r8, r1
  40997a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40997c:	b143      	cbz	r3, 409990 <_dtoa_r+0x800>
  40997e:	2200      	movs	r2, #0
  409980:	4b9f      	ldr	r3, [pc, #636]	; (409c00 <_dtoa_r+0xa70>)
  409982:	4638      	mov	r0, r7
  409984:	4641      	mov	r1, r8
  409986:	f002 ff9f 	bl	40c8c8 <__aeabi_dcmplt>
  40998a:	2800      	cmp	r0, #0
  40998c:	f040 8286 	bne.w	409e9c <_dtoa_r+0xd0c>
  409990:	4650      	mov	r0, sl
  409992:	f002 fcc1 	bl	40c318 <__aeabi_i2d>
  409996:	463a      	mov	r2, r7
  409998:	4643      	mov	r3, r8
  40999a:	f002 fd23 	bl	40c3e4 <__aeabi_dmul>
  40999e:	4b99      	ldr	r3, [pc, #612]	; (409c04 <_dtoa_r+0xa74>)
  4099a0:	2200      	movs	r2, #0
  4099a2:	f002 fb6d 	bl	40c080 <__adddf3>
  4099a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4099a8:	4605      	mov	r5, r0
  4099aa:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4099ae:	2b00      	cmp	r3, #0
  4099b0:	f000 813e 	beq.w	409c30 <_dtoa_r+0xaa0>
  4099b4:	9b02      	ldr	r3, [sp, #8]
  4099b6:	9315      	str	r3, [sp, #84]	; 0x54
  4099b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4099ba:	9312      	str	r3, [sp, #72]	; 0x48
  4099bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4099be:	2b00      	cmp	r3, #0
  4099c0:	f000 81fa 	beq.w	409db8 <_dtoa_r+0xc28>
  4099c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4099c6:	4b8c      	ldr	r3, [pc, #560]	; (409bf8 <_dtoa_r+0xa68>)
  4099c8:	498f      	ldr	r1, [pc, #572]	; (409c08 <_dtoa_r+0xa78>)
  4099ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4099ce:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4099d2:	2000      	movs	r0, #0
  4099d4:	f002 fe30 	bl	40c638 <__aeabi_ddiv>
  4099d8:	462a      	mov	r2, r5
  4099da:	4633      	mov	r3, r6
  4099dc:	f002 fb4e 	bl	40c07c <__aeabi_dsub>
  4099e0:	4682      	mov	sl, r0
  4099e2:	468b      	mov	fp, r1
  4099e4:	4638      	mov	r0, r7
  4099e6:	4641      	mov	r1, r8
  4099e8:	f002 ffac 	bl	40c944 <__aeabi_d2iz>
  4099ec:	4605      	mov	r5, r0
  4099ee:	f002 fc93 	bl	40c318 <__aeabi_i2d>
  4099f2:	4602      	mov	r2, r0
  4099f4:	460b      	mov	r3, r1
  4099f6:	4638      	mov	r0, r7
  4099f8:	4641      	mov	r1, r8
  4099fa:	f002 fb3f 	bl	40c07c <__aeabi_dsub>
  4099fe:	3530      	adds	r5, #48	; 0x30
  409a00:	fa5f f885 	uxtb.w	r8, r5
  409a04:	9d04      	ldr	r5, [sp, #16]
  409a06:	4606      	mov	r6, r0
  409a08:	460f      	mov	r7, r1
  409a0a:	f885 8000 	strb.w	r8, [r5]
  409a0e:	4602      	mov	r2, r0
  409a10:	460b      	mov	r3, r1
  409a12:	4650      	mov	r0, sl
  409a14:	4659      	mov	r1, fp
  409a16:	3501      	adds	r5, #1
  409a18:	f002 ff74 	bl	40c904 <__aeabi_dcmpgt>
  409a1c:	2800      	cmp	r0, #0
  409a1e:	d154      	bne.n	409aca <_dtoa_r+0x93a>
  409a20:	4632      	mov	r2, r6
  409a22:	463b      	mov	r3, r7
  409a24:	2000      	movs	r0, #0
  409a26:	4976      	ldr	r1, [pc, #472]	; (409c00 <_dtoa_r+0xa70>)
  409a28:	f002 fb28 	bl	40c07c <__aeabi_dsub>
  409a2c:	4602      	mov	r2, r0
  409a2e:	460b      	mov	r3, r1
  409a30:	4650      	mov	r0, sl
  409a32:	4659      	mov	r1, fp
  409a34:	f002 ff66 	bl	40c904 <__aeabi_dcmpgt>
  409a38:	2800      	cmp	r0, #0
  409a3a:	f040 8270 	bne.w	409f1e <_dtoa_r+0xd8e>
  409a3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  409a40:	2a01      	cmp	r2, #1
  409a42:	f000 8111 	beq.w	409c68 <_dtoa_r+0xad8>
  409a46:	9b12      	ldr	r3, [sp, #72]	; 0x48
  409a48:	9a04      	ldr	r2, [sp, #16]
  409a4a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  409a4e:	4413      	add	r3, r2
  409a50:	4699      	mov	r9, r3
  409a52:	e00d      	b.n	409a70 <_dtoa_r+0x8e0>
  409a54:	2000      	movs	r0, #0
  409a56:	496a      	ldr	r1, [pc, #424]	; (409c00 <_dtoa_r+0xa70>)
  409a58:	f002 fb10 	bl	40c07c <__aeabi_dsub>
  409a5c:	4652      	mov	r2, sl
  409a5e:	465b      	mov	r3, fp
  409a60:	f002 ff32 	bl	40c8c8 <__aeabi_dcmplt>
  409a64:	2800      	cmp	r0, #0
  409a66:	f040 8258 	bne.w	409f1a <_dtoa_r+0xd8a>
  409a6a:	454d      	cmp	r5, r9
  409a6c:	f000 80fa 	beq.w	409c64 <_dtoa_r+0xad4>
  409a70:	4650      	mov	r0, sl
  409a72:	4659      	mov	r1, fp
  409a74:	2200      	movs	r2, #0
  409a76:	4b65      	ldr	r3, [pc, #404]	; (409c0c <_dtoa_r+0xa7c>)
  409a78:	f002 fcb4 	bl	40c3e4 <__aeabi_dmul>
  409a7c:	2200      	movs	r2, #0
  409a7e:	4b63      	ldr	r3, [pc, #396]	; (409c0c <_dtoa_r+0xa7c>)
  409a80:	4682      	mov	sl, r0
  409a82:	468b      	mov	fp, r1
  409a84:	4630      	mov	r0, r6
  409a86:	4639      	mov	r1, r7
  409a88:	f002 fcac 	bl	40c3e4 <__aeabi_dmul>
  409a8c:	460f      	mov	r7, r1
  409a8e:	4606      	mov	r6, r0
  409a90:	f002 ff58 	bl	40c944 <__aeabi_d2iz>
  409a94:	4680      	mov	r8, r0
  409a96:	f002 fc3f 	bl	40c318 <__aeabi_i2d>
  409a9a:	4602      	mov	r2, r0
  409a9c:	460b      	mov	r3, r1
  409a9e:	4630      	mov	r0, r6
  409aa0:	4639      	mov	r1, r7
  409aa2:	f002 faeb 	bl	40c07c <__aeabi_dsub>
  409aa6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  409aaa:	fa5f f888 	uxtb.w	r8, r8
  409aae:	4652      	mov	r2, sl
  409ab0:	465b      	mov	r3, fp
  409ab2:	f805 8b01 	strb.w	r8, [r5], #1
  409ab6:	4606      	mov	r6, r0
  409ab8:	460f      	mov	r7, r1
  409aba:	f002 ff05 	bl	40c8c8 <__aeabi_dcmplt>
  409abe:	4632      	mov	r2, r6
  409ac0:	463b      	mov	r3, r7
  409ac2:	2800      	cmp	r0, #0
  409ac4:	d0c6      	beq.n	409a54 <_dtoa_r+0x8c4>
  409ac6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  409aca:	9b15      	ldr	r3, [sp, #84]	; 0x54
  409acc:	9302      	str	r3, [sp, #8]
  409ace:	e523      	b.n	409518 <_dtoa_r+0x388>
  409ad0:	2300      	movs	r3, #0
  409ad2:	930b      	str	r3, [sp, #44]	; 0x2c
  409ad4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  409ad6:	2b00      	cmp	r3, #0
  409ad8:	f340 80dc 	ble.w	409c94 <_dtoa_r+0xb04>
  409adc:	461f      	mov	r7, r3
  409ade:	461e      	mov	r6, r3
  409ae0:	930f      	str	r3, [sp, #60]	; 0x3c
  409ae2:	930a      	str	r3, [sp, #40]	; 0x28
  409ae4:	e6f6      	b.n	4098d4 <_dtoa_r+0x744>
  409ae6:	2301      	movs	r3, #1
  409ae8:	930b      	str	r3, [sp, #44]	; 0x2c
  409aea:	e7f3      	b.n	409ad4 <_dtoa_r+0x944>
  409aec:	f1ba 0f00 	cmp.w	sl, #0
  409af0:	f47f ada8 	bne.w	409644 <_dtoa_r+0x4b4>
  409af4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  409af8:	2b00      	cmp	r3, #0
  409afa:	f47f adba 	bne.w	409672 <_dtoa_r+0x4e2>
  409afe:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  409b02:	0d3f      	lsrs	r7, r7, #20
  409b04:	053f      	lsls	r7, r7, #20
  409b06:	2f00      	cmp	r7, #0
  409b08:	f000 820d 	beq.w	409f26 <_dtoa_r+0xd96>
  409b0c:	9b08      	ldr	r3, [sp, #32]
  409b0e:	3301      	adds	r3, #1
  409b10:	9308      	str	r3, [sp, #32]
  409b12:	9b06      	ldr	r3, [sp, #24]
  409b14:	3301      	adds	r3, #1
  409b16:	9306      	str	r3, [sp, #24]
  409b18:	2301      	movs	r3, #1
  409b1a:	930c      	str	r3, [sp, #48]	; 0x30
  409b1c:	e5ab      	b.n	409676 <_dtoa_r+0x4e6>
  409b1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409b20:	2b00      	cmp	r3, #0
  409b22:	f73f ac42 	bgt.w	4093aa <_dtoa_r+0x21a>
  409b26:	f040 8221 	bne.w	409f6c <_dtoa_r+0xddc>
  409b2a:	2200      	movs	r2, #0
  409b2c:	4b38      	ldr	r3, [pc, #224]	; (409c10 <_dtoa_r+0xa80>)
  409b2e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  409b32:	f002 fc57 	bl	40c3e4 <__aeabi_dmul>
  409b36:	4652      	mov	r2, sl
  409b38:	465b      	mov	r3, fp
  409b3a:	f002 fed9 	bl	40c8f0 <__aeabi_dcmpge>
  409b3e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  409b42:	4646      	mov	r6, r8
  409b44:	2800      	cmp	r0, #0
  409b46:	d041      	beq.n	409bcc <_dtoa_r+0xa3c>
  409b48:	9b25      	ldr	r3, [sp, #148]	; 0x94
  409b4a:	9d04      	ldr	r5, [sp, #16]
  409b4c:	43db      	mvns	r3, r3
  409b4e:	9302      	str	r3, [sp, #8]
  409b50:	4641      	mov	r1, r8
  409b52:	4620      	mov	r0, r4
  409b54:	f001 fb42 	bl	40b1dc <_Bfree>
  409b58:	2e00      	cmp	r6, #0
  409b5a:	f43f acdd 	beq.w	409518 <_dtoa_r+0x388>
  409b5e:	e6a7      	b.n	4098b0 <_dtoa_r+0x720>
  409b60:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  409b62:	4649      	mov	r1, r9
  409b64:	4620      	mov	r0, r4
  409b66:	f001 fc6f 	bl	40b448 <__pow5mult>
  409b6a:	4681      	mov	r9, r0
  409b6c:	e558      	b.n	409620 <_dtoa_r+0x490>
  409b6e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  409b70:	2a00      	cmp	r2, #0
  409b72:	f000 8187 	beq.w	409e84 <_dtoa_r+0xcf4>
  409b76:	f203 4333 	addw	r3, r3, #1075	; 0x433
  409b7a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  409b7c:	9d08      	ldr	r5, [sp, #32]
  409b7e:	e4f2      	b.n	409566 <_dtoa_r+0x3d6>
  409b80:	f1ba 0f00 	cmp.w	sl, #0
  409b84:	f47f ad75 	bne.w	409672 <_dtoa_r+0x4e2>
  409b88:	e7b4      	b.n	409af4 <_dtoa_r+0x964>
  409b8a:	f001 fb31 	bl	40b1f0 <__multadd>
  409b8e:	4647      	mov	r7, r8
  409b90:	4606      	mov	r6, r0
  409b92:	4683      	mov	fp, r0
  409b94:	e5be      	b.n	409714 <_dtoa_r+0x584>
  409b96:	4601      	mov	r1, r0
  409b98:	4620      	mov	r0, r4
  409b9a:	9306      	str	r3, [sp, #24]
  409b9c:	f001 fb1e 	bl	40b1dc <_Bfree>
  409ba0:	2201      	movs	r2, #1
  409ba2:	9b06      	ldr	r3, [sp, #24]
  409ba4:	e5e0      	b.n	409768 <_dtoa_r+0x5d8>
  409ba6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  409ba8:	2b02      	cmp	r3, #2
  409baa:	f77f ad96 	ble.w	4096da <_dtoa_r+0x54a>
  409bae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409bb0:	2b00      	cmp	r3, #0
  409bb2:	d1c9      	bne.n	409b48 <_dtoa_r+0x9b8>
  409bb4:	4641      	mov	r1, r8
  409bb6:	2205      	movs	r2, #5
  409bb8:	4620      	mov	r0, r4
  409bba:	f001 fb19 	bl	40b1f0 <__multadd>
  409bbe:	4601      	mov	r1, r0
  409bc0:	4680      	mov	r8, r0
  409bc2:	4648      	mov	r0, r9
  409bc4:	f001 fce2 	bl	40b58c <__mcmp>
  409bc8:	2800      	cmp	r0, #0
  409bca:	ddbd      	ble.n	409b48 <_dtoa_r+0x9b8>
  409bcc:	9a02      	ldr	r2, [sp, #8]
  409bce:	9904      	ldr	r1, [sp, #16]
  409bd0:	2331      	movs	r3, #49	; 0x31
  409bd2:	3201      	adds	r2, #1
  409bd4:	9202      	str	r2, [sp, #8]
  409bd6:	700b      	strb	r3, [r1, #0]
  409bd8:	1c4d      	adds	r5, r1, #1
  409bda:	e7b9      	b.n	409b50 <_dtoa_r+0x9c0>
  409bdc:	9a02      	ldr	r2, [sp, #8]
  409bde:	3201      	adds	r2, #1
  409be0:	9202      	str	r2, [sp, #8]
  409be2:	9a04      	ldr	r2, [sp, #16]
  409be4:	2331      	movs	r3, #49	; 0x31
  409be6:	7013      	strb	r3, [r2, #0]
  409be8:	e652      	b.n	409890 <_dtoa_r+0x700>
  409bea:	2301      	movs	r3, #1
  409bec:	930b      	str	r3, [sp, #44]	; 0x2c
  409bee:	e666      	b.n	4098be <_dtoa_r+0x72e>
  409bf0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  409bf4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  409bf6:	e48f      	b.n	409518 <_dtoa_r+0x388>
  409bf8:	0040dd98 	.word	0x0040dd98
  409bfc:	0040dd70 	.word	0x0040dd70
  409c00:	3ff00000 	.word	0x3ff00000
  409c04:	401c0000 	.word	0x401c0000
  409c08:	3fe00000 	.word	0x3fe00000
  409c0c:	40240000 	.word	0x40240000
  409c10:	40140000 	.word	0x40140000
  409c14:	4650      	mov	r0, sl
  409c16:	f002 fb7f 	bl	40c318 <__aeabi_i2d>
  409c1a:	463a      	mov	r2, r7
  409c1c:	4643      	mov	r3, r8
  409c1e:	f002 fbe1 	bl	40c3e4 <__aeabi_dmul>
  409c22:	2200      	movs	r2, #0
  409c24:	4bc1      	ldr	r3, [pc, #772]	; (409f2c <_dtoa_r+0xd9c>)
  409c26:	f002 fa2b 	bl	40c080 <__adddf3>
  409c2a:	4605      	mov	r5, r0
  409c2c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  409c30:	4641      	mov	r1, r8
  409c32:	2200      	movs	r2, #0
  409c34:	4bbe      	ldr	r3, [pc, #760]	; (409f30 <_dtoa_r+0xda0>)
  409c36:	4638      	mov	r0, r7
  409c38:	f002 fa20 	bl	40c07c <__aeabi_dsub>
  409c3c:	462a      	mov	r2, r5
  409c3e:	4633      	mov	r3, r6
  409c40:	4682      	mov	sl, r0
  409c42:	468b      	mov	fp, r1
  409c44:	f002 fe5e 	bl	40c904 <__aeabi_dcmpgt>
  409c48:	4680      	mov	r8, r0
  409c4a:	2800      	cmp	r0, #0
  409c4c:	f040 8110 	bne.w	409e70 <_dtoa_r+0xce0>
  409c50:	462a      	mov	r2, r5
  409c52:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  409c56:	4650      	mov	r0, sl
  409c58:	4659      	mov	r1, fp
  409c5a:	f002 fe35 	bl	40c8c8 <__aeabi_dcmplt>
  409c5e:	b118      	cbz	r0, 409c68 <_dtoa_r+0xad8>
  409c60:	4646      	mov	r6, r8
  409c62:	e771      	b.n	409b48 <_dtoa_r+0x9b8>
  409c64:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  409c68:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  409c6c:	f7ff bb8a 	b.w	409384 <_dtoa_r+0x1f4>
  409c70:	9804      	ldr	r0, [sp, #16]
  409c72:	f7ff babb 	b.w	4091ec <_dtoa_r+0x5c>
  409c76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  409c78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  409c7a:	970c      	str	r7, [sp, #48]	; 0x30
  409c7c:	1afb      	subs	r3, r7, r3
  409c7e:	441a      	add	r2, r3
  409c80:	920d      	str	r2, [sp, #52]	; 0x34
  409c82:	2700      	movs	r7, #0
  409c84:	e469      	b.n	40955a <_dtoa_r+0x3ca>
  409c86:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  409c8a:	f04f 0a02 	mov.w	sl, #2
  409c8e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  409c92:	e657      	b.n	409944 <_dtoa_r+0x7b4>
  409c94:	2100      	movs	r1, #0
  409c96:	2301      	movs	r3, #1
  409c98:	6461      	str	r1, [r4, #68]	; 0x44
  409c9a:	4620      	mov	r0, r4
  409c9c:	9325      	str	r3, [sp, #148]	; 0x94
  409c9e:	f001 fa77 	bl	40b190 <_Balloc>
  409ca2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  409ca4:	9004      	str	r0, [sp, #16]
  409ca6:	6420      	str	r0, [r4, #64]	; 0x40
  409ca8:	930a      	str	r3, [sp, #40]	; 0x28
  409caa:	930f      	str	r3, [sp, #60]	; 0x3c
  409cac:	e629      	b.n	409902 <_dtoa_r+0x772>
  409cae:	2a00      	cmp	r2, #0
  409cb0:	46d0      	mov	r8, sl
  409cb2:	f8cd b018 	str.w	fp, [sp, #24]
  409cb6:	469a      	mov	sl, r3
  409cb8:	dd11      	ble.n	409cde <_dtoa_r+0xb4e>
  409cba:	4649      	mov	r1, r9
  409cbc:	2201      	movs	r2, #1
  409cbe:	4620      	mov	r0, r4
  409cc0:	f001 fc12 	bl	40b4e8 <__lshift>
  409cc4:	4641      	mov	r1, r8
  409cc6:	4681      	mov	r9, r0
  409cc8:	f001 fc60 	bl	40b58c <__mcmp>
  409ccc:	2800      	cmp	r0, #0
  409cce:	f340 8146 	ble.w	409f5e <_dtoa_r+0xdce>
  409cd2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  409cd6:	f000 8106 	beq.w	409ee6 <_dtoa_r+0xd56>
  409cda:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  409cde:	46b3      	mov	fp, r6
  409ce0:	f887 a000 	strb.w	sl, [r7]
  409ce4:	1c7d      	adds	r5, r7, #1
  409ce6:	9e06      	ldr	r6, [sp, #24]
  409ce8:	e5d2      	b.n	409890 <_dtoa_r+0x700>
  409cea:	d104      	bne.n	409cf6 <_dtoa_r+0xb66>
  409cec:	f01a 0f01 	tst.w	sl, #1
  409cf0:	d001      	beq.n	409cf6 <_dtoa_r+0xb66>
  409cf2:	e5bd      	b.n	409870 <_dtoa_r+0x6e0>
  409cf4:	4615      	mov	r5, r2
  409cf6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  409cfa:	2b30      	cmp	r3, #48	; 0x30
  409cfc:	f105 32ff 	add.w	r2, r5, #4294967295
  409d00:	d0f8      	beq.n	409cf4 <_dtoa_r+0xb64>
  409d02:	e5c5      	b.n	409890 <_dtoa_r+0x700>
  409d04:	9904      	ldr	r1, [sp, #16]
  409d06:	2230      	movs	r2, #48	; 0x30
  409d08:	700a      	strb	r2, [r1, #0]
  409d0a:	9a02      	ldr	r2, [sp, #8]
  409d0c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  409d10:	3201      	adds	r2, #1
  409d12:	9202      	str	r2, [sp, #8]
  409d14:	f7ff bbfc 	b.w	409510 <_dtoa_r+0x380>
  409d18:	f000 80bb 	beq.w	409e92 <_dtoa_r+0xd02>
  409d1c:	9b02      	ldr	r3, [sp, #8]
  409d1e:	425d      	negs	r5, r3
  409d20:	4b84      	ldr	r3, [pc, #528]	; (409f34 <_dtoa_r+0xda4>)
  409d22:	f005 020f 	and.w	r2, r5, #15
  409d26:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  409d2a:	e9d3 2300 	ldrd	r2, r3, [r3]
  409d2e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  409d32:	f002 fb57 	bl	40c3e4 <__aeabi_dmul>
  409d36:	112d      	asrs	r5, r5, #4
  409d38:	4607      	mov	r7, r0
  409d3a:	4688      	mov	r8, r1
  409d3c:	f000 812c 	beq.w	409f98 <_dtoa_r+0xe08>
  409d40:	4e7d      	ldr	r6, [pc, #500]	; (409f38 <_dtoa_r+0xda8>)
  409d42:	f04f 0a02 	mov.w	sl, #2
  409d46:	07eb      	lsls	r3, r5, #31
  409d48:	d509      	bpl.n	409d5e <_dtoa_r+0xbce>
  409d4a:	4638      	mov	r0, r7
  409d4c:	4641      	mov	r1, r8
  409d4e:	e9d6 2300 	ldrd	r2, r3, [r6]
  409d52:	f002 fb47 	bl	40c3e4 <__aeabi_dmul>
  409d56:	f10a 0a01 	add.w	sl, sl, #1
  409d5a:	4607      	mov	r7, r0
  409d5c:	4688      	mov	r8, r1
  409d5e:	106d      	asrs	r5, r5, #1
  409d60:	f106 0608 	add.w	r6, r6, #8
  409d64:	d1ef      	bne.n	409d46 <_dtoa_r+0xbb6>
  409d66:	e608      	b.n	40997a <_dtoa_r+0x7ea>
  409d68:	6871      	ldr	r1, [r6, #4]
  409d6a:	4620      	mov	r0, r4
  409d6c:	f001 fa10 	bl	40b190 <_Balloc>
  409d70:	6933      	ldr	r3, [r6, #16]
  409d72:	3302      	adds	r3, #2
  409d74:	009a      	lsls	r2, r3, #2
  409d76:	4605      	mov	r5, r0
  409d78:	f106 010c 	add.w	r1, r6, #12
  409d7c:	300c      	adds	r0, #12
  409d7e:	f7fc fcc7 	bl	406710 <memcpy>
  409d82:	4629      	mov	r1, r5
  409d84:	2201      	movs	r2, #1
  409d86:	4620      	mov	r0, r4
  409d88:	f001 fbae 	bl	40b4e8 <__lshift>
  409d8c:	9006      	str	r0, [sp, #24]
  409d8e:	e4b5      	b.n	4096fc <_dtoa_r+0x56c>
  409d90:	2b39      	cmp	r3, #57	; 0x39
  409d92:	f8cd b018 	str.w	fp, [sp, #24]
  409d96:	46d0      	mov	r8, sl
  409d98:	f000 80a5 	beq.w	409ee6 <_dtoa_r+0xd56>
  409d9c:	f103 0a01 	add.w	sl, r3, #1
  409da0:	46b3      	mov	fp, r6
  409da2:	f887 a000 	strb.w	sl, [r7]
  409da6:	1c7d      	adds	r5, r7, #1
  409da8:	9e06      	ldr	r6, [sp, #24]
  409daa:	e571      	b.n	409890 <_dtoa_r+0x700>
  409dac:	465a      	mov	r2, fp
  409dae:	46d0      	mov	r8, sl
  409db0:	46b3      	mov	fp, r6
  409db2:	469a      	mov	sl, r3
  409db4:	4616      	mov	r6, r2
  409db6:	e54f      	b.n	409858 <_dtoa_r+0x6c8>
  409db8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  409dba:	495e      	ldr	r1, [pc, #376]	; (409f34 <_dtoa_r+0xda4>)
  409dbc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  409dc0:	462a      	mov	r2, r5
  409dc2:	4633      	mov	r3, r6
  409dc4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  409dc8:	f002 fb0c 	bl	40c3e4 <__aeabi_dmul>
  409dcc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  409dd0:	4638      	mov	r0, r7
  409dd2:	4641      	mov	r1, r8
  409dd4:	f002 fdb6 	bl	40c944 <__aeabi_d2iz>
  409dd8:	4605      	mov	r5, r0
  409dda:	f002 fa9d 	bl	40c318 <__aeabi_i2d>
  409dde:	460b      	mov	r3, r1
  409de0:	4602      	mov	r2, r0
  409de2:	4641      	mov	r1, r8
  409de4:	4638      	mov	r0, r7
  409de6:	f002 f949 	bl	40c07c <__aeabi_dsub>
  409dea:	9b12      	ldr	r3, [sp, #72]	; 0x48
  409dec:	460f      	mov	r7, r1
  409dee:	9904      	ldr	r1, [sp, #16]
  409df0:	3530      	adds	r5, #48	; 0x30
  409df2:	2b01      	cmp	r3, #1
  409df4:	700d      	strb	r5, [r1, #0]
  409df6:	4606      	mov	r6, r0
  409df8:	f101 0501 	add.w	r5, r1, #1
  409dfc:	d026      	beq.n	409e4c <_dtoa_r+0xcbc>
  409dfe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  409e00:	9a04      	ldr	r2, [sp, #16]
  409e02:	f8df b13c 	ldr.w	fp, [pc, #316]	; 409f40 <_dtoa_r+0xdb0>
  409e06:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  409e0a:	4413      	add	r3, r2
  409e0c:	f04f 0a00 	mov.w	sl, #0
  409e10:	4699      	mov	r9, r3
  409e12:	4652      	mov	r2, sl
  409e14:	465b      	mov	r3, fp
  409e16:	4630      	mov	r0, r6
  409e18:	4639      	mov	r1, r7
  409e1a:	f002 fae3 	bl	40c3e4 <__aeabi_dmul>
  409e1e:	460f      	mov	r7, r1
  409e20:	4606      	mov	r6, r0
  409e22:	f002 fd8f 	bl	40c944 <__aeabi_d2iz>
  409e26:	4680      	mov	r8, r0
  409e28:	f002 fa76 	bl	40c318 <__aeabi_i2d>
  409e2c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  409e30:	4602      	mov	r2, r0
  409e32:	460b      	mov	r3, r1
  409e34:	4630      	mov	r0, r6
  409e36:	4639      	mov	r1, r7
  409e38:	f002 f920 	bl	40c07c <__aeabi_dsub>
  409e3c:	f805 8b01 	strb.w	r8, [r5], #1
  409e40:	454d      	cmp	r5, r9
  409e42:	4606      	mov	r6, r0
  409e44:	460f      	mov	r7, r1
  409e46:	d1e4      	bne.n	409e12 <_dtoa_r+0xc82>
  409e48:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  409e4c:	4b3b      	ldr	r3, [pc, #236]	; (409f3c <_dtoa_r+0xdac>)
  409e4e:	2200      	movs	r2, #0
  409e50:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  409e54:	f002 f914 	bl	40c080 <__adddf3>
  409e58:	4632      	mov	r2, r6
  409e5a:	463b      	mov	r3, r7
  409e5c:	f002 fd34 	bl	40c8c8 <__aeabi_dcmplt>
  409e60:	2800      	cmp	r0, #0
  409e62:	d046      	beq.n	409ef2 <_dtoa_r+0xd62>
  409e64:	9b15      	ldr	r3, [sp, #84]	; 0x54
  409e66:	9302      	str	r3, [sp, #8]
  409e68:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  409e6c:	f7ff bb43 	b.w	4094f6 <_dtoa_r+0x366>
  409e70:	f04f 0800 	mov.w	r8, #0
  409e74:	4646      	mov	r6, r8
  409e76:	e6a9      	b.n	409bcc <_dtoa_r+0xa3c>
  409e78:	9b08      	ldr	r3, [sp, #32]
  409e7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  409e7c:	1a9d      	subs	r5, r3, r2
  409e7e:	2300      	movs	r3, #0
  409e80:	f7ff bb71 	b.w	409566 <_dtoa_r+0x3d6>
  409e84:	9b18      	ldr	r3, [sp, #96]	; 0x60
  409e86:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  409e88:	9d08      	ldr	r5, [sp, #32]
  409e8a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  409e8e:	f7ff bb6a 	b.w	409566 <_dtoa_r+0x3d6>
  409e92:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  409e96:	f04f 0a02 	mov.w	sl, #2
  409e9a:	e56e      	b.n	40997a <_dtoa_r+0x7ea>
  409e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  409e9e:	2b00      	cmp	r3, #0
  409ea0:	f43f aeb8 	beq.w	409c14 <_dtoa_r+0xa84>
  409ea4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  409ea6:	2b00      	cmp	r3, #0
  409ea8:	f77f aede 	ble.w	409c68 <_dtoa_r+0xad8>
  409eac:	2200      	movs	r2, #0
  409eae:	4b24      	ldr	r3, [pc, #144]	; (409f40 <_dtoa_r+0xdb0>)
  409eb0:	4638      	mov	r0, r7
  409eb2:	4641      	mov	r1, r8
  409eb4:	f002 fa96 	bl	40c3e4 <__aeabi_dmul>
  409eb8:	4607      	mov	r7, r0
  409eba:	4688      	mov	r8, r1
  409ebc:	f10a 0001 	add.w	r0, sl, #1
  409ec0:	f002 fa2a 	bl	40c318 <__aeabi_i2d>
  409ec4:	463a      	mov	r2, r7
  409ec6:	4643      	mov	r3, r8
  409ec8:	f002 fa8c 	bl	40c3e4 <__aeabi_dmul>
  409ecc:	2200      	movs	r2, #0
  409ece:	4b17      	ldr	r3, [pc, #92]	; (409f2c <_dtoa_r+0xd9c>)
  409ed0:	f002 f8d6 	bl	40c080 <__adddf3>
  409ed4:	9a02      	ldr	r2, [sp, #8]
  409ed6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  409ed8:	9312      	str	r3, [sp, #72]	; 0x48
  409eda:	3a01      	subs	r2, #1
  409edc:	4605      	mov	r5, r0
  409ede:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  409ee2:	9215      	str	r2, [sp, #84]	; 0x54
  409ee4:	e56a      	b.n	4099bc <_dtoa_r+0x82c>
  409ee6:	2239      	movs	r2, #57	; 0x39
  409ee8:	46b3      	mov	fp, r6
  409eea:	703a      	strb	r2, [r7, #0]
  409eec:	9e06      	ldr	r6, [sp, #24]
  409eee:	1c7d      	adds	r5, r7, #1
  409ef0:	e4c0      	b.n	409874 <_dtoa_r+0x6e4>
  409ef2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  409ef6:	2000      	movs	r0, #0
  409ef8:	4910      	ldr	r1, [pc, #64]	; (409f3c <_dtoa_r+0xdac>)
  409efa:	f002 f8bf 	bl	40c07c <__aeabi_dsub>
  409efe:	4632      	mov	r2, r6
  409f00:	463b      	mov	r3, r7
  409f02:	f002 fcff 	bl	40c904 <__aeabi_dcmpgt>
  409f06:	b908      	cbnz	r0, 409f0c <_dtoa_r+0xd7c>
  409f08:	e6ae      	b.n	409c68 <_dtoa_r+0xad8>
  409f0a:	4615      	mov	r5, r2
  409f0c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  409f10:	2b30      	cmp	r3, #48	; 0x30
  409f12:	f105 32ff 	add.w	r2, r5, #4294967295
  409f16:	d0f8      	beq.n	409f0a <_dtoa_r+0xd7a>
  409f18:	e5d7      	b.n	409aca <_dtoa_r+0x93a>
  409f1a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  409f1e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  409f20:	9302      	str	r3, [sp, #8]
  409f22:	f7ff bae8 	b.w	4094f6 <_dtoa_r+0x366>
  409f26:	970c      	str	r7, [sp, #48]	; 0x30
  409f28:	f7ff bba5 	b.w	409676 <_dtoa_r+0x4e6>
  409f2c:	401c0000 	.word	0x401c0000
  409f30:	40140000 	.word	0x40140000
  409f34:	0040dd98 	.word	0x0040dd98
  409f38:	0040dd70 	.word	0x0040dd70
  409f3c:	3fe00000 	.word	0x3fe00000
  409f40:	40240000 	.word	0x40240000
  409f44:	2b39      	cmp	r3, #57	; 0x39
  409f46:	f8cd b018 	str.w	fp, [sp, #24]
  409f4a:	46d0      	mov	r8, sl
  409f4c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  409f50:	469a      	mov	sl, r3
  409f52:	d0c8      	beq.n	409ee6 <_dtoa_r+0xd56>
  409f54:	f1bb 0f00 	cmp.w	fp, #0
  409f58:	f73f aebf 	bgt.w	409cda <_dtoa_r+0xb4a>
  409f5c:	e6bf      	b.n	409cde <_dtoa_r+0xb4e>
  409f5e:	f47f aebe 	bne.w	409cde <_dtoa_r+0xb4e>
  409f62:	f01a 0f01 	tst.w	sl, #1
  409f66:	f43f aeba 	beq.w	409cde <_dtoa_r+0xb4e>
  409f6a:	e6b2      	b.n	409cd2 <_dtoa_r+0xb42>
  409f6c:	f04f 0800 	mov.w	r8, #0
  409f70:	4646      	mov	r6, r8
  409f72:	e5e9      	b.n	409b48 <_dtoa_r+0x9b8>
  409f74:	4631      	mov	r1, r6
  409f76:	2300      	movs	r3, #0
  409f78:	220a      	movs	r2, #10
  409f7a:	4620      	mov	r0, r4
  409f7c:	f001 f938 	bl	40b1f0 <__multadd>
  409f80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  409f82:	2b00      	cmp	r3, #0
  409f84:	4606      	mov	r6, r0
  409f86:	dd0a      	ble.n	409f9e <_dtoa_r+0xe0e>
  409f88:	930a      	str	r3, [sp, #40]	; 0x28
  409f8a:	f7ff bbaa 	b.w	4096e2 <_dtoa_r+0x552>
  409f8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  409f90:	2b02      	cmp	r3, #2
  409f92:	dc23      	bgt.n	409fdc <_dtoa_r+0xe4c>
  409f94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  409f96:	e43b      	b.n	409810 <_dtoa_r+0x680>
  409f98:	f04f 0a02 	mov.w	sl, #2
  409f9c:	e4ed      	b.n	40997a <_dtoa_r+0x7ea>
  409f9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  409fa0:	2b02      	cmp	r3, #2
  409fa2:	dc1b      	bgt.n	409fdc <_dtoa_r+0xe4c>
  409fa4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  409fa6:	e7ef      	b.n	409f88 <_dtoa_r+0xdf8>
  409fa8:	2500      	movs	r5, #0
  409faa:	6465      	str	r5, [r4, #68]	; 0x44
  409fac:	4629      	mov	r1, r5
  409fae:	4620      	mov	r0, r4
  409fb0:	f001 f8ee 	bl	40b190 <_Balloc>
  409fb4:	f04f 33ff 	mov.w	r3, #4294967295
  409fb8:	930a      	str	r3, [sp, #40]	; 0x28
  409fba:	930f      	str	r3, [sp, #60]	; 0x3c
  409fbc:	2301      	movs	r3, #1
  409fbe:	9004      	str	r0, [sp, #16]
  409fc0:	9525      	str	r5, [sp, #148]	; 0x94
  409fc2:	6420      	str	r0, [r4, #64]	; 0x40
  409fc4:	930b      	str	r3, [sp, #44]	; 0x2c
  409fc6:	f7ff b9dd 	b.w	409384 <_dtoa_r+0x1f4>
  409fca:	2501      	movs	r5, #1
  409fcc:	f7ff b9a5 	b.w	40931a <_dtoa_r+0x18a>
  409fd0:	f43f ab69 	beq.w	4096a6 <_dtoa_r+0x516>
  409fd4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  409fd8:	f7ff bbf9 	b.w	4097ce <_dtoa_r+0x63e>
  409fdc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  409fde:	930a      	str	r3, [sp, #40]	; 0x28
  409fe0:	e5e5      	b.n	409bae <_dtoa_r+0xa1e>
  409fe2:	bf00      	nop

00409fe4 <__sflush_r>:
  409fe4:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  409fe8:	b29a      	uxth	r2, r3
  409fea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  409fee:	460d      	mov	r5, r1
  409ff0:	0711      	lsls	r1, r2, #28
  409ff2:	4680      	mov	r8, r0
  409ff4:	d43a      	bmi.n	40a06c <__sflush_r+0x88>
  409ff6:	686a      	ldr	r2, [r5, #4]
  409ff8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  409ffc:	2a00      	cmp	r2, #0
  409ffe:	81ab      	strh	r3, [r5, #12]
  40a000:	dd6f      	ble.n	40a0e2 <__sflush_r+0xfe>
  40a002:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40a004:	2c00      	cmp	r4, #0
  40a006:	d049      	beq.n	40a09c <__sflush_r+0xb8>
  40a008:	2200      	movs	r2, #0
  40a00a:	b29b      	uxth	r3, r3
  40a00c:	f8d8 6000 	ldr.w	r6, [r8]
  40a010:	f8c8 2000 	str.w	r2, [r8]
  40a014:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  40a018:	d067      	beq.n	40a0ea <__sflush_r+0x106>
  40a01a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40a01c:	075f      	lsls	r7, r3, #29
  40a01e:	d505      	bpl.n	40a02c <__sflush_r+0x48>
  40a020:	6869      	ldr	r1, [r5, #4]
  40a022:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  40a024:	1a52      	subs	r2, r2, r1
  40a026:	b10b      	cbz	r3, 40a02c <__sflush_r+0x48>
  40a028:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40a02a:	1ad2      	subs	r2, r2, r3
  40a02c:	2300      	movs	r3, #0
  40a02e:	69e9      	ldr	r1, [r5, #28]
  40a030:	4640      	mov	r0, r8
  40a032:	47a0      	blx	r4
  40a034:	1c44      	adds	r4, r0, #1
  40a036:	d03c      	beq.n	40a0b2 <__sflush_r+0xce>
  40a038:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40a03c:	692a      	ldr	r2, [r5, #16]
  40a03e:	602a      	str	r2, [r5, #0]
  40a040:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  40a044:	2200      	movs	r2, #0
  40a046:	81ab      	strh	r3, [r5, #12]
  40a048:	04db      	lsls	r3, r3, #19
  40a04a:	606a      	str	r2, [r5, #4]
  40a04c:	d447      	bmi.n	40a0de <__sflush_r+0xfa>
  40a04e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  40a050:	f8c8 6000 	str.w	r6, [r8]
  40a054:	b311      	cbz	r1, 40a09c <__sflush_r+0xb8>
  40a056:	f105 0340 	add.w	r3, r5, #64	; 0x40
  40a05a:	4299      	cmp	r1, r3
  40a05c:	d002      	beq.n	40a064 <__sflush_r+0x80>
  40a05e:	4640      	mov	r0, r8
  40a060:	f000 f9de 	bl	40a420 <_free_r>
  40a064:	2000      	movs	r0, #0
  40a066:	6328      	str	r0, [r5, #48]	; 0x30
  40a068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40a06c:	692e      	ldr	r6, [r5, #16]
  40a06e:	b1ae      	cbz	r6, 40a09c <__sflush_r+0xb8>
  40a070:	682c      	ldr	r4, [r5, #0]
  40a072:	602e      	str	r6, [r5, #0]
  40a074:	0791      	lsls	r1, r2, #30
  40a076:	bf0c      	ite	eq
  40a078:	696b      	ldreq	r3, [r5, #20]
  40a07a:	2300      	movne	r3, #0
  40a07c:	1ba4      	subs	r4, r4, r6
  40a07e:	60ab      	str	r3, [r5, #8]
  40a080:	e00a      	b.n	40a098 <__sflush_r+0xb4>
  40a082:	4623      	mov	r3, r4
  40a084:	4632      	mov	r2, r6
  40a086:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  40a088:	69e9      	ldr	r1, [r5, #28]
  40a08a:	4640      	mov	r0, r8
  40a08c:	47b8      	blx	r7
  40a08e:	2800      	cmp	r0, #0
  40a090:	eba4 0400 	sub.w	r4, r4, r0
  40a094:	4406      	add	r6, r0
  40a096:	dd04      	ble.n	40a0a2 <__sflush_r+0xbe>
  40a098:	2c00      	cmp	r4, #0
  40a09a:	dcf2      	bgt.n	40a082 <__sflush_r+0x9e>
  40a09c:	2000      	movs	r0, #0
  40a09e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40a0a2:	89ab      	ldrh	r3, [r5, #12]
  40a0a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40a0a8:	81ab      	strh	r3, [r5, #12]
  40a0aa:	f04f 30ff 	mov.w	r0, #4294967295
  40a0ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40a0b2:	f8d8 4000 	ldr.w	r4, [r8]
  40a0b6:	2c1d      	cmp	r4, #29
  40a0b8:	d8f3      	bhi.n	40a0a2 <__sflush_r+0xbe>
  40a0ba:	4b19      	ldr	r3, [pc, #100]	; (40a120 <__sflush_r+0x13c>)
  40a0bc:	40e3      	lsrs	r3, r4
  40a0be:	43db      	mvns	r3, r3
  40a0c0:	f013 0301 	ands.w	r3, r3, #1
  40a0c4:	d1ed      	bne.n	40a0a2 <__sflush_r+0xbe>
  40a0c6:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40a0ca:	606b      	str	r3, [r5, #4]
  40a0cc:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  40a0d0:	6929      	ldr	r1, [r5, #16]
  40a0d2:	81ab      	strh	r3, [r5, #12]
  40a0d4:	04da      	lsls	r2, r3, #19
  40a0d6:	6029      	str	r1, [r5, #0]
  40a0d8:	d5b9      	bpl.n	40a04e <__sflush_r+0x6a>
  40a0da:	2c00      	cmp	r4, #0
  40a0dc:	d1b7      	bne.n	40a04e <__sflush_r+0x6a>
  40a0de:	6528      	str	r0, [r5, #80]	; 0x50
  40a0e0:	e7b5      	b.n	40a04e <__sflush_r+0x6a>
  40a0e2:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  40a0e4:	2a00      	cmp	r2, #0
  40a0e6:	dc8c      	bgt.n	40a002 <__sflush_r+0x1e>
  40a0e8:	e7d8      	b.n	40a09c <__sflush_r+0xb8>
  40a0ea:	2301      	movs	r3, #1
  40a0ec:	69e9      	ldr	r1, [r5, #28]
  40a0ee:	4640      	mov	r0, r8
  40a0f0:	47a0      	blx	r4
  40a0f2:	1c43      	adds	r3, r0, #1
  40a0f4:	4602      	mov	r2, r0
  40a0f6:	d002      	beq.n	40a0fe <__sflush_r+0x11a>
  40a0f8:	89ab      	ldrh	r3, [r5, #12]
  40a0fa:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40a0fc:	e78e      	b.n	40a01c <__sflush_r+0x38>
  40a0fe:	f8d8 3000 	ldr.w	r3, [r8]
  40a102:	2b00      	cmp	r3, #0
  40a104:	d0f8      	beq.n	40a0f8 <__sflush_r+0x114>
  40a106:	2b1d      	cmp	r3, #29
  40a108:	d001      	beq.n	40a10e <__sflush_r+0x12a>
  40a10a:	2b16      	cmp	r3, #22
  40a10c:	d102      	bne.n	40a114 <__sflush_r+0x130>
  40a10e:	f8c8 6000 	str.w	r6, [r8]
  40a112:	e7c3      	b.n	40a09c <__sflush_r+0xb8>
  40a114:	89ab      	ldrh	r3, [r5, #12]
  40a116:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40a11a:	81ab      	strh	r3, [r5, #12]
  40a11c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40a120:	20400001 	.word	0x20400001

0040a124 <_fflush_r>:
  40a124:	b538      	push	{r3, r4, r5, lr}
  40a126:	460d      	mov	r5, r1
  40a128:	4604      	mov	r4, r0
  40a12a:	b108      	cbz	r0, 40a130 <_fflush_r+0xc>
  40a12c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40a12e:	b1bb      	cbz	r3, 40a160 <_fflush_r+0x3c>
  40a130:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  40a134:	b188      	cbz	r0, 40a15a <_fflush_r+0x36>
  40a136:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40a138:	07db      	lsls	r3, r3, #31
  40a13a:	d401      	bmi.n	40a140 <_fflush_r+0x1c>
  40a13c:	0581      	lsls	r1, r0, #22
  40a13e:	d517      	bpl.n	40a170 <_fflush_r+0x4c>
  40a140:	4620      	mov	r0, r4
  40a142:	4629      	mov	r1, r5
  40a144:	f7ff ff4e 	bl	409fe4 <__sflush_r>
  40a148:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40a14a:	07da      	lsls	r2, r3, #31
  40a14c:	4604      	mov	r4, r0
  40a14e:	d402      	bmi.n	40a156 <_fflush_r+0x32>
  40a150:	89ab      	ldrh	r3, [r5, #12]
  40a152:	059b      	lsls	r3, r3, #22
  40a154:	d507      	bpl.n	40a166 <_fflush_r+0x42>
  40a156:	4620      	mov	r0, r4
  40a158:	bd38      	pop	{r3, r4, r5, pc}
  40a15a:	4604      	mov	r4, r0
  40a15c:	4620      	mov	r0, r4
  40a15e:	bd38      	pop	{r3, r4, r5, pc}
  40a160:	f000 f838 	bl	40a1d4 <__sinit>
  40a164:	e7e4      	b.n	40a130 <_fflush_r+0xc>
  40a166:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40a168:	f000 fc04 	bl	40a974 <__retarget_lock_release_recursive>
  40a16c:	4620      	mov	r0, r4
  40a16e:	bd38      	pop	{r3, r4, r5, pc}
  40a170:	6da8      	ldr	r0, [r5, #88]	; 0x58
  40a172:	f000 fbfd 	bl	40a970 <__retarget_lock_acquire_recursive>
  40a176:	e7e3      	b.n	40a140 <_fflush_r+0x1c>

0040a178 <_cleanup_r>:
  40a178:	4901      	ldr	r1, [pc, #4]	; (40a180 <_cleanup_r+0x8>)
  40a17a:	f000 bbaf 	b.w	40a8dc <_fwalk_reent>
  40a17e:	bf00      	nop
  40a180:	0040bf0d 	.word	0x0040bf0d

0040a184 <std.isra.0>:
  40a184:	b510      	push	{r4, lr}
  40a186:	2300      	movs	r3, #0
  40a188:	4604      	mov	r4, r0
  40a18a:	8181      	strh	r1, [r0, #12]
  40a18c:	81c2      	strh	r2, [r0, #14]
  40a18e:	6003      	str	r3, [r0, #0]
  40a190:	6043      	str	r3, [r0, #4]
  40a192:	6083      	str	r3, [r0, #8]
  40a194:	6643      	str	r3, [r0, #100]	; 0x64
  40a196:	6103      	str	r3, [r0, #16]
  40a198:	6143      	str	r3, [r0, #20]
  40a19a:	6183      	str	r3, [r0, #24]
  40a19c:	4619      	mov	r1, r3
  40a19e:	2208      	movs	r2, #8
  40a1a0:	305c      	adds	r0, #92	; 0x5c
  40a1a2:	f7fc fb4f 	bl	406844 <memset>
  40a1a6:	4807      	ldr	r0, [pc, #28]	; (40a1c4 <std.isra.0+0x40>)
  40a1a8:	4907      	ldr	r1, [pc, #28]	; (40a1c8 <std.isra.0+0x44>)
  40a1aa:	4a08      	ldr	r2, [pc, #32]	; (40a1cc <std.isra.0+0x48>)
  40a1ac:	4b08      	ldr	r3, [pc, #32]	; (40a1d0 <std.isra.0+0x4c>)
  40a1ae:	6220      	str	r0, [r4, #32]
  40a1b0:	61e4      	str	r4, [r4, #28]
  40a1b2:	6261      	str	r1, [r4, #36]	; 0x24
  40a1b4:	62a2      	str	r2, [r4, #40]	; 0x28
  40a1b6:	62e3      	str	r3, [r4, #44]	; 0x2c
  40a1b8:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40a1bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40a1c0:	f000 bbd2 	b.w	40a968 <__retarget_lock_init_recursive>
  40a1c4:	0040baf5 	.word	0x0040baf5
  40a1c8:	0040bb19 	.word	0x0040bb19
  40a1cc:	0040bb55 	.word	0x0040bb55
  40a1d0:	0040bb75 	.word	0x0040bb75

0040a1d4 <__sinit>:
  40a1d4:	b510      	push	{r4, lr}
  40a1d6:	4604      	mov	r4, r0
  40a1d8:	4812      	ldr	r0, [pc, #72]	; (40a224 <__sinit+0x50>)
  40a1da:	f000 fbc9 	bl	40a970 <__retarget_lock_acquire_recursive>
  40a1de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  40a1e0:	b9d2      	cbnz	r2, 40a218 <__sinit+0x44>
  40a1e2:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  40a1e6:	4810      	ldr	r0, [pc, #64]	; (40a228 <__sinit+0x54>)
  40a1e8:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  40a1ec:	2103      	movs	r1, #3
  40a1ee:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  40a1f2:	63e0      	str	r0, [r4, #60]	; 0x3c
  40a1f4:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  40a1f8:	6860      	ldr	r0, [r4, #4]
  40a1fa:	2104      	movs	r1, #4
  40a1fc:	f7ff ffc2 	bl	40a184 <std.isra.0>
  40a200:	2201      	movs	r2, #1
  40a202:	2109      	movs	r1, #9
  40a204:	68a0      	ldr	r0, [r4, #8]
  40a206:	f7ff ffbd 	bl	40a184 <std.isra.0>
  40a20a:	2202      	movs	r2, #2
  40a20c:	2112      	movs	r1, #18
  40a20e:	68e0      	ldr	r0, [r4, #12]
  40a210:	f7ff ffb8 	bl	40a184 <std.isra.0>
  40a214:	2301      	movs	r3, #1
  40a216:	63a3      	str	r3, [r4, #56]	; 0x38
  40a218:	4802      	ldr	r0, [pc, #8]	; (40a224 <__sinit+0x50>)
  40a21a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40a21e:	f000 bba9 	b.w	40a974 <__retarget_lock_release_recursive>
  40a222:	bf00      	nop
  40a224:	2040f4dc 	.word	0x2040f4dc
  40a228:	0040a179 	.word	0x0040a179

0040a22c <__sfp_lock_acquire>:
  40a22c:	4801      	ldr	r0, [pc, #4]	; (40a234 <__sfp_lock_acquire+0x8>)
  40a22e:	f000 bb9f 	b.w	40a970 <__retarget_lock_acquire_recursive>
  40a232:	bf00      	nop
  40a234:	2040f4f0 	.word	0x2040f4f0

0040a238 <__sfp_lock_release>:
  40a238:	4801      	ldr	r0, [pc, #4]	; (40a240 <__sfp_lock_release+0x8>)
  40a23a:	f000 bb9b 	b.w	40a974 <__retarget_lock_release_recursive>
  40a23e:	bf00      	nop
  40a240:	2040f4f0 	.word	0x2040f4f0

0040a244 <__libc_fini_array>:
  40a244:	b538      	push	{r3, r4, r5, lr}
  40a246:	4c0a      	ldr	r4, [pc, #40]	; (40a270 <__libc_fini_array+0x2c>)
  40a248:	4d0a      	ldr	r5, [pc, #40]	; (40a274 <__libc_fini_array+0x30>)
  40a24a:	1b64      	subs	r4, r4, r5
  40a24c:	10a4      	asrs	r4, r4, #2
  40a24e:	d00a      	beq.n	40a266 <__libc_fini_array+0x22>
  40a250:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40a254:	3b01      	subs	r3, #1
  40a256:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40a25a:	3c01      	subs	r4, #1
  40a25c:	f855 3904 	ldr.w	r3, [r5], #-4
  40a260:	4798      	blx	r3
  40a262:	2c00      	cmp	r4, #0
  40a264:	d1f9      	bne.n	40a25a <__libc_fini_array+0x16>
  40a266:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40a26a:	f003 be8b 	b.w	40df84 <_fini>
  40a26e:	bf00      	nop
  40a270:	0040df94 	.word	0x0040df94
  40a274:	0040df90 	.word	0x0040df90

0040a278 <__fputwc>:
  40a278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40a27c:	b082      	sub	sp, #8
  40a27e:	4680      	mov	r8, r0
  40a280:	4689      	mov	r9, r1
  40a282:	4614      	mov	r4, r2
  40a284:	f000 fb54 	bl	40a930 <__locale_mb_cur_max>
  40a288:	2801      	cmp	r0, #1
  40a28a:	d036      	beq.n	40a2fa <__fputwc+0x82>
  40a28c:	464a      	mov	r2, r9
  40a28e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  40a292:	a901      	add	r1, sp, #4
  40a294:	4640      	mov	r0, r8
  40a296:	f001 fd47 	bl	40bd28 <_wcrtomb_r>
  40a29a:	1c42      	adds	r2, r0, #1
  40a29c:	4606      	mov	r6, r0
  40a29e:	d025      	beq.n	40a2ec <__fputwc+0x74>
  40a2a0:	b3a8      	cbz	r0, 40a30e <__fputwc+0x96>
  40a2a2:	f89d e004 	ldrb.w	lr, [sp, #4]
  40a2a6:	2500      	movs	r5, #0
  40a2a8:	f10d 0a04 	add.w	sl, sp, #4
  40a2ac:	e009      	b.n	40a2c2 <__fputwc+0x4a>
  40a2ae:	6823      	ldr	r3, [r4, #0]
  40a2b0:	1c5a      	adds	r2, r3, #1
  40a2b2:	6022      	str	r2, [r4, #0]
  40a2b4:	f883 e000 	strb.w	lr, [r3]
  40a2b8:	3501      	adds	r5, #1
  40a2ba:	42b5      	cmp	r5, r6
  40a2bc:	d227      	bcs.n	40a30e <__fputwc+0x96>
  40a2be:	f815 e00a 	ldrb.w	lr, [r5, sl]
  40a2c2:	68a3      	ldr	r3, [r4, #8]
  40a2c4:	3b01      	subs	r3, #1
  40a2c6:	2b00      	cmp	r3, #0
  40a2c8:	60a3      	str	r3, [r4, #8]
  40a2ca:	daf0      	bge.n	40a2ae <__fputwc+0x36>
  40a2cc:	69a7      	ldr	r7, [r4, #24]
  40a2ce:	42bb      	cmp	r3, r7
  40a2d0:	4671      	mov	r1, lr
  40a2d2:	4622      	mov	r2, r4
  40a2d4:	4640      	mov	r0, r8
  40a2d6:	db02      	blt.n	40a2de <__fputwc+0x66>
  40a2d8:	f1be 0f0a 	cmp.w	lr, #10
  40a2dc:	d1e7      	bne.n	40a2ae <__fputwc+0x36>
  40a2de:	f001 fccb 	bl	40bc78 <__swbuf_r>
  40a2e2:	1c43      	adds	r3, r0, #1
  40a2e4:	d1e8      	bne.n	40a2b8 <__fputwc+0x40>
  40a2e6:	b002      	add	sp, #8
  40a2e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40a2ec:	89a3      	ldrh	r3, [r4, #12]
  40a2ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40a2f2:	81a3      	strh	r3, [r4, #12]
  40a2f4:	b002      	add	sp, #8
  40a2f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40a2fa:	f109 33ff 	add.w	r3, r9, #4294967295
  40a2fe:	2bfe      	cmp	r3, #254	; 0xfe
  40a300:	d8c4      	bhi.n	40a28c <__fputwc+0x14>
  40a302:	fa5f fe89 	uxtb.w	lr, r9
  40a306:	4606      	mov	r6, r0
  40a308:	f88d e004 	strb.w	lr, [sp, #4]
  40a30c:	e7cb      	b.n	40a2a6 <__fputwc+0x2e>
  40a30e:	4648      	mov	r0, r9
  40a310:	b002      	add	sp, #8
  40a312:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40a316:	bf00      	nop

0040a318 <_fputwc_r>:
  40a318:	b530      	push	{r4, r5, lr}
  40a31a:	6e53      	ldr	r3, [r2, #100]	; 0x64
  40a31c:	f013 0f01 	tst.w	r3, #1
  40a320:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  40a324:	4614      	mov	r4, r2
  40a326:	b083      	sub	sp, #12
  40a328:	4605      	mov	r5, r0
  40a32a:	b29a      	uxth	r2, r3
  40a32c:	d101      	bne.n	40a332 <_fputwc_r+0x1a>
  40a32e:	0590      	lsls	r0, r2, #22
  40a330:	d51c      	bpl.n	40a36c <_fputwc_r+0x54>
  40a332:	0490      	lsls	r0, r2, #18
  40a334:	d406      	bmi.n	40a344 <_fputwc_r+0x2c>
  40a336:	6e62      	ldr	r2, [r4, #100]	; 0x64
  40a338:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40a33c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40a340:	81a3      	strh	r3, [r4, #12]
  40a342:	6662      	str	r2, [r4, #100]	; 0x64
  40a344:	4628      	mov	r0, r5
  40a346:	4622      	mov	r2, r4
  40a348:	f7ff ff96 	bl	40a278 <__fputwc>
  40a34c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40a34e:	07da      	lsls	r2, r3, #31
  40a350:	4605      	mov	r5, r0
  40a352:	d402      	bmi.n	40a35a <_fputwc_r+0x42>
  40a354:	89a3      	ldrh	r3, [r4, #12]
  40a356:	059b      	lsls	r3, r3, #22
  40a358:	d502      	bpl.n	40a360 <_fputwc_r+0x48>
  40a35a:	4628      	mov	r0, r5
  40a35c:	b003      	add	sp, #12
  40a35e:	bd30      	pop	{r4, r5, pc}
  40a360:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40a362:	f000 fb07 	bl	40a974 <__retarget_lock_release_recursive>
  40a366:	4628      	mov	r0, r5
  40a368:	b003      	add	sp, #12
  40a36a:	bd30      	pop	{r4, r5, pc}
  40a36c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40a36e:	9101      	str	r1, [sp, #4]
  40a370:	f000 fafe 	bl	40a970 <__retarget_lock_acquire_recursive>
  40a374:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a378:	9901      	ldr	r1, [sp, #4]
  40a37a:	b29a      	uxth	r2, r3
  40a37c:	e7d9      	b.n	40a332 <_fputwc_r+0x1a>
  40a37e:	bf00      	nop

0040a380 <_malloc_trim_r>:
  40a380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40a382:	4f24      	ldr	r7, [pc, #144]	; (40a414 <_malloc_trim_r+0x94>)
  40a384:	460c      	mov	r4, r1
  40a386:	4606      	mov	r6, r0
  40a388:	f000 fef6 	bl	40b178 <__malloc_lock>
  40a38c:	68bb      	ldr	r3, [r7, #8]
  40a38e:	685d      	ldr	r5, [r3, #4]
  40a390:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  40a394:	310f      	adds	r1, #15
  40a396:	f025 0503 	bic.w	r5, r5, #3
  40a39a:	4429      	add	r1, r5
  40a39c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40a3a0:	f021 010f 	bic.w	r1, r1, #15
  40a3a4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  40a3a8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  40a3ac:	db07      	blt.n	40a3be <_malloc_trim_r+0x3e>
  40a3ae:	2100      	movs	r1, #0
  40a3b0:	4630      	mov	r0, r6
  40a3b2:	f001 fb8d 	bl	40bad0 <_sbrk_r>
  40a3b6:	68bb      	ldr	r3, [r7, #8]
  40a3b8:	442b      	add	r3, r5
  40a3ba:	4298      	cmp	r0, r3
  40a3bc:	d004      	beq.n	40a3c8 <_malloc_trim_r+0x48>
  40a3be:	4630      	mov	r0, r6
  40a3c0:	f000 fee0 	bl	40b184 <__malloc_unlock>
  40a3c4:	2000      	movs	r0, #0
  40a3c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40a3c8:	4261      	negs	r1, r4
  40a3ca:	4630      	mov	r0, r6
  40a3cc:	f001 fb80 	bl	40bad0 <_sbrk_r>
  40a3d0:	3001      	adds	r0, #1
  40a3d2:	d00d      	beq.n	40a3f0 <_malloc_trim_r+0x70>
  40a3d4:	4b10      	ldr	r3, [pc, #64]	; (40a418 <_malloc_trim_r+0x98>)
  40a3d6:	68ba      	ldr	r2, [r7, #8]
  40a3d8:	6819      	ldr	r1, [r3, #0]
  40a3da:	1b2d      	subs	r5, r5, r4
  40a3dc:	f045 0501 	orr.w	r5, r5, #1
  40a3e0:	4630      	mov	r0, r6
  40a3e2:	1b09      	subs	r1, r1, r4
  40a3e4:	6055      	str	r5, [r2, #4]
  40a3e6:	6019      	str	r1, [r3, #0]
  40a3e8:	f000 fecc 	bl	40b184 <__malloc_unlock>
  40a3ec:	2001      	movs	r0, #1
  40a3ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40a3f0:	2100      	movs	r1, #0
  40a3f2:	4630      	mov	r0, r6
  40a3f4:	f001 fb6c 	bl	40bad0 <_sbrk_r>
  40a3f8:	68ba      	ldr	r2, [r7, #8]
  40a3fa:	1a83      	subs	r3, r0, r2
  40a3fc:	2b0f      	cmp	r3, #15
  40a3fe:	ddde      	ble.n	40a3be <_malloc_trim_r+0x3e>
  40a400:	4c06      	ldr	r4, [pc, #24]	; (40a41c <_malloc_trim_r+0x9c>)
  40a402:	4905      	ldr	r1, [pc, #20]	; (40a418 <_malloc_trim_r+0x98>)
  40a404:	6824      	ldr	r4, [r4, #0]
  40a406:	f043 0301 	orr.w	r3, r3, #1
  40a40a:	1b00      	subs	r0, r0, r4
  40a40c:	6053      	str	r3, [r2, #4]
  40a40e:	6008      	str	r0, [r1, #0]
  40a410:	e7d5      	b.n	40a3be <_malloc_trim_r+0x3e>
  40a412:	bf00      	nop
  40a414:	204005e8 	.word	0x204005e8
  40a418:	2040f384 	.word	0x2040f384
  40a41c:	204009f0 	.word	0x204009f0

0040a420 <_free_r>:
  40a420:	2900      	cmp	r1, #0
  40a422:	d044      	beq.n	40a4ae <_free_r+0x8e>
  40a424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40a428:	460d      	mov	r5, r1
  40a42a:	4680      	mov	r8, r0
  40a42c:	f000 fea4 	bl	40b178 <__malloc_lock>
  40a430:	f855 7c04 	ldr.w	r7, [r5, #-4]
  40a434:	4969      	ldr	r1, [pc, #420]	; (40a5dc <_free_r+0x1bc>)
  40a436:	f027 0301 	bic.w	r3, r7, #1
  40a43a:	f1a5 0408 	sub.w	r4, r5, #8
  40a43e:	18e2      	adds	r2, r4, r3
  40a440:	688e      	ldr	r6, [r1, #8]
  40a442:	6850      	ldr	r0, [r2, #4]
  40a444:	42b2      	cmp	r2, r6
  40a446:	f020 0003 	bic.w	r0, r0, #3
  40a44a:	d05e      	beq.n	40a50a <_free_r+0xea>
  40a44c:	07fe      	lsls	r6, r7, #31
  40a44e:	6050      	str	r0, [r2, #4]
  40a450:	d40b      	bmi.n	40a46a <_free_r+0x4a>
  40a452:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40a456:	1be4      	subs	r4, r4, r7
  40a458:	f101 0e08 	add.w	lr, r1, #8
  40a45c:	68a5      	ldr	r5, [r4, #8]
  40a45e:	4575      	cmp	r5, lr
  40a460:	443b      	add	r3, r7
  40a462:	d06d      	beq.n	40a540 <_free_r+0x120>
  40a464:	68e7      	ldr	r7, [r4, #12]
  40a466:	60ef      	str	r7, [r5, #12]
  40a468:	60bd      	str	r5, [r7, #8]
  40a46a:	1815      	adds	r5, r2, r0
  40a46c:	686d      	ldr	r5, [r5, #4]
  40a46e:	07ed      	lsls	r5, r5, #31
  40a470:	d53e      	bpl.n	40a4f0 <_free_r+0xd0>
  40a472:	f043 0201 	orr.w	r2, r3, #1
  40a476:	6062      	str	r2, [r4, #4]
  40a478:	50e3      	str	r3, [r4, r3]
  40a47a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40a47e:	d217      	bcs.n	40a4b0 <_free_r+0x90>
  40a480:	08db      	lsrs	r3, r3, #3
  40a482:	1c58      	adds	r0, r3, #1
  40a484:	109a      	asrs	r2, r3, #2
  40a486:	684d      	ldr	r5, [r1, #4]
  40a488:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  40a48c:	60a7      	str	r7, [r4, #8]
  40a48e:	2301      	movs	r3, #1
  40a490:	4093      	lsls	r3, r2
  40a492:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40a496:	432b      	orrs	r3, r5
  40a498:	3a08      	subs	r2, #8
  40a49a:	60e2      	str	r2, [r4, #12]
  40a49c:	604b      	str	r3, [r1, #4]
  40a49e:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40a4a2:	60fc      	str	r4, [r7, #12]
  40a4a4:	4640      	mov	r0, r8
  40a4a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40a4aa:	f000 be6b 	b.w	40b184 <__malloc_unlock>
  40a4ae:	4770      	bx	lr
  40a4b0:	0a5a      	lsrs	r2, r3, #9
  40a4b2:	2a04      	cmp	r2, #4
  40a4b4:	d852      	bhi.n	40a55c <_free_r+0x13c>
  40a4b6:	099a      	lsrs	r2, r3, #6
  40a4b8:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40a4bc:	00ff      	lsls	r7, r7, #3
  40a4be:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40a4c2:	19c8      	adds	r0, r1, r7
  40a4c4:	59ca      	ldr	r2, [r1, r7]
  40a4c6:	3808      	subs	r0, #8
  40a4c8:	4290      	cmp	r0, r2
  40a4ca:	d04f      	beq.n	40a56c <_free_r+0x14c>
  40a4cc:	6851      	ldr	r1, [r2, #4]
  40a4ce:	f021 0103 	bic.w	r1, r1, #3
  40a4d2:	428b      	cmp	r3, r1
  40a4d4:	d232      	bcs.n	40a53c <_free_r+0x11c>
  40a4d6:	6892      	ldr	r2, [r2, #8]
  40a4d8:	4290      	cmp	r0, r2
  40a4da:	d1f7      	bne.n	40a4cc <_free_r+0xac>
  40a4dc:	68c3      	ldr	r3, [r0, #12]
  40a4de:	60a0      	str	r0, [r4, #8]
  40a4e0:	60e3      	str	r3, [r4, #12]
  40a4e2:	609c      	str	r4, [r3, #8]
  40a4e4:	60c4      	str	r4, [r0, #12]
  40a4e6:	4640      	mov	r0, r8
  40a4e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40a4ec:	f000 be4a 	b.w	40b184 <__malloc_unlock>
  40a4f0:	6895      	ldr	r5, [r2, #8]
  40a4f2:	4f3b      	ldr	r7, [pc, #236]	; (40a5e0 <_free_r+0x1c0>)
  40a4f4:	42bd      	cmp	r5, r7
  40a4f6:	4403      	add	r3, r0
  40a4f8:	d040      	beq.n	40a57c <_free_r+0x15c>
  40a4fa:	68d0      	ldr	r0, [r2, #12]
  40a4fc:	60e8      	str	r0, [r5, #12]
  40a4fe:	f043 0201 	orr.w	r2, r3, #1
  40a502:	6085      	str	r5, [r0, #8]
  40a504:	6062      	str	r2, [r4, #4]
  40a506:	50e3      	str	r3, [r4, r3]
  40a508:	e7b7      	b.n	40a47a <_free_r+0x5a>
  40a50a:	07ff      	lsls	r7, r7, #31
  40a50c:	4403      	add	r3, r0
  40a50e:	d407      	bmi.n	40a520 <_free_r+0x100>
  40a510:	f855 2c08 	ldr.w	r2, [r5, #-8]
  40a514:	1aa4      	subs	r4, r4, r2
  40a516:	4413      	add	r3, r2
  40a518:	68a0      	ldr	r0, [r4, #8]
  40a51a:	68e2      	ldr	r2, [r4, #12]
  40a51c:	60c2      	str	r2, [r0, #12]
  40a51e:	6090      	str	r0, [r2, #8]
  40a520:	4a30      	ldr	r2, [pc, #192]	; (40a5e4 <_free_r+0x1c4>)
  40a522:	6812      	ldr	r2, [r2, #0]
  40a524:	f043 0001 	orr.w	r0, r3, #1
  40a528:	4293      	cmp	r3, r2
  40a52a:	6060      	str	r0, [r4, #4]
  40a52c:	608c      	str	r4, [r1, #8]
  40a52e:	d3b9      	bcc.n	40a4a4 <_free_r+0x84>
  40a530:	4b2d      	ldr	r3, [pc, #180]	; (40a5e8 <_free_r+0x1c8>)
  40a532:	4640      	mov	r0, r8
  40a534:	6819      	ldr	r1, [r3, #0]
  40a536:	f7ff ff23 	bl	40a380 <_malloc_trim_r>
  40a53a:	e7b3      	b.n	40a4a4 <_free_r+0x84>
  40a53c:	4610      	mov	r0, r2
  40a53e:	e7cd      	b.n	40a4dc <_free_r+0xbc>
  40a540:	1811      	adds	r1, r2, r0
  40a542:	6849      	ldr	r1, [r1, #4]
  40a544:	07c9      	lsls	r1, r1, #31
  40a546:	d444      	bmi.n	40a5d2 <_free_r+0x1b2>
  40a548:	6891      	ldr	r1, [r2, #8]
  40a54a:	68d2      	ldr	r2, [r2, #12]
  40a54c:	60ca      	str	r2, [r1, #12]
  40a54e:	4403      	add	r3, r0
  40a550:	f043 0001 	orr.w	r0, r3, #1
  40a554:	6091      	str	r1, [r2, #8]
  40a556:	6060      	str	r0, [r4, #4]
  40a558:	50e3      	str	r3, [r4, r3]
  40a55a:	e7a3      	b.n	40a4a4 <_free_r+0x84>
  40a55c:	2a14      	cmp	r2, #20
  40a55e:	d816      	bhi.n	40a58e <_free_r+0x16e>
  40a560:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40a564:	00ff      	lsls	r7, r7, #3
  40a566:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  40a56a:	e7aa      	b.n	40a4c2 <_free_r+0xa2>
  40a56c:	10aa      	asrs	r2, r5, #2
  40a56e:	2301      	movs	r3, #1
  40a570:	684d      	ldr	r5, [r1, #4]
  40a572:	4093      	lsls	r3, r2
  40a574:	432b      	orrs	r3, r5
  40a576:	604b      	str	r3, [r1, #4]
  40a578:	4603      	mov	r3, r0
  40a57a:	e7b0      	b.n	40a4de <_free_r+0xbe>
  40a57c:	f043 0201 	orr.w	r2, r3, #1
  40a580:	614c      	str	r4, [r1, #20]
  40a582:	610c      	str	r4, [r1, #16]
  40a584:	60e5      	str	r5, [r4, #12]
  40a586:	60a5      	str	r5, [r4, #8]
  40a588:	6062      	str	r2, [r4, #4]
  40a58a:	50e3      	str	r3, [r4, r3]
  40a58c:	e78a      	b.n	40a4a4 <_free_r+0x84>
  40a58e:	2a54      	cmp	r2, #84	; 0x54
  40a590:	d806      	bhi.n	40a5a0 <_free_r+0x180>
  40a592:	0b1a      	lsrs	r2, r3, #12
  40a594:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  40a598:	00ff      	lsls	r7, r7, #3
  40a59a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40a59e:	e790      	b.n	40a4c2 <_free_r+0xa2>
  40a5a0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40a5a4:	d806      	bhi.n	40a5b4 <_free_r+0x194>
  40a5a6:	0bda      	lsrs	r2, r3, #15
  40a5a8:	f102 0778 	add.w	r7, r2, #120	; 0x78
  40a5ac:	00ff      	lsls	r7, r7, #3
  40a5ae:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40a5b2:	e786      	b.n	40a4c2 <_free_r+0xa2>
  40a5b4:	f240 5054 	movw	r0, #1364	; 0x554
  40a5b8:	4282      	cmp	r2, r0
  40a5ba:	d806      	bhi.n	40a5ca <_free_r+0x1aa>
  40a5bc:	0c9a      	lsrs	r2, r3, #18
  40a5be:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40a5c2:	00ff      	lsls	r7, r7, #3
  40a5c4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  40a5c8:	e77b      	b.n	40a4c2 <_free_r+0xa2>
  40a5ca:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40a5ce:	257e      	movs	r5, #126	; 0x7e
  40a5d0:	e777      	b.n	40a4c2 <_free_r+0xa2>
  40a5d2:	f043 0101 	orr.w	r1, r3, #1
  40a5d6:	6061      	str	r1, [r4, #4]
  40a5d8:	6013      	str	r3, [r2, #0]
  40a5da:	e763      	b.n	40a4a4 <_free_r+0x84>
  40a5dc:	204005e8 	.word	0x204005e8
  40a5e0:	204005f0 	.word	0x204005f0
  40a5e4:	204009f4 	.word	0x204009f4
  40a5e8:	2040f3b4 	.word	0x2040f3b4

0040a5ec <__sfvwrite_r>:
  40a5ec:	6893      	ldr	r3, [r2, #8]
  40a5ee:	2b00      	cmp	r3, #0
  40a5f0:	d073      	beq.n	40a6da <__sfvwrite_r+0xee>
  40a5f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40a5f6:	898b      	ldrh	r3, [r1, #12]
  40a5f8:	b083      	sub	sp, #12
  40a5fa:	460c      	mov	r4, r1
  40a5fc:	0719      	lsls	r1, r3, #28
  40a5fe:	9000      	str	r0, [sp, #0]
  40a600:	4616      	mov	r6, r2
  40a602:	d526      	bpl.n	40a652 <__sfvwrite_r+0x66>
  40a604:	6922      	ldr	r2, [r4, #16]
  40a606:	b322      	cbz	r2, 40a652 <__sfvwrite_r+0x66>
  40a608:	f013 0002 	ands.w	r0, r3, #2
  40a60c:	6835      	ldr	r5, [r6, #0]
  40a60e:	d02c      	beq.n	40a66a <__sfvwrite_r+0x7e>
  40a610:	f04f 0900 	mov.w	r9, #0
  40a614:	4fb0      	ldr	r7, [pc, #704]	; (40a8d8 <__sfvwrite_r+0x2ec>)
  40a616:	46c8      	mov	r8, r9
  40a618:	46b2      	mov	sl, r6
  40a61a:	45b8      	cmp	r8, r7
  40a61c:	4643      	mov	r3, r8
  40a61e:	464a      	mov	r2, r9
  40a620:	bf28      	it	cs
  40a622:	463b      	movcs	r3, r7
  40a624:	9800      	ldr	r0, [sp, #0]
  40a626:	f1b8 0f00 	cmp.w	r8, #0
  40a62a:	d050      	beq.n	40a6ce <__sfvwrite_r+0xe2>
  40a62c:	69e1      	ldr	r1, [r4, #28]
  40a62e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40a630:	47b0      	blx	r6
  40a632:	2800      	cmp	r0, #0
  40a634:	dd58      	ble.n	40a6e8 <__sfvwrite_r+0xfc>
  40a636:	f8da 3008 	ldr.w	r3, [sl, #8]
  40a63a:	1a1b      	subs	r3, r3, r0
  40a63c:	4481      	add	r9, r0
  40a63e:	eba8 0800 	sub.w	r8, r8, r0
  40a642:	f8ca 3008 	str.w	r3, [sl, #8]
  40a646:	2b00      	cmp	r3, #0
  40a648:	d1e7      	bne.n	40a61a <__sfvwrite_r+0x2e>
  40a64a:	2000      	movs	r0, #0
  40a64c:	b003      	add	sp, #12
  40a64e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a652:	4621      	mov	r1, r4
  40a654:	9800      	ldr	r0, [sp, #0]
  40a656:	f7fe fc93 	bl	408f80 <__swsetup_r>
  40a65a:	2800      	cmp	r0, #0
  40a65c:	f040 8133 	bne.w	40a8c6 <__sfvwrite_r+0x2da>
  40a660:	89a3      	ldrh	r3, [r4, #12]
  40a662:	6835      	ldr	r5, [r6, #0]
  40a664:	f013 0002 	ands.w	r0, r3, #2
  40a668:	d1d2      	bne.n	40a610 <__sfvwrite_r+0x24>
  40a66a:	f013 0901 	ands.w	r9, r3, #1
  40a66e:	d145      	bne.n	40a6fc <__sfvwrite_r+0x110>
  40a670:	464f      	mov	r7, r9
  40a672:	9601      	str	r6, [sp, #4]
  40a674:	b337      	cbz	r7, 40a6c4 <__sfvwrite_r+0xd8>
  40a676:	059a      	lsls	r2, r3, #22
  40a678:	f8d4 8008 	ldr.w	r8, [r4, #8]
  40a67c:	f140 8083 	bpl.w	40a786 <__sfvwrite_r+0x19a>
  40a680:	4547      	cmp	r7, r8
  40a682:	46c3      	mov	fp, r8
  40a684:	f0c0 80ab 	bcc.w	40a7de <__sfvwrite_r+0x1f2>
  40a688:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40a68c:	f040 80ac 	bne.w	40a7e8 <__sfvwrite_r+0x1fc>
  40a690:	6820      	ldr	r0, [r4, #0]
  40a692:	46ba      	mov	sl, r7
  40a694:	465a      	mov	r2, fp
  40a696:	4649      	mov	r1, r9
  40a698:	f000 fd0a 	bl	40b0b0 <memmove>
  40a69c:	68a2      	ldr	r2, [r4, #8]
  40a69e:	6823      	ldr	r3, [r4, #0]
  40a6a0:	eba2 0208 	sub.w	r2, r2, r8
  40a6a4:	445b      	add	r3, fp
  40a6a6:	60a2      	str	r2, [r4, #8]
  40a6a8:	6023      	str	r3, [r4, #0]
  40a6aa:	9a01      	ldr	r2, [sp, #4]
  40a6ac:	6893      	ldr	r3, [r2, #8]
  40a6ae:	eba3 030a 	sub.w	r3, r3, sl
  40a6b2:	44d1      	add	r9, sl
  40a6b4:	eba7 070a 	sub.w	r7, r7, sl
  40a6b8:	6093      	str	r3, [r2, #8]
  40a6ba:	2b00      	cmp	r3, #0
  40a6bc:	d0c5      	beq.n	40a64a <__sfvwrite_r+0x5e>
  40a6be:	89a3      	ldrh	r3, [r4, #12]
  40a6c0:	2f00      	cmp	r7, #0
  40a6c2:	d1d8      	bne.n	40a676 <__sfvwrite_r+0x8a>
  40a6c4:	f8d5 9000 	ldr.w	r9, [r5]
  40a6c8:	686f      	ldr	r7, [r5, #4]
  40a6ca:	3508      	adds	r5, #8
  40a6cc:	e7d2      	b.n	40a674 <__sfvwrite_r+0x88>
  40a6ce:	f8d5 9000 	ldr.w	r9, [r5]
  40a6d2:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40a6d6:	3508      	adds	r5, #8
  40a6d8:	e79f      	b.n	40a61a <__sfvwrite_r+0x2e>
  40a6da:	2000      	movs	r0, #0
  40a6dc:	4770      	bx	lr
  40a6de:	4621      	mov	r1, r4
  40a6e0:	9800      	ldr	r0, [sp, #0]
  40a6e2:	f7ff fd1f 	bl	40a124 <_fflush_r>
  40a6e6:	b370      	cbz	r0, 40a746 <__sfvwrite_r+0x15a>
  40a6e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a6ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40a6f0:	f04f 30ff 	mov.w	r0, #4294967295
  40a6f4:	81a3      	strh	r3, [r4, #12]
  40a6f6:	b003      	add	sp, #12
  40a6f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40a6fc:	4681      	mov	r9, r0
  40a6fe:	4633      	mov	r3, r6
  40a700:	464e      	mov	r6, r9
  40a702:	46a8      	mov	r8, r5
  40a704:	469a      	mov	sl, r3
  40a706:	464d      	mov	r5, r9
  40a708:	b34e      	cbz	r6, 40a75e <__sfvwrite_r+0x172>
  40a70a:	b380      	cbz	r0, 40a76e <__sfvwrite_r+0x182>
  40a70c:	6820      	ldr	r0, [r4, #0]
  40a70e:	6923      	ldr	r3, [r4, #16]
  40a710:	6962      	ldr	r2, [r4, #20]
  40a712:	45b1      	cmp	r9, r6
  40a714:	46cb      	mov	fp, r9
  40a716:	bf28      	it	cs
  40a718:	46b3      	movcs	fp, r6
  40a71a:	4298      	cmp	r0, r3
  40a71c:	465f      	mov	r7, fp
  40a71e:	d904      	bls.n	40a72a <__sfvwrite_r+0x13e>
  40a720:	68a3      	ldr	r3, [r4, #8]
  40a722:	4413      	add	r3, r2
  40a724:	459b      	cmp	fp, r3
  40a726:	f300 80a6 	bgt.w	40a876 <__sfvwrite_r+0x28a>
  40a72a:	4593      	cmp	fp, r2
  40a72c:	db4b      	blt.n	40a7c6 <__sfvwrite_r+0x1da>
  40a72e:	4613      	mov	r3, r2
  40a730:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40a732:	69e1      	ldr	r1, [r4, #28]
  40a734:	9800      	ldr	r0, [sp, #0]
  40a736:	462a      	mov	r2, r5
  40a738:	47b8      	blx	r7
  40a73a:	1e07      	subs	r7, r0, #0
  40a73c:	ddd4      	ble.n	40a6e8 <__sfvwrite_r+0xfc>
  40a73e:	ebb9 0907 	subs.w	r9, r9, r7
  40a742:	d0cc      	beq.n	40a6de <__sfvwrite_r+0xf2>
  40a744:	2001      	movs	r0, #1
  40a746:	f8da 3008 	ldr.w	r3, [sl, #8]
  40a74a:	1bdb      	subs	r3, r3, r7
  40a74c:	443d      	add	r5, r7
  40a74e:	1bf6      	subs	r6, r6, r7
  40a750:	f8ca 3008 	str.w	r3, [sl, #8]
  40a754:	2b00      	cmp	r3, #0
  40a756:	f43f af78 	beq.w	40a64a <__sfvwrite_r+0x5e>
  40a75a:	2e00      	cmp	r6, #0
  40a75c:	d1d5      	bne.n	40a70a <__sfvwrite_r+0x11e>
  40a75e:	f108 0308 	add.w	r3, r8, #8
  40a762:	e913 0060 	ldmdb	r3, {r5, r6}
  40a766:	4698      	mov	r8, r3
  40a768:	3308      	adds	r3, #8
  40a76a:	2e00      	cmp	r6, #0
  40a76c:	d0f9      	beq.n	40a762 <__sfvwrite_r+0x176>
  40a76e:	4632      	mov	r2, r6
  40a770:	210a      	movs	r1, #10
  40a772:	4628      	mov	r0, r5
  40a774:	f000 fc4c 	bl	40b010 <memchr>
  40a778:	2800      	cmp	r0, #0
  40a77a:	f000 80a1 	beq.w	40a8c0 <__sfvwrite_r+0x2d4>
  40a77e:	3001      	adds	r0, #1
  40a780:	eba0 0905 	sub.w	r9, r0, r5
  40a784:	e7c2      	b.n	40a70c <__sfvwrite_r+0x120>
  40a786:	6820      	ldr	r0, [r4, #0]
  40a788:	6923      	ldr	r3, [r4, #16]
  40a78a:	4298      	cmp	r0, r3
  40a78c:	d802      	bhi.n	40a794 <__sfvwrite_r+0x1a8>
  40a78e:	6963      	ldr	r3, [r4, #20]
  40a790:	429f      	cmp	r7, r3
  40a792:	d25d      	bcs.n	40a850 <__sfvwrite_r+0x264>
  40a794:	45b8      	cmp	r8, r7
  40a796:	bf28      	it	cs
  40a798:	46b8      	movcs	r8, r7
  40a79a:	4642      	mov	r2, r8
  40a79c:	4649      	mov	r1, r9
  40a79e:	f000 fc87 	bl	40b0b0 <memmove>
  40a7a2:	68a3      	ldr	r3, [r4, #8]
  40a7a4:	6822      	ldr	r2, [r4, #0]
  40a7a6:	eba3 0308 	sub.w	r3, r3, r8
  40a7aa:	4442      	add	r2, r8
  40a7ac:	60a3      	str	r3, [r4, #8]
  40a7ae:	6022      	str	r2, [r4, #0]
  40a7b0:	b10b      	cbz	r3, 40a7b6 <__sfvwrite_r+0x1ca>
  40a7b2:	46c2      	mov	sl, r8
  40a7b4:	e779      	b.n	40a6aa <__sfvwrite_r+0xbe>
  40a7b6:	4621      	mov	r1, r4
  40a7b8:	9800      	ldr	r0, [sp, #0]
  40a7ba:	f7ff fcb3 	bl	40a124 <_fflush_r>
  40a7be:	2800      	cmp	r0, #0
  40a7c0:	d192      	bne.n	40a6e8 <__sfvwrite_r+0xfc>
  40a7c2:	46c2      	mov	sl, r8
  40a7c4:	e771      	b.n	40a6aa <__sfvwrite_r+0xbe>
  40a7c6:	465a      	mov	r2, fp
  40a7c8:	4629      	mov	r1, r5
  40a7ca:	f000 fc71 	bl	40b0b0 <memmove>
  40a7ce:	68a2      	ldr	r2, [r4, #8]
  40a7d0:	6823      	ldr	r3, [r4, #0]
  40a7d2:	eba2 020b 	sub.w	r2, r2, fp
  40a7d6:	445b      	add	r3, fp
  40a7d8:	60a2      	str	r2, [r4, #8]
  40a7da:	6023      	str	r3, [r4, #0]
  40a7dc:	e7af      	b.n	40a73e <__sfvwrite_r+0x152>
  40a7de:	6820      	ldr	r0, [r4, #0]
  40a7e0:	46b8      	mov	r8, r7
  40a7e2:	46ba      	mov	sl, r7
  40a7e4:	46bb      	mov	fp, r7
  40a7e6:	e755      	b.n	40a694 <__sfvwrite_r+0xa8>
  40a7e8:	6962      	ldr	r2, [r4, #20]
  40a7ea:	6820      	ldr	r0, [r4, #0]
  40a7ec:	6921      	ldr	r1, [r4, #16]
  40a7ee:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  40a7f2:	eba0 0a01 	sub.w	sl, r0, r1
  40a7f6:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  40a7fa:	f10a 0001 	add.w	r0, sl, #1
  40a7fe:	ea4f 0868 	mov.w	r8, r8, asr #1
  40a802:	4438      	add	r0, r7
  40a804:	4540      	cmp	r0, r8
  40a806:	4642      	mov	r2, r8
  40a808:	bf84      	itt	hi
  40a80a:	4680      	movhi	r8, r0
  40a80c:	4642      	movhi	r2, r8
  40a80e:	055b      	lsls	r3, r3, #21
  40a810:	d544      	bpl.n	40a89c <__sfvwrite_r+0x2b0>
  40a812:	4611      	mov	r1, r2
  40a814:	9800      	ldr	r0, [sp, #0]
  40a816:	f000 f92f 	bl	40aa78 <_malloc_r>
  40a81a:	4683      	mov	fp, r0
  40a81c:	2800      	cmp	r0, #0
  40a81e:	d055      	beq.n	40a8cc <__sfvwrite_r+0x2e0>
  40a820:	4652      	mov	r2, sl
  40a822:	6921      	ldr	r1, [r4, #16]
  40a824:	f7fb ff74 	bl	406710 <memcpy>
  40a828:	89a3      	ldrh	r3, [r4, #12]
  40a82a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  40a82e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40a832:	81a3      	strh	r3, [r4, #12]
  40a834:	eb0b 000a 	add.w	r0, fp, sl
  40a838:	eba8 030a 	sub.w	r3, r8, sl
  40a83c:	f8c4 b010 	str.w	fp, [r4, #16]
  40a840:	f8c4 8014 	str.w	r8, [r4, #20]
  40a844:	6020      	str	r0, [r4, #0]
  40a846:	60a3      	str	r3, [r4, #8]
  40a848:	46b8      	mov	r8, r7
  40a84a:	46ba      	mov	sl, r7
  40a84c:	46bb      	mov	fp, r7
  40a84e:	e721      	b.n	40a694 <__sfvwrite_r+0xa8>
  40a850:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  40a854:	42b9      	cmp	r1, r7
  40a856:	bf28      	it	cs
  40a858:	4639      	movcs	r1, r7
  40a85a:	464a      	mov	r2, r9
  40a85c:	fb91 f1f3 	sdiv	r1, r1, r3
  40a860:	9800      	ldr	r0, [sp, #0]
  40a862:	6a66      	ldr	r6, [r4, #36]	; 0x24
  40a864:	fb03 f301 	mul.w	r3, r3, r1
  40a868:	69e1      	ldr	r1, [r4, #28]
  40a86a:	47b0      	blx	r6
  40a86c:	f1b0 0a00 	subs.w	sl, r0, #0
  40a870:	f73f af1b 	bgt.w	40a6aa <__sfvwrite_r+0xbe>
  40a874:	e738      	b.n	40a6e8 <__sfvwrite_r+0xfc>
  40a876:	461a      	mov	r2, r3
  40a878:	4629      	mov	r1, r5
  40a87a:	9301      	str	r3, [sp, #4]
  40a87c:	f000 fc18 	bl	40b0b0 <memmove>
  40a880:	6822      	ldr	r2, [r4, #0]
  40a882:	9b01      	ldr	r3, [sp, #4]
  40a884:	9800      	ldr	r0, [sp, #0]
  40a886:	441a      	add	r2, r3
  40a888:	6022      	str	r2, [r4, #0]
  40a88a:	4621      	mov	r1, r4
  40a88c:	f7ff fc4a 	bl	40a124 <_fflush_r>
  40a890:	9b01      	ldr	r3, [sp, #4]
  40a892:	2800      	cmp	r0, #0
  40a894:	f47f af28 	bne.w	40a6e8 <__sfvwrite_r+0xfc>
  40a898:	461f      	mov	r7, r3
  40a89a:	e750      	b.n	40a73e <__sfvwrite_r+0x152>
  40a89c:	9800      	ldr	r0, [sp, #0]
  40a89e:	f000 ff71 	bl	40b784 <_realloc_r>
  40a8a2:	4683      	mov	fp, r0
  40a8a4:	2800      	cmp	r0, #0
  40a8a6:	d1c5      	bne.n	40a834 <__sfvwrite_r+0x248>
  40a8a8:	9d00      	ldr	r5, [sp, #0]
  40a8aa:	6921      	ldr	r1, [r4, #16]
  40a8ac:	4628      	mov	r0, r5
  40a8ae:	f7ff fdb7 	bl	40a420 <_free_r>
  40a8b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a8b6:	220c      	movs	r2, #12
  40a8b8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40a8bc:	602a      	str	r2, [r5, #0]
  40a8be:	e715      	b.n	40a6ec <__sfvwrite_r+0x100>
  40a8c0:	f106 0901 	add.w	r9, r6, #1
  40a8c4:	e722      	b.n	40a70c <__sfvwrite_r+0x120>
  40a8c6:	f04f 30ff 	mov.w	r0, #4294967295
  40a8ca:	e6bf      	b.n	40a64c <__sfvwrite_r+0x60>
  40a8cc:	9a00      	ldr	r2, [sp, #0]
  40a8ce:	230c      	movs	r3, #12
  40a8d0:	6013      	str	r3, [r2, #0]
  40a8d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40a8d6:	e709      	b.n	40a6ec <__sfvwrite_r+0x100>
  40a8d8:	7ffffc00 	.word	0x7ffffc00

0040a8dc <_fwalk_reent>:
  40a8dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40a8e0:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  40a8e4:	d01f      	beq.n	40a926 <_fwalk_reent+0x4a>
  40a8e6:	4688      	mov	r8, r1
  40a8e8:	4606      	mov	r6, r0
  40a8ea:	f04f 0900 	mov.w	r9, #0
  40a8ee:	687d      	ldr	r5, [r7, #4]
  40a8f0:	68bc      	ldr	r4, [r7, #8]
  40a8f2:	3d01      	subs	r5, #1
  40a8f4:	d411      	bmi.n	40a91a <_fwalk_reent+0x3e>
  40a8f6:	89a3      	ldrh	r3, [r4, #12]
  40a8f8:	2b01      	cmp	r3, #1
  40a8fa:	f105 35ff 	add.w	r5, r5, #4294967295
  40a8fe:	d908      	bls.n	40a912 <_fwalk_reent+0x36>
  40a900:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  40a904:	3301      	adds	r3, #1
  40a906:	4621      	mov	r1, r4
  40a908:	4630      	mov	r0, r6
  40a90a:	d002      	beq.n	40a912 <_fwalk_reent+0x36>
  40a90c:	47c0      	blx	r8
  40a90e:	ea49 0900 	orr.w	r9, r9, r0
  40a912:	1c6b      	adds	r3, r5, #1
  40a914:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40a918:	d1ed      	bne.n	40a8f6 <_fwalk_reent+0x1a>
  40a91a:	683f      	ldr	r7, [r7, #0]
  40a91c:	2f00      	cmp	r7, #0
  40a91e:	d1e6      	bne.n	40a8ee <_fwalk_reent+0x12>
  40a920:	4648      	mov	r0, r9
  40a922:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40a926:	46b9      	mov	r9, r7
  40a928:	4648      	mov	r0, r9
  40a92a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40a92e:	bf00      	nop

0040a930 <__locale_mb_cur_max>:
  40a930:	4b04      	ldr	r3, [pc, #16]	; (40a944 <__locale_mb_cur_max+0x14>)
  40a932:	4a05      	ldr	r2, [pc, #20]	; (40a948 <__locale_mb_cur_max+0x18>)
  40a934:	681b      	ldr	r3, [r3, #0]
  40a936:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  40a938:	2b00      	cmp	r3, #0
  40a93a:	bf08      	it	eq
  40a93c:	4613      	moveq	r3, r2
  40a93e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  40a942:	4770      	bx	lr
  40a944:	20400048 	.word	0x20400048
  40a948:	2040047c 	.word	0x2040047c

0040a94c <_localeconv_r>:
  40a94c:	4a04      	ldr	r2, [pc, #16]	; (40a960 <_localeconv_r+0x14>)
  40a94e:	4b05      	ldr	r3, [pc, #20]	; (40a964 <_localeconv_r+0x18>)
  40a950:	6812      	ldr	r2, [r2, #0]
  40a952:	6b50      	ldr	r0, [r2, #52]	; 0x34
  40a954:	2800      	cmp	r0, #0
  40a956:	bf08      	it	eq
  40a958:	4618      	moveq	r0, r3
  40a95a:	30f0      	adds	r0, #240	; 0xf0
  40a95c:	4770      	bx	lr
  40a95e:	bf00      	nop
  40a960:	20400048 	.word	0x20400048
  40a964:	2040047c 	.word	0x2040047c

0040a968 <__retarget_lock_init_recursive>:
  40a968:	4770      	bx	lr
  40a96a:	bf00      	nop

0040a96c <__retarget_lock_close_recursive>:
  40a96c:	4770      	bx	lr
  40a96e:	bf00      	nop

0040a970 <__retarget_lock_acquire_recursive>:
  40a970:	4770      	bx	lr
  40a972:	bf00      	nop

0040a974 <__retarget_lock_release_recursive>:
  40a974:	4770      	bx	lr
  40a976:	bf00      	nop

0040a978 <__swhatbuf_r>:
  40a978:	b570      	push	{r4, r5, r6, lr}
  40a97a:	460c      	mov	r4, r1
  40a97c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40a980:	2900      	cmp	r1, #0
  40a982:	b090      	sub	sp, #64	; 0x40
  40a984:	4615      	mov	r5, r2
  40a986:	461e      	mov	r6, r3
  40a988:	db14      	blt.n	40a9b4 <__swhatbuf_r+0x3c>
  40a98a:	aa01      	add	r2, sp, #4
  40a98c:	f001 fb20 	bl	40bfd0 <_fstat_r>
  40a990:	2800      	cmp	r0, #0
  40a992:	db0f      	blt.n	40a9b4 <__swhatbuf_r+0x3c>
  40a994:	9a02      	ldr	r2, [sp, #8]
  40a996:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40a99a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  40a99e:	fab2 f282 	clz	r2, r2
  40a9a2:	0952      	lsrs	r2, r2, #5
  40a9a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40a9a8:	f44f 6000 	mov.w	r0, #2048	; 0x800
  40a9ac:	6032      	str	r2, [r6, #0]
  40a9ae:	602b      	str	r3, [r5, #0]
  40a9b0:	b010      	add	sp, #64	; 0x40
  40a9b2:	bd70      	pop	{r4, r5, r6, pc}
  40a9b4:	89a2      	ldrh	r2, [r4, #12]
  40a9b6:	2300      	movs	r3, #0
  40a9b8:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  40a9bc:	6033      	str	r3, [r6, #0]
  40a9be:	d004      	beq.n	40a9ca <__swhatbuf_r+0x52>
  40a9c0:	2240      	movs	r2, #64	; 0x40
  40a9c2:	4618      	mov	r0, r3
  40a9c4:	602a      	str	r2, [r5, #0]
  40a9c6:	b010      	add	sp, #64	; 0x40
  40a9c8:	bd70      	pop	{r4, r5, r6, pc}
  40a9ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40a9ce:	602b      	str	r3, [r5, #0]
  40a9d0:	b010      	add	sp, #64	; 0x40
  40a9d2:	bd70      	pop	{r4, r5, r6, pc}

0040a9d4 <__smakebuf_r>:
  40a9d4:	898a      	ldrh	r2, [r1, #12]
  40a9d6:	0792      	lsls	r2, r2, #30
  40a9d8:	460b      	mov	r3, r1
  40a9da:	d506      	bpl.n	40a9ea <__smakebuf_r+0x16>
  40a9dc:	f101 0243 	add.w	r2, r1, #67	; 0x43
  40a9e0:	2101      	movs	r1, #1
  40a9e2:	601a      	str	r2, [r3, #0]
  40a9e4:	611a      	str	r2, [r3, #16]
  40a9e6:	6159      	str	r1, [r3, #20]
  40a9e8:	4770      	bx	lr
  40a9ea:	b5f0      	push	{r4, r5, r6, r7, lr}
  40a9ec:	b083      	sub	sp, #12
  40a9ee:	ab01      	add	r3, sp, #4
  40a9f0:	466a      	mov	r2, sp
  40a9f2:	460c      	mov	r4, r1
  40a9f4:	4606      	mov	r6, r0
  40a9f6:	f7ff ffbf 	bl	40a978 <__swhatbuf_r>
  40a9fa:	9900      	ldr	r1, [sp, #0]
  40a9fc:	4605      	mov	r5, r0
  40a9fe:	4630      	mov	r0, r6
  40aa00:	f000 f83a 	bl	40aa78 <_malloc_r>
  40aa04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40aa08:	b1d8      	cbz	r0, 40aa42 <__smakebuf_r+0x6e>
  40aa0a:	9a01      	ldr	r2, [sp, #4]
  40aa0c:	4f15      	ldr	r7, [pc, #84]	; (40aa64 <__smakebuf_r+0x90>)
  40aa0e:	9900      	ldr	r1, [sp, #0]
  40aa10:	63f7      	str	r7, [r6, #60]	; 0x3c
  40aa12:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40aa16:	81a3      	strh	r3, [r4, #12]
  40aa18:	6020      	str	r0, [r4, #0]
  40aa1a:	6120      	str	r0, [r4, #16]
  40aa1c:	6161      	str	r1, [r4, #20]
  40aa1e:	b91a      	cbnz	r2, 40aa28 <__smakebuf_r+0x54>
  40aa20:	432b      	orrs	r3, r5
  40aa22:	81a3      	strh	r3, [r4, #12]
  40aa24:	b003      	add	sp, #12
  40aa26:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40aa28:	4630      	mov	r0, r6
  40aa2a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40aa2e:	f001 fae3 	bl	40bff8 <_isatty_r>
  40aa32:	b1a0      	cbz	r0, 40aa5e <__smakebuf_r+0x8a>
  40aa34:	89a3      	ldrh	r3, [r4, #12]
  40aa36:	f023 0303 	bic.w	r3, r3, #3
  40aa3a:	f043 0301 	orr.w	r3, r3, #1
  40aa3e:	b21b      	sxth	r3, r3
  40aa40:	e7ee      	b.n	40aa20 <__smakebuf_r+0x4c>
  40aa42:	059a      	lsls	r2, r3, #22
  40aa44:	d4ee      	bmi.n	40aa24 <__smakebuf_r+0x50>
  40aa46:	f023 0303 	bic.w	r3, r3, #3
  40aa4a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40aa4e:	f043 0302 	orr.w	r3, r3, #2
  40aa52:	2101      	movs	r1, #1
  40aa54:	81a3      	strh	r3, [r4, #12]
  40aa56:	6022      	str	r2, [r4, #0]
  40aa58:	6122      	str	r2, [r4, #16]
  40aa5a:	6161      	str	r1, [r4, #20]
  40aa5c:	e7e2      	b.n	40aa24 <__smakebuf_r+0x50>
  40aa5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40aa62:	e7dd      	b.n	40aa20 <__smakebuf_r+0x4c>
  40aa64:	0040a179 	.word	0x0040a179

0040aa68 <malloc>:
  40aa68:	4b02      	ldr	r3, [pc, #8]	; (40aa74 <malloc+0xc>)
  40aa6a:	4601      	mov	r1, r0
  40aa6c:	6818      	ldr	r0, [r3, #0]
  40aa6e:	f000 b803 	b.w	40aa78 <_malloc_r>
  40aa72:	bf00      	nop
  40aa74:	20400048 	.word	0x20400048

0040aa78 <_malloc_r>:
  40aa78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40aa7c:	f101 060b 	add.w	r6, r1, #11
  40aa80:	2e16      	cmp	r6, #22
  40aa82:	b083      	sub	sp, #12
  40aa84:	4605      	mov	r5, r0
  40aa86:	f240 809e 	bls.w	40abc6 <_malloc_r+0x14e>
  40aa8a:	f036 0607 	bics.w	r6, r6, #7
  40aa8e:	f100 80bd 	bmi.w	40ac0c <_malloc_r+0x194>
  40aa92:	42b1      	cmp	r1, r6
  40aa94:	f200 80ba 	bhi.w	40ac0c <_malloc_r+0x194>
  40aa98:	f000 fb6e 	bl	40b178 <__malloc_lock>
  40aa9c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40aaa0:	f0c0 8293 	bcc.w	40afca <_malloc_r+0x552>
  40aaa4:	0a73      	lsrs	r3, r6, #9
  40aaa6:	f000 80b8 	beq.w	40ac1a <_malloc_r+0x1a2>
  40aaaa:	2b04      	cmp	r3, #4
  40aaac:	f200 8179 	bhi.w	40ada2 <_malloc_r+0x32a>
  40aab0:	09b3      	lsrs	r3, r6, #6
  40aab2:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40aab6:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40aaba:	00c3      	lsls	r3, r0, #3
  40aabc:	4fbf      	ldr	r7, [pc, #764]	; (40adbc <_malloc_r+0x344>)
  40aabe:	443b      	add	r3, r7
  40aac0:	f1a3 0108 	sub.w	r1, r3, #8
  40aac4:	685c      	ldr	r4, [r3, #4]
  40aac6:	42a1      	cmp	r1, r4
  40aac8:	d106      	bne.n	40aad8 <_malloc_r+0x60>
  40aaca:	e00c      	b.n	40aae6 <_malloc_r+0x6e>
  40aacc:	2a00      	cmp	r2, #0
  40aace:	f280 80aa 	bge.w	40ac26 <_malloc_r+0x1ae>
  40aad2:	68e4      	ldr	r4, [r4, #12]
  40aad4:	42a1      	cmp	r1, r4
  40aad6:	d006      	beq.n	40aae6 <_malloc_r+0x6e>
  40aad8:	6863      	ldr	r3, [r4, #4]
  40aada:	f023 0303 	bic.w	r3, r3, #3
  40aade:	1b9a      	subs	r2, r3, r6
  40aae0:	2a0f      	cmp	r2, #15
  40aae2:	ddf3      	ble.n	40aacc <_malloc_r+0x54>
  40aae4:	4670      	mov	r0, lr
  40aae6:	693c      	ldr	r4, [r7, #16]
  40aae8:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40add0 <_malloc_r+0x358>
  40aaec:	4574      	cmp	r4, lr
  40aaee:	f000 81ab 	beq.w	40ae48 <_malloc_r+0x3d0>
  40aaf2:	6863      	ldr	r3, [r4, #4]
  40aaf4:	f023 0303 	bic.w	r3, r3, #3
  40aaf8:	1b9a      	subs	r2, r3, r6
  40aafa:	2a0f      	cmp	r2, #15
  40aafc:	f300 8190 	bgt.w	40ae20 <_malloc_r+0x3a8>
  40ab00:	2a00      	cmp	r2, #0
  40ab02:	f8c7 e014 	str.w	lr, [r7, #20]
  40ab06:	f8c7 e010 	str.w	lr, [r7, #16]
  40ab0a:	f280 809d 	bge.w	40ac48 <_malloc_r+0x1d0>
  40ab0e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40ab12:	f080 8161 	bcs.w	40add8 <_malloc_r+0x360>
  40ab16:	08db      	lsrs	r3, r3, #3
  40ab18:	f103 0c01 	add.w	ip, r3, #1
  40ab1c:	1099      	asrs	r1, r3, #2
  40ab1e:	687a      	ldr	r2, [r7, #4]
  40ab20:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  40ab24:	f8c4 8008 	str.w	r8, [r4, #8]
  40ab28:	2301      	movs	r3, #1
  40ab2a:	408b      	lsls	r3, r1
  40ab2c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40ab30:	4313      	orrs	r3, r2
  40ab32:	3908      	subs	r1, #8
  40ab34:	60e1      	str	r1, [r4, #12]
  40ab36:	607b      	str	r3, [r7, #4]
  40ab38:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  40ab3c:	f8c8 400c 	str.w	r4, [r8, #12]
  40ab40:	1082      	asrs	r2, r0, #2
  40ab42:	2401      	movs	r4, #1
  40ab44:	4094      	lsls	r4, r2
  40ab46:	429c      	cmp	r4, r3
  40ab48:	f200 808b 	bhi.w	40ac62 <_malloc_r+0x1ea>
  40ab4c:	421c      	tst	r4, r3
  40ab4e:	d106      	bne.n	40ab5e <_malloc_r+0xe6>
  40ab50:	f020 0003 	bic.w	r0, r0, #3
  40ab54:	0064      	lsls	r4, r4, #1
  40ab56:	421c      	tst	r4, r3
  40ab58:	f100 0004 	add.w	r0, r0, #4
  40ab5c:	d0fa      	beq.n	40ab54 <_malloc_r+0xdc>
  40ab5e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40ab62:	46cc      	mov	ip, r9
  40ab64:	4680      	mov	r8, r0
  40ab66:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40ab6a:	459c      	cmp	ip, r3
  40ab6c:	d107      	bne.n	40ab7e <_malloc_r+0x106>
  40ab6e:	e16d      	b.n	40ae4c <_malloc_r+0x3d4>
  40ab70:	2a00      	cmp	r2, #0
  40ab72:	f280 817b 	bge.w	40ae6c <_malloc_r+0x3f4>
  40ab76:	68db      	ldr	r3, [r3, #12]
  40ab78:	459c      	cmp	ip, r3
  40ab7a:	f000 8167 	beq.w	40ae4c <_malloc_r+0x3d4>
  40ab7e:	6859      	ldr	r1, [r3, #4]
  40ab80:	f021 0103 	bic.w	r1, r1, #3
  40ab84:	1b8a      	subs	r2, r1, r6
  40ab86:	2a0f      	cmp	r2, #15
  40ab88:	ddf2      	ble.n	40ab70 <_malloc_r+0xf8>
  40ab8a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40ab8e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40ab92:	9300      	str	r3, [sp, #0]
  40ab94:	199c      	adds	r4, r3, r6
  40ab96:	4628      	mov	r0, r5
  40ab98:	f046 0601 	orr.w	r6, r6, #1
  40ab9c:	f042 0501 	orr.w	r5, r2, #1
  40aba0:	605e      	str	r6, [r3, #4]
  40aba2:	f8c8 c00c 	str.w	ip, [r8, #12]
  40aba6:	f8cc 8008 	str.w	r8, [ip, #8]
  40abaa:	617c      	str	r4, [r7, #20]
  40abac:	613c      	str	r4, [r7, #16]
  40abae:	f8c4 e00c 	str.w	lr, [r4, #12]
  40abb2:	f8c4 e008 	str.w	lr, [r4, #8]
  40abb6:	6065      	str	r5, [r4, #4]
  40abb8:	505a      	str	r2, [r3, r1]
  40abba:	f000 fae3 	bl	40b184 <__malloc_unlock>
  40abbe:	9b00      	ldr	r3, [sp, #0]
  40abc0:	f103 0408 	add.w	r4, r3, #8
  40abc4:	e01e      	b.n	40ac04 <_malloc_r+0x18c>
  40abc6:	2910      	cmp	r1, #16
  40abc8:	d820      	bhi.n	40ac0c <_malloc_r+0x194>
  40abca:	f000 fad5 	bl	40b178 <__malloc_lock>
  40abce:	2610      	movs	r6, #16
  40abd0:	2318      	movs	r3, #24
  40abd2:	2002      	movs	r0, #2
  40abd4:	4f79      	ldr	r7, [pc, #484]	; (40adbc <_malloc_r+0x344>)
  40abd6:	443b      	add	r3, r7
  40abd8:	f1a3 0208 	sub.w	r2, r3, #8
  40abdc:	685c      	ldr	r4, [r3, #4]
  40abde:	4294      	cmp	r4, r2
  40abe0:	f000 813d 	beq.w	40ae5e <_malloc_r+0x3e6>
  40abe4:	6863      	ldr	r3, [r4, #4]
  40abe6:	68e1      	ldr	r1, [r4, #12]
  40abe8:	68a6      	ldr	r6, [r4, #8]
  40abea:	f023 0303 	bic.w	r3, r3, #3
  40abee:	4423      	add	r3, r4
  40abf0:	4628      	mov	r0, r5
  40abf2:	685a      	ldr	r2, [r3, #4]
  40abf4:	60f1      	str	r1, [r6, #12]
  40abf6:	f042 0201 	orr.w	r2, r2, #1
  40abfa:	608e      	str	r6, [r1, #8]
  40abfc:	605a      	str	r2, [r3, #4]
  40abfe:	f000 fac1 	bl	40b184 <__malloc_unlock>
  40ac02:	3408      	adds	r4, #8
  40ac04:	4620      	mov	r0, r4
  40ac06:	b003      	add	sp, #12
  40ac08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40ac0c:	2400      	movs	r4, #0
  40ac0e:	230c      	movs	r3, #12
  40ac10:	4620      	mov	r0, r4
  40ac12:	602b      	str	r3, [r5, #0]
  40ac14:	b003      	add	sp, #12
  40ac16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40ac1a:	2040      	movs	r0, #64	; 0x40
  40ac1c:	f44f 7300 	mov.w	r3, #512	; 0x200
  40ac20:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  40ac24:	e74a      	b.n	40aabc <_malloc_r+0x44>
  40ac26:	4423      	add	r3, r4
  40ac28:	68e1      	ldr	r1, [r4, #12]
  40ac2a:	685a      	ldr	r2, [r3, #4]
  40ac2c:	68a6      	ldr	r6, [r4, #8]
  40ac2e:	f042 0201 	orr.w	r2, r2, #1
  40ac32:	60f1      	str	r1, [r6, #12]
  40ac34:	4628      	mov	r0, r5
  40ac36:	608e      	str	r6, [r1, #8]
  40ac38:	605a      	str	r2, [r3, #4]
  40ac3a:	f000 faa3 	bl	40b184 <__malloc_unlock>
  40ac3e:	3408      	adds	r4, #8
  40ac40:	4620      	mov	r0, r4
  40ac42:	b003      	add	sp, #12
  40ac44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40ac48:	4423      	add	r3, r4
  40ac4a:	4628      	mov	r0, r5
  40ac4c:	685a      	ldr	r2, [r3, #4]
  40ac4e:	f042 0201 	orr.w	r2, r2, #1
  40ac52:	605a      	str	r2, [r3, #4]
  40ac54:	f000 fa96 	bl	40b184 <__malloc_unlock>
  40ac58:	3408      	adds	r4, #8
  40ac5a:	4620      	mov	r0, r4
  40ac5c:	b003      	add	sp, #12
  40ac5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40ac62:	68bc      	ldr	r4, [r7, #8]
  40ac64:	6863      	ldr	r3, [r4, #4]
  40ac66:	f023 0803 	bic.w	r8, r3, #3
  40ac6a:	45b0      	cmp	r8, r6
  40ac6c:	d304      	bcc.n	40ac78 <_malloc_r+0x200>
  40ac6e:	eba8 0306 	sub.w	r3, r8, r6
  40ac72:	2b0f      	cmp	r3, #15
  40ac74:	f300 8085 	bgt.w	40ad82 <_malloc_r+0x30a>
  40ac78:	f8df 9158 	ldr.w	r9, [pc, #344]	; 40add4 <_malloc_r+0x35c>
  40ac7c:	4b50      	ldr	r3, [pc, #320]	; (40adc0 <_malloc_r+0x348>)
  40ac7e:	f8d9 2000 	ldr.w	r2, [r9]
  40ac82:	681b      	ldr	r3, [r3, #0]
  40ac84:	3201      	adds	r2, #1
  40ac86:	4433      	add	r3, r6
  40ac88:	eb04 0a08 	add.w	sl, r4, r8
  40ac8c:	f000 8155 	beq.w	40af3a <_malloc_r+0x4c2>
  40ac90:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  40ac94:	330f      	adds	r3, #15
  40ac96:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40ac9a:	f02b 0b0f 	bic.w	fp, fp, #15
  40ac9e:	4659      	mov	r1, fp
  40aca0:	4628      	mov	r0, r5
  40aca2:	f000 ff15 	bl	40bad0 <_sbrk_r>
  40aca6:	1c41      	adds	r1, r0, #1
  40aca8:	4602      	mov	r2, r0
  40acaa:	f000 80fc 	beq.w	40aea6 <_malloc_r+0x42e>
  40acae:	4582      	cmp	sl, r0
  40acb0:	f200 80f7 	bhi.w	40aea2 <_malloc_r+0x42a>
  40acb4:	4b43      	ldr	r3, [pc, #268]	; (40adc4 <_malloc_r+0x34c>)
  40acb6:	6819      	ldr	r1, [r3, #0]
  40acb8:	4459      	add	r1, fp
  40acba:	6019      	str	r1, [r3, #0]
  40acbc:	f000 814d 	beq.w	40af5a <_malloc_r+0x4e2>
  40acc0:	f8d9 0000 	ldr.w	r0, [r9]
  40acc4:	3001      	adds	r0, #1
  40acc6:	bf1b      	ittet	ne
  40acc8:	eba2 0a0a 	subne.w	sl, r2, sl
  40accc:	4451      	addne	r1, sl
  40acce:	f8c9 2000 	streq.w	r2, [r9]
  40acd2:	6019      	strne	r1, [r3, #0]
  40acd4:	f012 0107 	ands.w	r1, r2, #7
  40acd8:	f000 8115 	beq.w	40af06 <_malloc_r+0x48e>
  40acdc:	f1c1 0008 	rsb	r0, r1, #8
  40ace0:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  40ace4:	4402      	add	r2, r0
  40ace6:	3108      	adds	r1, #8
  40ace8:	eb02 090b 	add.w	r9, r2, fp
  40acec:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40acf0:	eba1 0909 	sub.w	r9, r1, r9
  40acf4:	4649      	mov	r1, r9
  40acf6:	4628      	mov	r0, r5
  40acf8:	9301      	str	r3, [sp, #4]
  40acfa:	9200      	str	r2, [sp, #0]
  40acfc:	f000 fee8 	bl	40bad0 <_sbrk_r>
  40ad00:	1c43      	adds	r3, r0, #1
  40ad02:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40ad06:	f000 8143 	beq.w	40af90 <_malloc_r+0x518>
  40ad0a:	1a80      	subs	r0, r0, r2
  40ad0c:	4448      	add	r0, r9
  40ad0e:	f040 0001 	orr.w	r0, r0, #1
  40ad12:	6819      	ldr	r1, [r3, #0]
  40ad14:	60ba      	str	r2, [r7, #8]
  40ad16:	4449      	add	r1, r9
  40ad18:	42bc      	cmp	r4, r7
  40ad1a:	6050      	str	r0, [r2, #4]
  40ad1c:	6019      	str	r1, [r3, #0]
  40ad1e:	d017      	beq.n	40ad50 <_malloc_r+0x2d8>
  40ad20:	f1b8 0f0f 	cmp.w	r8, #15
  40ad24:	f240 80fb 	bls.w	40af1e <_malloc_r+0x4a6>
  40ad28:	6860      	ldr	r0, [r4, #4]
  40ad2a:	f1a8 020c 	sub.w	r2, r8, #12
  40ad2e:	f022 0207 	bic.w	r2, r2, #7
  40ad32:	eb04 0e02 	add.w	lr, r4, r2
  40ad36:	f000 0001 	and.w	r0, r0, #1
  40ad3a:	f04f 0c05 	mov.w	ip, #5
  40ad3e:	4310      	orrs	r0, r2
  40ad40:	2a0f      	cmp	r2, #15
  40ad42:	6060      	str	r0, [r4, #4]
  40ad44:	f8ce c004 	str.w	ip, [lr, #4]
  40ad48:	f8ce c008 	str.w	ip, [lr, #8]
  40ad4c:	f200 8117 	bhi.w	40af7e <_malloc_r+0x506>
  40ad50:	4b1d      	ldr	r3, [pc, #116]	; (40adc8 <_malloc_r+0x350>)
  40ad52:	68bc      	ldr	r4, [r7, #8]
  40ad54:	681a      	ldr	r2, [r3, #0]
  40ad56:	4291      	cmp	r1, r2
  40ad58:	bf88      	it	hi
  40ad5a:	6019      	strhi	r1, [r3, #0]
  40ad5c:	4b1b      	ldr	r3, [pc, #108]	; (40adcc <_malloc_r+0x354>)
  40ad5e:	681a      	ldr	r2, [r3, #0]
  40ad60:	4291      	cmp	r1, r2
  40ad62:	6862      	ldr	r2, [r4, #4]
  40ad64:	bf88      	it	hi
  40ad66:	6019      	strhi	r1, [r3, #0]
  40ad68:	f022 0203 	bic.w	r2, r2, #3
  40ad6c:	4296      	cmp	r6, r2
  40ad6e:	eba2 0306 	sub.w	r3, r2, r6
  40ad72:	d801      	bhi.n	40ad78 <_malloc_r+0x300>
  40ad74:	2b0f      	cmp	r3, #15
  40ad76:	dc04      	bgt.n	40ad82 <_malloc_r+0x30a>
  40ad78:	4628      	mov	r0, r5
  40ad7a:	f000 fa03 	bl	40b184 <__malloc_unlock>
  40ad7e:	2400      	movs	r4, #0
  40ad80:	e740      	b.n	40ac04 <_malloc_r+0x18c>
  40ad82:	19a2      	adds	r2, r4, r6
  40ad84:	f043 0301 	orr.w	r3, r3, #1
  40ad88:	f046 0601 	orr.w	r6, r6, #1
  40ad8c:	6066      	str	r6, [r4, #4]
  40ad8e:	4628      	mov	r0, r5
  40ad90:	60ba      	str	r2, [r7, #8]
  40ad92:	6053      	str	r3, [r2, #4]
  40ad94:	f000 f9f6 	bl	40b184 <__malloc_unlock>
  40ad98:	3408      	adds	r4, #8
  40ad9a:	4620      	mov	r0, r4
  40ad9c:	b003      	add	sp, #12
  40ad9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40ada2:	2b14      	cmp	r3, #20
  40ada4:	d971      	bls.n	40ae8a <_malloc_r+0x412>
  40ada6:	2b54      	cmp	r3, #84	; 0x54
  40ada8:	f200 80a3 	bhi.w	40aef2 <_malloc_r+0x47a>
  40adac:	0b33      	lsrs	r3, r6, #12
  40adae:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40adb2:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40adb6:	00c3      	lsls	r3, r0, #3
  40adb8:	e680      	b.n	40aabc <_malloc_r+0x44>
  40adba:	bf00      	nop
  40adbc:	204005e8 	.word	0x204005e8
  40adc0:	2040f3b4 	.word	0x2040f3b4
  40adc4:	2040f384 	.word	0x2040f384
  40adc8:	2040f3ac 	.word	0x2040f3ac
  40adcc:	2040f3b0 	.word	0x2040f3b0
  40add0:	204005f0 	.word	0x204005f0
  40add4:	204009f0 	.word	0x204009f0
  40add8:	0a5a      	lsrs	r2, r3, #9
  40adda:	2a04      	cmp	r2, #4
  40addc:	d95b      	bls.n	40ae96 <_malloc_r+0x41e>
  40adde:	2a14      	cmp	r2, #20
  40ade0:	f200 80ae 	bhi.w	40af40 <_malloc_r+0x4c8>
  40ade4:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40ade8:	00c9      	lsls	r1, r1, #3
  40adea:	325b      	adds	r2, #91	; 0x5b
  40adec:	eb07 0c01 	add.w	ip, r7, r1
  40adf0:	5879      	ldr	r1, [r7, r1]
  40adf2:	f1ac 0c08 	sub.w	ip, ip, #8
  40adf6:	458c      	cmp	ip, r1
  40adf8:	f000 8088 	beq.w	40af0c <_malloc_r+0x494>
  40adfc:	684a      	ldr	r2, [r1, #4]
  40adfe:	f022 0203 	bic.w	r2, r2, #3
  40ae02:	4293      	cmp	r3, r2
  40ae04:	d273      	bcs.n	40aeee <_malloc_r+0x476>
  40ae06:	6889      	ldr	r1, [r1, #8]
  40ae08:	458c      	cmp	ip, r1
  40ae0a:	d1f7      	bne.n	40adfc <_malloc_r+0x384>
  40ae0c:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40ae10:	687b      	ldr	r3, [r7, #4]
  40ae12:	60e2      	str	r2, [r4, #12]
  40ae14:	f8c4 c008 	str.w	ip, [r4, #8]
  40ae18:	6094      	str	r4, [r2, #8]
  40ae1a:	f8cc 400c 	str.w	r4, [ip, #12]
  40ae1e:	e68f      	b.n	40ab40 <_malloc_r+0xc8>
  40ae20:	19a1      	adds	r1, r4, r6
  40ae22:	f046 0c01 	orr.w	ip, r6, #1
  40ae26:	f042 0601 	orr.w	r6, r2, #1
  40ae2a:	f8c4 c004 	str.w	ip, [r4, #4]
  40ae2e:	4628      	mov	r0, r5
  40ae30:	6179      	str	r1, [r7, #20]
  40ae32:	6139      	str	r1, [r7, #16]
  40ae34:	f8c1 e00c 	str.w	lr, [r1, #12]
  40ae38:	f8c1 e008 	str.w	lr, [r1, #8]
  40ae3c:	604e      	str	r6, [r1, #4]
  40ae3e:	50e2      	str	r2, [r4, r3]
  40ae40:	f000 f9a0 	bl	40b184 <__malloc_unlock>
  40ae44:	3408      	adds	r4, #8
  40ae46:	e6dd      	b.n	40ac04 <_malloc_r+0x18c>
  40ae48:	687b      	ldr	r3, [r7, #4]
  40ae4a:	e679      	b.n	40ab40 <_malloc_r+0xc8>
  40ae4c:	f108 0801 	add.w	r8, r8, #1
  40ae50:	f018 0f03 	tst.w	r8, #3
  40ae54:	f10c 0c08 	add.w	ip, ip, #8
  40ae58:	f47f ae85 	bne.w	40ab66 <_malloc_r+0xee>
  40ae5c:	e02d      	b.n	40aeba <_malloc_r+0x442>
  40ae5e:	68dc      	ldr	r4, [r3, #12]
  40ae60:	42a3      	cmp	r3, r4
  40ae62:	bf08      	it	eq
  40ae64:	3002      	addeq	r0, #2
  40ae66:	f43f ae3e 	beq.w	40aae6 <_malloc_r+0x6e>
  40ae6a:	e6bb      	b.n	40abe4 <_malloc_r+0x16c>
  40ae6c:	4419      	add	r1, r3
  40ae6e:	461c      	mov	r4, r3
  40ae70:	684a      	ldr	r2, [r1, #4]
  40ae72:	68db      	ldr	r3, [r3, #12]
  40ae74:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40ae78:	f042 0201 	orr.w	r2, r2, #1
  40ae7c:	604a      	str	r2, [r1, #4]
  40ae7e:	4628      	mov	r0, r5
  40ae80:	60f3      	str	r3, [r6, #12]
  40ae82:	609e      	str	r6, [r3, #8]
  40ae84:	f000 f97e 	bl	40b184 <__malloc_unlock>
  40ae88:	e6bc      	b.n	40ac04 <_malloc_r+0x18c>
  40ae8a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40ae8e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40ae92:	00c3      	lsls	r3, r0, #3
  40ae94:	e612      	b.n	40aabc <_malloc_r+0x44>
  40ae96:	099a      	lsrs	r2, r3, #6
  40ae98:	f102 0139 	add.w	r1, r2, #57	; 0x39
  40ae9c:	00c9      	lsls	r1, r1, #3
  40ae9e:	3238      	adds	r2, #56	; 0x38
  40aea0:	e7a4      	b.n	40adec <_malloc_r+0x374>
  40aea2:	42bc      	cmp	r4, r7
  40aea4:	d054      	beq.n	40af50 <_malloc_r+0x4d8>
  40aea6:	68bc      	ldr	r4, [r7, #8]
  40aea8:	6862      	ldr	r2, [r4, #4]
  40aeaa:	f022 0203 	bic.w	r2, r2, #3
  40aeae:	e75d      	b.n	40ad6c <_malloc_r+0x2f4>
  40aeb0:	f859 3908 	ldr.w	r3, [r9], #-8
  40aeb4:	4599      	cmp	r9, r3
  40aeb6:	f040 8086 	bne.w	40afc6 <_malloc_r+0x54e>
  40aeba:	f010 0f03 	tst.w	r0, #3
  40aebe:	f100 30ff 	add.w	r0, r0, #4294967295
  40aec2:	d1f5      	bne.n	40aeb0 <_malloc_r+0x438>
  40aec4:	687b      	ldr	r3, [r7, #4]
  40aec6:	ea23 0304 	bic.w	r3, r3, r4
  40aeca:	607b      	str	r3, [r7, #4]
  40aecc:	0064      	lsls	r4, r4, #1
  40aece:	429c      	cmp	r4, r3
  40aed0:	f63f aec7 	bhi.w	40ac62 <_malloc_r+0x1ea>
  40aed4:	2c00      	cmp	r4, #0
  40aed6:	f43f aec4 	beq.w	40ac62 <_malloc_r+0x1ea>
  40aeda:	421c      	tst	r4, r3
  40aedc:	4640      	mov	r0, r8
  40aede:	f47f ae3e 	bne.w	40ab5e <_malloc_r+0xe6>
  40aee2:	0064      	lsls	r4, r4, #1
  40aee4:	421c      	tst	r4, r3
  40aee6:	f100 0004 	add.w	r0, r0, #4
  40aeea:	d0fa      	beq.n	40aee2 <_malloc_r+0x46a>
  40aeec:	e637      	b.n	40ab5e <_malloc_r+0xe6>
  40aeee:	468c      	mov	ip, r1
  40aef0:	e78c      	b.n	40ae0c <_malloc_r+0x394>
  40aef2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40aef6:	d815      	bhi.n	40af24 <_malloc_r+0x4ac>
  40aef8:	0bf3      	lsrs	r3, r6, #15
  40aefa:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40aefe:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40af02:	00c3      	lsls	r3, r0, #3
  40af04:	e5da      	b.n	40aabc <_malloc_r+0x44>
  40af06:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40af0a:	e6ed      	b.n	40ace8 <_malloc_r+0x270>
  40af0c:	687b      	ldr	r3, [r7, #4]
  40af0e:	1092      	asrs	r2, r2, #2
  40af10:	2101      	movs	r1, #1
  40af12:	fa01 f202 	lsl.w	r2, r1, r2
  40af16:	4313      	orrs	r3, r2
  40af18:	607b      	str	r3, [r7, #4]
  40af1a:	4662      	mov	r2, ip
  40af1c:	e779      	b.n	40ae12 <_malloc_r+0x39a>
  40af1e:	2301      	movs	r3, #1
  40af20:	6053      	str	r3, [r2, #4]
  40af22:	e729      	b.n	40ad78 <_malloc_r+0x300>
  40af24:	f240 5254 	movw	r2, #1364	; 0x554
  40af28:	4293      	cmp	r3, r2
  40af2a:	d822      	bhi.n	40af72 <_malloc_r+0x4fa>
  40af2c:	0cb3      	lsrs	r3, r6, #18
  40af2e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40af32:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40af36:	00c3      	lsls	r3, r0, #3
  40af38:	e5c0      	b.n	40aabc <_malloc_r+0x44>
  40af3a:	f103 0b10 	add.w	fp, r3, #16
  40af3e:	e6ae      	b.n	40ac9e <_malloc_r+0x226>
  40af40:	2a54      	cmp	r2, #84	; 0x54
  40af42:	d829      	bhi.n	40af98 <_malloc_r+0x520>
  40af44:	0b1a      	lsrs	r2, r3, #12
  40af46:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40af4a:	00c9      	lsls	r1, r1, #3
  40af4c:	326e      	adds	r2, #110	; 0x6e
  40af4e:	e74d      	b.n	40adec <_malloc_r+0x374>
  40af50:	4b20      	ldr	r3, [pc, #128]	; (40afd4 <_malloc_r+0x55c>)
  40af52:	6819      	ldr	r1, [r3, #0]
  40af54:	4459      	add	r1, fp
  40af56:	6019      	str	r1, [r3, #0]
  40af58:	e6b2      	b.n	40acc0 <_malloc_r+0x248>
  40af5a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40af5e:	2800      	cmp	r0, #0
  40af60:	f47f aeae 	bne.w	40acc0 <_malloc_r+0x248>
  40af64:	eb08 030b 	add.w	r3, r8, fp
  40af68:	68ba      	ldr	r2, [r7, #8]
  40af6a:	f043 0301 	orr.w	r3, r3, #1
  40af6e:	6053      	str	r3, [r2, #4]
  40af70:	e6ee      	b.n	40ad50 <_malloc_r+0x2d8>
  40af72:	207f      	movs	r0, #127	; 0x7f
  40af74:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40af78:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  40af7c:	e59e      	b.n	40aabc <_malloc_r+0x44>
  40af7e:	f104 0108 	add.w	r1, r4, #8
  40af82:	4628      	mov	r0, r5
  40af84:	9300      	str	r3, [sp, #0]
  40af86:	f7ff fa4b 	bl	40a420 <_free_r>
  40af8a:	9b00      	ldr	r3, [sp, #0]
  40af8c:	6819      	ldr	r1, [r3, #0]
  40af8e:	e6df      	b.n	40ad50 <_malloc_r+0x2d8>
  40af90:	2001      	movs	r0, #1
  40af92:	f04f 0900 	mov.w	r9, #0
  40af96:	e6bc      	b.n	40ad12 <_malloc_r+0x29a>
  40af98:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40af9c:	d805      	bhi.n	40afaa <_malloc_r+0x532>
  40af9e:	0bda      	lsrs	r2, r3, #15
  40afa0:	f102 0178 	add.w	r1, r2, #120	; 0x78
  40afa4:	00c9      	lsls	r1, r1, #3
  40afa6:	3277      	adds	r2, #119	; 0x77
  40afa8:	e720      	b.n	40adec <_malloc_r+0x374>
  40afaa:	f240 5154 	movw	r1, #1364	; 0x554
  40afae:	428a      	cmp	r2, r1
  40afb0:	d805      	bhi.n	40afbe <_malloc_r+0x546>
  40afb2:	0c9a      	lsrs	r2, r3, #18
  40afb4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40afb8:	00c9      	lsls	r1, r1, #3
  40afba:	327c      	adds	r2, #124	; 0x7c
  40afbc:	e716      	b.n	40adec <_malloc_r+0x374>
  40afbe:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40afc2:	227e      	movs	r2, #126	; 0x7e
  40afc4:	e712      	b.n	40adec <_malloc_r+0x374>
  40afc6:	687b      	ldr	r3, [r7, #4]
  40afc8:	e780      	b.n	40aecc <_malloc_r+0x454>
  40afca:	08f0      	lsrs	r0, r6, #3
  40afcc:	f106 0308 	add.w	r3, r6, #8
  40afd0:	e600      	b.n	40abd4 <_malloc_r+0x15c>
  40afd2:	bf00      	nop
  40afd4:	2040f384 	.word	0x2040f384

0040afd8 <__ascii_mbtowc>:
  40afd8:	b082      	sub	sp, #8
  40afda:	b149      	cbz	r1, 40aff0 <__ascii_mbtowc+0x18>
  40afdc:	b15a      	cbz	r2, 40aff6 <__ascii_mbtowc+0x1e>
  40afde:	b16b      	cbz	r3, 40affc <__ascii_mbtowc+0x24>
  40afe0:	7813      	ldrb	r3, [r2, #0]
  40afe2:	600b      	str	r3, [r1, #0]
  40afe4:	7812      	ldrb	r2, [r2, #0]
  40afe6:	1c10      	adds	r0, r2, #0
  40afe8:	bf18      	it	ne
  40afea:	2001      	movne	r0, #1
  40afec:	b002      	add	sp, #8
  40afee:	4770      	bx	lr
  40aff0:	a901      	add	r1, sp, #4
  40aff2:	2a00      	cmp	r2, #0
  40aff4:	d1f3      	bne.n	40afde <__ascii_mbtowc+0x6>
  40aff6:	4610      	mov	r0, r2
  40aff8:	b002      	add	sp, #8
  40affa:	4770      	bx	lr
  40affc:	f06f 0001 	mvn.w	r0, #1
  40b000:	e7f4      	b.n	40afec <__ascii_mbtowc+0x14>
  40b002:	bf00      	nop
	...

0040b010 <memchr>:
  40b010:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40b014:	2a10      	cmp	r2, #16
  40b016:	db2b      	blt.n	40b070 <memchr+0x60>
  40b018:	f010 0f07 	tst.w	r0, #7
  40b01c:	d008      	beq.n	40b030 <memchr+0x20>
  40b01e:	f810 3b01 	ldrb.w	r3, [r0], #1
  40b022:	3a01      	subs	r2, #1
  40b024:	428b      	cmp	r3, r1
  40b026:	d02d      	beq.n	40b084 <memchr+0x74>
  40b028:	f010 0f07 	tst.w	r0, #7
  40b02c:	b342      	cbz	r2, 40b080 <memchr+0x70>
  40b02e:	d1f6      	bne.n	40b01e <memchr+0xe>
  40b030:	b4f0      	push	{r4, r5, r6, r7}
  40b032:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  40b036:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40b03a:	f022 0407 	bic.w	r4, r2, #7
  40b03e:	f07f 0700 	mvns.w	r7, #0
  40b042:	2300      	movs	r3, #0
  40b044:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  40b048:	3c08      	subs	r4, #8
  40b04a:	ea85 0501 	eor.w	r5, r5, r1
  40b04e:	ea86 0601 	eor.w	r6, r6, r1
  40b052:	fa85 f547 	uadd8	r5, r5, r7
  40b056:	faa3 f587 	sel	r5, r3, r7
  40b05a:	fa86 f647 	uadd8	r6, r6, r7
  40b05e:	faa5 f687 	sel	r6, r5, r7
  40b062:	b98e      	cbnz	r6, 40b088 <memchr+0x78>
  40b064:	d1ee      	bne.n	40b044 <memchr+0x34>
  40b066:	bcf0      	pop	{r4, r5, r6, r7}
  40b068:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40b06c:	f002 0207 	and.w	r2, r2, #7
  40b070:	b132      	cbz	r2, 40b080 <memchr+0x70>
  40b072:	f810 3b01 	ldrb.w	r3, [r0], #1
  40b076:	3a01      	subs	r2, #1
  40b078:	ea83 0301 	eor.w	r3, r3, r1
  40b07c:	b113      	cbz	r3, 40b084 <memchr+0x74>
  40b07e:	d1f8      	bne.n	40b072 <memchr+0x62>
  40b080:	2000      	movs	r0, #0
  40b082:	4770      	bx	lr
  40b084:	3801      	subs	r0, #1
  40b086:	4770      	bx	lr
  40b088:	2d00      	cmp	r5, #0
  40b08a:	bf06      	itte	eq
  40b08c:	4635      	moveq	r5, r6
  40b08e:	3803      	subeq	r0, #3
  40b090:	3807      	subne	r0, #7
  40b092:	f015 0f01 	tst.w	r5, #1
  40b096:	d107      	bne.n	40b0a8 <memchr+0x98>
  40b098:	3001      	adds	r0, #1
  40b09a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40b09e:	bf02      	ittt	eq
  40b0a0:	3001      	addeq	r0, #1
  40b0a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  40b0a6:	3001      	addeq	r0, #1
  40b0a8:	bcf0      	pop	{r4, r5, r6, r7}
  40b0aa:	3801      	subs	r0, #1
  40b0ac:	4770      	bx	lr
  40b0ae:	bf00      	nop

0040b0b0 <memmove>:
  40b0b0:	4288      	cmp	r0, r1
  40b0b2:	b5f0      	push	{r4, r5, r6, r7, lr}
  40b0b4:	d90d      	bls.n	40b0d2 <memmove+0x22>
  40b0b6:	188b      	adds	r3, r1, r2
  40b0b8:	4298      	cmp	r0, r3
  40b0ba:	d20a      	bcs.n	40b0d2 <memmove+0x22>
  40b0bc:	1884      	adds	r4, r0, r2
  40b0be:	2a00      	cmp	r2, #0
  40b0c0:	d051      	beq.n	40b166 <memmove+0xb6>
  40b0c2:	4622      	mov	r2, r4
  40b0c4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40b0c8:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40b0cc:	4299      	cmp	r1, r3
  40b0ce:	d1f9      	bne.n	40b0c4 <memmove+0x14>
  40b0d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40b0d2:	2a0f      	cmp	r2, #15
  40b0d4:	d948      	bls.n	40b168 <memmove+0xb8>
  40b0d6:	ea41 0300 	orr.w	r3, r1, r0
  40b0da:	079b      	lsls	r3, r3, #30
  40b0dc:	d146      	bne.n	40b16c <memmove+0xbc>
  40b0de:	f100 0410 	add.w	r4, r0, #16
  40b0e2:	f101 0310 	add.w	r3, r1, #16
  40b0e6:	4615      	mov	r5, r2
  40b0e8:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40b0ec:	f844 6c10 	str.w	r6, [r4, #-16]
  40b0f0:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  40b0f4:	f844 6c0c 	str.w	r6, [r4, #-12]
  40b0f8:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40b0fc:	f844 6c08 	str.w	r6, [r4, #-8]
  40b100:	3d10      	subs	r5, #16
  40b102:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40b106:	f844 6c04 	str.w	r6, [r4, #-4]
  40b10a:	2d0f      	cmp	r5, #15
  40b10c:	f103 0310 	add.w	r3, r3, #16
  40b110:	f104 0410 	add.w	r4, r4, #16
  40b114:	d8e8      	bhi.n	40b0e8 <memmove+0x38>
  40b116:	f1a2 0310 	sub.w	r3, r2, #16
  40b11a:	f023 030f 	bic.w	r3, r3, #15
  40b11e:	f002 0e0f 	and.w	lr, r2, #15
  40b122:	3310      	adds	r3, #16
  40b124:	f1be 0f03 	cmp.w	lr, #3
  40b128:	4419      	add	r1, r3
  40b12a:	4403      	add	r3, r0
  40b12c:	d921      	bls.n	40b172 <memmove+0xc2>
  40b12e:	1f1e      	subs	r6, r3, #4
  40b130:	460d      	mov	r5, r1
  40b132:	4674      	mov	r4, lr
  40b134:	3c04      	subs	r4, #4
  40b136:	f855 7b04 	ldr.w	r7, [r5], #4
  40b13a:	f846 7f04 	str.w	r7, [r6, #4]!
  40b13e:	2c03      	cmp	r4, #3
  40b140:	d8f8      	bhi.n	40b134 <memmove+0x84>
  40b142:	f1ae 0404 	sub.w	r4, lr, #4
  40b146:	f024 0403 	bic.w	r4, r4, #3
  40b14a:	3404      	adds	r4, #4
  40b14c:	4421      	add	r1, r4
  40b14e:	4423      	add	r3, r4
  40b150:	f002 0203 	and.w	r2, r2, #3
  40b154:	b162      	cbz	r2, 40b170 <memmove+0xc0>
  40b156:	3b01      	subs	r3, #1
  40b158:	440a      	add	r2, r1
  40b15a:	f811 4b01 	ldrb.w	r4, [r1], #1
  40b15e:	f803 4f01 	strb.w	r4, [r3, #1]!
  40b162:	428a      	cmp	r2, r1
  40b164:	d1f9      	bne.n	40b15a <memmove+0xaa>
  40b166:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40b168:	4603      	mov	r3, r0
  40b16a:	e7f3      	b.n	40b154 <memmove+0xa4>
  40b16c:	4603      	mov	r3, r0
  40b16e:	e7f2      	b.n	40b156 <memmove+0xa6>
  40b170:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40b172:	4672      	mov	r2, lr
  40b174:	e7ee      	b.n	40b154 <memmove+0xa4>
  40b176:	bf00      	nop

0040b178 <__malloc_lock>:
  40b178:	4801      	ldr	r0, [pc, #4]	; (40b180 <__malloc_lock+0x8>)
  40b17a:	f7ff bbf9 	b.w	40a970 <__retarget_lock_acquire_recursive>
  40b17e:	bf00      	nop
  40b180:	2040f4e0 	.word	0x2040f4e0

0040b184 <__malloc_unlock>:
  40b184:	4801      	ldr	r0, [pc, #4]	; (40b18c <__malloc_unlock+0x8>)
  40b186:	f7ff bbf5 	b.w	40a974 <__retarget_lock_release_recursive>
  40b18a:	bf00      	nop
  40b18c:	2040f4e0 	.word	0x2040f4e0

0040b190 <_Balloc>:
  40b190:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40b192:	b570      	push	{r4, r5, r6, lr}
  40b194:	4605      	mov	r5, r0
  40b196:	460c      	mov	r4, r1
  40b198:	b14b      	cbz	r3, 40b1ae <_Balloc+0x1e>
  40b19a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40b19e:	b180      	cbz	r0, 40b1c2 <_Balloc+0x32>
  40b1a0:	6802      	ldr	r2, [r0, #0]
  40b1a2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  40b1a6:	2300      	movs	r3, #0
  40b1a8:	6103      	str	r3, [r0, #16]
  40b1aa:	60c3      	str	r3, [r0, #12]
  40b1ac:	bd70      	pop	{r4, r5, r6, pc}
  40b1ae:	2221      	movs	r2, #33	; 0x21
  40b1b0:	2104      	movs	r1, #4
  40b1b2:	f000 fe69 	bl	40be88 <_calloc_r>
  40b1b6:	64e8      	str	r0, [r5, #76]	; 0x4c
  40b1b8:	4603      	mov	r3, r0
  40b1ba:	2800      	cmp	r0, #0
  40b1bc:	d1ed      	bne.n	40b19a <_Balloc+0xa>
  40b1be:	2000      	movs	r0, #0
  40b1c0:	bd70      	pop	{r4, r5, r6, pc}
  40b1c2:	2101      	movs	r1, #1
  40b1c4:	fa01 f604 	lsl.w	r6, r1, r4
  40b1c8:	1d72      	adds	r2, r6, #5
  40b1ca:	4628      	mov	r0, r5
  40b1cc:	0092      	lsls	r2, r2, #2
  40b1ce:	f000 fe5b 	bl	40be88 <_calloc_r>
  40b1d2:	2800      	cmp	r0, #0
  40b1d4:	d0f3      	beq.n	40b1be <_Balloc+0x2e>
  40b1d6:	6044      	str	r4, [r0, #4]
  40b1d8:	6086      	str	r6, [r0, #8]
  40b1da:	e7e4      	b.n	40b1a6 <_Balloc+0x16>

0040b1dc <_Bfree>:
  40b1dc:	b131      	cbz	r1, 40b1ec <_Bfree+0x10>
  40b1de:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40b1e0:	684a      	ldr	r2, [r1, #4]
  40b1e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  40b1e6:	6008      	str	r0, [r1, #0]
  40b1e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40b1ec:	4770      	bx	lr
  40b1ee:	bf00      	nop

0040b1f0 <__multadd>:
  40b1f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  40b1f2:	690c      	ldr	r4, [r1, #16]
  40b1f4:	b083      	sub	sp, #12
  40b1f6:	460d      	mov	r5, r1
  40b1f8:	4606      	mov	r6, r0
  40b1fa:	f101 0e14 	add.w	lr, r1, #20
  40b1fe:	2700      	movs	r7, #0
  40b200:	f8de 0000 	ldr.w	r0, [lr]
  40b204:	b281      	uxth	r1, r0
  40b206:	fb02 3301 	mla	r3, r2, r1, r3
  40b20a:	0c01      	lsrs	r1, r0, #16
  40b20c:	0c18      	lsrs	r0, r3, #16
  40b20e:	fb02 0101 	mla	r1, r2, r1, r0
  40b212:	b29b      	uxth	r3, r3
  40b214:	3701      	adds	r7, #1
  40b216:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40b21a:	42bc      	cmp	r4, r7
  40b21c:	f84e 3b04 	str.w	r3, [lr], #4
  40b220:	ea4f 4311 	mov.w	r3, r1, lsr #16
  40b224:	dcec      	bgt.n	40b200 <__multadd+0x10>
  40b226:	b13b      	cbz	r3, 40b238 <__multadd+0x48>
  40b228:	68aa      	ldr	r2, [r5, #8]
  40b22a:	4294      	cmp	r4, r2
  40b22c:	da07      	bge.n	40b23e <__multadd+0x4e>
  40b22e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40b232:	3401      	adds	r4, #1
  40b234:	6153      	str	r3, [r2, #20]
  40b236:	612c      	str	r4, [r5, #16]
  40b238:	4628      	mov	r0, r5
  40b23a:	b003      	add	sp, #12
  40b23c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40b23e:	6869      	ldr	r1, [r5, #4]
  40b240:	9301      	str	r3, [sp, #4]
  40b242:	3101      	adds	r1, #1
  40b244:	4630      	mov	r0, r6
  40b246:	f7ff ffa3 	bl	40b190 <_Balloc>
  40b24a:	692a      	ldr	r2, [r5, #16]
  40b24c:	3202      	adds	r2, #2
  40b24e:	f105 010c 	add.w	r1, r5, #12
  40b252:	4607      	mov	r7, r0
  40b254:	0092      	lsls	r2, r2, #2
  40b256:	300c      	adds	r0, #12
  40b258:	f7fb fa5a 	bl	406710 <memcpy>
  40b25c:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40b25e:	6869      	ldr	r1, [r5, #4]
  40b260:	9b01      	ldr	r3, [sp, #4]
  40b262:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  40b266:	6028      	str	r0, [r5, #0]
  40b268:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  40b26c:	463d      	mov	r5, r7
  40b26e:	e7de      	b.n	40b22e <__multadd+0x3e>

0040b270 <__hi0bits>:
  40b270:	0c02      	lsrs	r2, r0, #16
  40b272:	0412      	lsls	r2, r2, #16
  40b274:	4603      	mov	r3, r0
  40b276:	b9b2      	cbnz	r2, 40b2a6 <__hi0bits+0x36>
  40b278:	0403      	lsls	r3, r0, #16
  40b27a:	2010      	movs	r0, #16
  40b27c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40b280:	bf04      	itt	eq
  40b282:	021b      	lsleq	r3, r3, #8
  40b284:	3008      	addeq	r0, #8
  40b286:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  40b28a:	bf04      	itt	eq
  40b28c:	011b      	lsleq	r3, r3, #4
  40b28e:	3004      	addeq	r0, #4
  40b290:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  40b294:	bf04      	itt	eq
  40b296:	009b      	lsleq	r3, r3, #2
  40b298:	3002      	addeq	r0, #2
  40b29a:	2b00      	cmp	r3, #0
  40b29c:	db02      	blt.n	40b2a4 <__hi0bits+0x34>
  40b29e:	005b      	lsls	r3, r3, #1
  40b2a0:	d403      	bmi.n	40b2aa <__hi0bits+0x3a>
  40b2a2:	2020      	movs	r0, #32
  40b2a4:	4770      	bx	lr
  40b2a6:	2000      	movs	r0, #0
  40b2a8:	e7e8      	b.n	40b27c <__hi0bits+0xc>
  40b2aa:	3001      	adds	r0, #1
  40b2ac:	4770      	bx	lr
  40b2ae:	bf00      	nop

0040b2b0 <__lo0bits>:
  40b2b0:	6803      	ldr	r3, [r0, #0]
  40b2b2:	f013 0207 	ands.w	r2, r3, #7
  40b2b6:	4601      	mov	r1, r0
  40b2b8:	d007      	beq.n	40b2ca <__lo0bits+0x1a>
  40b2ba:	07da      	lsls	r2, r3, #31
  40b2bc:	d421      	bmi.n	40b302 <__lo0bits+0x52>
  40b2be:	0798      	lsls	r0, r3, #30
  40b2c0:	d421      	bmi.n	40b306 <__lo0bits+0x56>
  40b2c2:	089b      	lsrs	r3, r3, #2
  40b2c4:	600b      	str	r3, [r1, #0]
  40b2c6:	2002      	movs	r0, #2
  40b2c8:	4770      	bx	lr
  40b2ca:	b298      	uxth	r0, r3
  40b2cc:	b198      	cbz	r0, 40b2f6 <__lo0bits+0x46>
  40b2ce:	4610      	mov	r0, r2
  40b2d0:	f013 0fff 	tst.w	r3, #255	; 0xff
  40b2d4:	bf04      	itt	eq
  40b2d6:	0a1b      	lsreq	r3, r3, #8
  40b2d8:	3008      	addeq	r0, #8
  40b2da:	071a      	lsls	r2, r3, #28
  40b2dc:	bf04      	itt	eq
  40b2de:	091b      	lsreq	r3, r3, #4
  40b2e0:	3004      	addeq	r0, #4
  40b2e2:	079a      	lsls	r2, r3, #30
  40b2e4:	bf04      	itt	eq
  40b2e6:	089b      	lsreq	r3, r3, #2
  40b2e8:	3002      	addeq	r0, #2
  40b2ea:	07da      	lsls	r2, r3, #31
  40b2ec:	d407      	bmi.n	40b2fe <__lo0bits+0x4e>
  40b2ee:	085b      	lsrs	r3, r3, #1
  40b2f0:	d104      	bne.n	40b2fc <__lo0bits+0x4c>
  40b2f2:	2020      	movs	r0, #32
  40b2f4:	4770      	bx	lr
  40b2f6:	0c1b      	lsrs	r3, r3, #16
  40b2f8:	2010      	movs	r0, #16
  40b2fa:	e7e9      	b.n	40b2d0 <__lo0bits+0x20>
  40b2fc:	3001      	adds	r0, #1
  40b2fe:	600b      	str	r3, [r1, #0]
  40b300:	4770      	bx	lr
  40b302:	2000      	movs	r0, #0
  40b304:	4770      	bx	lr
  40b306:	085b      	lsrs	r3, r3, #1
  40b308:	600b      	str	r3, [r1, #0]
  40b30a:	2001      	movs	r0, #1
  40b30c:	4770      	bx	lr
  40b30e:	bf00      	nop

0040b310 <__i2b>:
  40b310:	b510      	push	{r4, lr}
  40b312:	460c      	mov	r4, r1
  40b314:	2101      	movs	r1, #1
  40b316:	f7ff ff3b 	bl	40b190 <_Balloc>
  40b31a:	2201      	movs	r2, #1
  40b31c:	6144      	str	r4, [r0, #20]
  40b31e:	6102      	str	r2, [r0, #16]
  40b320:	bd10      	pop	{r4, pc}
  40b322:	bf00      	nop

0040b324 <__multiply>:
  40b324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40b328:	690c      	ldr	r4, [r1, #16]
  40b32a:	6915      	ldr	r5, [r2, #16]
  40b32c:	42ac      	cmp	r4, r5
  40b32e:	b083      	sub	sp, #12
  40b330:	468b      	mov	fp, r1
  40b332:	4616      	mov	r6, r2
  40b334:	da04      	bge.n	40b340 <__multiply+0x1c>
  40b336:	4622      	mov	r2, r4
  40b338:	46b3      	mov	fp, r6
  40b33a:	462c      	mov	r4, r5
  40b33c:	460e      	mov	r6, r1
  40b33e:	4615      	mov	r5, r2
  40b340:	f8db 3008 	ldr.w	r3, [fp, #8]
  40b344:	f8db 1004 	ldr.w	r1, [fp, #4]
  40b348:	eb04 0805 	add.w	r8, r4, r5
  40b34c:	4598      	cmp	r8, r3
  40b34e:	bfc8      	it	gt
  40b350:	3101      	addgt	r1, #1
  40b352:	f7ff ff1d 	bl	40b190 <_Balloc>
  40b356:	f100 0914 	add.w	r9, r0, #20
  40b35a:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40b35e:	45d1      	cmp	r9, sl
  40b360:	9000      	str	r0, [sp, #0]
  40b362:	d205      	bcs.n	40b370 <__multiply+0x4c>
  40b364:	464b      	mov	r3, r9
  40b366:	2100      	movs	r1, #0
  40b368:	f843 1b04 	str.w	r1, [r3], #4
  40b36c:	459a      	cmp	sl, r3
  40b36e:	d8fb      	bhi.n	40b368 <__multiply+0x44>
  40b370:	f106 0c14 	add.w	ip, r6, #20
  40b374:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  40b378:	f10b 0b14 	add.w	fp, fp, #20
  40b37c:	459c      	cmp	ip, r3
  40b37e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40b382:	d24c      	bcs.n	40b41e <__multiply+0xfa>
  40b384:	f8cd a004 	str.w	sl, [sp, #4]
  40b388:	469a      	mov	sl, r3
  40b38a:	f8dc 5000 	ldr.w	r5, [ip]
  40b38e:	b2af      	uxth	r7, r5
  40b390:	b1ef      	cbz	r7, 40b3ce <__multiply+0xaa>
  40b392:	2100      	movs	r1, #0
  40b394:	464d      	mov	r5, r9
  40b396:	465e      	mov	r6, fp
  40b398:	460c      	mov	r4, r1
  40b39a:	f856 2b04 	ldr.w	r2, [r6], #4
  40b39e:	6828      	ldr	r0, [r5, #0]
  40b3a0:	b293      	uxth	r3, r2
  40b3a2:	b281      	uxth	r1, r0
  40b3a4:	fb07 1303 	mla	r3, r7, r3, r1
  40b3a8:	0c12      	lsrs	r2, r2, #16
  40b3aa:	0c01      	lsrs	r1, r0, #16
  40b3ac:	4423      	add	r3, r4
  40b3ae:	fb07 1102 	mla	r1, r7, r2, r1
  40b3b2:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  40b3b6:	b29b      	uxth	r3, r3
  40b3b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  40b3bc:	45b6      	cmp	lr, r6
  40b3be:	f845 3b04 	str.w	r3, [r5], #4
  40b3c2:	ea4f 4411 	mov.w	r4, r1, lsr #16
  40b3c6:	d8e8      	bhi.n	40b39a <__multiply+0x76>
  40b3c8:	602c      	str	r4, [r5, #0]
  40b3ca:	f8dc 5000 	ldr.w	r5, [ip]
  40b3ce:	0c2d      	lsrs	r5, r5, #16
  40b3d0:	d01d      	beq.n	40b40e <__multiply+0xea>
  40b3d2:	f8d9 3000 	ldr.w	r3, [r9]
  40b3d6:	4648      	mov	r0, r9
  40b3d8:	461c      	mov	r4, r3
  40b3da:	4659      	mov	r1, fp
  40b3dc:	2200      	movs	r2, #0
  40b3de:	880e      	ldrh	r6, [r1, #0]
  40b3e0:	0c24      	lsrs	r4, r4, #16
  40b3e2:	fb05 4406 	mla	r4, r5, r6, r4
  40b3e6:	4422      	add	r2, r4
  40b3e8:	b29b      	uxth	r3, r3
  40b3ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40b3ee:	f840 3b04 	str.w	r3, [r0], #4
  40b3f2:	f851 3b04 	ldr.w	r3, [r1], #4
  40b3f6:	6804      	ldr	r4, [r0, #0]
  40b3f8:	0c1b      	lsrs	r3, r3, #16
  40b3fa:	b2a6      	uxth	r6, r4
  40b3fc:	fb05 6303 	mla	r3, r5, r3, r6
  40b400:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  40b404:	458e      	cmp	lr, r1
  40b406:	ea4f 4213 	mov.w	r2, r3, lsr #16
  40b40a:	d8e8      	bhi.n	40b3de <__multiply+0xba>
  40b40c:	6003      	str	r3, [r0, #0]
  40b40e:	f10c 0c04 	add.w	ip, ip, #4
  40b412:	45e2      	cmp	sl, ip
  40b414:	f109 0904 	add.w	r9, r9, #4
  40b418:	d8b7      	bhi.n	40b38a <__multiply+0x66>
  40b41a:	f8dd a004 	ldr.w	sl, [sp, #4]
  40b41e:	f1b8 0f00 	cmp.w	r8, #0
  40b422:	dd0b      	ble.n	40b43c <__multiply+0x118>
  40b424:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  40b428:	f1aa 0a04 	sub.w	sl, sl, #4
  40b42c:	b11b      	cbz	r3, 40b436 <__multiply+0x112>
  40b42e:	e005      	b.n	40b43c <__multiply+0x118>
  40b430:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  40b434:	b913      	cbnz	r3, 40b43c <__multiply+0x118>
  40b436:	f1b8 0801 	subs.w	r8, r8, #1
  40b43a:	d1f9      	bne.n	40b430 <__multiply+0x10c>
  40b43c:	9800      	ldr	r0, [sp, #0]
  40b43e:	f8c0 8010 	str.w	r8, [r0, #16]
  40b442:	b003      	add	sp, #12
  40b444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040b448 <__pow5mult>:
  40b448:	f012 0303 	ands.w	r3, r2, #3
  40b44c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40b450:	4614      	mov	r4, r2
  40b452:	4607      	mov	r7, r0
  40b454:	d12e      	bne.n	40b4b4 <__pow5mult+0x6c>
  40b456:	460d      	mov	r5, r1
  40b458:	10a4      	asrs	r4, r4, #2
  40b45a:	d01c      	beq.n	40b496 <__pow5mult+0x4e>
  40b45c:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40b45e:	b396      	cbz	r6, 40b4c6 <__pow5mult+0x7e>
  40b460:	07e3      	lsls	r3, r4, #31
  40b462:	f04f 0800 	mov.w	r8, #0
  40b466:	d406      	bmi.n	40b476 <__pow5mult+0x2e>
  40b468:	1064      	asrs	r4, r4, #1
  40b46a:	d014      	beq.n	40b496 <__pow5mult+0x4e>
  40b46c:	6830      	ldr	r0, [r6, #0]
  40b46e:	b1a8      	cbz	r0, 40b49c <__pow5mult+0x54>
  40b470:	4606      	mov	r6, r0
  40b472:	07e3      	lsls	r3, r4, #31
  40b474:	d5f8      	bpl.n	40b468 <__pow5mult+0x20>
  40b476:	4632      	mov	r2, r6
  40b478:	4629      	mov	r1, r5
  40b47a:	4638      	mov	r0, r7
  40b47c:	f7ff ff52 	bl	40b324 <__multiply>
  40b480:	b1b5      	cbz	r5, 40b4b0 <__pow5mult+0x68>
  40b482:	686a      	ldr	r2, [r5, #4]
  40b484:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40b486:	1064      	asrs	r4, r4, #1
  40b488:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40b48c:	6029      	str	r1, [r5, #0]
  40b48e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40b492:	4605      	mov	r5, r0
  40b494:	d1ea      	bne.n	40b46c <__pow5mult+0x24>
  40b496:	4628      	mov	r0, r5
  40b498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40b49c:	4632      	mov	r2, r6
  40b49e:	4631      	mov	r1, r6
  40b4a0:	4638      	mov	r0, r7
  40b4a2:	f7ff ff3f 	bl	40b324 <__multiply>
  40b4a6:	6030      	str	r0, [r6, #0]
  40b4a8:	f8c0 8000 	str.w	r8, [r0]
  40b4ac:	4606      	mov	r6, r0
  40b4ae:	e7e0      	b.n	40b472 <__pow5mult+0x2a>
  40b4b0:	4605      	mov	r5, r0
  40b4b2:	e7d9      	b.n	40b468 <__pow5mult+0x20>
  40b4b4:	1e5a      	subs	r2, r3, #1
  40b4b6:	4d0b      	ldr	r5, [pc, #44]	; (40b4e4 <__pow5mult+0x9c>)
  40b4b8:	2300      	movs	r3, #0
  40b4ba:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40b4be:	f7ff fe97 	bl	40b1f0 <__multadd>
  40b4c2:	4605      	mov	r5, r0
  40b4c4:	e7c8      	b.n	40b458 <__pow5mult+0x10>
  40b4c6:	2101      	movs	r1, #1
  40b4c8:	4638      	mov	r0, r7
  40b4ca:	f7ff fe61 	bl	40b190 <_Balloc>
  40b4ce:	f240 2171 	movw	r1, #625	; 0x271
  40b4d2:	2201      	movs	r2, #1
  40b4d4:	2300      	movs	r3, #0
  40b4d6:	6141      	str	r1, [r0, #20]
  40b4d8:	6102      	str	r2, [r0, #16]
  40b4da:	4606      	mov	r6, r0
  40b4dc:	64b8      	str	r0, [r7, #72]	; 0x48
  40b4de:	6003      	str	r3, [r0, #0]
  40b4e0:	e7be      	b.n	40b460 <__pow5mult+0x18>
  40b4e2:	bf00      	nop
  40b4e4:	0040de60 	.word	0x0040de60

0040b4e8 <__lshift>:
  40b4e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40b4ec:	4691      	mov	r9, r2
  40b4ee:	690a      	ldr	r2, [r1, #16]
  40b4f0:	688b      	ldr	r3, [r1, #8]
  40b4f2:	ea4f 1469 	mov.w	r4, r9, asr #5
  40b4f6:	eb04 0802 	add.w	r8, r4, r2
  40b4fa:	f108 0501 	add.w	r5, r8, #1
  40b4fe:	429d      	cmp	r5, r3
  40b500:	460e      	mov	r6, r1
  40b502:	4607      	mov	r7, r0
  40b504:	6849      	ldr	r1, [r1, #4]
  40b506:	dd04      	ble.n	40b512 <__lshift+0x2a>
  40b508:	005b      	lsls	r3, r3, #1
  40b50a:	429d      	cmp	r5, r3
  40b50c:	f101 0101 	add.w	r1, r1, #1
  40b510:	dcfa      	bgt.n	40b508 <__lshift+0x20>
  40b512:	4638      	mov	r0, r7
  40b514:	f7ff fe3c 	bl	40b190 <_Balloc>
  40b518:	2c00      	cmp	r4, #0
  40b51a:	f100 0314 	add.w	r3, r0, #20
  40b51e:	dd06      	ble.n	40b52e <__lshift+0x46>
  40b520:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  40b524:	2100      	movs	r1, #0
  40b526:	f843 1b04 	str.w	r1, [r3], #4
  40b52a:	429a      	cmp	r2, r3
  40b52c:	d1fb      	bne.n	40b526 <__lshift+0x3e>
  40b52e:	6934      	ldr	r4, [r6, #16]
  40b530:	f106 0114 	add.w	r1, r6, #20
  40b534:	f019 091f 	ands.w	r9, r9, #31
  40b538:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  40b53c:	d01d      	beq.n	40b57a <__lshift+0x92>
  40b53e:	f1c9 0c20 	rsb	ip, r9, #32
  40b542:	2200      	movs	r2, #0
  40b544:	680c      	ldr	r4, [r1, #0]
  40b546:	fa04 f409 	lsl.w	r4, r4, r9
  40b54a:	4314      	orrs	r4, r2
  40b54c:	f843 4b04 	str.w	r4, [r3], #4
  40b550:	f851 2b04 	ldr.w	r2, [r1], #4
  40b554:	458e      	cmp	lr, r1
  40b556:	fa22 f20c 	lsr.w	r2, r2, ip
  40b55a:	d8f3      	bhi.n	40b544 <__lshift+0x5c>
  40b55c:	601a      	str	r2, [r3, #0]
  40b55e:	b10a      	cbz	r2, 40b564 <__lshift+0x7c>
  40b560:	f108 0502 	add.w	r5, r8, #2
  40b564:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  40b566:	6872      	ldr	r2, [r6, #4]
  40b568:	3d01      	subs	r5, #1
  40b56a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40b56e:	6105      	str	r5, [r0, #16]
  40b570:	6031      	str	r1, [r6, #0]
  40b572:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  40b576:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40b57a:	3b04      	subs	r3, #4
  40b57c:	f851 2b04 	ldr.w	r2, [r1], #4
  40b580:	f843 2f04 	str.w	r2, [r3, #4]!
  40b584:	458e      	cmp	lr, r1
  40b586:	d8f9      	bhi.n	40b57c <__lshift+0x94>
  40b588:	e7ec      	b.n	40b564 <__lshift+0x7c>
  40b58a:	bf00      	nop

0040b58c <__mcmp>:
  40b58c:	b430      	push	{r4, r5}
  40b58e:	690b      	ldr	r3, [r1, #16]
  40b590:	4605      	mov	r5, r0
  40b592:	6900      	ldr	r0, [r0, #16]
  40b594:	1ac0      	subs	r0, r0, r3
  40b596:	d10f      	bne.n	40b5b8 <__mcmp+0x2c>
  40b598:	009b      	lsls	r3, r3, #2
  40b59a:	3514      	adds	r5, #20
  40b59c:	3114      	adds	r1, #20
  40b59e:	4419      	add	r1, r3
  40b5a0:	442b      	add	r3, r5
  40b5a2:	e001      	b.n	40b5a8 <__mcmp+0x1c>
  40b5a4:	429d      	cmp	r5, r3
  40b5a6:	d207      	bcs.n	40b5b8 <__mcmp+0x2c>
  40b5a8:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  40b5ac:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40b5b0:	4294      	cmp	r4, r2
  40b5b2:	d0f7      	beq.n	40b5a4 <__mcmp+0x18>
  40b5b4:	d302      	bcc.n	40b5bc <__mcmp+0x30>
  40b5b6:	2001      	movs	r0, #1
  40b5b8:	bc30      	pop	{r4, r5}
  40b5ba:	4770      	bx	lr
  40b5bc:	f04f 30ff 	mov.w	r0, #4294967295
  40b5c0:	e7fa      	b.n	40b5b8 <__mcmp+0x2c>
  40b5c2:	bf00      	nop

0040b5c4 <__mdiff>:
  40b5c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40b5c8:	690f      	ldr	r7, [r1, #16]
  40b5ca:	460e      	mov	r6, r1
  40b5cc:	6911      	ldr	r1, [r2, #16]
  40b5ce:	1a7f      	subs	r7, r7, r1
  40b5d0:	2f00      	cmp	r7, #0
  40b5d2:	4690      	mov	r8, r2
  40b5d4:	d117      	bne.n	40b606 <__mdiff+0x42>
  40b5d6:	0089      	lsls	r1, r1, #2
  40b5d8:	f106 0514 	add.w	r5, r6, #20
  40b5dc:	f102 0e14 	add.w	lr, r2, #20
  40b5e0:	186b      	adds	r3, r5, r1
  40b5e2:	4471      	add	r1, lr
  40b5e4:	e001      	b.n	40b5ea <__mdiff+0x26>
  40b5e6:	429d      	cmp	r5, r3
  40b5e8:	d25c      	bcs.n	40b6a4 <__mdiff+0xe0>
  40b5ea:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40b5ee:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40b5f2:	42a2      	cmp	r2, r4
  40b5f4:	d0f7      	beq.n	40b5e6 <__mdiff+0x22>
  40b5f6:	d25e      	bcs.n	40b6b6 <__mdiff+0xf2>
  40b5f8:	4633      	mov	r3, r6
  40b5fa:	462c      	mov	r4, r5
  40b5fc:	4646      	mov	r6, r8
  40b5fe:	4675      	mov	r5, lr
  40b600:	4698      	mov	r8, r3
  40b602:	2701      	movs	r7, #1
  40b604:	e005      	b.n	40b612 <__mdiff+0x4e>
  40b606:	db58      	blt.n	40b6ba <__mdiff+0xf6>
  40b608:	f106 0514 	add.w	r5, r6, #20
  40b60c:	f108 0414 	add.w	r4, r8, #20
  40b610:	2700      	movs	r7, #0
  40b612:	6871      	ldr	r1, [r6, #4]
  40b614:	f7ff fdbc 	bl	40b190 <_Balloc>
  40b618:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40b61c:	6936      	ldr	r6, [r6, #16]
  40b61e:	60c7      	str	r7, [r0, #12]
  40b620:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  40b624:	46a6      	mov	lr, r4
  40b626:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  40b62a:	f100 0414 	add.w	r4, r0, #20
  40b62e:	2300      	movs	r3, #0
  40b630:	f85e 1b04 	ldr.w	r1, [lr], #4
  40b634:	f855 8b04 	ldr.w	r8, [r5], #4
  40b638:	b28a      	uxth	r2, r1
  40b63a:	fa13 f388 	uxtah	r3, r3, r8
  40b63e:	0c09      	lsrs	r1, r1, #16
  40b640:	1a9a      	subs	r2, r3, r2
  40b642:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  40b646:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40b64a:	b292      	uxth	r2, r2
  40b64c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40b650:	45f4      	cmp	ip, lr
  40b652:	f844 2b04 	str.w	r2, [r4], #4
  40b656:	ea4f 4323 	mov.w	r3, r3, asr #16
  40b65a:	d8e9      	bhi.n	40b630 <__mdiff+0x6c>
  40b65c:	42af      	cmp	r7, r5
  40b65e:	d917      	bls.n	40b690 <__mdiff+0xcc>
  40b660:	46a4      	mov	ip, r4
  40b662:	46ae      	mov	lr, r5
  40b664:	f85e 2b04 	ldr.w	r2, [lr], #4
  40b668:	fa13 f382 	uxtah	r3, r3, r2
  40b66c:	1419      	asrs	r1, r3, #16
  40b66e:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40b672:	b29b      	uxth	r3, r3
  40b674:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  40b678:	4577      	cmp	r7, lr
  40b67a:	f84c 2b04 	str.w	r2, [ip], #4
  40b67e:	ea4f 4321 	mov.w	r3, r1, asr #16
  40b682:	d8ef      	bhi.n	40b664 <__mdiff+0xa0>
  40b684:	43ed      	mvns	r5, r5
  40b686:	442f      	add	r7, r5
  40b688:	f027 0703 	bic.w	r7, r7, #3
  40b68c:	3704      	adds	r7, #4
  40b68e:	443c      	add	r4, r7
  40b690:	3c04      	subs	r4, #4
  40b692:	b922      	cbnz	r2, 40b69e <__mdiff+0xda>
  40b694:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  40b698:	3e01      	subs	r6, #1
  40b69a:	2b00      	cmp	r3, #0
  40b69c:	d0fa      	beq.n	40b694 <__mdiff+0xd0>
  40b69e:	6106      	str	r6, [r0, #16]
  40b6a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40b6a4:	2100      	movs	r1, #0
  40b6a6:	f7ff fd73 	bl	40b190 <_Balloc>
  40b6aa:	2201      	movs	r2, #1
  40b6ac:	2300      	movs	r3, #0
  40b6ae:	6102      	str	r2, [r0, #16]
  40b6b0:	6143      	str	r3, [r0, #20]
  40b6b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40b6b6:	4674      	mov	r4, lr
  40b6b8:	e7ab      	b.n	40b612 <__mdiff+0x4e>
  40b6ba:	4633      	mov	r3, r6
  40b6bc:	f106 0414 	add.w	r4, r6, #20
  40b6c0:	f102 0514 	add.w	r5, r2, #20
  40b6c4:	4616      	mov	r6, r2
  40b6c6:	2701      	movs	r7, #1
  40b6c8:	4698      	mov	r8, r3
  40b6ca:	e7a2      	b.n	40b612 <__mdiff+0x4e>

0040b6cc <__d2b>:
  40b6cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40b6d0:	b082      	sub	sp, #8
  40b6d2:	2101      	movs	r1, #1
  40b6d4:	461c      	mov	r4, r3
  40b6d6:	f3c3 570a 	ubfx	r7, r3, #20, #11
  40b6da:	4615      	mov	r5, r2
  40b6dc:	9e08      	ldr	r6, [sp, #32]
  40b6de:	f7ff fd57 	bl	40b190 <_Balloc>
  40b6e2:	f3c4 0413 	ubfx	r4, r4, #0, #20
  40b6e6:	4680      	mov	r8, r0
  40b6e8:	b10f      	cbz	r7, 40b6ee <__d2b+0x22>
  40b6ea:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40b6ee:	9401      	str	r4, [sp, #4]
  40b6f0:	b31d      	cbz	r5, 40b73a <__d2b+0x6e>
  40b6f2:	a802      	add	r0, sp, #8
  40b6f4:	f840 5d08 	str.w	r5, [r0, #-8]!
  40b6f8:	f7ff fdda 	bl	40b2b0 <__lo0bits>
  40b6fc:	2800      	cmp	r0, #0
  40b6fe:	d134      	bne.n	40b76a <__d2b+0x9e>
  40b700:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40b704:	f8c8 2014 	str.w	r2, [r8, #20]
  40b708:	2b00      	cmp	r3, #0
  40b70a:	bf0c      	ite	eq
  40b70c:	2101      	moveq	r1, #1
  40b70e:	2102      	movne	r1, #2
  40b710:	f8c8 3018 	str.w	r3, [r8, #24]
  40b714:	f8c8 1010 	str.w	r1, [r8, #16]
  40b718:	b9df      	cbnz	r7, 40b752 <__d2b+0x86>
  40b71a:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40b71e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40b722:	6030      	str	r0, [r6, #0]
  40b724:	6918      	ldr	r0, [r3, #16]
  40b726:	f7ff fda3 	bl	40b270 <__hi0bits>
  40b72a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40b72c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40b730:	6018      	str	r0, [r3, #0]
  40b732:	4640      	mov	r0, r8
  40b734:	b002      	add	sp, #8
  40b736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40b73a:	a801      	add	r0, sp, #4
  40b73c:	f7ff fdb8 	bl	40b2b0 <__lo0bits>
  40b740:	9b01      	ldr	r3, [sp, #4]
  40b742:	f8c8 3014 	str.w	r3, [r8, #20]
  40b746:	2101      	movs	r1, #1
  40b748:	3020      	adds	r0, #32
  40b74a:	f8c8 1010 	str.w	r1, [r8, #16]
  40b74e:	2f00      	cmp	r7, #0
  40b750:	d0e3      	beq.n	40b71a <__d2b+0x4e>
  40b752:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40b754:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  40b758:	4407      	add	r7, r0
  40b75a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40b75e:	6037      	str	r7, [r6, #0]
  40b760:	6018      	str	r0, [r3, #0]
  40b762:	4640      	mov	r0, r8
  40b764:	b002      	add	sp, #8
  40b766:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40b76a:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40b76e:	f1c0 0220 	rsb	r2, r0, #32
  40b772:	fa03 f202 	lsl.w	r2, r3, r2
  40b776:	430a      	orrs	r2, r1
  40b778:	40c3      	lsrs	r3, r0
  40b77a:	9301      	str	r3, [sp, #4]
  40b77c:	f8c8 2014 	str.w	r2, [r8, #20]
  40b780:	e7c2      	b.n	40b708 <__d2b+0x3c>
  40b782:	bf00      	nop

0040b784 <_realloc_r>:
  40b784:	2900      	cmp	r1, #0
  40b786:	f000 8095 	beq.w	40b8b4 <_realloc_r+0x130>
  40b78a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40b78e:	460d      	mov	r5, r1
  40b790:	4616      	mov	r6, r2
  40b792:	b083      	sub	sp, #12
  40b794:	4680      	mov	r8, r0
  40b796:	f106 070b 	add.w	r7, r6, #11
  40b79a:	f7ff fced 	bl	40b178 <__malloc_lock>
  40b79e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40b7a2:	2f16      	cmp	r7, #22
  40b7a4:	f02e 0403 	bic.w	r4, lr, #3
  40b7a8:	f1a5 0908 	sub.w	r9, r5, #8
  40b7ac:	d83c      	bhi.n	40b828 <_realloc_r+0xa4>
  40b7ae:	2210      	movs	r2, #16
  40b7b0:	4617      	mov	r7, r2
  40b7b2:	42be      	cmp	r6, r7
  40b7b4:	d83d      	bhi.n	40b832 <_realloc_r+0xae>
  40b7b6:	4294      	cmp	r4, r2
  40b7b8:	da43      	bge.n	40b842 <_realloc_r+0xbe>
  40b7ba:	4bc4      	ldr	r3, [pc, #784]	; (40bacc <_realloc_r+0x348>)
  40b7bc:	6899      	ldr	r1, [r3, #8]
  40b7be:	eb09 0004 	add.w	r0, r9, r4
  40b7c2:	4288      	cmp	r0, r1
  40b7c4:	f000 80b4 	beq.w	40b930 <_realloc_r+0x1ac>
  40b7c8:	6843      	ldr	r3, [r0, #4]
  40b7ca:	f023 0101 	bic.w	r1, r3, #1
  40b7ce:	4401      	add	r1, r0
  40b7d0:	6849      	ldr	r1, [r1, #4]
  40b7d2:	07c9      	lsls	r1, r1, #31
  40b7d4:	d54c      	bpl.n	40b870 <_realloc_r+0xec>
  40b7d6:	f01e 0f01 	tst.w	lr, #1
  40b7da:	f000 809b 	beq.w	40b914 <_realloc_r+0x190>
  40b7de:	4631      	mov	r1, r6
  40b7e0:	4640      	mov	r0, r8
  40b7e2:	f7ff f949 	bl	40aa78 <_malloc_r>
  40b7e6:	4606      	mov	r6, r0
  40b7e8:	2800      	cmp	r0, #0
  40b7ea:	d03a      	beq.n	40b862 <_realloc_r+0xde>
  40b7ec:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40b7f0:	f023 0301 	bic.w	r3, r3, #1
  40b7f4:	444b      	add	r3, r9
  40b7f6:	f1a0 0208 	sub.w	r2, r0, #8
  40b7fa:	429a      	cmp	r2, r3
  40b7fc:	f000 8121 	beq.w	40ba42 <_realloc_r+0x2be>
  40b800:	1f22      	subs	r2, r4, #4
  40b802:	2a24      	cmp	r2, #36	; 0x24
  40b804:	f200 8107 	bhi.w	40ba16 <_realloc_r+0x292>
  40b808:	2a13      	cmp	r2, #19
  40b80a:	f200 80db 	bhi.w	40b9c4 <_realloc_r+0x240>
  40b80e:	4603      	mov	r3, r0
  40b810:	462a      	mov	r2, r5
  40b812:	6811      	ldr	r1, [r2, #0]
  40b814:	6019      	str	r1, [r3, #0]
  40b816:	6851      	ldr	r1, [r2, #4]
  40b818:	6059      	str	r1, [r3, #4]
  40b81a:	6892      	ldr	r2, [r2, #8]
  40b81c:	609a      	str	r2, [r3, #8]
  40b81e:	4629      	mov	r1, r5
  40b820:	4640      	mov	r0, r8
  40b822:	f7fe fdfd 	bl	40a420 <_free_r>
  40b826:	e01c      	b.n	40b862 <_realloc_r+0xde>
  40b828:	f027 0707 	bic.w	r7, r7, #7
  40b82c:	2f00      	cmp	r7, #0
  40b82e:	463a      	mov	r2, r7
  40b830:	dabf      	bge.n	40b7b2 <_realloc_r+0x2e>
  40b832:	2600      	movs	r6, #0
  40b834:	230c      	movs	r3, #12
  40b836:	4630      	mov	r0, r6
  40b838:	f8c8 3000 	str.w	r3, [r8]
  40b83c:	b003      	add	sp, #12
  40b83e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40b842:	462e      	mov	r6, r5
  40b844:	1be3      	subs	r3, r4, r7
  40b846:	2b0f      	cmp	r3, #15
  40b848:	d81e      	bhi.n	40b888 <_realloc_r+0x104>
  40b84a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40b84e:	f003 0301 	and.w	r3, r3, #1
  40b852:	4323      	orrs	r3, r4
  40b854:	444c      	add	r4, r9
  40b856:	f8c9 3004 	str.w	r3, [r9, #4]
  40b85a:	6863      	ldr	r3, [r4, #4]
  40b85c:	f043 0301 	orr.w	r3, r3, #1
  40b860:	6063      	str	r3, [r4, #4]
  40b862:	4640      	mov	r0, r8
  40b864:	f7ff fc8e 	bl	40b184 <__malloc_unlock>
  40b868:	4630      	mov	r0, r6
  40b86a:	b003      	add	sp, #12
  40b86c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40b870:	f023 0303 	bic.w	r3, r3, #3
  40b874:	18e1      	adds	r1, r4, r3
  40b876:	4291      	cmp	r1, r2
  40b878:	db1f      	blt.n	40b8ba <_realloc_r+0x136>
  40b87a:	68c3      	ldr	r3, [r0, #12]
  40b87c:	6882      	ldr	r2, [r0, #8]
  40b87e:	462e      	mov	r6, r5
  40b880:	60d3      	str	r3, [r2, #12]
  40b882:	460c      	mov	r4, r1
  40b884:	609a      	str	r2, [r3, #8]
  40b886:	e7dd      	b.n	40b844 <_realloc_r+0xc0>
  40b888:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40b88c:	eb09 0107 	add.w	r1, r9, r7
  40b890:	f002 0201 	and.w	r2, r2, #1
  40b894:	444c      	add	r4, r9
  40b896:	f043 0301 	orr.w	r3, r3, #1
  40b89a:	4317      	orrs	r7, r2
  40b89c:	f8c9 7004 	str.w	r7, [r9, #4]
  40b8a0:	604b      	str	r3, [r1, #4]
  40b8a2:	6863      	ldr	r3, [r4, #4]
  40b8a4:	f043 0301 	orr.w	r3, r3, #1
  40b8a8:	3108      	adds	r1, #8
  40b8aa:	6063      	str	r3, [r4, #4]
  40b8ac:	4640      	mov	r0, r8
  40b8ae:	f7fe fdb7 	bl	40a420 <_free_r>
  40b8b2:	e7d6      	b.n	40b862 <_realloc_r+0xde>
  40b8b4:	4611      	mov	r1, r2
  40b8b6:	f7ff b8df 	b.w	40aa78 <_malloc_r>
  40b8ba:	f01e 0f01 	tst.w	lr, #1
  40b8be:	d18e      	bne.n	40b7de <_realloc_r+0x5a>
  40b8c0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40b8c4:	eba9 0a01 	sub.w	sl, r9, r1
  40b8c8:	f8da 1004 	ldr.w	r1, [sl, #4]
  40b8cc:	f021 0103 	bic.w	r1, r1, #3
  40b8d0:	440b      	add	r3, r1
  40b8d2:	4423      	add	r3, r4
  40b8d4:	4293      	cmp	r3, r2
  40b8d6:	db25      	blt.n	40b924 <_realloc_r+0x1a0>
  40b8d8:	68c2      	ldr	r2, [r0, #12]
  40b8da:	6881      	ldr	r1, [r0, #8]
  40b8dc:	4656      	mov	r6, sl
  40b8de:	60ca      	str	r2, [r1, #12]
  40b8e0:	6091      	str	r1, [r2, #8]
  40b8e2:	f8da 100c 	ldr.w	r1, [sl, #12]
  40b8e6:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40b8ea:	1f22      	subs	r2, r4, #4
  40b8ec:	2a24      	cmp	r2, #36	; 0x24
  40b8ee:	60c1      	str	r1, [r0, #12]
  40b8f0:	6088      	str	r0, [r1, #8]
  40b8f2:	f200 8094 	bhi.w	40ba1e <_realloc_r+0x29a>
  40b8f6:	2a13      	cmp	r2, #19
  40b8f8:	d96f      	bls.n	40b9da <_realloc_r+0x256>
  40b8fa:	6829      	ldr	r1, [r5, #0]
  40b8fc:	f8ca 1008 	str.w	r1, [sl, #8]
  40b900:	6869      	ldr	r1, [r5, #4]
  40b902:	f8ca 100c 	str.w	r1, [sl, #12]
  40b906:	2a1b      	cmp	r2, #27
  40b908:	f200 80a2 	bhi.w	40ba50 <_realloc_r+0x2cc>
  40b90c:	3508      	adds	r5, #8
  40b90e:	f10a 0210 	add.w	r2, sl, #16
  40b912:	e063      	b.n	40b9dc <_realloc_r+0x258>
  40b914:	f855 3c08 	ldr.w	r3, [r5, #-8]
  40b918:	eba9 0a03 	sub.w	sl, r9, r3
  40b91c:	f8da 1004 	ldr.w	r1, [sl, #4]
  40b920:	f021 0103 	bic.w	r1, r1, #3
  40b924:	1863      	adds	r3, r4, r1
  40b926:	4293      	cmp	r3, r2
  40b928:	f6ff af59 	blt.w	40b7de <_realloc_r+0x5a>
  40b92c:	4656      	mov	r6, sl
  40b92e:	e7d8      	b.n	40b8e2 <_realloc_r+0x15e>
  40b930:	6841      	ldr	r1, [r0, #4]
  40b932:	f021 0b03 	bic.w	fp, r1, #3
  40b936:	44a3      	add	fp, r4
  40b938:	f107 0010 	add.w	r0, r7, #16
  40b93c:	4583      	cmp	fp, r0
  40b93e:	da56      	bge.n	40b9ee <_realloc_r+0x26a>
  40b940:	f01e 0f01 	tst.w	lr, #1
  40b944:	f47f af4b 	bne.w	40b7de <_realloc_r+0x5a>
  40b948:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40b94c:	eba9 0a01 	sub.w	sl, r9, r1
  40b950:	f8da 1004 	ldr.w	r1, [sl, #4]
  40b954:	f021 0103 	bic.w	r1, r1, #3
  40b958:	448b      	add	fp, r1
  40b95a:	4558      	cmp	r0, fp
  40b95c:	dce2      	bgt.n	40b924 <_realloc_r+0x1a0>
  40b95e:	4656      	mov	r6, sl
  40b960:	f8da 100c 	ldr.w	r1, [sl, #12]
  40b964:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40b968:	1f22      	subs	r2, r4, #4
  40b96a:	2a24      	cmp	r2, #36	; 0x24
  40b96c:	60c1      	str	r1, [r0, #12]
  40b96e:	6088      	str	r0, [r1, #8]
  40b970:	f200 808f 	bhi.w	40ba92 <_realloc_r+0x30e>
  40b974:	2a13      	cmp	r2, #19
  40b976:	f240 808a 	bls.w	40ba8e <_realloc_r+0x30a>
  40b97a:	6829      	ldr	r1, [r5, #0]
  40b97c:	f8ca 1008 	str.w	r1, [sl, #8]
  40b980:	6869      	ldr	r1, [r5, #4]
  40b982:	f8ca 100c 	str.w	r1, [sl, #12]
  40b986:	2a1b      	cmp	r2, #27
  40b988:	f200 808a 	bhi.w	40baa0 <_realloc_r+0x31c>
  40b98c:	3508      	adds	r5, #8
  40b98e:	f10a 0210 	add.w	r2, sl, #16
  40b992:	6829      	ldr	r1, [r5, #0]
  40b994:	6011      	str	r1, [r2, #0]
  40b996:	6869      	ldr	r1, [r5, #4]
  40b998:	6051      	str	r1, [r2, #4]
  40b99a:	68a9      	ldr	r1, [r5, #8]
  40b99c:	6091      	str	r1, [r2, #8]
  40b99e:	eb0a 0107 	add.w	r1, sl, r7
  40b9a2:	ebab 0207 	sub.w	r2, fp, r7
  40b9a6:	f042 0201 	orr.w	r2, r2, #1
  40b9aa:	6099      	str	r1, [r3, #8]
  40b9ac:	604a      	str	r2, [r1, #4]
  40b9ae:	f8da 3004 	ldr.w	r3, [sl, #4]
  40b9b2:	f003 0301 	and.w	r3, r3, #1
  40b9b6:	431f      	orrs	r7, r3
  40b9b8:	4640      	mov	r0, r8
  40b9ba:	f8ca 7004 	str.w	r7, [sl, #4]
  40b9be:	f7ff fbe1 	bl	40b184 <__malloc_unlock>
  40b9c2:	e751      	b.n	40b868 <_realloc_r+0xe4>
  40b9c4:	682b      	ldr	r3, [r5, #0]
  40b9c6:	6003      	str	r3, [r0, #0]
  40b9c8:	686b      	ldr	r3, [r5, #4]
  40b9ca:	6043      	str	r3, [r0, #4]
  40b9cc:	2a1b      	cmp	r2, #27
  40b9ce:	d82d      	bhi.n	40ba2c <_realloc_r+0x2a8>
  40b9d0:	f100 0308 	add.w	r3, r0, #8
  40b9d4:	f105 0208 	add.w	r2, r5, #8
  40b9d8:	e71b      	b.n	40b812 <_realloc_r+0x8e>
  40b9da:	4632      	mov	r2, r6
  40b9dc:	6829      	ldr	r1, [r5, #0]
  40b9de:	6011      	str	r1, [r2, #0]
  40b9e0:	6869      	ldr	r1, [r5, #4]
  40b9e2:	6051      	str	r1, [r2, #4]
  40b9e4:	68a9      	ldr	r1, [r5, #8]
  40b9e6:	6091      	str	r1, [r2, #8]
  40b9e8:	461c      	mov	r4, r3
  40b9ea:	46d1      	mov	r9, sl
  40b9ec:	e72a      	b.n	40b844 <_realloc_r+0xc0>
  40b9ee:	eb09 0107 	add.w	r1, r9, r7
  40b9f2:	ebab 0b07 	sub.w	fp, fp, r7
  40b9f6:	f04b 0201 	orr.w	r2, fp, #1
  40b9fa:	6099      	str	r1, [r3, #8]
  40b9fc:	604a      	str	r2, [r1, #4]
  40b9fe:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40ba02:	f003 0301 	and.w	r3, r3, #1
  40ba06:	431f      	orrs	r7, r3
  40ba08:	4640      	mov	r0, r8
  40ba0a:	f845 7c04 	str.w	r7, [r5, #-4]
  40ba0e:	f7ff fbb9 	bl	40b184 <__malloc_unlock>
  40ba12:	462e      	mov	r6, r5
  40ba14:	e728      	b.n	40b868 <_realloc_r+0xe4>
  40ba16:	4629      	mov	r1, r5
  40ba18:	f7ff fb4a 	bl	40b0b0 <memmove>
  40ba1c:	e6ff      	b.n	40b81e <_realloc_r+0x9a>
  40ba1e:	4629      	mov	r1, r5
  40ba20:	4630      	mov	r0, r6
  40ba22:	461c      	mov	r4, r3
  40ba24:	46d1      	mov	r9, sl
  40ba26:	f7ff fb43 	bl	40b0b0 <memmove>
  40ba2a:	e70b      	b.n	40b844 <_realloc_r+0xc0>
  40ba2c:	68ab      	ldr	r3, [r5, #8]
  40ba2e:	6083      	str	r3, [r0, #8]
  40ba30:	68eb      	ldr	r3, [r5, #12]
  40ba32:	60c3      	str	r3, [r0, #12]
  40ba34:	2a24      	cmp	r2, #36	; 0x24
  40ba36:	d017      	beq.n	40ba68 <_realloc_r+0x2e4>
  40ba38:	f100 0310 	add.w	r3, r0, #16
  40ba3c:	f105 0210 	add.w	r2, r5, #16
  40ba40:	e6e7      	b.n	40b812 <_realloc_r+0x8e>
  40ba42:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40ba46:	f023 0303 	bic.w	r3, r3, #3
  40ba4a:	441c      	add	r4, r3
  40ba4c:	462e      	mov	r6, r5
  40ba4e:	e6f9      	b.n	40b844 <_realloc_r+0xc0>
  40ba50:	68a9      	ldr	r1, [r5, #8]
  40ba52:	f8ca 1010 	str.w	r1, [sl, #16]
  40ba56:	68e9      	ldr	r1, [r5, #12]
  40ba58:	f8ca 1014 	str.w	r1, [sl, #20]
  40ba5c:	2a24      	cmp	r2, #36	; 0x24
  40ba5e:	d00c      	beq.n	40ba7a <_realloc_r+0x2f6>
  40ba60:	3510      	adds	r5, #16
  40ba62:	f10a 0218 	add.w	r2, sl, #24
  40ba66:	e7b9      	b.n	40b9dc <_realloc_r+0x258>
  40ba68:	692b      	ldr	r3, [r5, #16]
  40ba6a:	6103      	str	r3, [r0, #16]
  40ba6c:	696b      	ldr	r3, [r5, #20]
  40ba6e:	6143      	str	r3, [r0, #20]
  40ba70:	f105 0218 	add.w	r2, r5, #24
  40ba74:	f100 0318 	add.w	r3, r0, #24
  40ba78:	e6cb      	b.n	40b812 <_realloc_r+0x8e>
  40ba7a:	692a      	ldr	r2, [r5, #16]
  40ba7c:	f8ca 2018 	str.w	r2, [sl, #24]
  40ba80:	696a      	ldr	r2, [r5, #20]
  40ba82:	f8ca 201c 	str.w	r2, [sl, #28]
  40ba86:	3518      	adds	r5, #24
  40ba88:	f10a 0220 	add.w	r2, sl, #32
  40ba8c:	e7a6      	b.n	40b9dc <_realloc_r+0x258>
  40ba8e:	4632      	mov	r2, r6
  40ba90:	e77f      	b.n	40b992 <_realloc_r+0x20e>
  40ba92:	4629      	mov	r1, r5
  40ba94:	4630      	mov	r0, r6
  40ba96:	9301      	str	r3, [sp, #4]
  40ba98:	f7ff fb0a 	bl	40b0b0 <memmove>
  40ba9c:	9b01      	ldr	r3, [sp, #4]
  40ba9e:	e77e      	b.n	40b99e <_realloc_r+0x21a>
  40baa0:	68a9      	ldr	r1, [r5, #8]
  40baa2:	f8ca 1010 	str.w	r1, [sl, #16]
  40baa6:	68e9      	ldr	r1, [r5, #12]
  40baa8:	f8ca 1014 	str.w	r1, [sl, #20]
  40baac:	2a24      	cmp	r2, #36	; 0x24
  40baae:	d003      	beq.n	40bab8 <_realloc_r+0x334>
  40bab0:	3510      	adds	r5, #16
  40bab2:	f10a 0218 	add.w	r2, sl, #24
  40bab6:	e76c      	b.n	40b992 <_realloc_r+0x20e>
  40bab8:	692a      	ldr	r2, [r5, #16]
  40baba:	f8ca 2018 	str.w	r2, [sl, #24]
  40babe:	696a      	ldr	r2, [r5, #20]
  40bac0:	f8ca 201c 	str.w	r2, [sl, #28]
  40bac4:	3518      	adds	r5, #24
  40bac6:	f10a 0220 	add.w	r2, sl, #32
  40baca:	e762      	b.n	40b992 <_realloc_r+0x20e>
  40bacc:	204005e8 	.word	0x204005e8

0040bad0 <_sbrk_r>:
  40bad0:	b538      	push	{r3, r4, r5, lr}
  40bad2:	4c07      	ldr	r4, [pc, #28]	; (40baf0 <_sbrk_r+0x20>)
  40bad4:	2300      	movs	r3, #0
  40bad6:	4605      	mov	r5, r0
  40bad8:	4608      	mov	r0, r1
  40bada:	6023      	str	r3, [r4, #0]
  40badc:	f7fa f97c 	bl	405dd8 <_sbrk>
  40bae0:	1c43      	adds	r3, r0, #1
  40bae2:	d000      	beq.n	40bae6 <_sbrk_r+0x16>
  40bae4:	bd38      	pop	{r3, r4, r5, pc}
  40bae6:	6823      	ldr	r3, [r4, #0]
  40bae8:	2b00      	cmp	r3, #0
  40baea:	d0fb      	beq.n	40bae4 <_sbrk_r+0x14>
  40baec:	602b      	str	r3, [r5, #0]
  40baee:	bd38      	pop	{r3, r4, r5, pc}
  40baf0:	2040f4f4 	.word	0x2040f4f4

0040baf4 <__sread>:
  40baf4:	b510      	push	{r4, lr}
  40baf6:	460c      	mov	r4, r1
  40baf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40bafc:	f000 faa4 	bl	40c048 <_read_r>
  40bb00:	2800      	cmp	r0, #0
  40bb02:	db03      	blt.n	40bb0c <__sread+0x18>
  40bb04:	6d23      	ldr	r3, [r4, #80]	; 0x50
  40bb06:	4403      	add	r3, r0
  40bb08:	6523      	str	r3, [r4, #80]	; 0x50
  40bb0a:	bd10      	pop	{r4, pc}
  40bb0c:	89a3      	ldrh	r3, [r4, #12]
  40bb0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  40bb12:	81a3      	strh	r3, [r4, #12]
  40bb14:	bd10      	pop	{r4, pc}
  40bb16:	bf00      	nop

0040bb18 <__swrite>:
  40bb18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40bb1c:	4616      	mov	r6, r2
  40bb1e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  40bb22:	461f      	mov	r7, r3
  40bb24:	05d3      	lsls	r3, r2, #23
  40bb26:	460c      	mov	r4, r1
  40bb28:	4605      	mov	r5, r0
  40bb2a:	d507      	bpl.n	40bb3c <__swrite+0x24>
  40bb2c:	2200      	movs	r2, #0
  40bb2e:	2302      	movs	r3, #2
  40bb30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40bb34:	f000 fa72 	bl	40c01c <_lseek_r>
  40bb38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40bb3c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40bb40:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  40bb44:	81a2      	strh	r2, [r4, #12]
  40bb46:	463b      	mov	r3, r7
  40bb48:	4632      	mov	r2, r6
  40bb4a:	4628      	mov	r0, r5
  40bb4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40bb50:	f000 b922 	b.w	40bd98 <_write_r>

0040bb54 <__sseek>:
  40bb54:	b510      	push	{r4, lr}
  40bb56:	460c      	mov	r4, r1
  40bb58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40bb5c:	f000 fa5e 	bl	40c01c <_lseek_r>
  40bb60:	89a3      	ldrh	r3, [r4, #12]
  40bb62:	1c42      	adds	r2, r0, #1
  40bb64:	bf0e      	itee	eq
  40bb66:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40bb6a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  40bb6e:	6520      	strne	r0, [r4, #80]	; 0x50
  40bb70:	81a3      	strh	r3, [r4, #12]
  40bb72:	bd10      	pop	{r4, pc}

0040bb74 <__sclose>:
  40bb74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40bb78:	f000 b9b6 	b.w	40bee8 <_close_r>

0040bb7c <__ssprint_r>:
  40bb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40bb80:	6893      	ldr	r3, [r2, #8]
  40bb82:	b083      	sub	sp, #12
  40bb84:	4690      	mov	r8, r2
  40bb86:	2b00      	cmp	r3, #0
  40bb88:	d070      	beq.n	40bc6c <__ssprint_r+0xf0>
  40bb8a:	4682      	mov	sl, r0
  40bb8c:	460c      	mov	r4, r1
  40bb8e:	6817      	ldr	r7, [r2, #0]
  40bb90:	688d      	ldr	r5, [r1, #8]
  40bb92:	6808      	ldr	r0, [r1, #0]
  40bb94:	e042      	b.n	40bc1c <__ssprint_r+0xa0>
  40bb96:	89a3      	ldrh	r3, [r4, #12]
  40bb98:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40bb9c:	d02e      	beq.n	40bbfc <__ssprint_r+0x80>
  40bb9e:	6965      	ldr	r5, [r4, #20]
  40bba0:	6921      	ldr	r1, [r4, #16]
  40bba2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  40bba6:	eba0 0b01 	sub.w	fp, r0, r1
  40bbaa:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40bbae:	f10b 0001 	add.w	r0, fp, #1
  40bbb2:	106d      	asrs	r5, r5, #1
  40bbb4:	4430      	add	r0, r6
  40bbb6:	42a8      	cmp	r0, r5
  40bbb8:	462a      	mov	r2, r5
  40bbba:	bf84      	itt	hi
  40bbbc:	4605      	movhi	r5, r0
  40bbbe:	462a      	movhi	r2, r5
  40bbc0:	055b      	lsls	r3, r3, #21
  40bbc2:	d538      	bpl.n	40bc36 <__ssprint_r+0xba>
  40bbc4:	4611      	mov	r1, r2
  40bbc6:	4650      	mov	r0, sl
  40bbc8:	f7fe ff56 	bl	40aa78 <_malloc_r>
  40bbcc:	2800      	cmp	r0, #0
  40bbce:	d03c      	beq.n	40bc4a <__ssprint_r+0xce>
  40bbd0:	465a      	mov	r2, fp
  40bbd2:	6921      	ldr	r1, [r4, #16]
  40bbd4:	9001      	str	r0, [sp, #4]
  40bbd6:	f7fa fd9b 	bl	406710 <memcpy>
  40bbda:	89a2      	ldrh	r2, [r4, #12]
  40bbdc:	9b01      	ldr	r3, [sp, #4]
  40bbde:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  40bbe2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40bbe6:	81a2      	strh	r2, [r4, #12]
  40bbe8:	eba5 020b 	sub.w	r2, r5, fp
  40bbec:	eb03 000b 	add.w	r0, r3, fp
  40bbf0:	6165      	str	r5, [r4, #20]
  40bbf2:	6123      	str	r3, [r4, #16]
  40bbf4:	6020      	str	r0, [r4, #0]
  40bbf6:	60a2      	str	r2, [r4, #8]
  40bbf8:	4635      	mov	r5, r6
  40bbfa:	46b3      	mov	fp, r6
  40bbfc:	465a      	mov	r2, fp
  40bbfe:	4649      	mov	r1, r9
  40bc00:	f7ff fa56 	bl	40b0b0 <memmove>
  40bc04:	f8d8 3008 	ldr.w	r3, [r8, #8]
  40bc08:	68a2      	ldr	r2, [r4, #8]
  40bc0a:	6820      	ldr	r0, [r4, #0]
  40bc0c:	1b55      	subs	r5, r2, r5
  40bc0e:	4458      	add	r0, fp
  40bc10:	1b9e      	subs	r6, r3, r6
  40bc12:	60a5      	str	r5, [r4, #8]
  40bc14:	6020      	str	r0, [r4, #0]
  40bc16:	f8c8 6008 	str.w	r6, [r8, #8]
  40bc1a:	b33e      	cbz	r6, 40bc6c <__ssprint_r+0xf0>
  40bc1c:	687e      	ldr	r6, [r7, #4]
  40bc1e:	463b      	mov	r3, r7
  40bc20:	3708      	adds	r7, #8
  40bc22:	2e00      	cmp	r6, #0
  40bc24:	d0fa      	beq.n	40bc1c <__ssprint_r+0xa0>
  40bc26:	42ae      	cmp	r6, r5
  40bc28:	f8d3 9000 	ldr.w	r9, [r3]
  40bc2c:	46ab      	mov	fp, r5
  40bc2e:	d2b2      	bcs.n	40bb96 <__ssprint_r+0x1a>
  40bc30:	4635      	mov	r5, r6
  40bc32:	46b3      	mov	fp, r6
  40bc34:	e7e2      	b.n	40bbfc <__ssprint_r+0x80>
  40bc36:	4650      	mov	r0, sl
  40bc38:	f7ff fda4 	bl	40b784 <_realloc_r>
  40bc3c:	4603      	mov	r3, r0
  40bc3e:	2800      	cmp	r0, #0
  40bc40:	d1d2      	bne.n	40bbe8 <__ssprint_r+0x6c>
  40bc42:	6921      	ldr	r1, [r4, #16]
  40bc44:	4650      	mov	r0, sl
  40bc46:	f7fe fbeb 	bl	40a420 <_free_r>
  40bc4a:	230c      	movs	r3, #12
  40bc4c:	f8ca 3000 	str.w	r3, [sl]
  40bc50:	89a3      	ldrh	r3, [r4, #12]
  40bc52:	2200      	movs	r2, #0
  40bc54:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40bc58:	f04f 30ff 	mov.w	r0, #4294967295
  40bc5c:	81a3      	strh	r3, [r4, #12]
  40bc5e:	f8c8 2008 	str.w	r2, [r8, #8]
  40bc62:	f8c8 2004 	str.w	r2, [r8, #4]
  40bc66:	b003      	add	sp, #12
  40bc68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40bc6c:	2000      	movs	r0, #0
  40bc6e:	f8c8 0004 	str.w	r0, [r8, #4]
  40bc72:	b003      	add	sp, #12
  40bc74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0040bc78 <__swbuf_r>:
  40bc78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40bc7a:	460d      	mov	r5, r1
  40bc7c:	4614      	mov	r4, r2
  40bc7e:	4606      	mov	r6, r0
  40bc80:	b110      	cbz	r0, 40bc88 <__swbuf_r+0x10>
  40bc82:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40bc84:	2b00      	cmp	r3, #0
  40bc86:	d04b      	beq.n	40bd20 <__swbuf_r+0xa8>
  40bc88:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40bc8c:	69a3      	ldr	r3, [r4, #24]
  40bc8e:	60a3      	str	r3, [r4, #8]
  40bc90:	b291      	uxth	r1, r2
  40bc92:	0708      	lsls	r0, r1, #28
  40bc94:	d539      	bpl.n	40bd0a <__swbuf_r+0x92>
  40bc96:	6923      	ldr	r3, [r4, #16]
  40bc98:	2b00      	cmp	r3, #0
  40bc9a:	d036      	beq.n	40bd0a <__swbuf_r+0x92>
  40bc9c:	b2ed      	uxtb	r5, r5
  40bc9e:	0489      	lsls	r1, r1, #18
  40bca0:	462f      	mov	r7, r5
  40bca2:	d515      	bpl.n	40bcd0 <__swbuf_r+0x58>
  40bca4:	6822      	ldr	r2, [r4, #0]
  40bca6:	6961      	ldr	r1, [r4, #20]
  40bca8:	1ad3      	subs	r3, r2, r3
  40bcaa:	428b      	cmp	r3, r1
  40bcac:	da1c      	bge.n	40bce8 <__swbuf_r+0x70>
  40bcae:	3301      	adds	r3, #1
  40bcb0:	68a1      	ldr	r1, [r4, #8]
  40bcb2:	1c50      	adds	r0, r2, #1
  40bcb4:	3901      	subs	r1, #1
  40bcb6:	60a1      	str	r1, [r4, #8]
  40bcb8:	6020      	str	r0, [r4, #0]
  40bcba:	7015      	strb	r5, [r2, #0]
  40bcbc:	6962      	ldr	r2, [r4, #20]
  40bcbe:	429a      	cmp	r2, r3
  40bcc0:	d01a      	beq.n	40bcf8 <__swbuf_r+0x80>
  40bcc2:	89a3      	ldrh	r3, [r4, #12]
  40bcc4:	07db      	lsls	r3, r3, #31
  40bcc6:	d501      	bpl.n	40bccc <__swbuf_r+0x54>
  40bcc8:	2d0a      	cmp	r5, #10
  40bcca:	d015      	beq.n	40bcf8 <__swbuf_r+0x80>
  40bccc:	4638      	mov	r0, r7
  40bcce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40bcd0:	6e61      	ldr	r1, [r4, #100]	; 0x64
  40bcd2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  40bcd6:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  40bcda:	81a2      	strh	r2, [r4, #12]
  40bcdc:	6822      	ldr	r2, [r4, #0]
  40bcde:	6661      	str	r1, [r4, #100]	; 0x64
  40bce0:	6961      	ldr	r1, [r4, #20]
  40bce2:	1ad3      	subs	r3, r2, r3
  40bce4:	428b      	cmp	r3, r1
  40bce6:	dbe2      	blt.n	40bcae <__swbuf_r+0x36>
  40bce8:	4621      	mov	r1, r4
  40bcea:	4630      	mov	r0, r6
  40bcec:	f7fe fa1a 	bl	40a124 <_fflush_r>
  40bcf0:	b940      	cbnz	r0, 40bd04 <__swbuf_r+0x8c>
  40bcf2:	6822      	ldr	r2, [r4, #0]
  40bcf4:	2301      	movs	r3, #1
  40bcf6:	e7db      	b.n	40bcb0 <__swbuf_r+0x38>
  40bcf8:	4621      	mov	r1, r4
  40bcfa:	4630      	mov	r0, r6
  40bcfc:	f7fe fa12 	bl	40a124 <_fflush_r>
  40bd00:	2800      	cmp	r0, #0
  40bd02:	d0e3      	beq.n	40bccc <__swbuf_r+0x54>
  40bd04:	f04f 37ff 	mov.w	r7, #4294967295
  40bd08:	e7e0      	b.n	40bccc <__swbuf_r+0x54>
  40bd0a:	4621      	mov	r1, r4
  40bd0c:	4630      	mov	r0, r6
  40bd0e:	f7fd f937 	bl	408f80 <__swsetup_r>
  40bd12:	2800      	cmp	r0, #0
  40bd14:	d1f6      	bne.n	40bd04 <__swbuf_r+0x8c>
  40bd16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40bd1a:	6923      	ldr	r3, [r4, #16]
  40bd1c:	b291      	uxth	r1, r2
  40bd1e:	e7bd      	b.n	40bc9c <__swbuf_r+0x24>
  40bd20:	f7fe fa58 	bl	40a1d4 <__sinit>
  40bd24:	e7b0      	b.n	40bc88 <__swbuf_r+0x10>
  40bd26:	bf00      	nop

0040bd28 <_wcrtomb_r>:
  40bd28:	b5f0      	push	{r4, r5, r6, r7, lr}
  40bd2a:	4606      	mov	r6, r0
  40bd2c:	b085      	sub	sp, #20
  40bd2e:	461f      	mov	r7, r3
  40bd30:	b189      	cbz	r1, 40bd56 <_wcrtomb_r+0x2e>
  40bd32:	4c10      	ldr	r4, [pc, #64]	; (40bd74 <_wcrtomb_r+0x4c>)
  40bd34:	4d10      	ldr	r5, [pc, #64]	; (40bd78 <_wcrtomb_r+0x50>)
  40bd36:	6824      	ldr	r4, [r4, #0]
  40bd38:	6b64      	ldr	r4, [r4, #52]	; 0x34
  40bd3a:	2c00      	cmp	r4, #0
  40bd3c:	bf08      	it	eq
  40bd3e:	462c      	moveq	r4, r5
  40bd40:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  40bd44:	47a0      	blx	r4
  40bd46:	1c43      	adds	r3, r0, #1
  40bd48:	d103      	bne.n	40bd52 <_wcrtomb_r+0x2a>
  40bd4a:	2200      	movs	r2, #0
  40bd4c:	238a      	movs	r3, #138	; 0x8a
  40bd4e:	603a      	str	r2, [r7, #0]
  40bd50:	6033      	str	r3, [r6, #0]
  40bd52:	b005      	add	sp, #20
  40bd54:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40bd56:	460c      	mov	r4, r1
  40bd58:	4906      	ldr	r1, [pc, #24]	; (40bd74 <_wcrtomb_r+0x4c>)
  40bd5a:	4a07      	ldr	r2, [pc, #28]	; (40bd78 <_wcrtomb_r+0x50>)
  40bd5c:	6809      	ldr	r1, [r1, #0]
  40bd5e:	6b49      	ldr	r1, [r1, #52]	; 0x34
  40bd60:	2900      	cmp	r1, #0
  40bd62:	bf08      	it	eq
  40bd64:	4611      	moveq	r1, r2
  40bd66:	4622      	mov	r2, r4
  40bd68:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  40bd6c:	a901      	add	r1, sp, #4
  40bd6e:	47a0      	blx	r4
  40bd70:	e7e9      	b.n	40bd46 <_wcrtomb_r+0x1e>
  40bd72:	bf00      	nop
  40bd74:	20400048 	.word	0x20400048
  40bd78:	2040047c 	.word	0x2040047c

0040bd7c <__ascii_wctomb>:
  40bd7c:	b121      	cbz	r1, 40bd88 <__ascii_wctomb+0xc>
  40bd7e:	2aff      	cmp	r2, #255	; 0xff
  40bd80:	d804      	bhi.n	40bd8c <__ascii_wctomb+0x10>
  40bd82:	700a      	strb	r2, [r1, #0]
  40bd84:	2001      	movs	r0, #1
  40bd86:	4770      	bx	lr
  40bd88:	4608      	mov	r0, r1
  40bd8a:	4770      	bx	lr
  40bd8c:	238a      	movs	r3, #138	; 0x8a
  40bd8e:	6003      	str	r3, [r0, #0]
  40bd90:	f04f 30ff 	mov.w	r0, #4294967295
  40bd94:	4770      	bx	lr
  40bd96:	bf00      	nop

0040bd98 <_write_r>:
  40bd98:	b570      	push	{r4, r5, r6, lr}
  40bd9a:	460d      	mov	r5, r1
  40bd9c:	4c08      	ldr	r4, [pc, #32]	; (40bdc0 <_write_r+0x28>)
  40bd9e:	4611      	mov	r1, r2
  40bda0:	4606      	mov	r6, r0
  40bda2:	461a      	mov	r2, r3
  40bda4:	4628      	mov	r0, r5
  40bda6:	2300      	movs	r3, #0
  40bda8:	6023      	str	r3, [r4, #0]
  40bdaa:	f7f9 f9ef 	bl	40518c <_write>
  40bdae:	1c43      	adds	r3, r0, #1
  40bdb0:	d000      	beq.n	40bdb4 <_write_r+0x1c>
  40bdb2:	bd70      	pop	{r4, r5, r6, pc}
  40bdb4:	6823      	ldr	r3, [r4, #0]
  40bdb6:	2b00      	cmp	r3, #0
  40bdb8:	d0fb      	beq.n	40bdb2 <_write_r+0x1a>
  40bdba:	6033      	str	r3, [r6, #0]
  40bdbc:	bd70      	pop	{r4, r5, r6, pc}
  40bdbe:	bf00      	nop
  40bdc0:	2040f4f4 	.word	0x2040f4f4

0040bdc4 <__register_exitproc>:
  40bdc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40bdc8:	4d2c      	ldr	r5, [pc, #176]	; (40be7c <__register_exitproc+0xb8>)
  40bdca:	4606      	mov	r6, r0
  40bdcc:	6828      	ldr	r0, [r5, #0]
  40bdce:	4698      	mov	r8, r3
  40bdd0:	460f      	mov	r7, r1
  40bdd2:	4691      	mov	r9, r2
  40bdd4:	f7fe fdcc 	bl	40a970 <__retarget_lock_acquire_recursive>
  40bdd8:	4b29      	ldr	r3, [pc, #164]	; (40be80 <__register_exitproc+0xbc>)
  40bdda:	681c      	ldr	r4, [r3, #0]
  40bddc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40bde0:	2b00      	cmp	r3, #0
  40bde2:	d03e      	beq.n	40be62 <__register_exitproc+0x9e>
  40bde4:	685a      	ldr	r2, [r3, #4]
  40bde6:	2a1f      	cmp	r2, #31
  40bde8:	dc1c      	bgt.n	40be24 <__register_exitproc+0x60>
  40bdea:	f102 0e01 	add.w	lr, r2, #1
  40bdee:	b176      	cbz	r6, 40be0e <__register_exitproc+0x4a>
  40bdf0:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  40bdf4:	2401      	movs	r4, #1
  40bdf6:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40bdfa:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40bdfe:	4094      	lsls	r4, r2
  40be00:	4320      	orrs	r0, r4
  40be02:	2e02      	cmp	r6, #2
  40be04:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40be08:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  40be0c:	d023      	beq.n	40be56 <__register_exitproc+0x92>
  40be0e:	3202      	adds	r2, #2
  40be10:	f8c3 e004 	str.w	lr, [r3, #4]
  40be14:	6828      	ldr	r0, [r5, #0]
  40be16:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40be1a:	f7fe fdab 	bl	40a974 <__retarget_lock_release_recursive>
  40be1e:	2000      	movs	r0, #0
  40be20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40be24:	4b17      	ldr	r3, [pc, #92]	; (40be84 <__register_exitproc+0xc0>)
  40be26:	b30b      	cbz	r3, 40be6c <__register_exitproc+0xa8>
  40be28:	f44f 70c8 	mov.w	r0, #400	; 0x190
  40be2c:	f7fe fe1c 	bl	40aa68 <malloc>
  40be30:	4603      	mov	r3, r0
  40be32:	b1d8      	cbz	r0, 40be6c <__register_exitproc+0xa8>
  40be34:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40be38:	6002      	str	r2, [r0, #0]
  40be3a:	2100      	movs	r1, #0
  40be3c:	6041      	str	r1, [r0, #4]
  40be3e:	460a      	mov	r2, r1
  40be40:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40be44:	f04f 0e01 	mov.w	lr, #1
  40be48:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  40be4c:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  40be50:	2e00      	cmp	r6, #0
  40be52:	d0dc      	beq.n	40be0e <__register_exitproc+0x4a>
  40be54:	e7cc      	b.n	40bdf0 <__register_exitproc+0x2c>
  40be56:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40be5a:	430c      	orrs	r4, r1
  40be5c:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40be60:	e7d5      	b.n	40be0e <__register_exitproc+0x4a>
  40be62:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40be66:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40be6a:	e7bb      	b.n	40bde4 <__register_exitproc+0x20>
  40be6c:	6828      	ldr	r0, [r5, #0]
  40be6e:	f7fe fd81 	bl	40a974 <__retarget_lock_release_recursive>
  40be72:	f04f 30ff 	mov.w	r0, #4294967295
  40be76:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40be7a:	bf00      	nop
  40be7c:	20400478 	.word	0x20400478
  40be80:	0040dcc4 	.word	0x0040dcc4
  40be84:	0040aa69 	.word	0x0040aa69

0040be88 <_calloc_r>:
  40be88:	b510      	push	{r4, lr}
  40be8a:	fb02 f101 	mul.w	r1, r2, r1
  40be8e:	f7fe fdf3 	bl	40aa78 <_malloc_r>
  40be92:	4604      	mov	r4, r0
  40be94:	b1d8      	cbz	r0, 40bece <_calloc_r+0x46>
  40be96:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40be9a:	f022 0203 	bic.w	r2, r2, #3
  40be9e:	3a04      	subs	r2, #4
  40bea0:	2a24      	cmp	r2, #36	; 0x24
  40bea2:	d818      	bhi.n	40bed6 <_calloc_r+0x4e>
  40bea4:	2a13      	cmp	r2, #19
  40bea6:	d914      	bls.n	40bed2 <_calloc_r+0x4a>
  40bea8:	2300      	movs	r3, #0
  40beaa:	2a1b      	cmp	r2, #27
  40beac:	6003      	str	r3, [r0, #0]
  40beae:	6043      	str	r3, [r0, #4]
  40beb0:	d916      	bls.n	40bee0 <_calloc_r+0x58>
  40beb2:	2a24      	cmp	r2, #36	; 0x24
  40beb4:	6083      	str	r3, [r0, #8]
  40beb6:	60c3      	str	r3, [r0, #12]
  40beb8:	bf11      	iteee	ne
  40beba:	f100 0210 	addne.w	r2, r0, #16
  40bebe:	6103      	streq	r3, [r0, #16]
  40bec0:	6143      	streq	r3, [r0, #20]
  40bec2:	f100 0218 	addeq.w	r2, r0, #24
  40bec6:	2300      	movs	r3, #0
  40bec8:	6013      	str	r3, [r2, #0]
  40beca:	6053      	str	r3, [r2, #4]
  40becc:	6093      	str	r3, [r2, #8]
  40bece:	4620      	mov	r0, r4
  40bed0:	bd10      	pop	{r4, pc}
  40bed2:	4602      	mov	r2, r0
  40bed4:	e7f7      	b.n	40bec6 <_calloc_r+0x3e>
  40bed6:	2100      	movs	r1, #0
  40bed8:	f7fa fcb4 	bl	406844 <memset>
  40bedc:	4620      	mov	r0, r4
  40bede:	bd10      	pop	{r4, pc}
  40bee0:	f100 0208 	add.w	r2, r0, #8
  40bee4:	e7ef      	b.n	40bec6 <_calloc_r+0x3e>
  40bee6:	bf00      	nop

0040bee8 <_close_r>:
  40bee8:	b538      	push	{r3, r4, r5, lr}
  40beea:	4c07      	ldr	r4, [pc, #28]	; (40bf08 <_close_r+0x20>)
  40beec:	2300      	movs	r3, #0
  40beee:	4605      	mov	r5, r0
  40bef0:	4608      	mov	r0, r1
  40bef2:	6023      	str	r3, [r4, #0]
  40bef4:	f7f9 ff8c 	bl	405e10 <_close>
  40bef8:	1c43      	adds	r3, r0, #1
  40befa:	d000      	beq.n	40befe <_close_r+0x16>
  40befc:	bd38      	pop	{r3, r4, r5, pc}
  40befe:	6823      	ldr	r3, [r4, #0]
  40bf00:	2b00      	cmp	r3, #0
  40bf02:	d0fb      	beq.n	40befc <_close_r+0x14>
  40bf04:	602b      	str	r3, [r5, #0]
  40bf06:	bd38      	pop	{r3, r4, r5, pc}
  40bf08:	2040f4f4 	.word	0x2040f4f4

0040bf0c <_fclose_r>:
  40bf0c:	b570      	push	{r4, r5, r6, lr}
  40bf0e:	b159      	cbz	r1, 40bf28 <_fclose_r+0x1c>
  40bf10:	4605      	mov	r5, r0
  40bf12:	460c      	mov	r4, r1
  40bf14:	b110      	cbz	r0, 40bf1c <_fclose_r+0x10>
  40bf16:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40bf18:	2b00      	cmp	r3, #0
  40bf1a:	d03c      	beq.n	40bf96 <_fclose_r+0x8a>
  40bf1c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40bf1e:	07d8      	lsls	r0, r3, #31
  40bf20:	d505      	bpl.n	40bf2e <_fclose_r+0x22>
  40bf22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40bf26:	b92b      	cbnz	r3, 40bf34 <_fclose_r+0x28>
  40bf28:	2600      	movs	r6, #0
  40bf2a:	4630      	mov	r0, r6
  40bf2c:	bd70      	pop	{r4, r5, r6, pc}
  40bf2e:	89a3      	ldrh	r3, [r4, #12]
  40bf30:	0599      	lsls	r1, r3, #22
  40bf32:	d53c      	bpl.n	40bfae <_fclose_r+0xa2>
  40bf34:	4621      	mov	r1, r4
  40bf36:	4628      	mov	r0, r5
  40bf38:	f7fe f854 	bl	409fe4 <__sflush_r>
  40bf3c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40bf3e:	4606      	mov	r6, r0
  40bf40:	b133      	cbz	r3, 40bf50 <_fclose_r+0x44>
  40bf42:	69e1      	ldr	r1, [r4, #28]
  40bf44:	4628      	mov	r0, r5
  40bf46:	4798      	blx	r3
  40bf48:	2800      	cmp	r0, #0
  40bf4a:	bfb8      	it	lt
  40bf4c:	f04f 36ff 	movlt.w	r6, #4294967295
  40bf50:	89a3      	ldrh	r3, [r4, #12]
  40bf52:	061a      	lsls	r2, r3, #24
  40bf54:	d422      	bmi.n	40bf9c <_fclose_r+0x90>
  40bf56:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40bf58:	b141      	cbz	r1, 40bf6c <_fclose_r+0x60>
  40bf5a:	f104 0340 	add.w	r3, r4, #64	; 0x40
  40bf5e:	4299      	cmp	r1, r3
  40bf60:	d002      	beq.n	40bf68 <_fclose_r+0x5c>
  40bf62:	4628      	mov	r0, r5
  40bf64:	f7fe fa5c 	bl	40a420 <_free_r>
  40bf68:	2300      	movs	r3, #0
  40bf6a:	6323      	str	r3, [r4, #48]	; 0x30
  40bf6c:	6c61      	ldr	r1, [r4, #68]	; 0x44
  40bf6e:	b121      	cbz	r1, 40bf7a <_fclose_r+0x6e>
  40bf70:	4628      	mov	r0, r5
  40bf72:	f7fe fa55 	bl	40a420 <_free_r>
  40bf76:	2300      	movs	r3, #0
  40bf78:	6463      	str	r3, [r4, #68]	; 0x44
  40bf7a:	f7fe f957 	bl	40a22c <__sfp_lock_acquire>
  40bf7e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40bf80:	2200      	movs	r2, #0
  40bf82:	07db      	lsls	r3, r3, #31
  40bf84:	81a2      	strh	r2, [r4, #12]
  40bf86:	d50e      	bpl.n	40bfa6 <_fclose_r+0x9a>
  40bf88:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40bf8a:	f7fe fcef 	bl	40a96c <__retarget_lock_close_recursive>
  40bf8e:	f7fe f953 	bl	40a238 <__sfp_lock_release>
  40bf92:	4630      	mov	r0, r6
  40bf94:	bd70      	pop	{r4, r5, r6, pc}
  40bf96:	f7fe f91d 	bl	40a1d4 <__sinit>
  40bf9a:	e7bf      	b.n	40bf1c <_fclose_r+0x10>
  40bf9c:	6921      	ldr	r1, [r4, #16]
  40bf9e:	4628      	mov	r0, r5
  40bfa0:	f7fe fa3e 	bl	40a420 <_free_r>
  40bfa4:	e7d7      	b.n	40bf56 <_fclose_r+0x4a>
  40bfa6:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40bfa8:	f7fe fce4 	bl	40a974 <__retarget_lock_release_recursive>
  40bfac:	e7ec      	b.n	40bf88 <_fclose_r+0x7c>
  40bfae:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40bfb0:	f7fe fcde 	bl	40a970 <__retarget_lock_acquire_recursive>
  40bfb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40bfb8:	2b00      	cmp	r3, #0
  40bfba:	d1bb      	bne.n	40bf34 <_fclose_r+0x28>
  40bfbc:	6e66      	ldr	r6, [r4, #100]	; 0x64
  40bfbe:	f016 0601 	ands.w	r6, r6, #1
  40bfc2:	d1b1      	bne.n	40bf28 <_fclose_r+0x1c>
  40bfc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40bfc6:	f7fe fcd5 	bl	40a974 <__retarget_lock_release_recursive>
  40bfca:	4630      	mov	r0, r6
  40bfcc:	bd70      	pop	{r4, r5, r6, pc}
  40bfce:	bf00      	nop

0040bfd0 <_fstat_r>:
  40bfd0:	b538      	push	{r3, r4, r5, lr}
  40bfd2:	460b      	mov	r3, r1
  40bfd4:	4c07      	ldr	r4, [pc, #28]	; (40bff4 <_fstat_r+0x24>)
  40bfd6:	4605      	mov	r5, r0
  40bfd8:	4611      	mov	r1, r2
  40bfda:	4618      	mov	r0, r3
  40bfdc:	2300      	movs	r3, #0
  40bfde:	6023      	str	r3, [r4, #0]
  40bfe0:	f7f9 ff19 	bl	405e16 <_fstat>
  40bfe4:	1c43      	adds	r3, r0, #1
  40bfe6:	d000      	beq.n	40bfea <_fstat_r+0x1a>
  40bfe8:	bd38      	pop	{r3, r4, r5, pc}
  40bfea:	6823      	ldr	r3, [r4, #0]
  40bfec:	2b00      	cmp	r3, #0
  40bfee:	d0fb      	beq.n	40bfe8 <_fstat_r+0x18>
  40bff0:	602b      	str	r3, [r5, #0]
  40bff2:	bd38      	pop	{r3, r4, r5, pc}
  40bff4:	2040f4f4 	.word	0x2040f4f4

0040bff8 <_isatty_r>:
  40bff8:	b538      	push	{r3, r4, r5, lr}
  40bffa:	4c07      	ldr	r4, [pc, #28]	; (40c018 <_isatty_r+0x20>)
  40bffc:	2300      	movs	r3, #0
  40bffe:	4605      	mov	r5, r0
  40c000:	4608      	mov	r0, r1
  40c002:	6023      	str	r3, [r4, #0]
  40c004:	f7f9 ff0c 	bl	405e20 <_isatty>
  40c008:	1c43      	adds	r3, r0, #1
  40c00a:	d000      	beq.n	40c00e <_isatty_r+0x16>
  40c00c:	bd38      	pop	{r3, r4, r5, pc}
  40c00e:	6823      	ldr	r3, [r4, #0]
  40c010:	2b00      	cmp	r3, #0
  40c012:	d0fb      	beq.n	40c00c <_isatty_r+0x14>
  40c014:	602b      	str	r3, [r5, #0]
  40c016:	bd38      	pop	{r3, r4, r5, pc}
  40c018:	2040f4f4 	.word	0x2040f4f4

0040c01c <_lseek_r>:
  40c01c:	b570      	push	{r4, r5, r6, lr}
  40c01e:	460d      	mov	r5, r1
  40c020:	4c08      	ldr	r4, [pc, #32]	; (40c044 <_lseek_r+0x28>)
  40c022:	4611      	mov	r1, r2
  40c024:	4606      	mov	r6, r0
  40c026:	461a      	mov	r2, r3
  40c028:	4628      	mov	r0, r5
  40c02a:	2300      	movs	r3, #0
  40c02c:	6023      	str	r3, [r4, #0]
  40c02e:	f7f9 fef9 	bl	405e24 <_lseek>
  40c032:	1c43      	adds	r3, r0, #1
  40c034:	d000      	beq.n	40c038 <_lseek_r+0x1c>
  40c036:	bd70      	pop	{r4, r5, r6, pc}
  40c038:	6823      	ldr	r3, [r4, #0]
  40c03a:	2b00      	cmp	r3, #0
  40c03c:	d0fb      	beq.n	40c036 <_lseek_r+0x1a>
  40c03e:	6033      	str	r3, [r6, #0]
  40c040:	bd70      	pop	{r4, r5, r6, pc}
  40c042:	bf00      	nop
  40c044:	2040f4f4 	.word	0x2040f4f4

0040c048 <_read_r>:
  40c048:	b570      	push	{r4, r5, r6, lr}
  40c04a:	460d      	mov	r5, r1
  40c04c:	4c08      	ldr	r4, [pc, #32]	; (40c070 <_read_r+0x28>)
  40c04e:	4611      	mov	r1, r2
  40c050:	4606      	mov	r6, r0
  40c052:	461a      	mov	r2, r3
  40c054:	4628      	mov	r0, r5
  40c056:	2300      	movs	r3, #0
  40c058:	6023      	str	r3, [r4, #0]
  40c05a:	f7f9 f879 	bl	405150 <_read>
  40c05e:	1c43      	adds	r3, r0, #1
  40c060:	d000      	beq.n	40c064 <_read_r+0x1c>
  40c062:	bd70      	pop	{r4, r5, r6, pc}
  40c064:	6823      	ldr	r3, [r4, #0]
  40c066:	2b00      	cmp	r3, #0
  40c068:	d0fb      	beq.n	40c062 <_read_r+0x1a>
  40c06a:	6033      	str	r3, [r6, #0]
  40c06c:	bd70      	pop	{r4, r5, r6, pc}
  40c06e:	bf00      	nop
  40c070:	2040f4f4 	.word	0x2040f4f4

0040c074 <__aeabi_drsub>:
  40c074:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  40c078:	e002      	b.n	40c080 <__adddf3>
  40c07a:	bf00      	nop

0040c07c <__aeabi_dsub>:
  40c07c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0040c080 <__adddf3>:
  40c080:	b530      	push	{r4, r5, lr}
  40c082:	ea4f 0441 	mov.w	r4, r1, lsl #1
  40c086:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40c08a:	ea94 0f05 	teq	r4, r5
  40c08e:	bf08      	it	eq
  40c090:	ea90 0f02 	teqeq	r0, r2
  40c094:	bf1f      	itttt	ne
  40c096:	ea54 0c00 	orrsne.w	ip, r4, r0
  40c09a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40c09e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  40c0a2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40c0a6:	f000 80e2 	beq.w	40c26e <__adddf3+0x1ee>
  40c0aa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40c0ae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  40c0b2:	bfb8      	it	lt
  40c0b4:	426d      	neglt	r5, r5
  40c0b6:	dd0c      	ble.n	40c0d2 <__adddf3+0x52>
  40c0b8:	442c      	add	r4, r5
  40c0ba:	ea80 0202 	eor.w	r2, r0, r2
  40c0be:	ea81 0303 	eor.w	r3, r1, r3
  40c0c2:	ea82 0000 	eor.w	r0, r2, r0
  40c0c6:	ea83 0101 	eor.w	r1, r3, r1
  40c0ca:	ea80 0202 	eor.w	r2, r0, r2
  40c0ce:	ea81 0303 	eor.w	r3, r1, r3
  40c0d2:	2d36      	cmp	r5, #54	; 0x36
  40c0d4:	bf88      	it	hi
  40c0d6:	bd30      	pophi	{r4, r5, pc}
  40c0d8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40c0dc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40c0e0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  40c0e4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  40c0e8:	d002      	beq.n	40c0f0 <__adddf3+0x70>
  40c0ea:	4240      	negs	r0, r0
  40c0ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40c0f0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  40c0f4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40c0f8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40c0fc:	d002      	beq.n	40c104 <__adddf3+0x84>
  40c0fe:	4252      	negs	r2, r2
  40c100:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40c104:	ea94 0f05 	teq	r4, r5
  40c108:	f000 80a7 	beq.w	40c25a <__adddf3+0x1da>
  40c10c:	f1a4 0401 	sub.w	r4, r4, #1
  40c110:	f1d5 0e20 	rsbs	lr, r5, #32
  40c114:	db0d      	blt.n	40c132 <__adddf3+0xb2>
  40c116:	fa02 fc0e 	lsl.w	ip, r2, lr
  40c11a:	fa22 f205 	lsr.w	r2, r2, r5
  40c11e:	1880      	adds	r0, r0, r2
  40c120:	f141 0100 	adc.w	r1, r1, #0
  40c124:	fa03 f20e 	lsl.w	r2, r3, lr
  40c128:	1880      	adds	r0, r0, r2
  40c12a:	fa43 f305 	asr.w	r3, r3, r5
  40c12e:	4159      	adcs	r1, r3
  40c130:	e00e      	b.n	40c150 <__adddf3+0xd0>
  40c132:	f1a5 0520 	sub.w	r5, r5, #32
  40c136:	f10e 0e20 	add.w	lr, lr, #32
  40c13a:	2a01      	cmp	r2, #1
  40c13c:	fa03 fc0e 	lsl.w	ip, r3, lr
  40c140:	bf28      	it	cs
  40c142:	f04c 0c02 	orrcs.w	ip, ip, #2
  40c146:	fa43 f305 	asr.w	r3, r3, r5
  40c14a:	18c0      	adds	r0, r0, r3
  40c14c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  40c150:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40c154:	d507      	bpl.n	40c166 <__adddf3+0xe6>
  40c156:	f04f 0e00 	mov.w	lr, #0
  40c15a:	f1dc 0c00 	rsbs	ip, ip, #0
  40c15e:	eb7e 0000 	sbcs.w	r0, lr, r0
  40c162:	eb6e 0101 	sbc.w	r1, lr, r1
  40c166:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40c16a:	d31b      	bcc.n	40c1a4 <__adddf3+0x124>
  40c16c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  40c170:	d30c      	bcc.n	40c18c <__adddf3+0x10c>
  40c172:	0849      	lsrs	r1, r1, #1
  40c174:	ea5f 0030 	movs.w	r0, r0, rrx
  40c178:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40c17c:	f104 0401 	add.w	r4, r4, #1
  40c180:	ea4f 5244 	mov.w	r2, r4, lsl #21
  40c184:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  40c188:	f080 809a 	bcs.w	40c2c0 <__adddf3+0x240>
  40c18c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  40c190:	bf08      	it	eq
  40c192:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40c196:	f150 0000 	adcs.w	r0, r0, #0
  40c19a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40c19e:	ea41 0105 	orr.w	r1, r1, r5
  40c1a2:	bd30      	pop	{r4, r5, pc}
  40c1a4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  40c1a8:	4140      	adcs	r0, r0
  40c1aa:	eb41 0101 	adc.w	r1, r1, r1
  40c1ae:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40c1b2:	f1a4 0401 	sub.w	r4, r4, #1
  40c1b6:	d1e9      	bne.n	40c18c <__adddf3+0x10c>
  40c1b8:	f091 0f00 	teq	r1, #0
  40c1bc:	bf04      	itt	eq
  40c1be:	4601      	moveq	r1, r0
  40c1c0:	2000      	moveq	r0, #0
  40c1c2:	fab1 f381 	clz	r3, r1
  40c1c6:	bf08      	it	eq
  40c1c8:	3320      	addeq	r3, #32
  40c1ca:	f1a3 030b 	sub.w	r3, r3, #11
  40c1ce:	f1b3 0220 	subs.w	r2, r3, #32
  40c1d2:	da0c      	bge.n	40c1ee <__adddf3+0x16e>
  40c1d4:	320c      	adds	r2, #12
  40c1d6:	dd08      	ble.n	40c1ea <__adddf3+0x16a>
  40c1d8:	f102 0c14 	add.w	ip, r2, #20
  40c1dc:	f1c2 020c 	rsb	r2, r2, #12
  40c1e0:	fa01 f00c 	lsl.w	r0, r1, ip
  40c1e4:	fa21 f102 	lsr.w	r1, r1, r2
  40c1e8:	e00c      	b.n	40c204 <__adddf3+0x184>
  40c1ea:	f102 0214 	add.w	r2, r2, #20
  40c1ee:	bfd8      	it	le
  40c1f0:	f1c2 0c20 	rsble	ip, r2, #32
  40c1f4:	fa01 f102 	lsl.w	r1, r1, r2
  40c1f8:	fa20 fc0c 	lsr.w	ip, r0, ip
  40c1fc:	bfdc      	itt	le
  40c1fe:	ea41 010c 	orrle.w	r1, r1, ip
  40c202:	4090      	lslle	r0, r2
  40c204:	1ae4      	subs	r4, r4, r3
  40c206:	bfa2      	ittt	ge
  40c208:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40c20c:	4329      	orrge	r1, r5
  40c20e:	bd30      	popge	{r4, r5, pc}
  40c210:	ea6f 0404 	mvn.w	r4, r4
  40c214:	3c1f      	subs	r4, #31
  40c216:	da1c      	bge.n	40c252 <__adddf3+0x1d2>
  40c218:	340c      	adds	r4, #12
  40c21a:	dc0e      	bgt.n	40c23a <__adddf3+0x1ba>
  40c21c:	f104 0414 	add.w	r4, r4, #20
  40c220:	f1c4 0220 	rsb	r2, r4, #32
  40c224:	fa20 f004 	lsr.w	r0, r0, r4
  40c228:	fa01 f302 	lsl.w	r3, r1, r2
  40c22c:	ea40 0003 	orr.w	r0, r0, r3
  40c230:	fa21 f304 	lsr.w	r3, r1, r4
  40c234:	ea45 0103 	orr.w	r1, r5, r3
  40c238:	bd30      	pop	{r4, r5, pc}
  40c23a:	f1c4 040c 	rsb	r4, r4, #12
  40c23e:	f1c4 0220 	rsb	r2, r4, #32
  40c242:	fa20 f002 	lsr.w	r0, r0, r2
  40c246:	fa01 f304 	lsl.w	r3, r1, r4
  40c24a:	ea40 0003 	orr.w	r0, r0, r3
  40c24e:	4629      	mov	r1, r5
  40c250:	bd30      	pop	{r4, r5, pc}
  40c252:	fa21 f004 	lsr.w	r0, r1, r4
  40c256:	4629      	mov	r1, r5
  40c258:	bd30      	pop	{r4, r5, pc}
  40c25a:	f094 0f00 	teq	r4, #0
  40c25e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40c262:	bf06      	itte	eq
  40c264:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  40c268:	3401      	addeq	r4, #1
  40c26a:	3d01      	subne	r5, #1
  40c26c:	e74e      	b.n	40c10c <__adddf3+0x8c>
  40c26e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40c272:	bf18      	it	ne
  40c274:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  40c278:	d029      	beq.n	40c2ce <__adddf3+0x24e>
  40c27a:	ea94 0f05 	teq	r4, r5
  40c27e:	bf08      	it	eq
  40c280:	ea90 0f02 	teqeq	r0, r2
  40c284:	d005      	beq.n	40c292 <__adddf3+0x212>
  40c286:	ea54 0c00 	orrs.w	ip, r4, r0
  40c28a:	bf04      	itt	eq
  40c28c:	4619      	moveq	r1, r3
  40c28e:	4610      	moveq	r0, r2
  40c290:	bd30      	pop	{r4, r5, pc}
  40c292:	ea91 0f03 	teq	r1, r3
  40c296:	bf1e      	ittt	ne
  40c298:	2100      	movne	r1, #0
  40c29a:	2000      	movne	r0, #0
  40c29c:	bd30      	popne	{r4, r5, pc}
  40c29e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40c2a2:	d105      	bne.n	40c2b0 <__adddf3+0x230>
  40c2a4:	0040      	lsls	r0, r0, #1
  40c2a6:	4149      	adcs	r1, r1
  40c2a8:	bf28      	it	cs
  40c2aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40c2ae:	bd30      	pop	{r4, r5, pc}
  40c2b0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40c2b4:	bf3c      	itt	cc
  40c2b6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40c2ba:	bd30      	popcc	{r4, r5, pc}
  40c2bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40c2c0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40c2c4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  40c2c8:	f04f 0000 	mov.w	r0, #0
  40c2cc:	bd30      	pop	{r4, r5, pc}
  40c2ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40c2d2:	bf1a      	itte	ne
  40c2d4:	4619      	movne	r1, r3
  40c2d6:	4610      	movne	r0, r2
  40c2d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40c2dc:	bf1c      	itt	ne
  40c2de:	460b      	movne	r3, r1
  40c2e0:	4602      	movne	r2, r0
  40c2e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40c2e6:	bf06      	itte	eq
  40c2e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40c2ec:	ea91 0f03 	teqeq	r1, r3
  40c2f0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40c2f4:	bd30      	pop	{r4, r5, pc}
  40c2f6:	bf00      	nop

0040c2f8 <__aeabi_ui2d>:
  40c2f8:	f090 0f00 	teq	r0, #0
  40c2fc:	bf04      	itt	eq
  40c2fe:	2100      	moveq	r1, #0
  40c300:	4770      	bxeq	lr
  40c302:	b530      	push	{r4, r5, lr}
  40c304:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40c308:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40c30c:	f04f 0500 	mov.w	r5, #0
  40c310:	f04f 0100 	mov.w	r1, #0
  40c314:	e750      	b.n	40c1b8 <__adddf3+0x138>
  40c316:	bf00      	nop

0040c318 <__aeabi_i2d>:
  40c318:	f090 0f00 	teq	r0, #0
  40c31c:	bf04      	itt	eq
  40c31e:	2100      	moveq	r1, #0
  40c320:	4770      	bxeq	lr
  40c322:	b530      	push	{r4, r5, lr}
  40c324:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40c328:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40c32c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  40c330:	bf48      	it	mi
  40c332:	4240      	negmi	r0, r0
  40c334:	f04f 0100 	mov.w	r1, #0
  40c338:	e73e      	b.n	40c1b8 <__adddf3+0x138>
  40c33a:	bf00      	nop

0040c33c <__aeabi_f2d>:
  40c33c:	0042      	lsls	r2, r0, #1
  40c33e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40c342:	ea4f 0131 	mov.w	r1, r1, rrx
  40c346:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40c34a:	bf1f      	itttt	ne
  40c34c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  40c350:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40c354:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  40c358:	4770      	bxne	lr
  40c35a:	f092 0f00 	teq	r2, #0
  40c35e:	bf14      	ite	ne
  40c360:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40c364:	4770      	bxeq	lr
  40c366:	b530      	push	{r4, r5, lr}
  40c368:	f44f 7460 	mov.w	r4, #896	; 0x380
  40c36c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40c370:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40c374:	e720      	b.n	40c1b8 <__adddf3+0x138>
  40c376:	bf00      	nop

0040c378 <__aeabi_ul2d>:
  40c378:	ea50 0201 	orrs.w	r2, r0, r1
  40c37c:	bf08      	it	eq
  40c37e:	4770      	bxeq	lr
  40c380:	b530      	push	{r4, r5, lr}
  40c382:	f04f 0500 	mov.w	r5, #0
  40c386:	e00a      	b.n	40c39e <__aeabi_l2d+0x16>

0040c388 <__aeabi_l2d>:
  40c388:	ea50 0201 	orrs.w	r2, r0, r1
  40c38c:	bf08      	it	eq
  40c38e:	4770      	bxeq	lr
  40c390:	b530      	push	{r4, r5, lr}
  40c392:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40c396:	d502      	bpl.n	40c39e <__aeabi_l2d+0x16>
  40c398:	4240      	negs	r0, r0
  40c39a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40c39e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40c3a2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40c3a6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40c3aa:	f43f aedc 	beq.w	40c166 <__adddf3+0xe6>
  40c3ae:	f04f 0203 	mov.w	r2, #3
  40c3b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40c3b6:	bf18      	it	ne
  40c3b8:	3203      	addne	r2, #3
  40c3ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40c3be:	bf18      	it	ne
  40c3c0:	3203      	addne	r2, #3
  40c3c2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40c3c6:	f1c2 0320 	rsb	r3, r2, #32
  40c3ca:	fa00 fc03 	lsl.w	ip, r0, r3
  40c3ce:	fa20 f002 	lsr.w	r0, r0, r2
  40c3d2:	fa01 fe03 	lsl.w	lr, r1, r3
  40c3d6:	ea40 000e 	orr.w	r0, r0, lr
  40c3da:	fa21 f102 	lsr.w	r1, r1, r2
  40c3de:	4414      	add	r4, r2
  40c3e0:	e6c1      	b.n	40c166 <__adddf3+0xe6>
  40c3e2:	bf00      	nop

0040c3e4 <__aeabi_dmul>:
  40c3e4:	b570      	push	{r4, r5, r6, lr}
  40c3e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40c3ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40c3ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40c3f2:	bf1d      	ittte	ne
  40c3f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40c3f8:	ea94 0f0c 	teqne	r4, ip
  40c3fc:	ea95 0f0c 	teqne	r5, ip
  40c400:	f000 f8de 	bleq	40c5c0 <__aeabi_dmul+0x1dc>
  40c404:	442c      	add	r4, r5
  40c406:	ea81 0603 	eor.w	r6, r1, r3
  40c40a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40c40e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40c412:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40c416:	bf18      	it	ne
  40c418:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40c41c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40c420:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40c424:	d038      	beq.n	40c498 <__aeabi_dmul+0xb4>
  40c426:	fba0 ce02 	umull	ip, lr, r0, r2
  40c42a:	f04f 0500 	mov.w	r5, #0
  40c42e:	fbe1 e502 	umlal	lr, r5, r1, r2
  40c432:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40c436:	fbe0 e503 	umlal	lr, r5, r0, r3
  40c43a:	f04f 0600 	mov.w	r6, #0
  40c43e:	fbe1 5603 	umlal	r5, r6, r1, r3
  40c442:	f09c 0f00 	teq	ip, #0
  40c446:	bf18      	it	ne
  40c448:	f04e 0e01 	orrne.w	lr, lr, #1
  40c44c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  40c450:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  40c454:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  40c458:	d204      	bcs.n	40c464 <__aeabi_dmul+0x80>
  40c45a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40c45e:	416d      	adcs	r5, r5
  40c460:	eb46 0606 	adc.w	r6, r6, r6
  40c464:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  40c468:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40c46c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  40c470:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  40c474:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  40c478:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40c47c:	bf88      	it	hi
  40c47e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40c482:	d81e      	bhi.n	40c4c2 <__aeabi_dmul+0xde>
  40c484:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  40c488:	bf08      	it	eq
  40c48a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40c48e:	f150 0000 	adcs.w	r0, r0, #0
  40c492:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40c496:	bd70      	pop	{r4, r5, r6, pc}
  40c498:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40c49c:	ea46 0101 	orr.w	r1, r6, r1
  40c4a0:	ea40 0002 	orr.w	r0, r0, r2
  40c4a4:	ea81 0103 	eor.w	r1, r1, r3
  40c4a8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40c4ac:	bfc2      	ittt	gt
  40c4ae:	ebd4 050c 	rsbsgt	r5, r4, ip
  40c4b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40c4b6:	bd70      	popgt	{r4, r5, r6, pc}
  40c4b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40c4bc:	f04f 0e00 	mov.w	lr, #0
  40c4c0:	3c01      	subs	r4, #1
  40c4c2:	f300 80ab 	bgt.w	40c61c <__aeabi_dmul+0x238>
  40c4c6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40c4ca:	bfde      	ittt	le
  40c4cc:	2000      	movle	r0, #0
  40c4ce:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40c4d2:	bd70      	pople	{r4, r5, r6, pc}
  40c4d4:	f1c4 0400 	rsb	r4, r4, #0
  40c4d8:	3c20      	subs	r4, #32
  40c4da:	da35      	bge.n	40c548 <__aeabi_dmul+0x164>
  40c4dc:	340c      	adds	r4, #12
  40c4de:	dc1b      	bgt.n	40c518 <__aeabi_dmul+0x134>
  40c4e0:	f104 0414 	add.w	r4, r4, #20
  40c4e4:	f1c4 0520 	rsb	r5, r4, #32
  40c4e8:	fa00 f305 	lsl.w	r3, r0, r5
  40c4ec:	fa20 f004 	lsr.w	r0, r0, r4
  40c4f0:	fa01 f205 	lsl.w	r2, r1, r5
  40c4f4:	ea40 0002 	orr.w	r0, r0, r2
  40c4f8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40c4fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40c500:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40c504:	fa21 f604 	lsr.w	r6, r1, r4
  40c508:	eb42 0106 	adc.w	r1, r2, r6
  40c50c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40c510:	bf08      	it	eq
  40c512:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40c516:	bd70      	pop	{r4, r5, r6, pc}
  40c518:	f1c4 040c 	rsb	r4, r4, #12
  40c51c:	f1c4 0520 	rsb	r5, r4, #32
  40c520:	fa00 f304 	lsl.w	r3, r0, r4
  40c524:	fa20 f005 	lsr.w	r0, r0, r5
  40c528:	fa01 f204 	lsl.w	r2, r1, r4
  40c52c:	ea40 0002 	orr.w	r0, r0, r2
  40c530:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40c534:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40c538:	f141 0100 	adc.w	r1, r1, #0
  40c53c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40c540:	bf08      	it	eq
  40c542:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40c546:	bd70      	pop	{r4, r5, r6, pc}
  40c548:	f1c4 0520 	rsb	r5, r4, #32
  40c54c:	fa00 f205 	lsl.w	r2, r0, r5
  40c550:	ea4e 0e02 	orr.w	lr, lr, r2
  40c554:	fa20 f304 	lsr.w	r3, r0, r4
  40c558:	fa01 f205 	lsl.w	r2, r1, r5
  40c55c:	ea43 0302 	orr.w	r3, r3, r2
  40c560:	fa21 f004 	lsr.w	r0, r1, r4
  40c564:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40c568:	fa21 f204 	lsr.w	r2, r1, r4
  40c56c:	ea20 0002 	bic.w	r0, r0, r2
  40c570:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  40c574:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40c578:	bf08      	it	eq
  40c57a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40c57e:	bd70      	pop	{r4, r5, r6, pc}
  40c580:	f094 0f00 	teq	r4, #0
  40c584:	d10f      	bne.n	40c5a6 <__aeabi_dmul+0x1c2>
  40c586:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40c58a:	0040      	lsls	r0, r0, #1
  40c58c:	eb41 0101 	adc.w	r1, r1, r1
  40c590:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40c594:	bf08      	it	eq
  40c596:	3c01      	subeq	r4, #1
  40c598:	d0f7      	beq.n	40c58a <__aeabi_dmul+0x1a6>
  40c59a:	ea41 0106 	orr.w	r1, r1, r6
  40c59e:	f095 0f00 	teq	r5, #0
  40c5a2:	bf18      	it	ne
  40c5a4:	4770      	bxne	lr
  40c5a6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40c5aa:	0052      	lsls	r2, r2, #1
  40c5ac:	eb43 0303 	adc.w	r3, r3, r3
  40c5b0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40c5b4:	bf08      	it	eq
  40c5b6:	3d01      	subeq	r5, #1
  40c5b8:	d0f7      	beq.n	40c5aa <__aeabi_dmul+0x1c6>
  40c5ba:	ea43 0306 	orr.w	r3, r3, r6
  40c5be:	4770      	bx	lr
  40c5c0:	ea94 0f0c 	teq	r4, ip
  40c5c4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40c5c8:	bf18      	it	ne
  40c5ca:	ea95 0f0c 	teqne	r5, ip
  40c5ce:	d00c      	beq.n	40c5ea <__aeabi_dmul+0x206>
  40c5d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40c5d4:	bf18      	it	ne
  40c5d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40c5da:	d1d1      	bne.n	40c580 <__aeabi_dmul+0x19c>
  40c5dc:	ea81 0103 	eor.w	r1, r1, r3
  40c5e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40c5e4:	f04f 0000 	mov.w	r0, #0
  40c5e8:	bd70      	pop	{r4, r5, r6, pc}
  40c5ea:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40c5ee:	bf06      	itte	eq
  40c5f0:	4610      	moveq	r0, r2
  40c5f2:	4619      	moveq	r1, r3
  40c5f4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40c5f8:	d019      	beq.n	40c62e <__aeabi_dmul+0x24a>
  40c5fa:	ea94 0f0c 	teq	r4, ip
  40c5fe:	d102      	bne.n	40c606 <__aeabi_dmul+0x222>
  40c600:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40c604:	d113      	bne.n	40c62e <__aeabi_dmul+0x24a>
  40c606:	ea95 0f0c 	teq	r5, ip
  40c60a:	d105      	bne.n	40c618 <__aeabi_dmul+0x234>
  40c60c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  40c610:	bf1c      	itt	ne
  40c612:	4610      	movne	r0, r2
  40c614:	4619      	movne	r1, r3
  40c616:	d10a      	bne.n	40c62e <__aeabi_dmul+0x24a>
  40c618:	ea81 0103 	eor.w	r1, r1, r3
  40c61c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40c620:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40c624:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  40c628:	f04f 0000 	mov.w	r0, #0
  40c62c:	bd70      	pop	{r4, r5, r6, pc}
  40c62e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40c632:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40c636:	bd70      	pop	{r4, r5, r6, pc}

0040c638 <__aeabi_ddiv>:
  40c638:	b570      	push	{r4, r5, r6, lr}
  40c63a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40c63e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40c642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40c646:	bf1d      	ittte	ne
  40c648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40c64c:	ea94 0f0c 	teqne	r4, ip
  40c650:	ea95 0f0c 	teqne	r5, ip
  40c654:	f000 f8a7 	bleq	40c7a6 <__aeabi_ddiv+0x16e>
  40c658:	eba4 0405 	sub.w	r4, r4, r5
  40c65c:	ea81 0e03 	eor.w	lr, r1, r3
  40c660:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40c664:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40c668:	f000 8088 	beq.w	40c77c <__aeabi_ddiv+0x144>
  40c66c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40c670:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  40c674:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  40c678:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40c67c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  40c680:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  40c684:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  40c688:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40c68c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  40c690:	429d      	cmp	r5, r3
  40c692:	bf08      	it	eq
  40c694:	4296      	cmpeq	r6, r2
  40c696:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40c69a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40c69e:	d202      	bcs.n	40c6a6 <__aeabi_ddiv+0x6e>
  40c6a0:	085b      	lsrs	r3, r3, #1
  40c6a2:	ea4f 0232 	mov.w	r2, r2, rrx
  40c6a6:	1ab6      	subs	r6, r6, r2
  40c6a8:	eb65 0503 	sbc.w	r5, r5, r3
  40c6ac:	085b      	lsrs	r3, r3, #1
  40c6ae:	ea4f 0232 	mov.w	r2, r2, rrx
  40c6b2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40c6b6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40c6ba:	ebb6 0e02 	subs.w	lr, r6, r2
  40c6be:	eb75 0e03 	sbcs.w	lr, r5, r3
  40c6c2:	bf22      	ittt	cs
  40c6c4:	1ab6      	subcs	r6, r6, r2
  40c6c6:	4675      	movcs	r5, lr
  40c6c8:	ea40 000c 	orrcs.w	r0, r0, ip
  40c6cc:	085b      	lsrs	r3, r3, #1
  40c6ce:	ea4f 0232 	mov.w	r2, r2, rrx
  40c6d2:	ebb6 0e02 	subs.w	lr, r6, r2
  40c6d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  40c6da:	bf22      	ittt	cs
  40c6dc:	1ab6      	subcs	r6, r6, r2
  40c6de:	4675      	movcs	r5, lr
  40c6e0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40c6e4:	085b      	lsrs	r3, r3, #1
  40c6e6:	ea4f 0232 	mov.w	r2, r2, rrx
  40c6ea:	ebb6 0e02 	subs.w	lr, r6, r2
  40c6ee:	eb75 0e03 	sbcs.w	lr, r5, r3
  40c6f2:	bf22      	ittt	cs
  40c6f4:	1ab6      	subcs	r6, r6, r2
  40c6f6:	4675      	movcs	r5, lr
  40c6f8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40c6fc:	085b      	lsrs	r3, r3, #1
  40c6fe:	ea4f 0232 	mov.w	r2, r2, rrx
  40c702:	ebb6 0e02 	subs.w	lr, r6, r2
  40c706:	eb75 0e03 	sbcs.w	lr, r5, r3
  40c70a:	bf22      	ittt	cs
  40c70c:	1ab6      	subcs	r6, r6, r2
  40c70e:	4675      	movcs	r5, lr
  40c710:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40c714:	ea55 0e06 	orrs.w	lr, r5, r6
  40c718:	d018      	beq.n	40c74c <__aeabi_ddiv+0x114>
  40c71a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40c71e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40c722:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40c726:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40c72a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40c72e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40c732:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40c736:	d1c0      	bne.n	40c6ba <__aeabi_ddiv+0x82>
  40c738:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40c73c:	d10b      	bne.n	40c756 <__aeabi_ddiv+0x11e>
  40c73e:	ea41 0100 	orr.w	r1, r1, r0
  40c742:	f04f 0000 	mov.w	r0, #0
  40c746:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40c74a:	e7b6      	b.n	40c6ba <__aeabi_ddiv+0x82>
  40c74c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40c750:	bf04      	itt	eq
  40c752:	4301      	orreq	r1, r0
  40c754:	2000      	moveq	r0, #0
  40c756:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40c75a:	bf88      	it	hi
  40c75c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40c760:	f63f aeaf 	bhi.w	40c4c2 <__aeabi_dmul+0xde>
  40c764:	ebb5 0c03 	subs.w	ip, r5, r3
  40c768:	bf04      	itt	eq
  40c76a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40c76e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40c772:	f150 0000 	adcs.w	r0, r0, #0
  40c776:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40c77a:	bd70      	pop	{r4, r5, r6, pc}
  40c77c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  40c780:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40c784:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  40c788:	bfc2      	ittt	gt
  40c78a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40c78e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40c792:	bd70      	popgt	{r4, r5, r6, pc}
  40c794:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40c798:	f04f 0e00 	mov.w	lr, #0
  40c79c:	3c01      	subs	r4, #1
  40c79e:	e690      	b.n	40c4c2 <__aeabi_dmul+0xde>
  40c7a0:	ea45 0e06 	orr.w	lr, r5, r6
  40c7a4:	e68d      	b.n	40c4c2 <__aeabi_dmul+0xde>
  40c7a6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40c7aa:	ea94 0f0c 	teq	r4, ip
  40c7ae:	bf08      	it	eq
  40c7b0:	ea95 0f0c 	teqeq	r5, ip
  40c7b4:	f43f af3b 	beq.w	40c62e <__aeabi_dmul+0x24a>
  40c7b8:	ea94 0f0c 	teq	r4, ip
  40c7bc:	d10a      	bne.n	40c7d4 <__aeabi_ddiv+0x19c>
  40c7be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40c7c2:	f47f af34 	bne.w	40c62e <__aeabi_dmul+0x24a>
  40c7c6:	ea95 0f0c 	teq	r5, ip
  40c7ca:	f47f af25 	bne.w	40c618 <__aeabi_dmul+0x234>
  40c7ce:	4610      	mov	r0, r2
  40c7d0:	4619      	mov	r1, r3
  40c7d2:	e72c      	b.n	40c62e <__aeabi_dmul+0x24a>
  40c7d4:	ea95 0f0c 	teq	r5, ip
  40c7d8:	d106      	bne.n	40c7e8 <__aeabi_ddiv+0x1b0>
  40c7da:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40c7de:	f43f aefd 	beq.w	40c5dc <__aeabi_dmul+0x1f8>
  40c7e2:	4610      	mov	r0, r2
  40c7e4:	4619      	mov	r1, r3
  40c7e6:	e722      	b.n	40c62e <__aeabi_dmul+0x24a>
  40c7e8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40c7ec:	bf18      	it	ne
  40c7ee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40c7f2:	f47f aec5 	bne.w	40c580 <__aeabi_dmul+0x19c>
  40c7f6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40c7fa:	f47f af0d 	bne.w	40c618 <__aeabi_dmul+0x234>
  40c7fe:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40c802:	f47f aeeb 	bne.w	40c5dc <__aeabi_dmul+0x1f8>
  40c806:	e712      	b.n	40c62e <__aeabi_dmul+0x24a>

0040c808 <__gedf2>:
  40c808:	f04f 3cff 	mov.w	ip, #4294967295
  40c80c:	e006      	b.n	40c81c <__cmpdf2+0x4>
  40c80e:	bf00      	nop

0040c810 <__ledf2>:
  40c810:	f04f 0c01 	mov.w	ip, #1
  40c814:	e002      	b.n	40c81c <__cmpdf2+0x4>
  40c816:	bf00      	nop

0040c818 <__cmpdf2>:
  40c818:	f04f 0c01 	mov.w	ip, #1
  40c81c:	f84d cd04 	str.w	ip, [sp, #-4]!
  40c820:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40c824:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40c828:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40c82c:	bf18      	it	ne
  40c82e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40c832:	d01b      	beq.n	40c86c <__cmpdf2+0x54>
  40c834:	b001      	add	sp, #4
  40c836:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40c83a:	bf0c      	ite	eq
  40c83c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  40c840:	ea91 0f03 	teqne	r1, r3
  40c844:	bf02      	ittt	eq
  40c846:	ea90 0f02 	teqeq	r0, r2
  40c84a:	2000      	moveq	r0, #0
  40c84c:	4770      	bxeq	lr
  40c84e:	f110 0f00 	cmn.w	r0, #0
  40c852:	ea91 0f03 	teq	r1, r3
  40c856:	bf58      	it	pl
  40c858:	4299      	cmppl	r1, r3
  40c85a:	bf08      	it	eq
  40c85c:	4290      	cmpeq	r0, r2
  40c85e:	bf2c      	ite	cs
  40c860:	17d8      	asrcs	r0, r3, #31
  40c862:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  40c866:	f040 0001 	orr.w	r0, r0, #1
  40c86a:	4770      	bx	lr
  40c86c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40c870:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40c874:	d102      	bne.n	40c87c <__cmpdf2+0x64>
  40c876:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40c87a:	d107      	bne.n	40c88c <__cmpdf2+0x74>
  40c87c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40c880:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40c884:	d1d6      	bne.n	40c834 <__cmpdf2+0x1c>
  40c886:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40c88a:	d0d3      	beq.n	40c834 <__cmpdf2+0x1c>
  40c88c:	f85d 0b04 	ldr.w	r0, [sp], #4
  40c890:	4770      	bx	lr
  40c892:	bf00      	nop

0040c894 <__aeabi_cdrcmple>:
  40c894:	4684      	mov	ip, r0
  40c896:	4610      	mov	r0, r2
  40c898:	4662      	mov	r2, ip
  40c89a:	468c      	mov	ip, r1
  40c89c:	4619      	mov	r1, r3
  40c89e:	4663      	mov	r3, ip
  40c8a0:	e000      	b.n	40c8a4 <__aeabi_cdcmpeq>
  40c8a2:	bf00      	nop

0040c8a4 <__aeabi_cdcmpeq>:
  40c8a4:	b501      	push	{r0, lr}
  40c8a6:	f7ff ffb7 	bl	40c818 <__cmpdf2>
  40c8aa:	2800      	cmp	r0, #0
  40c8ac:	bf48      	it	mi
  40c8ae:	f110 0f00 	cmnmi.w	r0, #0
  40c8b2:	bd01      	pop	{r0, pc}

0040c8b4 <__aeabi_dcmpeq>:
  40c8b4:	f84d ed08 	str.w	lr, [sp, #-8]!
  40c8b8:	f7ff fff4 	bl	40c8a4 <__aeabi_cdcmpeq>
  40c8bc:	bf0c      	ite	eq
  40c8be:	2001      	moveq	r0, #1
  40c8c0:	2000      	movne	r0, #0
  40c8c2:	f85d fb08 	ldr.w	pc, [sp], #8
  40c8c6:	bf00      	nop

0040c8c8 <__aeabi_dcmplt>:
  40c8c8:	f84d ed08 	str.w	lr, [sp, #-8]!
  40c8cc:	f7ff ffea 	bl	40c8a4 <__aeabi_cdcmpeq>
  40c8d0:	bf34      	ite	cc
  40c8d2:	2001      	movcc	r0, #1
  40c8d4:	2000      	movcs	r0, #0
  40c8d6:	f85d fb08 	ldr.w	pc, [sp], #8
  40c8da:	bf00      	nop

0040c8dc <__aeabi_dcmple>:
  40c8dc:	f84d ed08 	str.w	lr, [sp, #-8]!
  40c8e0:	f7ff ffe0 	bl	40c8a4 <__aeabi_cdcmpeq>
  40c8e4:	bf94      	ite	ls
  40c8e6:	2001      	movls	r0, #1
  40c8e8:	2000      	movhi	r0, #0
  40c8ea:	f85d fb08 	ldr.w	pc, [sp], #8
  40c8ee:	bf00      	nop

0040c8f0 <__aeabi_dcmpge>:
  40c8f0:	f84d ed08 	str.w	lr, [sp, #-8]!
  40c8f4:	f7ff ffce 	bl	40c894 <__aeabi_cdrcmple>
  40c8f8:	bf94      	ite	ls
  40c8fa:	2001      	movls	r0, #1
  40c8fc:	2000      	movhi	r0, #0
  40c8fe:	f85d fb08 	ldr.w	pc, [sp], #8
  40c902:	bf00      	nop

0040c904 <__aeabi_dcmpgt>:
  40c904:	f84d ed08 	str.w	lr, [sp, #-8]!
  40c908:	f7ff ffc4 	bl	40c894 <__aeabi_cdrcmple>
  40c90c:	bf34      	ite	cc
  40c90e:	2001      	movcc	r0, #1
  40c910:	2000      	movcs	r0, #0
  40c912:	f85d fb08 	ldr.w	pc, [sp], #8
  40c916:	bf00      	nop

0040c918 <__aeabi_dcmpun>:
  40c918:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40c91c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40c920:	d102      	bne.n	40c928 <__aeabi_dcmpun+0x10>
  40c922:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40c926:	d10a      	bne.n	40c93e <__aeabi_dcmpun+0x26>
  40c928:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40c92c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40c930:	d102      	bne.n	40c938 <__aeabi_dcmpun+0x20>
  40c932:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40c936:	d102      	bne.n	40c93e <__aeabi_dcmpun+0x26>
  40c938:	f04f 0000 	mov.w	r0, #0
  40c93c:	4770      	bx	lr
  40c93e:	f04f 0001 	mov.w	r0, #1
  40c942:	4770      	bx	lr

0040c944 <__aeabi_d2iz>:
  40c944:	ea4f 0241 	mov.w	r2, r1, lsl #1
  40c948:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40c94c:	d215      	bcs.n	40c97a <__aeabi_d2iz+0x36>
  40c94e:	d511      	bpl.n	40c974 <__aeabi_d2iz+0x30>
  40c950:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  40c954:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  40c958:	d912      	bls.n	40c980 <__aeabi_d2iz+0x3c>
  40c95a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40c95e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40c962:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40c966:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40c96a:	fa23 f002 	lsr.w	r0, r3, r2
  40c96e:	bf18      	it	ne
  40c970:	4240      	negne	r0, r0
  40c972:	4770      	bx	lr
  40c974:	f04f 0000 	mov.w	r0, #0
  40c978:	4770      	bx	lr
  40c97a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40c97e:	d105      	bne.n	40c98c <__aeabi_d2iz+0x48>
  40c980:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  40c984:	bf08      	it	eq
  40c986:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40c98a:	4770      	bx	lr
  40c98c:	f04f 0000 	mov.w	r0, #0
  40c990:	4770      	bx	lr
  40c992:	bf00      	nop

0040c994 <__aeabi_uldivmod>:
  40c994:	b953      	cbnz	r3, 40c9ac <__aeabi_uldivmod+0x18>
  40c996:	b94a      	cbnz	r2, 40c9ac <__aeabi_uldivmod+0x18>
  40c998:	2900      	cmp	r1, #0
  40c99a:	bf08      	it	eq
  40c99c:	2800      	cmpeq	r0, #0
  40c99e:	bf1c      	itt	ne
  40c9a0:	f04f 31ff 	movne.w	r1, #4294967295
  40c9a4:	f04f 30ff 	movne.w	r0, #4294967295
  40c9a8:	f000 b97a 	b.w	40cca0 <__aeabi_idiv0>
  40c9ac:	f1ad 0c08 	sub.w	ip, sp, #8
  40c9b0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40c9b4:	f000 f806 	bl	40c9c4 <__udivmoddi4>
  40c9b8:	f8dd e004 	ldr.w	lr, [sp, #4]
  40c9bc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40c9c0:	b004      	add	sp, #16
  40c9c2:	4770      	bx	lr

0040c9c4 <__udivmoddi4>:
  40c9c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40c9c8:	468c      	mov	ip, r1
  40c9ca:	460d      	mov	r5, r1
  40c9cc:	4604      	mov	r4, r0
  40c9ce:	9e08      	ldr	r6, [sp, #32]
  40c9d0:	2b00      	cmp	r3, #0
  40c9d2:	d151      	bne.n	40ca78 <__udivmoddi4+0xb4>
  40c9d4:	428a      	cmp	r2, r1
  40c9d6:	4617      	mov	r7, r2
  40c9d8:	d96d      	bls.n	40cab6 <__udivmoddi4+0xf2>
  40c9da:	fab2 fe82 	clz	lr, r2
  40c9de:	f1be 0f00 	cmp.w	lr, #0
  40c9e2:	d00b      	beq.n	40c9fc <__udivmoddi4+0x38>
  40c9e4:	f1ce 0c20 	rsb	ip, lr, #32
  40c9e8:	fa01 f50e 	lsl.w	r5, r1, lr
  40c9ec:	fa20 fc0c 	lsr.w	ip, r0, ip
  40c9f0:	fa02 f70e 	lsl.w	r7, r2, lr
  40c9f4:	ea4c 0c05 	orr.w	ip, ip, r5
  40c9f8:	fa00 f40e 	lsl.w	r4, r0, lr
  40c9fc:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40ca00:	0c25      	lsrs	r5, r4, #16
  40ca02:	fbbc f8fa 	udiv	r8, ip, sl
  40ca06:	fa1f f987 	uxth.w	r9, r7
  40ca0a:	fb0a cc18 	mls	ip, sl, r8, ip
  40ca0e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40ca12:	fb08 f309 	mul.w	r3, r8, r9
  40ca16:	42ab      	cmp	r3, r5
  40ca18:	d90a      	bls.n	40ca30 <__udivmoddi4+0x6c>
  40ca1a:	19ed      	adds	r5, r5, r7
  40ca1c:	f108 32ff 	add.w	r2, r8, #4294967295
  40ca20:	f080 8123 	bcs.w	40cc6a <__udivmoddi4+0x2a6>
  40ca24:	42ab      	cmp	r3, r5
  40ca26:	f240 8120 	bls.w	40cc6a <__udivmoddi4+0x2a6>
  40ca2a:	f1a8 0802 	sub.w	r8, r8, #2
  40ca2e:	443d      	add	r5, r7
  40ca30:	1aed      	subs	r5, r5, r3
  40ca32:	b2a4      	uxth	r4, r4
  40ca34:	fbb5 f0fa 	udiv	r0, r5, sl
  40ca38:	fb0a 5510 	mls	r5, sl, r0, r5
  40ca3c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40ca40:	fb00 f909 	mul.w	r9, r0, r9
  40ca44:	45a1      	cmp	r9, r4
  40ca46:	d909      	bls.n	40ca5c <__udivmoddi4+0x98>
  40ca48:	19e4      	adds	r4, r4, r7
  40ca4a:	f100 33ff 	add.w	r3, r0, #4294967295
  40ca4e:	f080 810a 	bcs.w	40cc66 <__udivmoddi4+0x2a2>
  40ca52:	45a1      	cmp	r9, r4
  40ca54:	f240 8107 	bls.w	40cc66 <__udivmoddi4+0x2a2>
  40ca58:	3802      	subs	r0, #2
  40ca5a:	443c      	add	r4, r7
  40ca5c:	eba4 0409 	sub.w	r4, r4, r9
  40ca60:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40ca64:	2100      	movs	r1, #0
  40ca66:	2e00      	cmp	r6, #0
  40ca68:	d061      	beq.n	40cb2e <__udivmoddi4+0x16a>
  40ca6a:	fa24 f40e 	lsr.w	r4, r4, lr
  40ca6e:	2300      	movs	r3, #0
  40ca70:	6034      	str	r4, [r6, #0]
  40ca72:	6073      	str	r3, [r6, #4]
  40ca74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40ca78:	428b      	cmp	r3, r1
  40ca7a:	d907      	bls.n	40ca8c <__udivmoddi4+0xc8>
  40ca7c:	2e00      	cmp	r6, #0
  40ca7e:	d054      	beq.n	40cb2a <__udivmoddi4+0x166>
  40ca80:	2100      	movs	r1, #0
  40ca82:	e886 0021 	stmia.w	r6, {r0, r5}
  40ca86:	4608      	mov	r0, r1
  40ca88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40ca8c:	fab3 f183 	clz	r1, r3
  40ca90:	2900      	cmp	r1, #0
  40ca92:	f040 808e 	bne.w	40cbb2 <__udivmoddi4+0x1ee>
  40ca96:	42ab      	cmp	r3, r5
  40ca98:	d302      	bcc.n	40caa0 <__udivmoddi4+0xdc>
  40ca9a:	4282      	cmp	r2, r0
  40ca9c:	f200 80fa 	bhi.w	40cc94 <__udivmoddi4+0x2d0>
  40caa0:	1a84      	subs	r4, r0, r2
  40caa2:	eb65 0503 	sbc.w	r5, r5, r3
  40caa6:	2001      	movs	r0, #1
  40caa8:	46ac      	mov	ip, r5
  40caaa:	2e00      	cmp	r6, #0
  40caac:	d03f      	beq.n	40cb2e <__udivmoddi4+0x16a>
  40caae:	e886 1010 	stmia.w	r6, {r4, ip}
  40cab2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40cab6:	b912      	cbnz	r2, 40cabe <__udivmoddi4+0xfa>
  40cab8:	2701      	movs	r7, #1
  40caba:	fbb7 f7f2 	udiv	r7, r7, r2
  40cabe:	fab7 fe87 	clz	lr, r7
  40cac2:	f1be 0f00 	cmp.w	lr, #0
  40cac6:	d134      	bne.n	40cb32 <__udivmoddi4+0x16e>
  40cac8:	1beb      	subs	r3, r5, r7
  40caca:	0c3a      	lsrs	r2, r7, #16
  40cacc:	fa1f fc87 	uxth.w	ip, r7
  40cad0:	2101      	movs	r1, #1
  40cad2:	fbb3 f8f2 	udiv	r8, r3, r2
  40cad6:	0c25      	lsrs	r5, r4, #16
  40cad8:	fb02 3318 	mls	r3, r2, r8, r3
  40cadc:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40cae0:	fb0c f308 	mul.w	r3, ip, r8
  40cae4:	42ab      	cmp	r3, r5
  40cae6:	d907      	bls.n	40caf8 <__udivmoddi4+0x134>
  40cae8:	19ed      	adds	r5, r5, r7
  40caea:	f108 30ff 	add.w	r0, r8, #4294967295
  40caee:	d202      	bcs.n	40caf6 <__udivmoddi4+0x132>
  40caf0:	42ab      	cmp	r3, r5
  40caf2:	f200 80d1 	bhi.w	40cc98 <__udivmoddi4+0x2d4>
  40caf6:	4680      	mov	r8, r0
  40caf8:	1aed      	subs	r5, r5, r3
  40cafa:	b2a3      	uxth	r3, r4
  40cafc:	fbb5 f0f2 	udiv	r0, r5, r2
  40cb00:	fb02 5510 	mls	r5, r2, r0, r5
  40cb04:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40cb08:	fb0c fc00 	mul.w	ip, ip, r0
  40cb0c:	45a4      	cmp	ip, r4
  40cb0e:	d907      	bls.n	40cb20 <__udivmoddi4+0x15c>
  40cb10:	19e4      	adds	r4, r4, r7
  40cb12:	f100 33ff 	add.w	r3, r0, #4294967295
  40cb16:	d202      	bcs.n	40cb1e <__udivmoddi4+0x15a>
  40cb18:	45a4      	cmp	ip, r4
  40cb1a:	f200 80b8 	bhi.w	40cc8e <__udivmoddi4+0x2ca>
  40cb1e:	4618      	mov	r0, r3
  40cb20:	eba4 040c 	sub.w	r4, r4, ip
  40cb24:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40cb28:	e79d      	b.n	40ca66 <__udivmoddi4+0xa2>
  40cb2a:	4631      	mov	r1, r6
  40cb2c:	4630      	mov	r0, r6
  40cb2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40cb32:	f1ce 0420 	rsb	r4, lr, #32
  40cb36:	fa05 f30e 	lsl.w	r3, r5, lr
  40cb3a:	fa07 f70e 	lsl.w	r7, r7, lr
  40cb3e:	fa20 f804 	lsr.w	r8, r0, r4
  40cb42:	0c3a      	lsrs	r2, r7, #16
  40cb44:	fa25 f404 	lsr.w	r4, r5, r4
  40cb48:	ea48 0803 	orr.w	r8, r8, r3
  40cb4c:	fbb4 f1f2 	udiv	r1, r4, r2
  40cb50:	ea4f 4518 	mov.w	r5, r8, lsr #16
  40cb54:	fb02 4411 	mls	r4, r2, r1, r4
  40cb58:	fa1f fc87 	uxth.w	ip, r7
  40cb5c:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40cb60:	fb01 f30c 	mul.w	r3, r1, ip
  40cb64:	42ab      	cmp	r3, r5
  40cb66:	fa00 f40e 	lsl.w	r4, r0, lr
  40cb6a:	d909      	bls.n	40cb80 <__udivmoddi4+0x1bc>
  40cb6c:	19ed      	adds	r5, r5, r7
  40cb6e:	f101 30ff 	add.w	r0, r1, #4294967295
  40cb72:	f080 808a 	bcs.w	40cc8a <__udivmoddi4+0x2c6>
  40cb76:	42ab      	cmp	r3, r5
  40cb78:	f240 8087 	bls.w	40cc8a <__udivmoddi4+0x2c6>
  40cb7c:	3902      	subs	r1, #2
  40cb7e:	443d      	add	r5, r7
  40cb80:	1aeb      	subs	r3, r5, r3
  40cb82:	fa1f f588 	uxth.w	r5, r8
  40cb86:	fbb3 f0f2 	udiv	r0, r3, r2
  40cb8a:	fb02 3310 	mls	r3, r2, r0, r3
  40cb8e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40cb92:	fb00 f30c 	mul.w	r3, r0, ip
  40cb96:	42ab      	cmp	r3, r5
  40cb98:	d907      	bls.n	40cbaa <__udivmoddi4+0x1e6>
  40cb9a:	19ed      	adds	r5, r5, r7
  40cb9c:	f100 38ff 	add.w	r8, r0, #4294967295
  40cba0:	d26f      	bcs.n	40cc82 <__udivmoddi4+0x2be>
  40cba2:	42ab      	cmp	r3, r5
  40cba4:	d96d      	bls.n	40cc82 <__udivmoddi4+0x2be>
  40cba6:	3802      	subs	r0, #2
  40cba8:	443d      	add	r5, r7
  40cbaa:	1aeb      	subs	r3, r5, r3
  40cbac:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40cbb0:	e78f      	b.n	40cad2 <__udivmoddi4+0x10e>
  40cbb2:	f1c1 0720 	rsb	r7, r1, #32
  40cbb6:	fa22 f807 	lsr.w	r8, r2, r7
  40cbba:	408b      	lsls	r3, r1
  40cbbc:	fa05 f401 	lsl.w	r4, r5, r1
  40cbc0:	ea48 0303 	orr.w	r3, r8, r3
  40cbc4:	fa20 fe07 	lsr.w	lr, r0, r7
  40cbc8:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40cbcc:	40fd      	lsrs	r5, r7
  40cbce:	ea4e 0e04 	orr.w	lr, lr, r4
  40cbd2:	fbb5 f9fc 	udiv	r9, r5, ip
  40cbd6:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40cbda:	fb0c 5519 	mls	r5, ip, r9, r5
  40cbde:	fa1f f883 	uxth.w	r8, r3
  40cbe2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  40cbe6:	fb09 f408 	mul.w	r4, r9, r8
  40cbea:	42ac      	cmp	r4, r5
  40cbec:	fa02 f201 	lsl.w	r2, r2, r1
  40cbf0:	fa00 fa01 	lsl.w	sl, r0, r1
  40cbf4:	d908      	bls.n	40cc08 <__udivmoddi4+0x244>
  40cbf6:	18ed      	adds	r5, r5, r3
  40cbf8:	f109 30ff 	add.w	r0, r9, #4294967295
  40cbfc:	d243      	bcs.n	40cc86 <__udivmoddi4+0x2c2>
  40cbfe:	42ac      	cmp	r4, r5
  40cc00:	d941      	bls.n	40cc86 <__udivmoddi4+0x2c2>
  40cc02:	f1a9 0902 	sub.w	r9, r9, #2
  40cc06:	441d      	add	r5, r3
  40cc08:	1b2d      	subs	r5, r5, r4
  40cc0a:	fa1f fe8e 	uxth.w	lr, lr
  40cc0e:	fbb5 f0fc 	udiv	r0, r5, ip
  40cc12:	fb0c 5510 	mls	r5, ip, r0, r5
  40cc16:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40cc1a:	fb00 f808 	mul.w	r8, r0, r8
  40cc1e:	45a0      	cmp	r8, r4
  40cc20:	d907      	bls.n	40cc32 <__udivmoddi4+0x26e>
  40cc22:	18e4      	adds	r4, r4, r3
  40cc24:	f100 35ff 	add.w	r5, r0, #4294967295
  40cc28:	d229      	bcs.n	40cc7e <__udivmoddi4+0x2ba>
  40cc2a:	45a0      	cmp	r8, r4
  40cc2c:	d927      	bls.n	40cc7e <__udivmoddi4+0x2ba>
  40cc2e:	3802      	subs	r0, #2
  40cc30:	441c      	add	r4, r3
  40cc32:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40cc36:	eba4 0408 	sub.w	r4, r4, r8
  40cc3a:	fba0 8902 	umull	r8, r9, r0, r2
  40cc3e:	454c      	cmp	r4, r9
  40cc40:	46c6      	mov	lr, r8
  40cc42:	464d      	mov	r5, r9
  40cc44:	d315      	bcc.n	40cc72 <__udivmoddi4+0x2ae>
  40cc46:	d012      	beq.n	40cc6e <__udivmoddi4+0x2aa>
  40cc48:	b156      	cbz	r6, 40cc60 <__udivmoddi4+0x29c>
  40cc4a:	ebba 030e 	subs.w	r3, sl, lr
  40cc4e:	eb64 0405 	sbc.w	r4, r4, r5
  40cc52:	fa04 f707 	lsl.w	r7, r4, r7
  40cc56:	40cb      	lsrs	r3, r1
  40cc58:	431f      	orrs	r7, r3
  40cc5a:	40cc      	lsrs	r4, r1
  40cc5c:	6037      	str	r7, [r6, #0]
  40cc5e:	6074      	str	r4, [r6, #4]
  40cc60:	2100      	movs	r1, #0
  40cc62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40cc66:	4618      	mov	r0, r3
  40cc68:	e6f8      	b.n	40ca5c <__udivmoddi4+0x98>
  40cc6a:	4690      	mov	r8, r2
  40cc6c:	e6e0      	b.n	40ca30 <__udivmoddi4+0x6c>
  40cc6e:	45c2      	cmp	sl, r8
  40cc70:	d2ea      	bcs.n	40cc48 <__udivmoddi4+0x284>
  40cc72:	ebb8 0e02 	subs.w	lr, r8, r2
  40cc76:	eb69 0503 	sbc.w	r5, r9, r3
  40cc7a:	3801      	subs	r0, #1
  40cc7c:	e7e4      	b.n	40cc48 <__udivmoddi4+0x284>
  40cc7e:	4628      	mov	r0, r5
  40cc80:	e7d7      	b.n	40cc32 <__udivmoddi4+0x26e>
  40cc82:	4640      	mov	r0, r8
  40cc84:	e791      	b.n	40cbaa <__udivmoddi4+0x1e6>
  40cc86:	4681      	mov	r9, r0
  40cc88:	e7be      	b.n	40cc08 <__udivmoddi4+0x244>
  40cc8a:	4601      	mov	r1, r0
  40cc8c:	e778      	b.n	40cb80 <__udivmoddi4+0x1bc>
  40cc8e:	3802      	subs	r0, #2
  40cc90:	443c      	add	r4, r7
  40cc92:	e745      	b.n	40cb20 <__udivmoddi4+0x15c>
  40cc94:	4608      	mov	r0, r1
  40cc96:	e708      	b.n	40caaa <__udivmoddi4+0xe6>
  40cc98:	f1a8 0802 	sub.w	r8, r8, #2
  40cc9c:	443d      	add	r5, r7
  40cc9e:	e72b      	b.n	40caf8 <__udivmoddi4+0x134>

0040cca0 <__aeabi_idiv0>:
  40cca0:	4770      	bx	lr
  40cca2:	bf00      	nop
  40cca4:	6c696146 	.word	0x6c696146
  40cca8:	74206465 	.word	0x74206465
  40ccac:	6170206f 	.word	0x6170206f
  40ccb0:	20657372 	.word	0x20657372
  40ccb4:	4e4f534a 	.word	0x4e4f534a
  40ccb8:	6425203a 	.word	0x6425203a
  40ccbc:	0000000a 	.word	0x0000000a
  40ccc0:	656a624f 	.word	0x656a624f
  40ccc4:	65207463 	.word	0x65207463
  40ccc8:	63657078 	.word	0x63657078
  40cccc:	0a646574 	.word	0x0a646574
  40ccd0:	00000000 	.word	0x00000000
  40ccd4:	0064695f 	.word	0x0064695f
  40ccd8:	732a2e25 	.word	0x732a2e25
  40ccdc:	00000000 	.word	0x00000000
  40cce0:	69766564 	.word	0x69766564
  40cce4:	00006563 	.word	0x00006563
  40cce8:	65746164 	.word	0x65746164
  40ccec:	00000000 	.word	0x00000000
  40ccf0:	65746164 	.word	0x65746164
  40ccf4:	69727453 	.word	0x69727453
  40ccf8:	0000676e 	.word	0x0000676e
  40ccfc:	00766773 	.word	0x00766773
  40cd00:	746c6564 	.word	0x746c6564
  40cd04:	00000061 	.word	0x00000061
  40cd08:	65726964 	.word	0x65726964
  40cd0c:	6f697463 	.word	0x6f697463
  40cd10:	0000006e 	.word	0x0000006e
  40cd14:	65707974 	.word	0x65707974
  40cd18:	00000000 	.word	0x00000000
  40cd1c:	746c6966 	.word	0x746c6966
  40cd20:	64657265 	.word	0x64657265
  40cd24:	00000000 	.word	0x00000000
  40cd28:	69666e75 	.word	0x69666e75
  40cd2c:	7265746c 	.word	0x7265746c
  40cd30:	00006465 	.word	0x00006465
  40cd34:	69737372 	.word	0x69737372
  40cd38:	00000000 	.word	0x00000000
  40cd3c:	73696f6e 	.word	0x73696f6e
  40cd40:	00000065 	.word	0x00000065
  40cd44:	54737973 	.word	0x54737973
  40cd48:	00656d69 	.word	0x00656d69
  40cd4c:	454c4449 	.word	0x454c4449
  40cd50:	00000000 	.word	0x00000000
  40cd54:	51726d54 	.word	0x51726d54
  40cd58:	00000000 	.word	0x00000000
  40cd5c:	20726d54 	.word	0x20726d54
  40cd60:	00637653 	.word	0x00637653

0040cd64 <__FUNCTION__.11288>:
  40cd64:	625f6d6e 695f7375 6c74636f 00000000     nm_bus_ioctl....
  40cd74:	50504128 52452829 255b2952 255b5d73     (APP)(ERR)[%s][%
  40cd84:	00005d64 61766e49 2064696c 54434f49     d]..Invalid IOCT
  40cd94:	6f63204c 6e616d6d 000a2164 0000000d     L command!......

0040cda4 <__FUNCTION__.9901>:
  40cda4:	5f666968 646e6573 00000000              hif_send....

0040cdb0 <__FUNCTION__.9911>:
  40cdb0:	5f666968 00727369                       hif_isr.

0040cdb8 <__FUNCTION__.9917>:
  40cdb8:	5f666968 646e6168 695f656c 00007273     hif_handle_isr..

0040cdc8 <__FUNCTION__.9932>:
  40cdc8:	5f666968 65636572 00657669              hif_receive.

0040cdd4 <__FUNCTION__.9947>:
  40cdd4:	5f666968 69676572 72657473 0062635f     hif_register_cb.
  40cde4:	66696828 49572029 485f4946 5f54534f     (hif) WIFI_HOST_
  40cdf4:	5f564352 4c525443 6220315f 66207375     RCV_CTRL_1 bus f
  40ce04:	0a6c6961 00000000 66696828 64612029     ail.....(hif) ad
  40ce14:	73657264 75622073 61662073 000a6c69     dress bus fail..
  40ce24:	66696828 6f432029 70757272 20646574     (hif) Corrupted 
  40ce34:	6b636170 53207465 20657a69 7525203d     packet Size = %u
  40ce44:	204c3c20 7525203d 2047202c 7525203d      <L = %u, G = %u
  40ce54:	504f202c 25203d20 3e583230 0000000a     , OP = %02X>....
  40ce64:	66696828 6e692029 696c6176 72672064     (hif) invalid gr
  40ce74:	2070756f 000a4449 66696828 6f682029     oup ID..(hif) ho
  40ce84:	61207473 64207070 276e6469 65732074     st app didn't se
  40ce94:	58522074 6e6f4420 00000a65 66696828     t RX Done...(hif
  40cea4:	72572029 20676e6f 657a6953 0000000a     ) Wrong Size....
  40ceb4:	66696828 61462029 2065736c 65746e69     (hif) False inte
  40cec4:	70757272 6c252074 00000078 66696828     rrupt %lx...(hif
  40ced4:	61462029 74206c69 6552206f 69206461     ) Fail to Read i
  40cee4:	7265746e 74707572 67657220 0000000a     nterrupt reg....
  40cef4:	66696828 41462029 74204c49 6177206f     (hif) FAIL to wa
  40cf04:	7075656b 65687420 69686320 00000a70     keup the chip...
  40cf14:	46494828 61462029 74206c69 6168206f     (HIF) Fail to ha
  40cf24:	656c646e 746e6920 75727265 25207470     ndle interrupt %
  40cf34:	72742064 67412079 2e6e6961 00000a2e     d try Again.....
  40cf44:	66696820 6365725f 65766965 6e49203a      hif_receive: In
  40cf54:	696c6176 72612064 656d7567 000a746e     valid argument..
  40cf64:	20505041 75716552 65747365 69532064     APP Requested Si
  40cf74:	6920657a 616c2073 72656772 61687420     ze is larger tha
  40cf84:	6874206e 65722065 65766963 75622064     n the recived bu
  40cf94:	72656666 7a697320 253c2065 253c3e64     ffer size <%d><%
  40cfa4:	000a3e64 20505041 75716552 65747365     d>..APP Requeste
  40cfb4:	64412064 73657264 65622073 646e6f79     d Address beyond
  40cfc4:	65687420 63657220 64657669 66756220      the recived buf
  40cfd4:	20726566 72646461 20737365 20646e61     fer address and 
  40cfe4:	676e656c 000a6874 20705247 6425203f     length..GRp ? %d
  40cff4:	0000000a 46494828 69614629 6f74206c     ....(HIF)Fail to
  40d004:	6b617720 74207075 63206568 0a706968      wakup the chip.
  40d014:	00000000                                ....

0040d018 <__FUNCTION__.9874>:
  40d018:	5f6d326d 69666977 0062635f              m2m_wifi_cb.

0040d024 <__FUNCTION__.9898>:
  40d024:	5f6d326d 69666977 696e695f 00000074     m2m_wifi_init...

0040d034 <__FUNCTION__.9926>:
  40d034:	5f6d326d 69666977 6e6f635f 7463656e     m2m_wifi_connect
  40d044:	0063735f 50504128 4e492829 00294f46     _sc.(APP)(INFO).
  40d054:	666e6f43 7463696c 49206465 20222050     Conflicted IP " 
  40d064:	252e7525 75252e75 2075252e 000a2022     %u.%u.%u.%u " ..
  40d074:	20514552 20746f4e 69666564 2064656e     REQ Not defined 
  40d084:	000a6425 2079654b 6e207369 7620746f     %d..Key is not v
  40d094:	64696c61 0000000a 61766e49 2064696c     alid....Invalid 
  40d0a4:	0a79654b 00000000 44495353 4e454c20     Key.....SSID LEN
  40d0b4:	564e4920 44494c41 0000000a 49204843      INVALID....CH I
  40d0c4:	4c41564e 000a4449 61766e49 2064696c     NVALID..Invalid 
  40d0d4:	20706557 2079656b 65646e69 64252078     Wep key index %d
  40d0e4:	0000000a 61766e49 2064696c 20706557     ....Invalid Wep 
  40d0f4:	2079656b 676e656c 25206874 00000a64     key length %d...
  40d104:	6f636e49 63657272 53502074 656b204b     Incorrect PSK ke
  40d114:	656c2079 6874676e 0000000a 65646e75     y length....unde
  40d124:	656e6966 65732064 79742063 000a6570     fined sec type..
  40d134:	6d726946 65726177 72657620 3a202020     Firmware ver   :
  40d144:	2e752520 252e7525 00000a75 206e694d      %u.%u.%u...Min 
  40d154:	76697264 76207265 3a207265 2e752520     driver ver : %u.
  40d164:	252e7525 00000a75 72727543 69726420     %u.%u...Curr dri
  40d174:	20726576 3a726576 2e752520 252e7525     ver ver: %u.%u.%
  40d184:	00000a75 6d73694d 68637461 72694620     u...Mismatch Fir
  40d194:	7277616d 65562065 6f697372 00000a6e     mawre Version...

0040d1a4 <__FUNCTION__.9711>:
  40d1a4:	635f6d6e 656c6b6c 775f7373 00656b61     nm_clkless_wake.

0040d1b4 <__FUNCTION__.9805>:
  40d1b4:	70696863 6965645f 0074696e 6c696166     chip_deinit.fail
  40d1c4:	74206465 6564206f 696e692d 6c616974     ed to de-initial
  40d1d4:	0a657a69 00000000 6f727245 68772072     ize.....Error wh
  40d1e4:	20656c69 74697277 20676e69 0a676572     ile writing reg.
  40d1f4:	00000000 6f727245 68772072 20656c69     ....Error while 
  40d204:	64616572 20676e69 0a676572 00000000     reading reg.....
  40d214:	20737542 6f727265 31282072 57202e29     Bus error (1). W
  40d224:	20656b61 66207075 656c6961 00000a64     ake up failed...
  40d234:	20737542 6f727265 32282072 57202e29     Bus error (2). W
  40d244:	20656b61 66207075 656c6961 00000a64     ake up failed...
  40d254:	636f6c63 7320736b 6c6c6974 46464f20     clocks still OFF
  40d264:	6157202e 7520656b 61662070 64656c69     . Wake up failed
  40d274:	0000000a 3a676572 2f207825 20782520     ....reg:%x / %x 
  40d284:	0000000a                                ....

0040d288 <__FUNCTION__.9792>:
  40d288:	645f6d6e 695f7672 0074696e              nm_drv_init.

0040d294 <__FUNCTION__.9799>:
  40d294:	645f6d6e 645f7672 696e6965 00000074     nm_drv_deinit...
  40d2a4:	696d6e5b 6f747320 203a5d70 70696863     [nmi stop]: chip
  40d2b4:	6965645f 2074696e 6c696166 0000000a     _deinit fail....
  40d2c4:	696d6e5b 6f747320 203a5d70 20495053     [nmi stop]: SPI 
  40d2d4:	73616c66 69642068 6c626173 61662065     flash disable fa
  40d2e4:	000a6c69 696d6e5b 6f747320 203a5d70     il..[nmi stop]: 
  40d2f4:	6c696166 696e6920 75622074 00000a73     fail init bus...
  40d304:	6c696166 74206465 6e65206f 656c6261     failed to enable
  40d314:	746e6920 75727265 2e737470 00000a2e      interrupts.....
  40d324:	696d6e5b 61747320 3a5d7472 69616620     [nmi start]: fai
  40d334:	6e69206c 62207469 000a7375 70696843     l init bus..Chip
  40d344:	20444920 0a786c25 00000000               ID %lx.....

0040d350 <__FUNCTION__.9176>:
  40d350:	5f697073 00646d63                       spi_cmd.

0040d358 <__FUNCTION__.9184>:
  40d358:	5f697073 5f646d63 00707372              spi_cmd_rsp.

0040d364 <__FUNCTION__.9200>:
  40d364:	5f697073 61746164 6165725f 00000064     spi_data_read...

0040d374 <__FUNCTION__.9215>:
  40d374:	5f697073 61746164 6972775f 00006574     spi_data_write..

0040d384 <__FUNCTION__.9225>:
  40d384:	5f697073 74697277 65725f65 00000067     spi_write_reg...

0040d394 <__FUNCTION__.9233>:
  40d394:	735f6d6e 775f6970 65746972 00000000     nm_spi_write....

0040d3a4 <__FUNCTION__.9242>:
  40d3a4:	5f697073 64616572 6765725f 00000000     spi_read_reg....

0040d3b4 <__FUNCTION__.9250>:
  40d3b4:	735f6d6e 725f6970 00646165              nm_spi_read.

0040d3c0 <__FUNCTION__.9267>:
  40d3c0:	735f6d6e 695f6970 0074696e              nm_spi_init.

0040d3cc <crc7_syndrome_table>:
  40d3cc:	1b120900 3f362d24 535a4148 777e656c     ....$-6?HAZSle~w
  40d3dc:	020b1019 262f343d 4a435851 6e677c75     ....=4/&QXCJu|gn
  40d3ec:	29203b32 0d041f16 6168737a 454c575e     2; )....zsha^WLE
  40d3fc:	3039222b 141d060f 78716a63 5c554e47     +"90....cjqxGNU\
  40d40c:	7f766d64 5b524940 373e252c 131a0108     dmv.@IR[,%>7....
  40d41c:	666f747d 424b5059 2e273c35 0a031811     }tofYPKB5<'.....
  40d42c:	4d445f56 69607b72 050c171e 2128333a     V_DMr{`i....:3(!
  40d43c:	545d464f 7079626b 1c150e07 38312a23     OF]Tkbyp....#*18
  40d44c:	5a534841 7e776c65 121b0009 363f242d     AHSZelw~....-$?6
  40d45c:	434a5158 676e757c 0b021910 2f263d34     XQJC|ung....4=&/
  40d46c:	68617a73 4c455e57 2029323b 040d161f     szahW^EL;2) ....
  40d47c:	7178636a 555c474e 39302b22 1d140f06     jcxqNG\U"+09....
  40d48c:	3e372c25 1a130801 767f646d 525b4049     %,7>....md.vI@[R
  40d49c:	272e353c 030a1118 6f667d74 4b425950     <5.'....t}foPYBK
  40d4ac:	0c051e17 28213a33 444d565f 6069727b     ....3:!(_VMD{ri`
  40d4bc:	151c070e 3138232a 5d544f46 79706b62     ....*#81FOT]bkpy
  40d4cc:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d4dc:	6e692064 6e726574 72206c61 20646165     d internal read 
  40d4ec:	746f7270 6c6f636f 74697720 52432068     protocol with CR
  40d4fc:	6e6f2043 6572202c 69727974 7720676e     C on, retyring w
  40d50c:	20687469 20435243 2e66666f 000a2e2e     ith CRC off.....
  40d51c:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d52c:	6e692064 6e726574 72206c61 20646165     d internal read 
  40d53c:	746f7270 6c6f636f 0a2e2e2e 00000000     protocol........
  40d54c:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d55c:	6e692064 6e726574 77206c61 65746972     d internal write
  40d56c:	6f727020 6f636f74 6572206c 2e2e2e67      protocol reg...
  40d57c:	0000000a 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
  40d58c:	206c6961 20646d63 64616572 69686320     ail cmd read chi
  40d59c:	64692070 0a2e2e2e 00000000 696d6e5b     p id........[nmi
  40d5ac:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
  40d5bc:	72202c64 20646165 636f6c62 2528206b     d, read block (%
  40d5cc:	29783830 0a2e2e2e 00000000 696d6e5b     08x)........[nmi
  40d5dc:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
  40d5ec:	65722064 6e6f7073 202c6573 64616572     d response, read
  40d5fc:	6f6c6220 28206b63 78383025 2e2e2e29      block (%08x)...
  40d60c:	0000000a 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
  40d61c:	656c6961 6c622064 206b636f 61746164     ailed block data
  40d62c:	61657220 2e2e2e64 0000000a 696d6e5b      read.......[nmi
  40d63c:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
  40d64c:	77202c64 65746972 6f6c6220 28206b63     d, write block (
  40d65c:	78383025 2e2e2e29 0000000a 696d6e5b     %08x).......[nmi
  40d66c:	69707320 203a5d20 6c696146 63206465      spi ]: Failed c
  40d67c:	7220646d 6f707365 2c65736e 69727720     md response, wri
  40d68c:	62206574 6b636f6c 30252820 2e297838     te block (%08x).
  40d69c:	000a2e2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
  40d6ac:	656c6961 61642064 62206174 6b636f6c     ailed data block
  40d6bc:	646d6320 69727720 202c6574 20737562      cmd write, bus 
  40d6cc:	6f727265 2e2e2e72 0000000a 696d6e5b     error.......[nmi
  40d6dc:	69707320 46203a5d 656c6961 61642064      spi]: Failed da
  40d6ec:	62206174 6b636f6c 69727720 202c6574     ta block write, 
  40d6fc:	20737562 6f727265 2e2e2e72 0000000a     bus error.......
  40d70c:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d71c:	61642064 62206174 6b636f6c 63726320     d data block crc
  40d72c:	69727720 202c6574 20737562 6f727265      write, bus erro
  40d73c:	2e2e2e72 0000000a 696d6e5b 69707320     r.......[nmi spi
  40d74c:	46203a5d 656c6961 6c622064 206b636f     ]: Failed block 
  40d75c:	61746164 69727720 2e2e6574 00000a2e     data write......
  40d76c:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d77c:	6d632064 72772064 2c657469 73756220     d cmd write, bus
  40d78c:	72726520 2e2e726f 00000a2e 696d6e5b      error......[nmi
  40d79c:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
  40d7ac:	65722064 6e6f7073 72206573 2c646165     d response read,
  40d7bc:	73756220 72726520 2e2e726f 00000a2e      bus error......
  40d7cc:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d7dc:	61642064 72206174 6f707365 2065736e     d data response 
  40d7ec:	64616572 7562202c 72652073 2e726f72     read, bus error.
  40d7fc:	000a2e2e 696d6e5b 69707320 46203a5d     ....[nmi spi]: F
  40d80c:	656c6961 61642064 72206174 6f707365     ailed data respo
  40d81c:	2065736e 64616572 282e2e2e 78323025     nse read...(%02x
  40d82c:	00000a29 696d6e5b 69707320 46203a5d     )...[nmi spi]: F
  40d83c:	656c6961 61642064 62206174 6b636f6c     ailed data block
  40d84c:	61657220 62202c64 65207375 726f7272      read, bus error
  40d85c:	0a2e2e2e 00000000 696d6e5b 69707320     ........[nmi spi
  40d86c:	46203a5d 656c6961 61642064 62206174     ]: Failed data b
  40d87c:	6b636f6c 63726320 61657220 62202c64     lock crc read, b
  40d88c:	65207375 726f7272 0a2e2e2e 00000000     us error........
  40d89c:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d8ac:	6d632064 72202c64 20646165 20676572     d cmd, read reg 
  40d8bc:	38302528 2e2e2978 00000a2e 696d6e5b     (%08x)......[nmi
  40d8cc:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
  40d8dc:	65722064 6e6f7073 202c6573 64616572     d response, read
  40d8ec:	67657220 30252820 2e297838 000a2e2e      reg (%08x).....
  40d8fc:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d90c:	61642064 72206174 2e646165 000a2e2e     d data read.....
  40d91c:	696d6e5b 69707320 46203a5d 656c6961     [nmi spi]: Faile
  40d92c:	6d632064 77202c64 65746972 67657220     d cmd, write reg
  40d93c:	30252820 2e297838 000a2e2e 696d6e5b      (%08x).....[nmi
  40d94c:	69707320 46203a5d 656c6961 6d632064      spi]: Failed cm
  40d95c:	65722064 6e6f7073 202c6573 74697277     d response, writ
  40d96c:	65722065 25282067 29783830 0a2e2e2e     e reg (%08x)....
  40d97c:	00000000 52524528 75432952 6e657272     ....(ERRR)Curren
  40d98c:	253c2074 000a3e64 57202d2d 31434e49     t <%d>..-- WINC1
  40d99c:	20303035 74616577 20726568 65696c63     500 weather clie
  40d9ac:	6520746e 706d6178 2d20656c 2d0a0d2d     nt example --..-
  40d9bc:	4153202d 3037454d 4c50582d 2d2d2044     - SAME70-XPLD --
  40d9cc:	2d2d0a0d 6d6f4320 656c6970 4d203a64     ..-- Compiled: M
  40d9dc:	33207961 30322030 31203931 39353a31     ay 30 2019 11:59
  40d9ec:	2038333a 0a0d2d2d 00000000 69666957     :38 --......Wifi
  40d9fc:	00000000 6c696146 74206465 7263206f     ....Failed to cr
  40da0c:	65746165 66695720 61742069 0a0d6b73     eate Wifi task..
  40da1c:	00000000 4e4f534a 00000000 6c696146     ....JSON....Fail
  40da2c:	74206465 7263206f 65746165 4f534a20     ed to create JSO
  40da3c:	6174204e 0a0d6b73 00000000 0044434c     N task......LCD.
  40da4c:	6c696146 74206465 7263206f 65746165     Failed to create
  40da5c:	44434c20 73617420 000a0d6b 52414c41      LCD task...ALAR
  40da6c:	0000454d 6c696146 74206465 7263206f     ME..Failed to cr
  40da7c:	65746165 414c4120 20454d52 6b736174     eate ALARME task
  40da8c:	00000a0d 6f736572 5f65766c 203a6263     ....resolve_cb: 
  40da9c:	49207325 64612050 73657264 73692073     %s IP address is
  40daac:	2e642520 252e6425 64252e64 0a0d0a0d      %d.%d.%d.%d....
  40dabc:	00000000 6b636f73 6d5f7465 635f6773     ....socket_msg_c
  40dacc:	656e6e6f 000a7463 20544547 6970612f     onnect..GET /api
  40dadc:	2f31762f 72746e65 2f736569 6e6f736a     /v1/entries/json
  40daec:	756f633f 313d746e 54544820 2e312f50     ?count=1 HTTP/1.
  40dafc:	480a0d31 3a74736f 696c6720 65736f63     1..Host: glicose
  40db0c:	72626167 6d6c6569 7265682e 61756b6f     gabrielm.herokua
  40db1c:	632e7070 0a0d6d6f 65636341 203a7470     pp.com..Accept: 
  40db2c:	0d2a2f2a 000a0d0a 646e6573 00000a20     */*.....send ...
  40db3c:	6b636f73 635f7465 63203a62 656e6e6f     socket_cb: conne
  40db4c:	65207463 726f7272 000a0d21 6b636f73     ct error!...sock
  40db5c:	635f7465 72203a62 20766365 6f727265     et_cb: recv erro
  40db6c:	0a0d2172 00000000 6c65790a 00776f6c     r!.......yellow.
  40db7c:	6e69616d 326d203a 69775f6d 695f6966     main: m2m_wifi_i
  40db8c:	2074696e 6c6c6163 72726520 2821726f     nit call error!(
  40db9c:	0d296425 0000000a 746e6f4d 6f726965     %d).....Monteiro
  40dbac:	00000032 6e69616d 6f63203a 63656e6e     2...main: connec
  40dbbc:	676e6974 206f7420 69466957 20504120     ting to WiFi AP 
  40dbcc:	2e2e7325 000a0d2e 646c6964 6c69646f     %s......dildodil
  40dbdc:	00006f64 6b636f73 69207465 2074696e     do..socket init 
  40dbec:	0000000a 6e69616d 6166203a 64656c69     ....main: failed
  40dbfc:	206f7420 61657263 54206574 63205043      to create TCP c
  40dc0c:	6e65696c 6f732074 74656b63 72726520     lient socket err
  40dc1c:	0d21726f 0000000a 6b636f73 63207465     or!.....socket c
  40dc2c:	656e6e6f 6e697463 00000a67 6f727265     onnecting...erro
  40dc3c:	00000a72 63617473 766f206b 6c667265     r...stack overfl
  40dc4c:	2520776f 73252078 00000a0d 69666977     ow %x %s....wifi
  40dc5c:	3a62635f 4d324d20 4649575f 4f435f49     _cb: M2M_WIFI_CO
  40dc6c:	43454e4e 0d444554 0000000a 69666977     NNECTED.....wifi
  40dc7c:	3a62635f 4d324d20 4649575f 49445f49     _cb: M2M_WIFI_DI
  40dc8c:	4e4f4353 5443454e 0a0d4445 00000000     SCONNECTED......
  40dc9c:	69666977 3a62635f 20504920 72646461     wifi_cb: IP addr
  40dcac:	20737365 25207369 75252e75 2e75252e     ess is %u.%u.%u.
  40dcbc:	0a0d7525 00000000                       %u......

0040dcc4 <_global_impure_ptr>:
  40dcc4:	20400050 00464e49 00666e69 004e414e     P.@ INF.inf.NAN.
  40dcd4:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  40dce4:	46454443 00000000 33323130 37363534     CDEF....01234567
  40dcf4:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  40dd04:	0000296c 00000030                       l)..0...

0040dd0c <blanks.7223>:
  40dd0c:	20202020 20202020 20202020 20202020                     

0040dd1c <zeroes.7224>:
  40dd1c:	30303030 30303030 30303030 30303030     0000000000000000

0040dd2c <blanks.7217>:
  40dd2c:	20202020 20202020 20202020 20202020                     

0040dd3c <zeroes.7218>:
  40dd3c:	30303030 30303030 30303030 30303030     0000000000000000
  40dd4c:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  40dd5c:	00000043 49534f50 00000058 0000002e     C...POSIX.......
  40dd6c:	00000000                                ....

0040dd70 <__mprec_bigtens>:
  40dd70:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  40dd80:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  40dd90:	7f73bf3c 75154fdd                       <.s..O.u

0040dd98 <__mprec_tens>:
  40dd98:	00000000 3ff00000 00000000 40240000     .......?......$@
  40dda8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  40ddb8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  40ddc8:	00000000 412e8480 00000000 416312d0     .......A......cA
  40ddd8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  40dde8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  40ddf8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  40de08:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  40de18:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  40de28:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  40de38:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  40de48:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  40de58:	79d99db4 44ea7843                       ...yCx.D

0040de60 <p05.6055>:
  40de60:	00000005 00000019 0000007d              ........}...

0040de6c <_ctype_>:
  40de6c:	20202000 20202020 28282020 20282828     .         ((((( 
  40de7c:	20202020 20202020 20202020 20202020                     
  40de8c:	10108820 10101010 10101010 10101010      ...............
  40de9c:	04040410 04040404 10040404 10101010     ................
  40deac:	41411010 41414141 01010101 01010101     ..AAAAAA........
  40debc:	01010101 01010101 01010101 10101010     ................
  40decc:	42421010 42424242 02020202 02020202     ..BBBBBB........
  40dedc:	02020202 02020202 02020202 10101010     ................
  40deec:	00000020 00000000 00000000 00000000      ...............
	...

0040df70 <_init>:
  40df70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40df72:	bf00      	nop
  40df74:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40df76:	bc08      	pop	{r3}
  40df78:	469e      	mov	lr, r3
  40df7a:	4770      	bx	lr

0040df7c <__init_array_start>:
  40df7c:	00409049 	.word	0x00409049

0040df80 <__frame_dummy_init_array_entry>:
  40df80:	00400165                                e.@.

0040df84 <_fini>:
  40df84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40df86:	bf00      	nop
  40df88:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40df8a:	bc08      	pop	{r3}
  40df8c:	469e      	mov	lr, r3
  40df8e:	4770      	bx	lr

0040df90 <__fini_array_start>:
  40df90:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <uxCriticalNesting>:
2040000c:	aaaa aaaa                                   ....

20400010 <egstrNmBusCapabilities>:
20400010:	1000 0000                                   ....

20400014 <clk_status_reg_adr>:
20400014:	000f 0000                                   ....

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <server_host_name>:
20400020:	7468 7074 2f3a 672f 696c 6f63 6573 6167     http://glicosega
20400030:	7262 6569 6d6c 682e 7265 6b6f 6175 7070     brielm.herokuapp
20400040:	632e 6d6f ff00                                   .com.

20400045 <tcp_client_socket>:
20400045:	00ff 5000                                        ...

20400048 <_impure_ptr>:
20400048:	0050 2040 0000 0000                         P.@ ....

20400050 <impure_data>:
20400050:	0000 0000 033c 2040 03a4 2040 040c 2040     ....<.@ ..@ ..@ 
	...
204000f8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
20400108:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400478 <__atexit_recursive_mutex>:
20400478:	f4d0 2040                                   ..@ 

2040047c <__global_locale>:
2040047c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040049c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004bc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004dc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204004fc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040051c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040053c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040055c:	bd7d 0040 afd9 0040 0000 0000 de6c 0040     }.@...@.....l.@.
2040056c:	dd68 0040 dabc 0040 dabc 0040 dabc 0040     h.@...@...@...@.
2040057c:	dabc 0040 dabc 0040 dabc 0040 dabc 0040     ..@...@...@...@.
2040058c:	dabc 0040 dabc 0040 ffff ffff ffff ffff     ..@...@.........
2040059c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204005c4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

204005e8 <__malloc_av_>:
	...
204005f0:	05e8 2040 05e8 2040 05f0 2040 05f0 2040     ..@ ..@ ..@ ..@ 
20400600:	05f8 2040 05f8 2040 0600 2040 0600 2040     ..@ ..@ ..@ ..@ 
20400610:	0608 2040 0608 2040 0610 2040 0610 2040     ..@ ..@ ..@ ..@ 
20400620:	0618 2040 0618 2040 0620 2040 0620 2040     ..@ ..@  .@  .@ 
20400630:	0628 2040 0628 2040 0630 2040 0630 2040     (.@ (.@ 0.@ 0.@ 
20400640:	0638 2040 0638 2040 0640 2040 0640 2040     8.@ 8.@ @.@ @.@ 
20400650:	0648 2040 0648 2040 0650 2040 0650 2040     H.@ H.@ P.@ P.@ 
20400660:	0658 2040 0658 2040 0660 2040 0660 2040     X.@ X.@ `.@ `.@ 
20400670:	0668 2040 0668 2040 0670 2040 0670 2040     h.@ h.@ p.@ p.@ 
20400680:	0678 2040 0678 2040 0680 2040 0680 2040     x.@ x.@ ..@ ..@ 
20400690:	0688 2040 0688 2040 0690 2040 0690 2040     ..@ ..@ ..@ ..@ 
204006a0:	0698 2040 0698 2040 06a0 2040 06a0 2040     ..@ ..@ ..@ ..@ 
204006b0:	06a8 2040 06a8 2040 06b0 2040 06b0 2040     ..@ ..@ ..@ ..@ 
204006c0:	06b8 2040 06b8 2040 06c0 2040 06c0 2040     ..@ ..@ ..@ ..@ 
204006d0:	06c8 2040 06c8 2040 06d0 2040 06d0 2040     ..@ ..@ ..@ ..@ 
204006e0:	06d8 2040 06d8 2040 06e0 2040 06e0 2040     ..@ ..@ ..@ ..@ 
204006f0:	06e8 2040 06e8 2040 06f0 2040 06f0 2040     ..@ ..@ ..@ ..@ 
20400700:	06f8 2040 06f8 2040 0700 2040 0700 2040     ..@ ..@ ..@ ..@ 
20400710:	0708 2040 0708 2040 0710 2040 0710 2040     ..@ ..@ ..@ ..@ 
20400720:	0718 2040 0718 2040 0720 2040 0720 2040     ..@ ..@  .@  .@ 
20400730:	0728 2040 0728 2040 0730 2040 0730 2040     (.@ (.@ 0.@ 0.@ 
20400740:	0738 2040 0738 2040 0740 2040 0740 2040     8.@ 8.@ @.@ @.@ 
20400750:	0748 2040 0748 2040 0750 2040 0750 2040     H.@ H.@ P.@ P.@ 
20400760:	0758 2040 0758 2040 0760 2040 0760 2040     X.@ X.@ `.@ `.@ 
20400770:	0768 2040 0768 2040 0770 2040 0770 2040     h.@ h.@ p.@ p.@ 
20400780:	0778 2040 0778 2040 0780 2040 0780 2040     x.@ x.@ ..@ ..@ 
20400790:	0788 2040 0788 2040 0790 2040 0790 2040     ..@ ..@ ..@ ..@ 
204007a0:	0798 2040 0798 2040 07a0 2040 07a0 2040     ..@ ..@ ..@ ..@ 
204007b0:	07a8 2040 07a8 2040 07b0 2040 07b0 2040     ..@ ..@ ..@ ..@ 
204007c0:	07b8 2040 07b8 2040 07c0 2040 07c0 2040     ..@ ..@ ..@ ..@ 
204007d0:	07c8 2040 07c8 2040 07d0 2040 07d0 2040     ..@ ..@ ..@ ..@ 
204007e0:	07d8 2040 07d8 2040 07e0 2040 07e0 2040     ..@ ..@ ..@ ..@ 
204007f0:	07e8 2040 07e8 2040 07f0 2040 07f0 2040     ..@ ..@ ..@ ..@ 
20400800:	07f8 2040 07f8 2040 0800 2040 0800 2040     ..@ ..@ ..@ ..@ 
20400810:	0808 2040 0808 2040 0810 2040 0810 2040     ..@ ..@ ..@ ..@ 
20400820:	0818 2040 0818 2040 0820 2040 0820 2040     ..@ ..@  .@  .@ 
20400830:	0828 2040 0828 2040 0830 2040 0830 2040     (.@ (.@ 0.@ 0.@ 
20400840:	0838 2040 0838 2040 0840 2040 0840 2040     8.@ 8.@ @.@ @.@ 
20400850:	0848 2040 0848 2040 0850 2040 0850 2040     H.@ H.@ P.@ P.@ 
20400860:	0858 2040 0858 2040 0860 2040 0860 2040     X.@ X.@ `.@ `.@ 
20400870:	0868 2040 0868 2040 0870 2040 0870 2040     h.@ h.@ p.@ p.@ 
20400880:	0878 2040 0878 2040 0880 2040 0880 2040     x.@ x.@ ..@ ..@ 
20400890:	0888 2040 0888 2040 0890 2040 0890 2040     ..@ ..@ ..@ ..@ 
204008a0:	0898 2040 0898 2040 08a0 2040 08a0 2040     ..@ ..@ ..@ ..@ 
204008b0:	08a8 2040 08a8 2040 08b0 2040 08b0 2040     ..@ ..@ ..@ ..@ 
204008c0:	08b8 2040 08b8 2040 08c0 2040 08c0 2040     ..@ ..@ ..@ ..@ 
204008d0:	08c8 2040 08c8 2040 08d0 2040 08d0 2040     ..@ ..@ ..@ ..@ 
204008e0:	08d8 2040 08d8 2040 08e0 2040 08e0 2040     ..@ ..@ ..@ ..@ 
204008f0:	08e8 2040 08e8 2040 08f0 2040 08f0 2040     ..@ ..@ ..@ ..@ 
20400900:	08f8 2040 08f8 2040 0900 2040 0900 2040     ..@ ..@ ..@ ..@ 
20400910:	0908 2040 0908 2040 0910 2040 0910 2040     ..@ ..@ ..@ ..@ 
20400920:	0918 2040 0918 2040 0920 2040 0920 2040     ..@ ..@  .@  .@ 
20400930:	0928 2040 0928 2040 0930 2040 0930 2040     (.@ (.@ 0.@ 0.@ 
20400940:	0938 2040 0938 2040 0940 2040 0940 2040     8.@ 8.@ @.@ @.@ 
20400950:	0948 2040 0948 2040 0950 2040 0950 2040     H.@ H.@ P.@ P.@ 
20400960:	0958 2040 0958 2040 0960 2040 0960 2040     X.@ X.@ `.@ `.@ 
20400970:	0968 2040 0968 2040 0970 2040 0970 2040     h.@ h.@ p.@ p.@ 
20400980:	0978 2040 0978 2040 0980 2040 0980 2040     x.@ x.@ ..@ ..@ 
20400990:	0988 2040 0988 2040 0990 2040 0990 2040     ..@ ..@ ..@ ..@ 
204009a0:	0998 2040 0998 2040 09a0 2040 09a0 2040     ..@ ..@ ..@ ..@ 
204009b0:	09a8 2040 09a8 2040 09b0 2040 09b0 2040     ..@ ..@ ..@ ..@ 
204009c0:	09b8 2040 09b8 2040 09c0 2040 09c0 2040     ..@ ..@ ..@ ..@ 
204009d0:	09c8 2040 09c8 2040 09d0 2040 09d0 2040     ..@ ..@ ..@ ..@ 
204009e0:	09d8 2040 09d8 2040 09e0 2040 09e0 2040     ..@ ..@ ..@ ..@ 

204009f0 <__malloc_sbrk_base>:
204009f0:	ffff ffff                                   ....

204009f4 <__malloc_trim_threshold>:
204009f4:	0000 0002                                   ....
